;; Object synonym/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "synonym/"
  :tables
  (list
    (semanticdb-table "SynonymQueryVisitor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("SynonymQueryVisitor.h" include nil nil [1 33])
            ("helper/SynonymTermGenerator.h" include (:system-flag t) nil [34 74])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [76 96])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [97 119])
            ("isearch" using (:type ("isearch" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [120 144])
            ("SynonymTermGenerator" variable (:type "int") nil [168 189])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [208 215]))                  
                :type "int")
                nil [190 216])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("synonym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [239 247]))                  
                :type "int")
                nil [218 248])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [265 269])
                    ("" variable (:type ("SynonymQueryVisitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [270 290]))                  
                :type "int")
                nil [250 291])
            ("SynonymQueryVisitor" function
               (:constructor-flag t
                :parent "SynonymQueryVisitor"
                :arguments 
                  ( ("termSet" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TermSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [334 357])
                    ("targetIndexName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [367 397]))                  
                :type ("SynonymQueryVisitor" type (:type "class") nil nil))
                nil [293 484])
            ("SynonymQueryVisitor" function
               (:destructor-flag t
                :parent "SynonymQueryVisitor"
                :type "void")
                nil [486 566])
            ("visitTermQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TermQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [609 632]))                  
                :type "void")
                nil [568 671])
            ("visitMultiTermQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MultiTermQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [719 747]))                  
                :type "void")
                nil [673 791])
            ("visitPhraseQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PhraseQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [836 861]))                  
                :type "void")
                nil [793 902])
            ("visitNumberQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("NumberQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [947 972]))                  
                :type "void")
                nil [904 1013])
            ("visitAndQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1055 1077]))                  
                :type "void")
                nil [1015 1135])
            ("visitOrQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("OrQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1176 1197]))                  
                :type "void")
                nil [1137 1319])
            ("visitAndNotQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndNotQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1364 1389]))                  
                :type "void")
                nil [1321 1450])
            ("visitRankQuery" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RankQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1493 1516]))                  
                :type "void")
                nil [1452 1575])
            ("visitAdvancedQuery" function
               (:template 
                  ( ("QueryType" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1649 1668]))                  
                :parent "SynonymQueryVisitor")
                nil [1577 2095])
            ("convertOrQuery" function
               (:pointer 1
                :parent "SynonymQueryVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2140 2159]))                  
                :type ("Query" type (:type "class") nil nil))
                nil [2097 3230])
            ("compareTerm" function
               (:parent "SynonymQueryVisitor"
                :arguments 
                  ( ("t1" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Term" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3270 3285])
                    ("t2" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Term" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3286 3301]))                  
                :type "bool")
                nil [3232 3515])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("synonym" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3536 3544]))                  
                :type "int")
                nil [3517 3545]))          
      :file "SynonymQueryVisitor.cpp"
      :pointmax 3546
      :fsize 3545
      :lastmodtime '(23220 25728 35402 498000)
      :unmatched-syntax '((thing 247 . 248) (thing 238 . 247) (thing 167 . 168) (thing 167 . 168) (thing 166 . 167) (thing 166 . 167) (thing 145 . 150) (thing 145 . 150)))
    (semanticdb-table "SynonymQueryVisitor.h"
      :file "SynonymQueryVisitor.h"
      :fsize 1961
      :lastmodtime '(23217 49410 329629 660000)))
  :file "!ssd!sdd!git!ha3!turing!ha3_plugins!build!debug64!pluginFramework!ha3!app!synonym!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
