;; Object mem_pool/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mem_pool/"
  :tables
  (list
    (semanticdb-table "Pool.h"
      :major-mode 'c++-mode
      :tags 
        '( ("AUTIL_POOL_H" variable (:constant-flag t) nil [30 42])
            ("stdlib.h" include (:system-flag t) nil [44 63])
            ("assert.h" include (:system-flag t) nil [64 83])
            ("string.h" include (:system-flag t) nil [84 103])
            ("autil/Log.h" include (:system-flag t) nil [104 126])
            ("autil/mem_pool/MemoryChunk.h" include (:system-flag t) nil [127 166])
            ("autil/mem_pool/SimpleAllocatePolicy.h" include (:system-flag t) nil [167 215])
            ("autil/mem_pool/PoolBase.h" include (:system-flag t) nil [216 252])
            ("iostream" include (:system-flag t) nil [253 272])
            ("autil" type
               (:members 
                  ( ("mem_pool" type
                       (:members 
                          ( ("Pool" type
                               (:superclasses 
                                  ( ("PoolBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [345 352])
                                    ("public" label nil (reparse-symbol classsubparts) [485 492])
                                    ("Pool" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("allocator" variable
                                               (:pointer 1
                                                :type ("ChunkAllocatorBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [502 532])
                                            ("chunkSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533 550])
                                            ("alignSize" variable
                                               (:default-value "DEFAULT_ALIGN_SIZE"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [560 597]))                                          
                                        :type ("Pool" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [497 599])
                                    ("Pool" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("chunkSize" variable
                                               (:default-value "DEFAULT_CHUNK_SIZE"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [610 647])
                                            ("alignSize" variable
                                               (:default-value "DEFAULT_ALIGN_SIZE"
                                                :type ("size_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [658 695]))                                          
                                        :type ("Pool" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [605 697])
                                    ("Pool" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [703 719])
                                    ("private" label nil (reparse-symbol classsubparts) [725 733])
                                    ("Pool" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Pool" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [743 755]))                                          
                                        :type ("Pool" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [738 756])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Pool" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [778 790]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [761 791])
                                    ("public" label nil (reparse-symbol classsubparts) [793 800])
                                    ("allocate" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("numBytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [976 992]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [953 993])
                                    ("deallocate" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1079 1085])
                                            ("" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1086 1093]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1055 1096])
                                    ("release" function
                                       (:prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [1166 1189])
                                    ("reset" function
                                       (:prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1245 1268])
                                    ("getAlignSize" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1357 1405])
                                    ("getUsedBytes" function
                                       (:prototype-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1457 1485])
                                    ("getTotalBytes" function
                                       (:prototype-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1538 1567])
                                    ("getAllocatedSize" function
                                       (:prototype-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1624 1656])
                                    ("getAvailableChunkSize" function
                                       (:prototype-flag t
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1662 1699])
                                    ("isInPool" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("ptr" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1771 1787]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [1757 1794])
                                    ("protected" label nil (reparse-symbol classsubparts) [1796 1806])
                                    ("alignBytes" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("numBytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1829 1845]))                                          
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1811 1846])
                                    ("protected" label nil (reparse-symbol classsubparts) [1848 1858])
                                    ("_alignSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1863 1881])
                                    ("_memChunk" variable
                                       (:pointer 1
                                        :type ("MemoryChunk" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1906 1929])
                                    ("_allocSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1951 1969])
                                    ("_allocPolicy" variable
                                       (:pointer 1
                                        :type ("AllocatePolicy" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2017 2046])
                                    ("DUMMY_CHUNK" variable
                                       (:typemodifiers ("static")
                                        :type ("MemoryChunk" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2069 2100])
                                    ("private" label nil (reparse-symbol classsubparts) [2115 2123])
                                    ("AUTIL_LOG_DECLARE" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [2128 2148]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [314 2151])
                            ("allocate" function
                               (:pointer 1
                                :parent "Pool"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("numBytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2250 2266]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2222 2863])
                            ("release" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol namespacesubparts) [2865 2983])
                            ("reset" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2985 3142])
                            ("getUsedBytes" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3144 3309])
                            ("getAllocatedSize" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3311 3382])
                            ("getTotalBytes" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3384 3471])
                            ("getAvailableChunkSize" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3473 3579])
                            ("alignBytes" function
                               (:parent "Pool"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("numBytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3612 3628]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3581 3694]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [292 3697]))                  
                :type "namespace")
                nil [274 3698]))          
      :file "Pool.h"
      :pointmax 3709
      :fsize 3708
      :lastmodtime '(23073 7811 780240 0)
      :unmatched-syntax '((thing 481 . 482) (thing 474 . 481) (thing 468 . 474) (thing 466 . 467) (thing 447 . 465) (thing 440 . 446) (thing 434 . 439) (thing 427 . 433) (thing 414 . 415) (thing 410 . 414) (thing 408 . 409) (thing 403 . 407) (thing 401 . 402) (thing 398 . 400) (thing 396 . 397) (thing 377 . 395) (thing 370 . 376) (thing 364 . 369) (thing 357 . 363))
      :lexical-table 
        '(("AUTIL_POOL_H")
          )
))
  :file "!ssd!sdd!git!ha3!ha3_matchdoc!_external!usr!local!include!autil!mem_pool!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
