;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "control_flow_ops.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/common_shape_fns.h" include nil nil [671 726])
            ("tensorflow/core/framework/op.h" include nil nil [727 768])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [769 823])
            ("tensorflow" type
               (:members 
                  ( ("shape_inference::InferenceContext" using (:type ("shape_inference::InferenceContext" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [849 889])
                    ("shape_inference::ShapeHandle" using (:type ("shape_inference::ShapeHandle" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [890 925])
                    ("unnamed" type
                       (:members 
                          ( ("SwitchShape" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1036 1056]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1017 1500]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1005 1502])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1707 2195]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1703 2197])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2441 2945]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2437 2947])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3934 4170]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [3930 4172])
                    ("unnamed" type
                       (:members 
                          ( ("MergeShape" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4282 4302]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4264 4936]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [4252 4938])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5145 5670]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5141 5672])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5878 6404]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5874 6406])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7293 7998]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [7289 8000])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8354 8992]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8350 8994])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9220 9432]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9216 9434])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9595 9807]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9591 9809])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10044 10202]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10040 10204])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10374 10532]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10370 10534])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10810 10921])
                            ("" variable (:type ("pivot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10921 11067]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10806 11069])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11232 11363]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [11228 11365])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11601 11884]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [11597 11886]))                  
                :type "namespace")
                nil [825 11889]))          
      :file "control_flow_ops.cc"
      :pointmax 11915
      :fsize 11914
      :lastmodtime '(23108 28231 662576 953000)
      :unmatched-syntax '((thing 11596 . 11597) (thing 11563 . 11591) (thing 11553 . 11563) (thing 11552 . 11553) (thing 11511 . 11547) (thing 11512 . 11546) (thing 11507 . 11511) (thing 11506 . 11507) (thing 11475 . 11501) (thing 11476 . 11500) (thing 11471 . 11475) (thing 11470 . 11471) (thing 11456 . 11465) (thing 11457 . 11464) (thing 11445 . 11456) (thing 11233 . 11363) (thing 11227 . 11228) (thing 11194 . 11222) (thing 11184 . 11194) (thing 11183 . 11184) (thing 11160 . 11178) (thing 11161 . 11177) (thing 11149 . 11160) (thing 10926 . 11067) (thing 10811 . 10921) (thing 10805 . 10806) (thing 10707 . 10800) (thing 10732 . 10799) (thing 10710 . 10731) (thing 10708 . 10710) (thing 10697 . 10707) (thing 10696 . 10697) (thing 10675 . 10691) (thing 10676 . 10690) (thing 10669 . 10675) (thing 10668 . 10669) (thing 10648 . 10663) (thing 10649 . 10662) (thing 10643 . 10648) (thing 10642 . 10643) (thing 10625 . 10637) (thing 10626 . 10636) (thing 10614 . 10625) (thing 10375 . 10532) (thing 10369 . 10370) (thing 10331 . 10364) (thing 10321 . 10331) (thing 10320 . 10321) (thing 10304 . 10315) (thing 10305 . 10314) (thing 10300 . 10304) (thing 10299 . 10300) (thing 10276 . 10294) (thing 10277 . 10293) (thing 10270 . 10276) (thing 10269 . 10270) (thing 10248 . 10264) (thing 10249 . 10263) (thing 10243 . 10248) (thing 10242 . 10243) (thing 10217 . 10237) (thing 10218 . 10236) (thing 10206 . 10217) (thing 10045 . 10202) (thing 10039 . 10040) (thing 10001 . 10034) (thing 9991 . 10001) (thing 9990 . 9991) (thing 9974 . 9985) (thing 9975 . 9984) (thing 9970 . 9974) (thing 9969 . 9970) (thing 9951 . 9964) (thing 9952 . 9963) (thing 9945 . 9951) (thing 9944 . 9945) (thing 9928 . 9939) (thing 9929 . 9938) (thing 9923 . 9928) (thing 9922 . 9923) (thing 9900 . 9917) (thing 9901 . 9916) (thing 9889 . 9900) (thing 9596 . 9807) (thing 9590 . 9591) (thing 9552 . 9585) (thing 9542 . 9552) (thing 9541 . 9542) (thing 9525 . 9536) (thing 9526 . 9535) (thing 9521 . 9525) (thing 9520 . 9521) (thing 9497 . 9515) (thing 9498 . 9514) (thing 9491 . 9497) (thing 9490 . 9491) (thing 9469 . 9485) (thing 9470 . 9484) (thing 9464 . 9469) (thing 9463 . 9464) (thing 9447 . 9458) (thing 9448 . 9457) (thing 9436 . 9447) (thing 9221 . 9432) (thing 9215 . 9216) (thing 9177 . 9210) (thing 9167 . 9177) (thing 9166 . 9167) (thing 9150 . 9161) (thing 9151 . 9160) (thing 9146 . 9150) (thing 9145 . 9146) (thing 9127 . 9140) (thing 9128 . 9139) (thing 9121 . 9127) (thing 9120 . 9121) (thing 9104 . 9115) (thing 9105 . 9114) (thing 9099 . 9104) (thing 9098 . 9099) (thing 9085 . 9093) (thing 9086 . 9092) (thing 9074 . 9085) (thing 8355 . 8992) (thing 8349 . 8350) (thing 8311 . 8344) (thing 8301 . 8311) (thing 8300 . 8301) (thing 8262 . 8295) (thing 8263 . 8294) (thing 8258 . 8262) (thing 8257 . 8258) (thing 8223 . 8252) (thing 8224 . 8251) (thing 8219 . 8223) (thing 8218 . 8219) (thing 8191 . 8213) (thing 8192 . 8212) (thing 8187 . 8191) (thing 8186 . 8187) (thing 8170 . 8181) (thing 8171 . 8180) (thing 8166 . 8170) (thing 8165 . 8166) (thing 8142 . 8160) (thing 8143 . 8159) (thing 8136 . 8142) (thing 8135 . 8136) (thing 8114 . 8130) (thing 8115 . 8129) (thing 8109 . 8114) (thing 8108 . 8109) (thing 8091 . 8103) (thing 8092 . 8102) (thing 8080 . 8091) (thing 7294 . 7998) (thing 7288 . 7289) (thing 6704 . 7283) (thing 6729 . 7282) (thing 6707 . 6728) (thing 6705 . 6707) (thing 6694 . 6704) (thing 6693 . 6694) (thing 6655 . 6688) (thing 6656 . 6687) (thing 6651 . 6655) (thing 6650 . 6651) (thing 6616 . 6645) (thing 6617 . 6644) (thing 6612 . 6616) (thing 6611 . 6612) (thing 6584 . 6606) (thing 6585 . 6605) (thing 6580 . 6584) (thing 6579 . 6580) (thing 6563 . 6574) (thing 6564 . 6573) (thing 6559 . 6563) (thing 6558 . 6559) (thing 6540 . 6553) (thing 6541 . 6552) (thing 6534 . 6540) (thing 6533 . 6534) (thing 6517 . 6528) (thing 6518 . 6527) (thing 6512 . 6517) (thing 6511 . 6512) (thing 6497 . 6506) (thing 6498 . 6505) (thing 6486 . 6497) (thing 5879 . 6404) (thing 5873 . 5874) (thing 5856 . 5868) (thing 5846 . 5856) (thing 5845 . 5846) (thing 5825 . 5840) (thing 5826 . 5839) (thing 5821 . 5825) (thing 5820 . 5821) (thing 5804 . 5815) (thing 5805 . 5814) (thing 5800 . 5804) (thing 5799 . 5800) (thing 5772 . 5794) (thing 5773 . 5793) (thing 5766 . 5772) (thing 5765 . 5766) (thing 5742 . 5760) (thing 5743 . 5759) (thing 5736 . 5742) (thing 5735 . 5736) (thing 5708 . 5730) (thing 5709 . 5729) (thing 5703 . 5708) (thing 5702 . 5703) (thing 5685 . 5697) (thing 5686 . 5696) (thing 5674 . 5685) (thing 5146 . 5670) (thing 5140 . 5141) (thing 5123 . 5135) (thing 5113 . 5123) (thing 5112 . 5113) (thing 5092 . 5107) (thing 5093 . 5106) (thing 5088 . 5092) (thing 5087 . 5088) (thing 5071 . 5082) (thing 5072 . 5081) (thing 5067 . 5071) (thing 5066 . 5067) (thing 5039 . 5061) (thing 5040 . 5060) (thing 5033 . 5039) (thing 5032 . 5033) (thing 5014 . 5027) (thing 5015 . 5026) (thing 5008 . 5014) (thing 5007 . 5008) (thing 4985 . 5002) (thing 4986 . 5001) (thing 4980 . 4985) (thing 4979 . 4980) (thing 4965 . 4974) (thing 4966 . 4973) (thing 4954 . 4965) (thing 3935 . 4170) (thing 3929 . 3930) (thing 3203 . 3924) (thing 3228 . 3923) (thing 3206 . 3227) (thing 3204 . 3206) (thing 3193 . 3203) (thing 3192 . 3193) (thing 3172 . 3187) (thing 3173 . 3186) (thing 3168 . 3172) (thing 3167 . 3168) (thing 3151 . 3162) (thing 3152 . 3161) (thing 3147 . 3151) (thing 3146 . 3147) (thing 3123 . 3141) (thing 3124 . 3140) (thing 3117 . 3123) (thing 3116 . 3117) (thing 3089 . 3111) (thing 3090 . 3110) (thing 3084 . 3089) (thing 3083 . 3084) (thing 3062 . 3078) (thing 3063 . 3077) (thing 3057 . 3062) (thing 3056 . 3057) (thing 3038 . 3051) (thing 3039 . 3050) (thing 3027 . 3038) (thing 2442 . 2945) (thing 2436 . 2437) (thing 2418 . 2431) (thing 2408 . 2418) (thing 2407 . 2408) (thing 2400 . 2402) (thing 2373 . 2400) (thing 2372 . 2373) (thing 2356 . 2367) (thing 2357 . 2366) (thing 2352 . 2356) (thing 2351 . 2352) (thing 2323 . 2346) (thing 2324 . 2345) (thing 2317 . 2323) (thing 2316 . 2317) (thing 2287 . 2311) (thing 2288 . 2310) (thing 2281 . 2287) (thing 2280 . 2281) (thing 2261 . 2275) (thing 2262 . 2274) (thing 2256 . 2261) (thing 2255 . 2256) (thing 2234 . 2250) (thing 2235 . 2249) (thing 2229 . 2234) (thing 2228 . 2229) (thing 2210 . 2223) (thing 2211 . 2222) (thing 2199 . 2210) (thing 1708 . 2195) (thing 1702 . 1703) (thing 1684 . 1697) (thing 1674 . 1684) (thing 1673 . 1674) (thing 1657 . 1668) (thing 1658 . 1667) (thing 1653 . 1657) (thing 1652 . 1653) (thing 1629 . 1647) (thing 1630 . 1646) (thing 1623 . 1629) (thing 1622 . 1623) (thing 1598 . 1617) (thing 1599 . 1616) (thing 1592 . 1598) (thing 1591 . 1592) (thing 1572 . 1586) (thing 1573 . 1585) (thing 1567 . 1572) (thing 1566 . 1567) (thing 1550 . 1561) (thing 1551 . 1560) (thing 1545 . 1550) (thing 1544 . 1545) (thing 1529 . 1539) (thing 1530 . 1538) (thing 1518 . 1529) (thing 11602 . 11884)))

    (semanticdb-table "audio_ops.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/common_shape_fns.h" include nil nil [671 726])
            ("tensorflow/core/framework/op.h" include nil nil [727 768])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [769 823])
            ("tensorflow/core/lib/core/bits.h" include nil nil [824 866])
            ("tensorflow" type
               (:members 
                  ( ("unnamed" type
                       (:members 
                          ( ("shape_inference::DimensionHandle" using (:type ("shape_inference::DimensionHandle" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [905 944])
                            ("shape_inference::InferenceContext" using (:type ("shape_inference::InferenceContext" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [945 985])
                            ("shape_inference::ShapeHandle" using (:type ("shape_inference::ShapeHandle" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [986 1021])
                            ("DecodeWavShapeFn" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1047 1067]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1023 2128])
                            ("EncodeWavShapeFn" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2154 2174]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2130 2376])
                            ("SpectrogramShapeFn" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2404 2424]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2378 3473])
                            ("MfccShapeFn" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3494 3514]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3475 4167]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [892 4170])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4426 5445]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4422 5447])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5609 6188]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5605 6190])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6430 8427]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [6426 8429])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8773 9784]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8769 9786]))                  
                :type "namespace")
                nil [868 9789]))          
      :file "audio_ops.cc"
      :pointmax 9815
      :fsize 9814
      :lastmodtime '(23108 28231 655576 954000)
      :unmatched-syntax '((thing 4186 . 4197) (thing 4197 . 4210) (thing 4198 . 4209) (thing 4215 . 4216) (thing 4216 . 4221) (thing 4221 . 4241) (thing 4222 . 4240) (thing 4246 . 4247) (thing 4247 . 4251) (thing 4251 . 4281) (thing 4252 . 4280) (thing 4286 . 4287) (thing 4287 . 4291) (thing 4291 . 4320) (thing 4292 . 4319) (thing 4325 . 4326) (thing 4326 . 4332) (thing 4332 . 4348) (thing 4333 . 4347) (thing 4353 . 4354) (thing 4354 . 4360) (thing 4360 . 4382) (thing 4361 . 4381) (thing 4387 . 4388) (thing 4388 . 4398) (thing 4398 . 4416) (thing 4421 . 4422) (thing 4427 . 5445) (thing 5449 . 5460) (thing 5460 . 5473) (thing 5461 . 5472) (thing 5478 . 5479) (thing 5479 . 5484) (thing 5484 . 5500) (thing 5485 . 5499) (thing 5505 . 5506) (thing 5506 . 5511) (thing 5511 . 5533) (thing 5512 . 5532) (thing 5538 . 5539) (thing 5539 . 5545) (thing 5545 . 5565) (thing 5546 . 5564) (thing 5570 . 5571) (thing 5571 . 5581) (thing 5581 . 5599) (thing 5604 . 5605) (thing 5610 . 6188) (thing 6192 . 6203) (thing 6203 . 6223) (thing 6204 . 6222) (thing 6228 . 6229) (thing 6229 . 6234) (thing 6234 . 6250) (thing 6235 . 6249) (thing 6255 . 6256) (thing 6256 . 6260) (thing 6260 . 6280) (thing 6261 . 6279) (thing 6285 . 6286) (thing 6286 . 6290) (thing 6290 . 6305) (thing 6291 . 6304) (thing 6310 . 6311) (thing 6311 . 6315) (thing 6315 . 6350) (thing 6316 . 6349) (thing 6355 . 6356) (thing 6356 . 6362) (thing 6362 . 6384) (thing 6363 . 6383) (thing 6389 . 6390) (thing 6390 . 6400) (thing 6400 . 6420) (thing 6425 . 6426) (thing 6431 . 8427) (thing 8431 . 8442) (thing 8442 . 8450) (thing 8443 . 8449) (thing 8455 . 8456) (thing 8456 . 8461) (thing 8461 . 8483) (thing 8462 . 8482) (thing 8488 . 8489) (thing 8489 . 8494) (thing 8494 . 8516) (thing 8495 . 8515) (thing 8521 . 8522) (thing 8522 . 8526) (thing 8526 . 8565) (thing 8527 . 8564) (thing 8570 . 8571) (thing 8571 . 8575) (thing 8575 . 8612) (thing 8576 . 8611) (thing 8617 . 8618) (thing 8618 . 8622) (thing 8622 . 8660) (thing 8623 . 8659) (thing 8665 . 8666) (thing 8666 . 8670) (thing 8670 . 8705) (thing 8671 . 8704) (thing 8710 . 8711) (thing 8711 . 8717) (thing 8717 . 8734) (thing 8718 . 8733) (thing 8739 . 8740) (thing 8740 . 8750) (thing 8750 . 8763) (thing 8768 . 8769) (thing 8774 . 9784)))
    (semanticdb-table "bitwise_ops.cc"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/common_shape_fns.h" include nil nil [671 726])
            ("tensorflow/core/framework/numeric_op.h" include nil nil [727 776])
            ("tensorflow/core/framework/op.h" include nil nil [777 818])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [819 873])
            ("tensorflow" type
               (:members 
                  ( ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1077 1256]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1073 1258])
                    ("BINARY_BITWISE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1268 1282])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1881 2284]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1877 2286])
                    ("SetShapeFn" function
                       (:arguments 
                          ( ("" variable (:type ("shape_inference::UnchangedShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2314 2330])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2335 2551]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2331 2553])
                    ("SetShapeFn" function
                       (:arguments 
                          ( ("" variable (:type ("shape_inference::UnchangedShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2580 2596])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2601 2816]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2597 2818])
                    ("SetShapeFn" function
                       (:arguments 
                          ( ("" variable (:type ("shape_inference::UnchangedShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2846 2862])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2867 3084]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2863 3086]))                  
                :type "namespace")
                nil [875 3089]))          
      :file "bitwise_ops.cc"
      :pointmax 3115
      :fsize 3114
      :lastmodtime '(23108 28231 655576 954000)
      :unmatched-syntax '((thing 2868 . 3084) (thing 2862 . 2863) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2846 . 2860) (thing 2845 . 2846) (thing 2831 . 2845) (thing 2832 . 2844) (thing 2820 . 2831) (thing 2602 . 2816) (thing 2596 . 2597) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2580 . 2594) (thing 2579 . 2580) (thing 2566 . 2579) (thing 2567 . 2578) (thing 2555 . 2566) (thing 2336 . 2551) (thing 2330 . 2331) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2314 . 2328) (thing 2313 . 2314) (thing 2299 . 2313) (thing 2300 . 2312) (thing 2288 . 2299) (thing 1882 . 2284) (thing 1876 . 1877) (thing 1838 . 1871) (thing 1828 . 1838) (thing 1827 . 1828) (thing 1773 . 1822) (thing 1774 . 1821) (thing 1769 . 1773) (thing 1768 . 1769) (thing 1751 . 1763) (thing 1752 . 1762) (thing 1745 . 1751) (thing 1744 . 1745) (thing 1731 . 1739) (thing 1732 . 1738) (thing 1726 . 1731) (thing 1725 . 1726) (thing 1701 . 1720) (thing 1702 . 1719) (thing 1690 . 1701) (thing 1078 . 1256) (thing 1072 . 1073) (thing 1034 . 1067) (thing 1024 . 1034) (thing 1023 . 1024) (thing 969 . 1018) (thing 970 . 1017) (thing 965 . 969) (thing 964 . 965) (thing 951 . 959) (thing 952 . 958) (thing 945 . 951) (thing 944 . 945) (thing 931 . 939) (thing 932 . 938) (thing 926 . 931) (thing 925 . 926) (thing 910 . 920) (thing 911 . 919) (thing 899 . 910))
      :lexical-table 
        '(("BINARY_BITWISE" (spp-arg-list nil 1282 . 1284) . 
              ((symbol "Input" 1325 . 1330) (semantic-list "(\"x: T\")" 1330 . 1338) (punctuation "." 1392 . 1393) (symbol "Input" 1393 . 1398) (semantic-list "(\"y: T\")" 1398 . 1406) (punctuation "." 1455 . 1456) (symbol "Output" 1456 . 1462) (semantic-list "(\"z: T\")" 1462 . 1470) (punctuation "." 1518 . 1519) (symbol "SetIsCommutative" 1519 . 1535) (semantic-list "()" 1535 . 1537) (punctuation "." 1581 . 1582) (symbol "Attr" 1582 . 1586) (semantic-list "(\"T: {int8, int16, int32, int64, uint8, uint16}\")" 1586 . 1635) (punctuation "." 1644 . 1645) (symbol "SetShapeFn" 1645 . 1655) (semantic-list "(shape_inference::UnchangedShape)" 1655 . 1688)))
          )
))
  :file "!ssd!sdd!git!ha3!tensorflow!tensorflow!core!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
