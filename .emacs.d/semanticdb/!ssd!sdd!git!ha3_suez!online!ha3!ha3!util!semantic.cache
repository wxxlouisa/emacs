;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_LOG_H_" variable (:constant-flag t) nil [32 46])
            ("alog/Logger.h" include (:system-flag t) nil [48 72])
            ("alog/Configurator.h" include (:system-flag t) nil [73 103])
            ("iostream" include (:system-flag t) nil [104 123])
            ("ALOG_CONF_FILE" variable (:constant-flag t) nil [133 147])
            ("HA3_LOG_SETUP" variable (:constant-flag t) nil [173 186])
            ("HA3_LOG_SETUP_TEMPLATE" variable (:constant-flag t) nil [277 299])
            ("HA3_LOG_SETUP_TEMPLATE_2" variable (:constant-flag t) nil [457 481])
            ("HA3_LOG_SETUP_TEMPLATE_3" variable (:constant-flag t) nil [656 680])
            ("HA3_ROOT_LOG_CONFIG" variable (:constant-flag t) nil [901 920])
            ("HA3_LOG_CONFIG" variable (:constant-flag t) nil [973 987])
            ("HA3_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [1582 1608])
            ("HA3_ROOT_LOG_SETLEVEL" variable (:constant-flag t) nil [2263 2284])
            ("HA3_LOG_DECLARE" variable (:constant-flag t) nil [2405 2420])
            ("ENSURE_STRING_LITERAL" variable (:constant-flag t) nil [2461 2482])
            ("HA3_LOG" variable (:constant-flag t) nil [2540 2547])
            ("HA3_DECLARE_AND_SETUP_LOGGER" variable (:constant-flag t) nil [2965 2993])
            ("HA3_LOG_SHUTDOWN" variable (:constant-flag t) nil [3081 3097])
            ("HA3_LOG_FLUSH" variable (:constant-flag t) nil [3134 3147]))          
      :file "Log.h"
      :pointmax 3183
      :fsize 3182
      :lastmodtime '(22468 63444 708838 143000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ALOG_CONF_FILE" . ((string "\"ha3_alog.conf\"" 148 . 163)))
          ("HA3_DECLARE_AND_SETUP_LOGGER" (spp-arg-list ("c") 2993 . 2996) . 
              ((STATIC "static" 2997 . 3003) (symbol "alog" 3004 . 3008) (punctuation ":" 3008 . 3009) (punctuation ":" 3009 . 3010) (symbol "Logger" 3010 . 3016) (punctuation "*" 3017 . 3018) (symbol "_logger" 3018 . 3025) (punctuation "=" 3035 . 3036) (symbol "alog" 3037 . 3041) (punctuation ":" 3041 . 3042) (punctuation ":" 3042 . 3043) (symbol "Logger" 3043 . 3049) (punctuation ":" 3049 . 3050) (punctuation ":" 3050 . 3051) (symbol "getLogger" 3051 . 3060) (semantic-list "(\"ha3.\" #c)" 3060 . 3071)))
          ("HA3_LOG_SHUTDOWN" (spp-arg-list nil 3097 . 3099) . 
              ((symbol "alog" 3100 . 3104) (punctuation ":" 3104 . 3105) (punctuation ":" 3105 . 3106) (symbol "Logger" 3106 . 3112) (punctuation ":" 3112 . 3113) (punctuation ":" 3113 . 3114) (symbol "shutdown" 3114 . 3122) (semantic-list "()" 3122 . 3124)))
          ("HA3_LOG_SETUP" (spp-arg-list ("n" "c") 186 . 192) . 
              ((symbol "alog" 194 . 198) (punctuation ":" 198 . 199) (punctuation ":" 199 . 200) (symbol "Logger" 200 . 206) (punctuation "*" 207 . 208) (symbol "c" 208 . 209) (punctuation ":" 209 . 210) (punctuation ":" 210 . 211) (symbol "_logger" 211 . 218) (punctuation "=" 225 . 226) (symbol "alog" 227 . 231) (punctuation ":" 231 . 232) (punctuation ":" 232 . 233) (symbol "Logger" 233 . 239) (punctuation ":" 239 . 240) (punctuation ":" 240 . 241) (symbol "getLogger" 241 . 250) (semantic-list "(\"ha3.\"#n \".\" #c)" 250 . 267)))
          ("HA3_LOG_FLUSH" (spp-arg-list nil 3147 . 3149) . 
              ((symbol "alog" 3150 . 3154) (punctuation ":" 3154 . 3155) (punctuation ":" 3155 . 3156) (symbol "Logger" 3156 . 3162) (punctuation ":" 3162 . 3163) (punctuation ":" 3163 . 3164) (symbol "flushAll" 3164 . 3172) (semantic-list "()" 3172 . 3174)))
          ("HA3_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 1608 . 1617) . 
              ((DO "do" 1618 . 1620) (semantic-list "{                        \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"WARN! Failed to configure logger!\"            \\
                      << e.what() << \",use default log conf.\"           \\
                      << std::endl;                                     \\
            HA3_ROOT_LOG_CONFIG();                                      \\
        }                                                               \\
    }" 1621 . 2245) (WHILE "while" 2245 . 2250) (semantic-list "(0)" 2250 . 2253)))
          ("HA3_LOG_SETUP_TEMPLATE_2" (spp-arg-list ("n" "c" "T1" "T2") 481 . 494) . 
              ((TEMPLATE "template" 495 . 503) (punctuation "<" 504 . 505) (TYPENAME "typename" 505 . 513) (symbol "T1" 514 . 516) (punctuation "," 516 . 517) (TYPENAME "typename" 518 . 526) (symbol "T2" 527 . 529) (punctuation ">" 529 . 530) (symbol "alog" 537 . 541) (punctuation ":" 541 . 542) (punctuation ":" 542 . 543) (symbol "Logger" 543 . 549) (punctuation "*" 550 . 551) (symbol "c" 551 . 552) (punctuation "<" 552 . 553) (symbol "T1" 553 . 555) (punctuation "," 555 . 556) (symbol "T2" 557 . 559) (punctuation ">" 559 . 560) (punctuation ":" 560 . 561) (punctuation ":" 561 . 562) (symbol "_logger" 562 . 569) (punctuation "=" 602 . 603) (symbol "alog" 604 . 608) (punctuation ":" 608 . 609) (punctuation ":" 609 . 610) (symbol "Logger" 610 . 616) (punctuation ":" 616 . 617) (punctuation ":" 617 . 618) (symbol "getLogger" 618 . 627) (semantic-list "(\"ha3.\" #n \".\"  #c)" 627 . 646)))
          ("HA3_LOG_CONFIG" (spp-arg-list ("filename") 987 . 997) . 
              ((DO "do" 998 . 1000) (semantic-list "{                           \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"WARN! Failed to configure logger!\"    \\
                      << e.what() << \",use default log conf.\"   \\
                      << std::endl;                             \\
            HA3_ROOT_LOG_CONFIG();                              \\
        }                                                       \\
    }" 1001 . 1564) (WHILE "while" 1564 . 1569) (semantic-list "(0)" 1569 . 1572)))
          ("HA3_LOG_SETUP_TEMPLATE_3" (spp-arg-list ("n" "c" "T1" "T2" "T3") 680 . 697) . 
              ((TEMPLATE "template" 717 . 725) (punctuation "<" 726 . 727) (TYPENAME "typename" 727 . 735) (symbol "T1" 736 . 738) (punctuation "," 738 . 739) (TYPENAME "typename" 740 . 748) (symbol "T2" 749 . 751) (punctuation "," 751 . 752) (TYPENAME "typename" 753 . 761) (symbol "T3" 762 . 764) (punctuation ">" 764 . 765) (symbol "alog" 782 . 786) (punctuation ":" 786 . 787) (punctuation ":" 787 . 788) (symbol "Logger" 788 . 794) (punctuation "*" 795 . 796) (symbol "c" 796 . 797) (punctuation "<" 797 . 798) (symbol "T1" 798 . 800) (punctuation "," 800 . 801) (symbol "T2" 802 . 804) (punctuation "," 804 . 805) (symbol "T3" 806 . 808) (punctuation ">" 808 . 809) (punctuation ":" 809 . 810) (punctuation ":" 810 . 811) (symbol "_logger" 811 . 818) (punctuation "=" 847 . 848) (symbol "alog" 849 . 853) (punctuation ":" 853 . 854) (punctuation ":" 854 . 855) (symbol "Logger" 855 . 861) (punctuation ":" 861 . 862) (punctuation ":" 862 . 863) (symbol "getLogger" 863 . 872) (semantic-list "(\"ha3.\" #n \".\"  #c)" 872 . 891)))
          ("ISEARCH_LOG_H_")
          ("HA3_ROOT_LOG_SETLEVEL" (spp-arg-list ("level") 2284 . 2291) . 
              ((symbol "alog" 2331 . 2335) (punctuation ":" 2335 . 2336) (punctuation ":" 2336 . 2337) (symbol "Logger" 2337 . 2343) (punctuation ":" 2343 . 2344) (punctuation ":" 2344 . 2345) (symbol "getRootLogger" 2345 . 2358) (semantic-list "()" 2358 . 2360) (punctuation "-" 2360 . 2361) (punctuation ">" 2361 . 2362) (symbol "setLevel" 2362 . 2370) (semantic-list "(alog::LOG_LEVEL_##level)" 2370 . 2395)))
          ("HA3_LOG_DECLARE" (spp-arg-list nil 2420 . 2422) . 
              ((STATIC "static" 2423 . 2429) (symbol "alog" 2430 . 2434) (punctuation ":" 2434 . 2435) (punctuation ":" 2435 . 2436) (symbol "Logger" 2436 . 2442) (punctuation "*" 2443 . 2444) (symbol "_logger" 2444 . 2451)))
          ("ENSURE_STRING_LITERAL" (spp-arg-list ("x") 2482 . 2485) . 
              ((DO "do" 2487 . 2489) (semantic-list "{ (void) x \"\"; }" 2490 . 2506) (WHILE "while" 2507 . 2512) (semantic-list "(0)" 2512 . 2515)))
          ("HA3_LOG_SETUP_TEMPLATE" (spp-arg-list ("n" "c" "T") 299 . 308) . 
              ((TEMPLATE "template" 309 . 317) (punctuation "<" 318 . 319) (TYPENAME "typename" 319 . 327) (symbol "T" 328 . 329) (punctuation ">" 329 . 330) (symbol "alog" 339 . 343) (punctuation ":" 343 . 344) (punctuation ":" 344 . 345) (symbol "Logger" 345 . 351) (punctuation "*" 352 . 353) (symbol "c" 353 . 354) (punctuation "<" 354 . 355) (symbol "T" 355 . 356) (punctuation ">" 356 . 357) (punctuation ":" 357 . 358) (punctuation ":" 358 . 359) (symbol "_logger" 359 . 366) (punctuation "=" 405 . 406) (symbol "alog" 407 . 411) (punctuation ":" 411 . 412) (punctuation ":" 412 . 413) (symbol "Logger" 413 . 419) (punctuation ":" 419 . 420) (punctuation ":" 420 . 421) (symbol "getLogger" 421 . 430) (semantic-list "(\"ha3.\"#n \".\" #c)" 430 . 447)))
          ("HA3_ROOT_LOG_CONFIG" (spp-arg-list nil 920 . 922) . 
              ((symbol "alog" 923 . 927) (punctuation ":" 927 . 928) (punctuation ":" 928 . 929) (symbol "Configurator" 929 . 941) (punctuation ":" 941 . 942) (punctuation ":" 942 . 943) (symbol "configureRootLogger" 943 . 962) (semantic-list "()" 962 . 964)))
          ("HA3_LOG" (spp-arg-list ("level" "format" "args...") 2547 . 2571) . 
              ((DO "do" 2610 . 2612) (semantic-list "{                                                                \\
        ENSURE_STRING_LITERAL(format);                                  \\
        ALOG_LOG(_logger, alog::LOG_LEVEL_##level, format, ##args);     \\
    }" 2613 . 2833) (WHILE "while" 2834 . 2839) (semantic-list "(0)" 2840 . 2843)))
          )
)
    (semanticdb-table "SharedPtrUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SHAREDPTRUTIL_H" variable (:constant-flag t) nil [41 64])
            ("ha3/common.h" include (:system-flag t) nil [66 89])
            ("ha3/isearch.h" include (:system-flag t) nil [90 114])
            ("ha3/util/Log.h" include (:system-flag t) nil [115 140])
            ("unistd.h" include (:system-flag t) nil [141 160])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [182 187]))                  
                :type "int")
                nil [162 188])
            ("SharedPtrUtil" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [212 219])
                    ("waitUseCount" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("ptr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::tr1::shared_ptr" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [272 307])
                            ("expectUseCount" variable
                               (:default-value "1"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [337 364])
                            ("timeout" variable
                               (:default-value "-1"
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [395 415]))                          
                        :typemodifiers ("static"))
                        (reparse-symbol classsubparts) [224 763])
                    ("private" label nil (reparse-symbol classsubparts) [764 772])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [777 795]))                  
                :type "class")
                nil [190 798])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("SharedPtrUtil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [816 830]))                  
                :type "int")
                nil [800 831])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [851 856]))                  
                :type "int")
                nil [833 857]))          
      :file "SharedPtrUtil.h"
      :pointmax 892
      :fsize 891
      :lastmodtime '(22507 7237 105666 451000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_SHAREDPTRUTIL_H")
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [40 57])
            ("libutil_sources" variable nil nil [59 943])
            ("env" code nil nil [944 1049])
            ("env" code nil nil [1051 1166])
            ("env" code nil nil [1168 1185]))          
      :file "SConscript"
      :pointmax 1210
      :fsize 1209
      :lastmodtime '(22507 7237 103666 453000)
      :unmatched-syntax nil)
    (semanticdb-table "MemPoolFactory.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MEMPOOLFACTORY_H" variable (:constant-flag t) nil [42 66])
            ("sys/syscall.h" include (:system-flag t) nil [68 92])
            ("ha3/common.h" include (:system-flag t) nil [93 116])
            ("ha3/isearch.h" include (:system-flag t) nil [117 141])
            ("ha3/util/Log.h" include (:system-flag t) nil [142 167])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [168 200])
            ("autil/Lock.h" include (:system-flag t) nil [201 224])
            ("tr1/unordered_map" include (:system-flag t) nil [225 253])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275 280]))                  
                :type "int")
                nil [255 281])
            ("MemPoolFactory" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [306 313])
                    ("PoolType" type
                       (:typedef ("autil::mem_pool::Pool" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [318 357])
                    ("PoolMap" type
                       (:typedef ("std::tr1::unordered_map" type
                             (:template-specifier 
                                ( ("pthread_t" type nil nil nil)
                                  ("PoolType" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [362 424])
                    ("public" label nil (reparse-symbol classsubparts) [425 432])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [437 454])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [459 477])
                    ("private" label nil (reparse-symbol classsubparts) [478 486])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemPoolFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [506 529]))                          
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [491 530])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemPoolFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [561 584]))                          
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [535 585])
                    ("public" label nil (reparse-symbol classsubparts) [586 593])
                    ("getMemPool" function
                       (:pointer 1
                        :type ("PoolType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [598 1017])
                    ("public" label nil (reparse-symbol classsubparts) [1018 1025])
                    ("getPoolCount" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1045 1104])
                    ("private" label nil (reparse-symbol classsubparts) [1105 1113])
                    ("_lock" variable (:type ("autil::ReadWriteLock" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1118 1145])
                    ("_pools" variable (:type ("PoolMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1150 1165])
                    ("private" label nil (reparse-symbol classsubparts) [1166 1174])
                    ("MemPoolFactoryTest" friend nil (reparse-symbol classsubparts) [1179 1210])
                    ("private" label nil (reparse-symbol classsubparts) [1212 1220])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1225 1243]))                  
                :type "class")
                nil [283 1246])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MemPoolFactory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1264 1279]))                  
                :type "int")
                nil [1248 1280])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1300 1305]))                  
                :type "int")
                nil [1282 1306]))          
      :file "MemPoolFactory.h"
      :pointmax 1342
      :fsize 1341
      :lastmodtime '(22615 19959 293641 41000)
      :unmatched-syntax '((thing 1186 . 1187) (thing 1210 . 1211) (thing 1210 . 1211))
      :lexical-table 
        '(("ISEARCH_MEMPOOLFACTORY_H")
          )
)
    (semanticdb-table "MemPoolFactory.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/util/MemPoolFactory.h" include (:system-flag t) nil [1 37])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59 64]))                  
                :type "int")
                nil [39 65])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80 85])
                    ("" variable (:type ("MemPoolFactory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86 101]))                  
                :type "int")
                nil [66 102])
            ("MemPoolFactory" function
               (:constructor-flag t
                :parent "MemPoolFactory"
                :type ("MemPoolFactory" type (:type "class") nil nil))
                nil [104 141])
            ("MemPoolFactory" function
               (:destructor-flag t
                :parent "MemPoolFactory"
                :type "void")
                nil [143 324])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [344 349]))                  
                :type "int")
                nil [326 350]))          
      :file "MemPoolFactory.cpp"
      :pointmax 352
      :fsize 351
      :lastmodtime '(22468 63444 708838 143000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!online!ha3!ha3!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
