;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "Json2FormatOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [19 66])
            ("autil/MultiValueType.h" include (:system-flag t) nil [67 100])
            ("autil/MultiValueCreator.h" include (:system-flag t) nil [101 137])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [138 187])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [188 243])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [244 290])
            ("autil/legacy/rapidjson/document.h" include (:system-flag t) nil [291 335])
            ("autil/legacy/rapidjson/stringbuffer.h" include (:system-flag t) nil [336 384])
            ("autil/legacy/rapidjson/prettywriter.h" include (:system-flag t) nil [385 433])
            ("suez/turing/common/SessionResource.h" include nil nil [434 481])
            ("basic_ops/util/OpUtil.h" include nil nil [482 516])
            ("basic_ops/ops/test/OpTestBase.h" include nil nil [517 559])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [561 581])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [582 604])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [605 630])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [631 658])
            ("autil_rapidjson" using (:type ("autil_rapidjson" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [659 691])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("Json2FormatOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [777 787])
                                    ("makeOp" function
                                       (:arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [804 839]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [792 1111])
                                    ("TestData" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("id" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1169 1174])
                                            ("ids" variable (:type ("vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [1183 1197]))                                          )
                                        (reparse-symbol classsubparts) [1117 1204])
                                    ("fakeMatchDocs" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1267 1300]))                                          )
                                        (reparse-symbol classsubparts) [1210 1924])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1961 1999]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1930 2748])
                                    ("UserType" type
                                       (:members 
                                          ( ("x" variable (:type "int") (reparse-symbol classsubparts) [2780 2786])
                                            ("serialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2811 2837]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2796 2846])
                                            ("deserialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2873 2899]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2856 2908]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [2754 2915])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2952 2992]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2921 3434])
                                    ("runCase" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3479 3514])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3515 3548])
                                            ("expectedStr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3566 3592]))                                          )
                                        (reparse-symbol classsubparts) [3440 4004])
                                    ("runException" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4054 4089])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4090 4123]))                                          )
                                        (reparse-symbol classsubparts) [4010 4376])
                                    ("protected" label nil (reparse-symbol classsubparts) [4378 4388])
                                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4393 4421]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [731 4424])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4923 4941])
                                    ("" variable (:type ("testEmptyAttrInt32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4942 4961]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4916 5151])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5160 5178])
                                    ("" variable (:type ("testEmptyAttrInt64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5179 5198]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5153 5388])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5397 5415])
                                    ("" variable (:type ("testTracerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5416 5433]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5390 6114])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6627 6645])
                                    ("" variable (:type ("testEmptyAttrFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6646 6665]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6620 6845])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6854 6872])
                                    ("" variable (:type ("testEmptyAttrDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6873 6893]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6847 7079])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7593 7611])
                                    ("" variable (:type ("testEmptyAttrString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7612 7632]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7586 7831])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7840 7858])
                                    ("" variable (:type ("testOneAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7859 7874]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7833 8341])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8350 8368])
                                    ("" variable (:type ("testTwoAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8369 8384]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8343 9041])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9050 9068])
                                    ("" variable (:type ("testAttrNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9069 9086]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9043 9310])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9319 9337])
                                    ("" variable (:type ("testAttrNotBuildinType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9338 9361]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9312 9521]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [711 9523]))                  
                :type "namespace")
                nil [693 9546]))          
      :file "Json2FormatOpTest.cpp"
      :pointmax 9566
      :fsize 9565
      :lastmodtime '(23355 18556 31478 115000)
      :unmatched-syntax '((thing 6165 . 6175) (thing 6156 . 6165) (thing 6155 . 6156) (thing 6153 . 6154) (thing 6136 . 6152) (thing 6129 . 6135) (thing 6123 . 6128) (thing 6116 . 6122) (thing 4913 . 4914) (thing 4632 . 4913) (thing 4620 . 4632) (thing 4598 . 4620) (thing 4595 . 4598) (thing 4579 . 4595) (thing 4577 . 4579) (thing 4559 . 4577) (thing 4548 . 4559) (thing 4534 . 4548) (thing 4523 . 4534) (thing 4515 . 4523) (thing 4511 . 4515) (thing 4507 . 4511) (thing 4494 . 4507) (thing 4483 . 4494) (thing 4473 . 4483) (thing 4464 . 4473) (thing 4463 . 4464) (thing 4461 . 4462) (thing 4446 . 4460) (thing 4439 . 4445) (thing 4433 . 4438) (thing 4426 . 4432) (thing 6175 . 6186) (thing 6186 . 6199) (thing 6199 . 6203) (thing 6203 . 6207) (thing 6207 . 6215) (thing 6215 . 6226) (thing 6226 . 6240) (thing 6240 . 6251) (thing 6251 . 6269) (thing 6269 . 6271) (thing 6271 . 6287) (thing 6287 . 6290) (thing 6290 . 6312) (thing 6312 . 6324) (thing 6324 . 6617) (thing 6617 . 6618) (thing 7081 . 7087) (thing 7088 . 7093) (thing 7094 . 7100) (thing 7101 . 7118) (thing 7119 . 7120) (thing 7121 . 7122) (thing 7122 . 7131) (thing 7131 . 7141) (thing 7141 . 7152) (thing 7152 . 7165) (thing 7165 . 7169) (thing 7169 . 7173) (thing 7173 . 7181) (thing 7181 . 7192) (thing 7192 . 7206) (thing 7206 . 7217) (thing 7217 . 7235) (thing 7235 . 7237) (thing 7237 . 7253) (thing 7253 . 7256) (thing 7256 . 7278) (thing 7278 . 7290) (thing 7290 . 7326) (thing 7326 . 7327) (thing 7327 . 7369) (thing 7369 . 7370) (thing 7370 . 7394) (thing 7394 . 7395) (thing 7395 . 7461) (thing 7461 . 7462) (thing 7462 . 7504) (thing 7504 . 7505) (thing 7505 . 7529) (thing 7529 . 7530) (thing 7530 . 7583) (thing 7583 . 7584))))
  :file "!ssd!sdd!git!ops!basic_ops_compile!basic_ops!build!release64!basic_ops!ops!basic!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
