;; Object impl/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "impl/"
  :tables
  (list
    (semanticdb-table "Ha3RefManager.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("Ha3RefManager.h" include nil nil [1 27])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50 67]))                  
                :type "int")
                nil [29 68])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("rank" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [88 93]))                  
                :type "int")
                nil [70 94])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113 120]))                  
                :type "int")
                nil [95 121])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138 155])
                    ("" variable (:type ("Ha3RefManager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [156 170]))                  
                :type "int")
                nil [123 171])
            ("REF_NAME_SIMPLE_MATCH_DATA" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"__simple_match_data__\""
                :type ("std::string" type (:type "class") nil nil))
                nil [173 251])
            ("REF_NAME_MATCH_DATA" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"__match_data__\""
                :type ("std::string" type (:type "class") nil nil))
                nil [252 316])
            ("Ha3RefManager" function
               (:constructor-flag t
                :parent "Ha3RefManager"
                :arguments 
                  ( ("" variable (:type ("HA3_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [347 359])
                    ("provider" variable
                       (:pointer 1
                        :type ("ScoringProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [361 387])
                    ("packDataManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PackDataManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [396 441]))                  
                :type ("Ha3RefManager" type (:type "class") nil nil))
                nil [318 562])
            ("Ha3RefManager" function
               (:destructor-flag t
                :parent "Ha3RefManager"
                :type "void")
                nil [564 1021])
            ("require" function
               (:pointer 1
                :parent "Ha3RefManager"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1063 1087])
                    ("needSerialize" variable (:type "bool") (reparse-symbol arg-sub-list) [1096 1115]))                  
                :type ("VariableRefBase" type (:type "class") nil nil))
                nil [1023 1826])
            ("requireSimpleMatchData" function
               (:pointer 1
                :parent "Ha3RefManager"
                :type ("VariableRef" type
                     (:template-specifier 
                        ( ("SimpleMatchData" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1828 2508])
            ("requireMatchData" function
               (:pointer 1
                :parent "Ha3RefManager"
                :type ("VariableRef" type
                     (:template-specifier 
                        ( ("MatchData" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [2510 3134])
            ("declare" function
               (:pointer 1
                :parent "Ha3RefManager"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3176 3200])
                    ("type" variable (:type ("PFVariableType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3209 3229])
                    ("isMulti" variable (:type "bool") (reparse-symbol arg-sub-list) [3230 3243])
                    ("isSerialize" variable (:type "bool") (reparse-symbol arg-sub-list) [3244 3261]))                  
                :type ("VariableRefBase" type (:type "class") nil nil))
                nil [3136 6055])
            ("requirePackRef" function
               (:pointer 1
                :parent "Ha3RefManager"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6108 6132]))                  
                :type ("PackVariableRefBase" type (:type "class") nil nil))
                nil [6057 6663])
            ("createVariableRef" function
               (:pointer 1
                :parent "Ha3RefManager"
                :arguments 
                  ( ("ref" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6724 6759])
                    ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6760 6784]))                  
                :type ("VariableRefBase" type (:type "class") nil nil))
                nil [6665 9830])
            ("createPackVariableRef" function
               (:pointer 1
                :parent "Ha3RefManager"
                :arguments 
                  ( ("ref" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("VariableRefBase" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9899 9926])
                    ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9927 9951])
                    ("fieldPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("FieldBasePtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9960 9989]))                  
                :type ("PackVariableRefBase" type (:type "class") nil nil))
                nil [9832 11809])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11830 11847]))                  
                :type "int")
                nil [11811 11848]))          
      :file "Ha3RefManager.cpp"
      :pointmax 11849
      :fsize 11809
      :lastmodtime '(23220 60221 645125 521000)
      :unmatched-syntax '((thing 360 . 361) (thing 359 . 360) (thing 353 . 359)))
    (semanticdb-table "Ha3KVPair.h"
      :file "Ha3KVPair.h"
      :fsize 932
      :lastmodtime '(23218 5689 331864 342000))
    (semanticdb-table "Ha3TracerHelper.h"
      :file "Ha3TracerHelper.h"
      :fsize 3185
      :lastmodtime '(23218 5689 333864 343000))
    (semanticdb-table "Ha3MetaInfo.h"
      :major-mode 'c++-mode
      :tags 
        '( ("PLUG_HA3METAINFO_H" variable (:constant-flag t) nil [36 54])
            ("ha3/rank/ScoringProvider.h" include (:system-flag t) nil [56 93])
            ("pluginFramework/interface/IMetaInfo.h" include nil nil [94 142])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165 182]))                  
                :type "int")
                nil [144 183])
            ("Ha3MetaInfo" type
               (:superclasses 
                  ( ("IMetaInfo" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [228 235])
                    ("Ha3MetaInfo" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("HA3_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [252 264])
                            ("provider" variable
                               (:pointer 1
                                :type ("ScoringProvider" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [266 292]))                          
                        :type ("Ha3MetaInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [240 293])
                    ("Ha3MetaInfo" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [298 313])
                    ("private" label nil (reparse-symbol classsubparts) [314 322])
                    ("Ha3MetaInfo" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ha3MetaInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [339 359]))                          
                        :type ("Ha3MetaInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [327 360])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ha3MetaInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [388 408]))                          
                        :type ("Ha3MetaInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [365 409])
                    ("public" label nil (reparse-symbol classsubparts) [410 417])
                    ("size" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [422 450])
                    ("getIndexNames" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [455 511])
                    ("getIndexIds" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("indexid_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [516 568])
                    ("getTermTexts" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [573 628])
                    ("getFieldBoostTable" function
                       (:prototype-flag t
                        :pointer 1
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("FieldBoostTable" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [633 685])
                    ("private" label nil (reparse-symbol classsubparts) [687 695])
                    ("requireQueryTermMetaInfo" function (:type "void") (reparse-symbol classsubparts) [700 877])
                    ("private" label nil (reparse-symbol classsubparts) [879 887])
                    ("_provider" variable
                       (:pointer 1
                        :type ("ScoringProvider" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [906 934])
                    ("_metaInfo" variable (:type ("MetaInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [953 981])
                    ("_metaInfoRequired" variable (:type "bool") (reparse-symbol classsubparts) [986 1036])
                    ("PLUG_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1041 1060]))                  
                :type "class")
                nil [185 1063])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Ha3MetaInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1081 1093]))                  
                :type "int")
                nil [1065 1094])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1115 1132]))                  
                :type "int")
                nil [1096 1133]))          
      :file "Ha3MetaInfo.h"
      :pointmax 1163
      :fsize 1162
      :lastmodtime '(23218 5689 331864 342000)
      :unmatched-syntax '((thing 952 . 953) (thing 951 . 952) (thing 945 . 951) (thing 939 . 945) (thing 905 . 906) (thing 904 . 905) (thing 898 . 904) (thing 892 . 898) (thing 265 . 266) (thing 264 . 265) (thing 258 . 264))
      :lexical-table 
        '(("PLUG_HA3METAINFO_H")
          )
)
    (semanticdb-table "Ha3DataProvider.h"
      :file "Ha3DataProvider.h"
      :fsize 1013
      :lastmodtime '(23218 5689 330864 341000))
    (semanticdb-table "Ha3ResourceReaderApi.h"
      :file "Ha3ResourceReaderApi.h"
      :fsize 799
      :lastmodtime '(23218 5689 332864 343000))
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [67 80])
            ("env" variable nil nil [181 198])
            ("Base" variable nil nil [199 229])
            ("target_online" code nil nil [230 288])
            ("target_offline" code nil nil [289 349])
            ("online_resouces" variable nil nil [352 383])
            ("offline_resouces" variable nil nil [384 475])
            ("env" code nil nil [478 546])
            ("env" code nil nil [547 617])
            ("Libs" variable nil nil [619 628])
            ("Libs" variable nil nil [629 659])
            ("Libs" variable nil nil [660 692])
            ("Export" code nil nil [694 708])
            ("env" code nil nil [710 727]))          
      :file "SConscript"
      :pointmax 728
      :fsize 727
      :lastmodtime '(23225 45597 600073 934000)
      :unmatched-syntax nil)
    (semanticdb-table "Ha3AggResultApi.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("Ha3AggResultApi.h" include nil nil [1 29])
            ("matchdoc/MatchDocAllocator.h" include (:system-flag t) nil [30 69])
            ("matchdoc/Reference.h" include (:system-flag t) nil [70 101])
            ("matchdoc/MatchDoc.h" include (:system-flag t) nil [102 132])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [192 199]))                  
                :type "int")
                nil [174 200])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [201 223])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [240 257])
                    ("" variable (:type ("Ha3AggResultApi" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [258 274]))                  
                :type "int")
                nil [225 275])
            ("INDEX_CHECK" variable (:constant-flag t) nil [285 296])
            ("setGroupExprStr" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [657 672])
                    ("expr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [673 698]))                  
                :type "bool")
                nil [619 790])
            ("getGroupExprStr" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [830 845])
                    ("expr" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [846 865]))                  
                :type "bool")
                nil [792 966])
            ("getAggFuncCount" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1006 1021])
                    ("count" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1022 1039]))                  
                :type "bool")
                nil [968 1141])
            ("getAggExprValueCount" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1186 1201])
                    ("count" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1202 1219]))                  
                :type "bool")
                nil [1143 1326])
            ("getAggFuncName" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1365 1380])
                    ("funcOffset" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1381 1401])
                    ("funcName" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1402 1425]))                  
                :type "bool")
                nil [1328 1533])
            ("addAggResult" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("groupExpr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1570 1599])
                    ("funcName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1633 1661])
                    ("aggMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1694 1744]))                  
                :type "bool")
                nil [1535 2683])
            ("rewriteMultiCountKey" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2728 2743]))                  
                :type "void")
                nil [2685 3186])
            ("rewriteAggExprKey" function
               (:parent "Ha3AggResultApi"
                :arguments 
                  ( ("index" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3228 3243])
                    ("function" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AggExprKeyReplaceFunctor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3284 3325]))                  
                :type "bool")
                nil [3188 3705]))          
      :file "Ha3AggResultApi.cpp"
      :pointmax 3744
      :fsize 3743
      :lastmodtime '(23219 29537 591913 623000)
      :unmatched-syntax '((thing 154 . 172) (thing 154 . 172) (thing 134 . 154) (thing 134 . 154) (thing 3707 . 3725) (thing 3725 . 3743))
      :lexical-table 
        '(("INDEX_CHECK" (spp-arg-list ("index") 296 . 303) . 
              ((IF "if" 347 . 349) (semantic-list "(unlikely(index >= _aggResults.size()))" 349 . 388) (semantic-list "{                                                           \\
        PLUG_LOG(WARN, \"Index Exceeds AggResult's Size!\");      \\
        return false;                                           \\
    }" 413 . 612)))
          )
)
    (semanticdb-table "Ha3AggResultApi.h"
      :file "Ha3AggResultApi.h"
      :fsize 1754
      :lastmodtime '(23218 5689 330864 341000))
    (semanticdb-table "Ha3RefManager.h"
      :file "Ha3RefManager.h"
      :fsize 4789
      :lastmodtime '(23225 45285 954033 797000))
    (semanticdb-table "Ha3MetaInfo.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("Ha3MetaInfo.h" include nil nil [1 25])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48 65]))                  
                :type "int")
                nil [27 66])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85 102])
                    ("" variable (:type ("Ha3MetaInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103 115]))                  
                :type "int")
                nil [70 116])
            ("Ha3MetaInfo" function
               (:constructor-flag t
                :parent "Ha3MetaInfo"
                :arguments 
                  ( ("" variable (:type ("HA3_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143 155])
                    ("provider" variable
                       (:pointer 1
                        :type ("ScoringProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [157 183]))                  
                :type ("Ha3MetaInfo" type (:type "class") nil nil))
                nil [118 243])
            ("Ha3MetaInfo" function
               (:destructor-flag t
                :parent "Ha3MetaInfo"
                :type "void")
                nil [245 276])
            ("size" function
               (:parent "Ha3MetaInfo"
                :constant-flag t
                :type ("size_t" type (:type "class") nil nil))
                nil [277 436])
            ("getIndexNames" function
               (:parent "Ha3MetaInfo"
                :constant-flag t
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [438 841])
            ("getIndexIds" function
               (:parent "Ha3MetaInfo"
                :constant-flag t
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("indexid_t" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [843 1426])
            ("getTermTexts" function
               (:parent "Ha3MetaInfo"
                :constant-flag t
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [1428 1897])
            ("getFieldBoostTable" function
               (:pointer 1
                :parent "Ha3MetaInfo"
                :constant-flag t
                :type ("FieldBoostTable" type (:type "class") nil nil))
                nil [1899 2166])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2187 2204]))                  
                :type "int")
                nil [2168 2205]))          
      :file "Ha3MetaInfo.cpp"
      :pointmax 2206
      :fsize 2205
      :lastmodtime '(23218 5689 331864 342000)
      :unmatched-syntax '((thing 156 . 157) (thing 155 . 156) (thing 149 . 155))))
  :file "!ssd!sdd!git!ha3!turing!ha3_plugins!pluginFramework!ha3!impl!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
