;; Object ha_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha_tools/"
  :tables
  (list
    (semanticdb-table "local_search_starter.py"
      :major-mode 'python-mode
      :tags 
        '( ("re" include nil nil [20 29])
            ("sys" include nil nil [30 40])
            ("os" include nil nil [41 50])
            ("copy" include nil nil [51 62])
            ("socket" include nil nil [63 76])
            ("optparse" include nil nil [77 110])
            ("tempfile" include nil nil [111 126])
            ("subprocess" include nil nil [127 144])
            ("json" include nil nil [145 156])
            ("time" include nil nil [157 168])
            ("socket" include nil nil [169 182])
            ("LocalSearchStartCmd" type
               (:superclasses ("object")
                :members 
                  ( ("'''
local_search_starter.py
    {-i index_dir           | --index=index_dir}
    {-c config_dir          | --config=config_dir}
    {-p port_start          | --prot=prot_start}
    {-z zone_name           | --zone=zone_name}
    {-b binary_path         | --binary=binary_path}
    {-t timeout             | --timeout=timeout}
    {-l preload             | --preload=preload}
    {-g agg_name            | --agg=agg_name}

options:
    -i index_dir,     --index=index_dir              : required, index dir
    -c config_dir,    --config=config_dir            : required, config path,
    -p port_list,     --port=port_list               : optional, port list, http port is first port, arpc port is second port, default 12000, if only one port is designed, next port is start +1 (total port may use start + n*3 )
    -z zone_name,     --zone=zone_name               : optional, special zone to start
    -j auxiliary_table, --tables=auxiliary_table     : optional, special auxiliary table to load
    -b binary_path,   --binary=binary_path           : optional, special binary path to load
    -t timeout,       --timeout=timeout              : optional, special timeout load [defalut 300]
    -l preload,       --preload=preload              : optional, special lib to load
    -s serviceName,   --serviceName=serviceName      : optional, serviceName [default ha3_suez_local_search]
    -a amonPort,      --amonPort=amonPort            : optional, amon port [default 10086]
    -g agg_name,      --aggName=aggName              : optional, aggName [default default_agg_4]

examples:
    ./local_search_starter.py -i /path/to/index -c path/to/config
    ./local_search_starter.py -i /path/to/index -c path/to/config -p 12345
    ./local_search_starter.py -i /path/to/index -c path/to/config -p 12345,22345,32345
    ./local_search_starter.py -i /path/to/index -c path/to/config -z zone1,zone2 -j table1:t1,t3;table2:t3
    '''" code nil (reparse-symbol indented_block_body) [223 2147])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2181 2227]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2166 2170]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2153 2228])
                    ("usage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2243 2247]))                          )
                        (reparse-symbol indented_block_body) [2233 2302])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2322 2326]))                          )
                        (reparse-symbol indented_block_body) [2307 3935])
                    ("parseParams" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3956 3960])
                            ("optionList" variable nil (reparse-symbol function_parameters) [3962 3972]))                          )
                        (reparse-symbol indented_block_body) [3940 4333])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4363 4367])
                            ("options" variable nil (reparse-symbol function_parameters) [4369 4376]))                          )
                        (reparse-symbol indented_block_body) [4338 4694])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4714 4718])
                            ("options" variable nil (reparse-symbol function_parameters) [4720 4727]))                          )
                        (reparse-symbol indented_block_body) [4699 9622])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9635 9639]))                          )
                        (reparse-symbol indented_block_body) [9627 9966])
                    ("stopAll" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9983 9987])
                            ("timeout" variable nil (reparse-symbol function_parameters) [9989 9996]))                          )
                        (reparse-symbol indented_block_body) [9971 11306])
                    ("startSearcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11329 11333]))                          )
                        (reparse-symbol indented_block_body) [11311 11712])
                    ("startQrs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11730 11734]))                          )
                        (reparse-symbol indented_block_body) [11717 11927])
                    ("curl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11941 11945])
                            ("address" variable nil (reparse-symbol function_parameters) [11947 11954])
                            ("method" variable nil (reparse-symbol function_parameters) [11956 11962])
                            ("request" variable nil (reparse-symbol function_parameters) [11964 11971]))                          )
                        (reparse-symbol indented_block_body) [11932 12448])
                    ("createRuntimedirLink" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12478 12482])
                            ("zoneName" variable nil (reparse-symbol function_parameters) [12484 12492])
                            ("partId" variable nil (reparse-symbol function_parameters) [12494 12500]))                          )
                        (reparse-symbol indented_block_body) [12453 13019])
                    ("createConfigLink" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13045 13049])
                            ("zoneName" variable nil (reparse-symbol function_parameters) [13051 13059])
                            ("prefix" variable nil (reparse-symbol function_parameters) [13061 13067])
                            ("bizName" variable nil (reparse-symbol function_parameters) [13069 13076])
                            ("config" variable nil (reparse-symbol function_parameters) [13078 13084]))                          )
                        (reparse-symbol indented_block_body) [13024 13865])
                    ("_loadQrsTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13889 13893])
                            ("timeout" variable nil (reparse-symbol function_parameters) [13895 13902]))                          )
                        (reparse-symbol indented_block_body) [13870 15464])
                    ("_loadSearcherTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15493 15497])
                            ("targetInfos" variable nil (reparse-symbol function_parameters) [15499 15510])
                            ("timeout" variable nil (reparse-symbol function_parameters) [15512 15519]))                          )
                        (reparse-symbol indented_block_body) [15469 18813])
                    ("_startQrs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18832 18836]))                          )
                        (reparse-symbol indented_block_body) [18818 20549])
                    ("_startSearcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20573 20577])
                            ("targetInfos" variable nil (reparse-symbol function_parameters) [20579 20590]))                          )
                        (reparse-symbol indented_block_body) [20554 22763])
                    ("_getSearcherPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22793 22797])
                            ("pos" variable nil (reparse-symbol function_parameters) [22799 22802]))                          )
                        (reparse-symbol indented_block_body) [22768 22848])
                    ("_getQrsPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22873 22877]))                          )
                        (reparse-symbol indented_block_body) [22853 22917])
                    ("_genPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22939 22943])
                            ("count" variable nil (reparse-symbol function_parameters) [22945 22950]))                          )
                        (reparse-symbol indented_block_body) [22922 23463])
                    ("_getArpcPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23489 23493]))                          )
                        (reparse-symbol indented_block_body) [23468 23657])
                    ("_getHttpArpcPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23687 23691]))                          )
                        (reparse-symbol indented_block_body) [23662 23871])
                    ("_genTargetInfos" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23896 23900])
                            ("zoneNames" variable nil (reparse-symbol function_parameters) [23902 23911]))                          )
                        (reparse-symbol indented_block_body) [23876 26275])
                    ("_getMaxGenerationId" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26304 26308])
                            ("indexPath" variable nil (reparse-symbol function_parameters) [26310 26319])
                            ("tableName" variable nil (reparse-symbol function_parameters) [26321 26330]))                          )
                        (reparse-symbol indented_block_body) [26280 26542])
                    ("_getMaxIndexVersion" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26571 26575])
                            ("path" variable nil (reparse-symbol function_parameters) [26577 26581])
                            ("clusterName" variable nil (reparse-symbol function_parameters) [26583 26594])
                            ("generationId" variable nil (reparse-symbol function_parameters) [26596 26608])
                            ("partition" variable nil (reparse-symbol function_parameters) [26610 26619]))                          )
                        (reparse-symbol indented_block_body) [26547 26906])
                    ("_getPartitions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26930 26934])
                            ("path" variable nil (reparse-symbol function_parameters) [26936 26940])
                            ("clusterName" variable nil (reparse-symbol function_parameters) [26942 26953])
                            ("generationId" variable nil (reparse-symbol function_parameters) [26955 26967]))                          )
                        (reparse-symbol indented_block_body) [26911 27297])
                    ("_getNeedStartZoneName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27328 27332]))                          )
                        (reparse-symbol indented_block_body) [27302 27657])
                    ("getDefunctPids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27681 27685]))                          )
                        (reparse-symbol indented_block_body) [27662 28013])
                    ("getPids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28030 28034])
                            ("port" variable nil (reparse-symbol function_parameters) [28036 28040]))                          )
                        (reparse-symbol indented_block_body) [28018 28378])
                    ("getUnusedPort" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28401 28405])
                            ("lackPort" variable nil (reparse-symbol function_parameters) [28407 28415]))                          )
                        (reparse-symbol indented_block_body) [28383 28761]))                  
                :type "class")
                nil [184 28761])
            ("if" code nil nil [28762 29101]))          
      :file "local_search_starter.py"
      :pointmax 29101
      :fsize 29100
      :lastmodtime '(23495 15266 696103 0)
      :unmatched-syntax nil))
  :file "!ha3_develop!search_test!temp!turing_ha3_compile!source_code!_external!usr!local!lib!python!site-packages!ha_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
