;; Object proxy/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "proxy/"
  :tables
  (list
    (semanticdb-table "ProxyServiceImpl.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("string" include (:system-flag t) nil [1 18])
            ("arpc/SyncClosure.h" include nil nil [19 48])
            ("multi_call/interface/SyncClosure.h" include nil nil [49 94])
            ("arpc/ANetRPCController.h" include nil nil [95 130])
            ("suez/turing/proto/Search.pb.h" include nil nil [131 171])
            ("suez/turing/common/Location.h" include nil nil [172 212])
            ("suez/turing/common/NodeDefine.h" include nil nil [213 255])
            ("basic_ops/variant/KvPairVariant.h" include nil nil [256 300])
            ("basic_ops/variant/RawTensorVariant.h" include nil nil [301 348])
            ("be_turing/service/ServiceUtil.h" include nil nil [349 391])
            ("be_turing/service/proxy/ProxyBizRequest.h" include nil nil [392 444])
            ("be_turing/service/proxy/ProxyServiceImpl.h" include nil nil [445 498])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [516 520]))                  
                :type "int")
                nil [500 521])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("suez" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [538 543]))                  
                :type "int")
                nil [522 544])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("arpc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [561 566]))                  
                :type "int")
                nil [545 567])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("tensorflow" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [584 595]))                  
                :type "int")
                nil [568 596])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("suez::turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [613 626]))                  
                :type "int")
                nil [597 627])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("be::service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 656]))                  
                :type "int")
                nil [628 657])
            ("USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("google::protobuf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [674 691]))                  
                :type "int")
                nil [658 692])
            ("BEGIN_BE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [713 719]))                  
                :type "int")
                nil [694 720])
            ("BE_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [734 740])
                    ("" variable (:type ("ProxyServiceImpl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [741 758]))                  
                :type "int")
                nil [721 759])
            ("ProxyServiceImpl" function
               (:constructor-flag t
                :parent "ProxyServiceImpl"
                :type ("ProxyServiceImpl" type (:type "class") nil nil))
                nil [760 799])
            ("ProxyServiceImpl" function
               (:destructor-flag t
                :parent "ProxyServiceImpl"
                :type "void")
                nil [801 841])
            ("serviceAvailable" function
               (:parent "ProxyServiceImpl"
                :arguments 
                  ( ("path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [883 900]))                  
                :type "bool")
                nil [843 966])
            ("sapSearch" function
               (:parent "ProxyServiceImpl"
                :arguments 
                  ( ("context" variable
                       (:reference 1
                        :type ("sap::ServerWorkerContext" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1007 1041]))                  
                :type ("sap::ret_t" type (:type "class") nil nil))
                nil [968 3387])
            ("END_BE_NAMESPACE" function
               (:prototype-flag t
                :type "int")
                nil [3389 3408]))          
      :file "ProxyServiceImpl.cpp"
      :pointmax 3409
      :fsize 3428
      :lastmodtime '(23348 16946 400548 211000)
      :unmatched-syntax '((thing 514 . 515) (thing 515 . 516) (thing 536 . 537) (thing 537 . 538) (thing 559 . 560) (thing 560 . 561) (thing 582 . 583) (thing 583 . 584) (thing 611 . 612) (thing 612 . 613) (thing 642 . 643) (thing 643 . 644) (thing 672 . 673) (thing 673 . 674)))
    (semanticdb-table "ProxyBizRequest.h"
      :file "ProxyBizRequest.h"
      :fsize 1434
      :lastmodtime '(23337 62930 990122 229000))
    (semanticdb-table "ProxyServiceImpl.h"
      :file "ProxyServiceImpl.h"
      :fsize 776
      :lastmodtime '(23337 62930 990122 229000)))
  :file "!ssd!sdd!git!turing_be!bak!basic_ops_compile!be_turing!build!release64!be_turing!service!proxy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
