;; Object Tool/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Tool/"
  :tables
  (list
    (semanticdb-table "as.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"SCons.Tool.as

Tool-specific initialization for as, the generic Posix assembler.

There normally shouldn't be any need to import this module directly.
It will usually be imported through the generic SCons.Tool.Tool()
selection method.

\"\"\"" code nil nil [1 243])
            ("__revision__" variable nil nil [1358 1459])
            ("SCons.Defaults" include nil nil [1461 1482])
            ("SCons.Tool" include nil nil [1483 1500])
            ("SCons.Util" include nil nil [1501 1518])
            ("assemblers" variable nil nil [1520 1539])
            ("ASSuffixes" variable nil nil [1541 1576])
            ("ASPPSuffixes" variable nil nil [1577 1615])
            ("if" code nil nil [1616 1735])
            ("generate" function
               (:documentation "Add Builders and construction variables for as to an Environment."
                :arguments 
                  ( ("env" variable nil (reparse-symbol function_parameters) [1749 1752]))                  )
                nil [1736 2806])
            ("exists" function (:arguments 
              ( ("env" variable nil (reparse-symbol function_parameters) [2818 2821]))              ) nil [2807 2858]))          
      :file "as.py"
      :pointmax 2967
      :fsize 2966
      :lastmodtime '(22281 18982 0 0)
      :unmatched-syntax nil))
  :file "!usr!lib!scons!SCons!Tool!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
