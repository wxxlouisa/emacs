;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "CommonDef.h"
      :major-mode 'c++-mode
      :tags 
        '( ("PLUG_COMMONDEF_H" variable (:constant-flag t) nil [34 50])
            ("limits" include (:system-flag t) nil [52 69])
            ("climits" include (:system-flag t) nil [70 88])
            ("cstring" include (:system-flag t) nil [89 107])
            ("string" include (:system-flag t) nil [108 125])
            ("map" include (:system-flag t) nil [126 140])
            ("tr1/memory" include (:system-flag t) nil [141 162])
            ("autil/CommonMacros.h" include (:system-flag t) nil [163 194])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [195 227])
            ("autil/ConstString.h" include (:system-flag t) nil [228 258])
            ("autil/MultiValueType.h" include (:system-flag t) nil [259 292])
            ("amonitor/client/MetricProvider.h" include (:system-flag t) nil [293 336])
            ("matchdoc/ValueType.h" include (:system-flag t) nil [337 368])
            ("matchdoc/Trait.h" include (:system-flag t) nil [369 396])
            ("BEGIN_PLUG_NAMESPACE" variable (:constant-flag t) nil [437 457])
            ("indexlib/indexlib.h" include (:system-flag t) nil [397 427])
            ("BEGIN_PLUG_NAMESPACE" variable (:constant-flag t) nil [437 457])
            ("END_PLUG_NAMESPACE" variable (:constant-flag t) nil [505 523])
            ("USE_PLUG_NAMESPACE" variable (:constant-flag t) nil [540 558])
            ("PLUG_NS" variable (:constant-flag t) nil [599 606])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [624 679])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [688 703])
            ("Ptr" variable (:type "int") nil [742 746])
            ("MULTI_VALUE_SEPARATOR_CHAR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "'\\x1D'"
                :type "char")
                nil [748 802])
            ("DOC_SEPARATOR_STR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [863 912])
            ("EMPTY_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [913 956])
            ("RANK_SCORE2" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"__RANK_SCORE2__\""
                :type ("std::string" type (:type "class") nil nil))
                nil [957 1014])
            ("KEY_CREATE_RANK_SORT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"create_rank_sort\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1015 1082])
            ("KEY_CREATE_QUERY" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"create_query\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1083 1142])
            ("QUERY_KEY" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"__origin_query__\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1143 1199])
            ("STATIC_ASSERT" variable (:constant-flag t) nil [1209 1222])
            ("ha_plugin" type
               (:members 
                  ( ("plugin_framework" type
                       (:members 
                          ( ("VariableType" type
                               (:typedef ("matchdoc::BuiltinType" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1404 1447])
                            ("IParameterApi" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [1449 1469])
                            ("IResourceReaderApi" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [1470 1495])
                            ("AppInitWrapper" type
                               (:members 
                                  ( ("AppInitWrapper" function
                                       (:constructor-flag t
                                        :type ("AppInitWrapper" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [1524 1635])
                                    ("parameter" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IParameterApi" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1640 1672])
                                    ("resourceReader" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("IResourceReaderApi" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1677 1718])
                                    ("metricProvider" variable
                                       (:pointer 1
                                        :type ("amonitor::client::MetricProvider" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1723 1772]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1496 1775])
                            ("score_t" type
                               (:typedef ("double")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1875 1898])
                            ("fieldboost_t" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1899 1928])
                            ("indexid_t" type
                               (:typedef ("uint32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1929 1956])
                            ("fieldid_t" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1957 1983])
                            ("summaryfieldid_t" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1984 2017])
                            ("fieldmap_t" type
                               (:typedef ("uint8_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2018 2045])
                            ("docpayload_t" type
                               (:typedef ("uint16_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2046 2076])
                            ("pos_t" type
                               (:typedef ("uint32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2077 2100])
                            ("docid_t" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2101 2125])
                            ("fieldbitmap_t" type
                               (:typedef ("uint32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2126 2157])
                            ("SubDocDisplayType" type
                               (:members 
                                  ( ("SUB_DOC_DISPLAY_NO" variable
                                       (:constant-flag t
                                        :default-value (2252 2253)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2261 2283])
                                    ("SUB_DOC_DISPLAY_FLAT" variable
                                       (:constant-flag t
                                        :default-value (2282 2283)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2289 2313])
                                    ("SUB_DOC_DISPLAY_GROUP" variable
                                       (:constant-flag t
                                        :default-value (2313 2314)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2319 2344]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [2232 2347])
                            ("HaCompressType" type
                               (:members 
                                  ( ("INVALID_COMPRESS_TYPE" variable
                                       (:constant-flag t
                                        :default-value (2369 2370)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2375 2400])
                                    ("NO_COMPRESS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2406 2418])
                                    ("Z_SPEED_COMPRESS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2423 2440])
                                    ("Z_DEFAULT_COMPRESS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2445 2464])
                                    ("SNAPPY" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2469 2477]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [2349 2478])
                            ("FetchSummaryType" type
                               (:members 
                                  ( ("BY_UNKNOWN" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2508 2519])
                                    ("BY_DOCID" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2524 2533])
                                    ("BY_PK" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2538 2544])
                                    ("BY_RAWPK" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2549 2559]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [2480 2560])
                            ("AtomicSyntaxExprType" type
                               (:members 
                                  ( ("UNKNOWN" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2594 2602])
                                    ("INTEGER_VALUE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2607 2621])
                                    ("FLOAT_VALUE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2626 2638])
                                    ("STRING_VALUE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2643 2656])
                                    ("ATTRIBUTE_NAME" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2661 2676]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [2562 2679])
                            ("TYPE_CONVERT_HELPER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2723 2742])
                            ("matchdoc::bt_unknown" variable (:type "int") (reparse-symbol namespacesubparts) [2859 2887])
                            ("matchdoc::bt_int8" variable (:type "int") (reparse-symbol namespacesubparts) [2889 2914])
                            ("matchdoc::bt_int16" variable (:type "int") (reparse-symbol namespacesubparts) [2916 2942])
                            ("matchdoc::bt_int32" variable (:type "int") (reparse-symbol namespacesubparts) [2944 2970])
                            ("matchdoc::bt_int64" variable (:type "int") (reparse-symbol namespacesubparts) [2972 2998])
                            ("matchdoc::bt_uint8" variable (:type "int") (reparse-symbol namespacesubparts) [3000 3026])
                            ("matchdoc::bt_uint16" variable (:type "int") (reparse-symbol namespacesubparts) [3028 3055])
                            ("matchdoc::bt_uint32" variable (:type "int") (reparse-symbol namespacesubparts) [3057 3084])
                            ("matchdoc::bt_uint64" variable (:type "int") (reparse-symbol namespacesubparts) [3086 3113])
                            ("matchdoc::bt_float" variable (:type "int") (reparse-symbol namespacesubparts) [3115 3141])
                            ("matchdoc::bt_double" variable (:type "int") (reparse-symbol namespacesubparts) [3143 3170])
                            ("matchdoc::bt_string" variable (:type "int") (reparse-symbol namespacesubparts) [3172 3199])
                            ("matchdoc::bt_bool" variable (:type "int") (reparse-symbol namespacesubparts) [3201 3226])
                            ("matchdoc::bt_hash_128" variable (:type "int") (reparse-symbol namespacesubparts) [3228 3257])
                            ("matchdoc::bt_user_type1" variable (:type "int") (reparse-symbol namespacesubparts) [3314 3338])
                            ("matchdoc::bt_max" variable (:type "int") (reparse-symbol namespacesubparts) [3390 3407])
                            ("LevelQueryType" type
                               (:members 
                                  ( ("ONLY_FIRST_LEVEL" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3463 3480])
                                    ("CHECK_FIRST_LEVEL" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3485 3503])
                                    ("BOTH_LEVEL" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3508 3519]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [3437 3522]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1364 3545]))                  
                :type "namespace")
                nil [1364 3545]))          
      :file "CommonDef.h"
      :pointmax 3656
      :fsize 3681
      :lastmodtime '(23389 21335 215273 61000)
      :unmatched-syntax '((thing 1402 . 1403) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2859 . 2887) (thing 2887 . 2888) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2889 . 2914) (thing 2914 . 2915) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2916 . 2942) (thing 2942 . 2943) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2944 . 2970) (thing 2970 . 2971) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2972 . 2998) (thing 2998 . 2999) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3000 . 3026) (thing 3026 . 3027) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3028 . 3055) (thing 3055 . 3056) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3057 . 3084) (thing 3084 . 3085) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3086 . 3113) (thing 3113 . 3114) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3115 . 3141) (thing 3141 . 3142) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3143 . 3170) (thing 3170 . 3171) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3172 . 3199) (thing 3199 . 3200) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3201 . 3226) (thing 3226 . 3227) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3228 . 3257) (thing 3257 . 3258) (thing 3260 . 3266) (thing 3267 . 3272) (thing 3273 . 3281) (thing 3281 . 3282) (thing 3282 . 3283) (thing 3283 . 3294) (thing 3295 . 3311) (thing 3312 . 3313) (thing 3339 . 3345) (thing 3346 . 3351) (thing 3352 . 3360) (thing 3360 . 3361) (thing 3361 . 3362) (thing 3362 . 3373) (thing 3374 . 3387) (thing 3388 . 3389) (thing 3545 . 3561) (thing 3561 . 3562) (thing 3562 . 3563) (thing 3565 . 3590) (thing 3590 . 3591) (thing 3591 . 3596) (thing 3596 . 3597) (thing 3597 . 3598) (thing 3598 . 3612) (thing 3612 . 3613) (thing 3613 . 3616) (thing 3616 . 3617) (thing 3617 . 3618) (thing 3618 . 3624) (thing 3624 . 3625) (thing 3625 . 3626) (thing 3626 . 3627))
      :lexical-table 
        '(("PLUG_NS" (spp-arg-list ("x") 576 . 579) . 
              ((symbol "ha_plugin" 580 . 589) (punctuation ":" 589 . 590) (punctuation ":" 590 . 591) (symbol "x" 591 . 592)))
          ("STATIC_ASSERT" (spp-arg-list ("X") 1194 . 1197) . ((punctuation ";" 1198 . 1199)))
          ("USE_PLUG_NAMESPACE" (spp-arg-list ("x") 528 . 531) . 
              ((USING "using" 532 . 537) (NAMESPACE "namespace" 538 . 547) (symbol "ha_plugin" 548 . 557) (punctuation ":" 557 . 558) (punctuation ":" 558 . 559) (symbol "x" 559 . 560)))
          ("PLUG_COMMONDEF_H")
          ("BEGIN_PLUG_NAMESPACE" (spp-arg-list ("x") 454 . 457) . 
              ((NAMESPACE "namespace" 458 . 467) (symbol "ha_plugin" 468 . 477) (open-paren "{" 478 . 479) (NAMESPACE "namespace" 480 . 489) (symbol "x" 490 . 491) (open-paren "{" 492 . 493)))
          ("HA3_TYPEDEF_PTR" (spp-arg-list ("x") 673 . 676) . 
              ((TYPEDEF "typedef" 677 . 684) (symbol "std" 685 . 688) (punctuation ":" 688 . 689) (punctuation ":" 689 . 690) (symbol "tr1" 690 . 693) (punctuation ":" 693 . 694) (punctuation ":" 694 . 695) (symbol "shared_ptr" 695 . 705) (punctuation "<" 705 . 706) (symbol "x" 706 . 707) (punctuation ">" 707 . 708) (spp-symbol-merge ((symbol "x" 709 . 710) (symbol "Ptr" 712 . 715)) 709 . 715) (punctuation ";" 715 . 716)))
          ("END_PLUG_NAMESPACE" (spp-arg-list ("x") 493 . 496) . ((close-paren "}" 497 . 498) (close-paren "}" 499 . 500)))
          )
))
  :file "!ssd!sdd!git!test!turing_ha3_compile!ha3_plugins!pluginFramework!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
