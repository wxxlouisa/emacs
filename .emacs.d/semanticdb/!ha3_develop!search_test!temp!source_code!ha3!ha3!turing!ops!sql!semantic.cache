;; Object sql/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sql/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("source" variable nil nil [57 79])
            ("protoSource" variable nil nil [80 112])
            ("env" code nil nil [114 210])
            ("env" code nil nil [212 302])
            ("env" code nil nil [304 321]))          
      :file "SConscript"
      :pointmax 322
      :fsize 321
      :lastmodtime '(23662 15963 653488 340000)
      :unmatched-syntax nil)
    (semanticdb-table "OpDefs.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/op.h" include nil nil [1 42])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [43 97])
            ("tensorflow/core/framework/common_shape_fns.h" include nil nil [98 153])
            ("tensorflow/core/lib/core/errors.h" include nil nil [154 198])
            ("ha3/common.h" include (:system-flag t) nil [199 222])
            ("ha3/isearch.h" include (:system-flag t) nil [223 247])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [249 276])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [298 305]))                  
                :type "int")
                nil [278 306])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [361 386])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("SetShapeFn" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [388 388]))          
      :file "OpDefs.cpp"
      :pointmax 416
      :fsize 415
      :lastmodtime '(23662 15963 652488 340000)
      :unmatched-syntax '((thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 388 . 388) (thing 368 . 384) (thing 360 . 361) (thing 338 . 359) (thing 339 . 358) (thing 333 . 338) (thing 332 . 333) (thing 319 . 331) (thing 320 . 330) (thing 308 . 319)))
    (semanticdb-table "RunSqlOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("autil/Log.h" include (:system-flag t) nil [1 23])
            ("tensorflow/core/framework/op_kernel.h" include (:system-flag t) nil [24 72])
            ("iostream" include (:system-flag t) nil [73 92])
            ("ha3/util/Log.h" include (:system-flag t) nil [93 118])
            ("ha3/common/ha3_op_common.h" include nil nil [119 156])
            ("ha3/turing/variant/SqlTableVariant.h" include (:system-flag t) nil [157 204])
            ("ha3/sql/resource/SqlBizResource.h" include (:system-flag t) nil [205 249])
            ("ha3/sql/resource/SqlQueryResource.h" include (:system-flag t) nil [250 296])
            ("ha3/sql/data/TensorData.h" include (:system-flag t) nil [297 333])
            ("suez/turing/common/SessionResource.h" include nil nil [334 381])
            ("multi_call/interface/SearchService.h" include nil nil [382 429])
            ("ha3/turing/ops/sql/proto/SqlSearch.pb.h" include nil nil [430 480])
            ("navi/engine/Data.h" include nil nil [481 510])
            ("navi/engine/Graph.h" include nil nil [511 541])
            ("navi/engine/GraphPort.h" include nil nil [542 576])
            ("navi/engine/Engine.h" include nil nil [577 608])
            ("navi/proto/GraphDef.pb.h" include nil nil [609 644])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [646 666])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [667 694])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [695 724])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [725 757])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [758 780])
            ("navi" using (:type ("navi" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [781 802])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [822 826]))                  
                :type "int")
                nil [804 827])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [848 855]))                  
                :type "int")
                nil [828 856])
            ("RunSqlOp" type
               (:superclasses 
                  ( ("tensorflow::OpKernel" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [905 912])
                    ("RunSqlOp" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("tensorflow::OpKernelConstruction" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [935 973]))                          
                        :type ("RunSqlOp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [926 1009])
                    ("public" label nil (reparse-symbol classsubparts) [1010 1017])
                    ("private" label nil (reparse-symbol classsubparts) [2909 2917])
                    ("prepareInputs" function
                       (:arguments 
                          ( ("graphInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sql::GraphInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2941 2973])
                            ("pool" variable
                               (:pointer 1
                                :type ("Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2997 3008])
                            ("ports" variable
                               (:reference 1
                                :type ("navi::GraphPorts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3009 3033]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2922 3511])
                    ("prepareOutputs" function
                       (:arguments 
                          ( ("graphInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("sql::GraphInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3541 3573])
                            ("ports" variable
                               (:reference 1
                                :type ("navi::GraphPorts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3574 3598]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3521 3810])
                    ("generateResponseStr" function
                       (:arguments 
                          ( ("outputs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("navi::GraphPorts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3841 3873])
                            ("pool" variable
                               (:pointer 1
                                :type ("Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3874 3885])
                            ("responseStr" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3886 3906]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3816 4366])
                    ("dataToTensorProto" function
                       (:arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("navi::DataPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4395 4421])
                            ("pool" variable
                               (:pointer 1
                                :type ("Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4422 4433])
                            ("tensorProto" variable
                               (:reference 1
                                :type ("TensorProto" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4434 4459]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4372 4881])
                    ("tensorProtoToData" function
                       (:arguments 
                          ( ("tensorProto" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TensorProto" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4910 4941])
                            ("pool" variable
                               (:pointer 1
                                :type ("Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4942 4953])
                            ("data" variable
                               (:reference 1
                                :type ("navi::DataPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4954 4974]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4887 5160])
                    ("private" label nil (reparse-symbol classsubparts) [5162 5170])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [5175 5193]))                  
                :type "class")
                nil [858 5197])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5213 5220])
                    ("" variable (:type ("RunSqlOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5221 5230]))                  
                :type "int")
                nil [5199 5231])
            ("REGISTER_KERNEL_BUILDER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5257 5273])
                    ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5299 5317])
                    ("" variable (:type ("RunSqlOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5343 5352]))                  
                :type "int")
                nil [5233 5353])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5373 5380]))                  
                :type "int")
                nil [5355 5381]))          
      :file "RunSqlOp.cpp"
      :pointmax 5382
      :fsize 5381
      :lastmodtime '(23671 16290 370162 777000)
      :unmatched-syntax '((thing 1078 . 2908) (thing 1069 . 1077) (thing 1034 . 1068) (thing 1027 . 1034) (thing 1022 . 1026) (thing 917 . 925) (thing 5261 . 5273) (thing 5298 . 5299) (thing 5305 . 5317))))
  :file "!ha3_develop!search_test!temp!source_code!ha3!ha3!turing!ops!sql!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
