;; Object unittest/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unittest/"
  :tables
  (list
    (semanticdb-table "unittest.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__SUEZ_UNITTEST_H" variable (:constant-flag t) nil [35 52])
            ("string" include (:system-flag t) nil [54 71])
            ("typeinfo" include (:system-flag t) nil [72 91])
            ("execinfo.h" include (:system-flag t) nil [92 113])
            ("dlfcn.h" include (:system-flag t) nil [114 132])
            ("unistd.h" include (:system-flag t) nil [133 152])
            ("GTEST_USE_OWN_TR1_TUPLE" variable (:constant-flag t) nil [161 184])
            ("gtest/gtest.h" include (:system-flag t) nil [187 211])
            ("gmock/gmock.h" include (:system-flag t) nil [212 236])
            ("dirent.h" include (:system-flag t) nil [237 256])
            ("assert.h" include (:system-flag t) nil [257 276])
            ("sys/mman.h" include (:system-flag t) nil [277 298])
            ("errno.h" include (:system-flag t) nil [299 317])
            ("string.h" include (:system-flag t) nil [318 337])
            ("private" variable (:constant-flag t) nil [347 354])
            ("protected" variable (:constant-flag t) nil [370 379])
            ("testing::_" using (:type ("testing::_" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [388 405])
            ("testing::Return" using (:type ("testing::Return" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [406 428])
            ("testing::Throw" using (:type ("testing::Throw" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [429 450])
            ("testing::SetArgReferee" using (:type ("testing::SetArgReferee" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [451 480])
            ("testing::DoAll" using (:type ("testing::DoAll" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [481 502])
            ("testing::Invoke" using (:type ("testing::Invoke" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [503 525])
            ("TESTBASE" type
               (:superclasses 
                  ( ("testing::Test" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [567 574])
                    ("TESTBASE" function
                       (:constructor-flag t
                        :type ("TESTBASE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [579 822])
                    ("TESTBASE" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [827 849])
                    ("public" label nil (reparse-symbol classsubparts) [850 857])
                    ("SetUp" function (:type "void") (reparse-symbol classsubparts) [862 1000])
                    ("TearDown" function (:type "void") (reparse-symbol classsubparts) [1006 1121])
                    ("public" label nil (reparse-symbol classsubparts) [1123 1130])
                    ("setUp" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1135 1158])
                    ("tearDown" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1163 1189])
                    ("GET_CLASS_NAME" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1195 1442])
                    ("GET_TEMPLATE_DATA_PATH" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1448 1523])
                    ("TEST_ROOT_PATH" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1528 1595])
                    ("GET_TEST_DATA_PATH" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1600 1692])
                    ("public" label nil (reparse-symbol classsubparts) [1693 1701])
                    ("testDataPathSetup" function (:type "void") (reparse-symbol classsubparts) [1706 2364])
                    ("testDataPathTearDown" function (:type "void") (reparse-symbol classsubparts) [2370 2436])
                    ("deleteExistDataPath" function (:type "void") (reparse-symbol classsubparts) [2442 2694])
                    ("public" label nil (reparse-symbol classsubparts) [2696 2704])
                    ("isFile" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2721 2745]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2709 2950])
                    ("isDir" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2966 2990]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2955 3195])
                    ("remove" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3213 3237]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3201 4466])
                    ("public" label nil (reparse-symbol classsubparts) [4468 4476])
                    ("_testRootPath" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4481 4507])
                    ("_testDataPath" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4512 4538]))                  
                :type "class")
                nil [527 4541])
            ("ASSERT_CAST_AND_RETURN" variable (:constant-flag t) nil [4551 4573])
            ("GET_NEXT_FUNC" variable (:constant-flag t) nil [6177 6190]))          
      :file "unittest.h"
      :pointmax 7663
      :fsize 7662
      :lastmodtime '(23290 18619 973285 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("GET_NEXT_FUNC" (spp-arg-list ("func_type") 6190 . 6201) . ((semantic-list "({                                                          \\
        const size_t max_depth = 1;                             \\
        void *stack_addrs[max_depth];                           \\
                                                                \\
        size_t stack_depth = backtrace(stack_addrs, max_depth);         \\
        assert(stack_depth == 1); (void) stack_depth;                   \\
        char **stack_strings = backtrace_symbols(stack_addrs, max_depth); \\
                                                                        \\
        std::string stackStr = stack_strings[0];                        \\
        size_t start = stackStr.find('(');                              \\
        assert(start != std::string::npos);                             \\
        stackStr = stackStr.substr(start + 1);                          \\
        size_t end = stackStr.find('+');                                \\
        assert(end != std::string::npos);                               \\
        std::string funcSym = stackStr.substr(0, end);                  \\
        free(stack_strings);                                            \\
        func_type func = reinterpret_cast<func_type>(dlsym(RTLD_NEXT, funcSym.c_str())); \\
        assert(func);                                                   \\
        func;                                                           \\
    })" 6239 . 7634)))
          ("__SUEZ_UNITTEST_H")
          ("GTEST_USE_OWN_TR1_TUPLE" . ((number "0" 185 . 186)))
          ("private" . ((PUBLIC "public" 355 . 361)))
          ("ASSERT_CAST_AND_RETURN" (spp-arg-list ("expectType" "pointer") 4573 . 4594) . ((semantic-list "({                                                                  \\
        typeof(pointer) p = pointer;                                    \\
        ASSERT_TRUE(p) << \"pointer is NULL\";                            \\
        expectType *castResult__ = dynamic_cast<expectType*>(p);        \\
        ASSERT_TRUE(castResult__) << \"Expect: \"#expectType << \" Actual: \" << typeid(*p).name(); \\
        castResult__;                                                   \\
    })" 4621 . 5091)))
          ("protected" . ((PUBLIC "public" 380 . 386)))
          )
))
  :file "!ssd!sdd!git!ops!basic_ops_compile!_external!usr!local!include!unittest!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
