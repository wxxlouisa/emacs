;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "isearch.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_H_" variable (:constant-flag t) nil [28 38])
            ("stdint.h" include (:system-flag t) nil [40 59])
            ("map" include (:system-flag t) nil [60 74])
            ("string" include (:system-flag t) nil [75 92])
            ("indexlib/indexlib.h" include (:system-flag t) nil [93 123])
            ("tr1/memory" include (:system-flag t) nil [124 145])
            ("autil/LongHashValue.h" include (:system-flag t) nil [146 178])
            ("ha3/config.h" include (:system-flag t) nil [179 202])
            ("matchdoc/ValueType.h" include (:system-flag t) nil [203 234])
            ("primarykey_t" type
               (:typedef ("autil::uint128_t" type (:type "class") nil nil)
                :type "typedef")
                nil [236 274])
            ("fieldboost_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [276 305])
            ("fieldbitmap_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [307 338])
            ("INVALID_FIELDBITMAP" variable
               (:constant-flag t
                :default-value "(fieldbitmap_t)0xFFFFFFFF"
                :type ("fieldbitmap_t" type (:type "class") nil nil))
                nil [339 407])
            ("score_t" type
               (:typedef ("double")
                :type "typedef")
                nil [409 432])
            ("operation_id_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [434 465])
            ("FullIndexVersion" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [466 500])
            ("quota_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [501 526])
            ("INVALID_OPERATION_ID" variable
               (:constant-flag t
                :default-value "-1"
                :type ("operation_id_t" type (:type "class") nil nil))
                nil [528 575])
            ("END_DOCID" variable (:constant-flag t) nil [585 594])
            ("MAX_QUOTA" variable (:constant-flag t) nil [625 634])
            ("UNINITIALIZED_DOCID" variable (:constant-flag t) nil [657 676])
            ("VariableType" type
               (:typedef ("matchdoc::BuiltinType" type (:type "class") nil nil)
                :type "typedef")
                nil [692 735])
            ("TYPE_CONVERT_HELPER" variable (:constant-flag t) nil [745 764])
            ("matchdoc::bt_unknown" variable (:type "int") nil [881 909])
            ("matchdoc::bt_int8" variable (:type "int") nil [911 936])
            ("matchdoc::bt_int16" variable (:type "int") nil [938 964])
            ("matchdoc::bt_int32" variable (:type "int") nil [966 992])
            ("matchdoc::bt_int64" variable (:type "int") nil [994 1020])
            ("matchdoc::bt_uint8" variable (:type "int") nil [1022 1048])
            ("matchdoc::bt_uint16" variable (:type "int") nil [1050 1077])
            ("matchdoc::bt_uint32" variable (:type "int") nil [1079 1106])
            ("matchdoc::bt_uint64" variable (:type "int") nil [1108 1135])
            ("matchdoc::bt_float" variable (:type "int") nil [1137 1163])
            ("matchdoc::bt_double" variable (:type "int") nil [1165 1192])
            ("matchdoc::bt_string" variable (:type "int") nil [1194 1221])
            ("matchdoc::bt_bool" variable (:type "int") nil [1223 1248])
            ("matchdoc::bt_hash_128" variable (:type "int") nil [1250 1279])
            ("matchdoc::bt_user_type1" variable (:type "int") nil [1336 1360])
            ("matchdoc::bt_max" variable (:type "int") nil [1412 1429])
            ("VRGroupKey" type
               (:members 
                  ( ("FOR_DISTINCT" variable
                       (:constant-flag t
                        :default-value (1496 1497)
                        :type "int")
                        (reparse-symbol enumsubparts) [1481 1497])
                    ("FOR_ATTRIBUTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1546 1560])
                    ("FOR_USER_DATA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1609 1623]))                  
                :type "enum")
                nil [1459 1670])
            ("QueryTermType" type
               (:members 
                  ( ("AND_TERM" variable
                       (:constant-flag t
                        :default-value (1708 1709)
                        :type "int")
                        (reparse-symbol enumsubparts) [1697 1709])
                    ("OR_TERM" variable
                       (:constant-flag t
                        :default-value (1725 1726)
                        :type "int")
                        (reparse-symbol enumsubparts) [1715 1726])
                    ("ANDNOT_TERM" variable
                       (:constant-flag t
                        :default-value (1746 1747)
                        :type "int")
                        (reparse-symbol enumsubparts) [1732 1747])
                    ("RANK_TERM" variable
                       (:constant-flag t
                        :default-value (1765 1766)
                        :type "int")
                        (reparse-symbol enumsubparts) [1753 1766]))                  
                :type "enum")
                nil [1672 1770])
            ("JoinType" type
               (:members 
                  ( ("DEFAULT_JOIN" variable
                       (:constant-flag t
                        :default-value (1807 1808)
                        :type "int")
                        (reparse-symbol enumsubparts) [1792 1808])
                    ("WEAK_JOIN" variable
                       (:constant-flag t
                        :default-value (1826 1827)
                        :type "int")
                        (reparse-symbol enumsubparts) [1814 1827])
                    ("STRONG_JOIN" variable
                       (:constant-flag t
                        :default-value (1847 1848)
                        :type "int")
                        (reparse-symbol enumsubparts) [1833 1848]))                  
                :type "enum")
                nil [1772 1851])
            ("SubDocDisplayType" type
               (:members 
                  ( ("SUB_DOC_DISPLAY_NO" variable
                       (:constant-flag t
                        :default-value (1903 1904)
                        :type "int")
                        (reparse-symbol enumsubparts) [1882 1904])
                    ("SUB_DOC_DISPLAY_FLAT" variable
                       (:constant-flag t
                        :default-value (1933 1934)
                        :type "int")
                        (reparse-symbol enumsubparts) [1910 1934])
                    ("SUB_DOC_DISPLAY_GROUP" variable
                       (:constant-flag t
                        :default-value (1964 1965)
                        :type "int")
                        (reparse-symbol enumsubparts) [1940 1965]))                  
                :type "enum")
                nil [1853 1968])
            ("TermType" type
               (:members 
                  ( ("TT_STRING" variable
                       (:constant-flag t
                        :default-value (2002 2003)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2003])
                    ("TT_NUMBER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2009 2020]))                  
                :type "enum")
                nil [1970 2021])
            ("QueryType" type
               (:members 
                  ( ("TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (2057 2058)
                        :type "int")
                        (reparse-symbol enumsubparts) [2044 2058])
                    ("NUMBER_QUERY" variable
                       (:constant-flag t
                        :default-value (2079 2080)
                        :type "int")
                        (reparse-symbol enumsubparts) [2064 2080])
                    ("PHRASE_QUERY" variable
                       (:constant-flag t
                        :default-value (2101 2102)
                        :type "int")
                        (reparse-symbol enumsubparts) [2086 2102])
                    ("AND_QUERY" variable
                       (:constant-flag t
                        :default-value (2120 2121)
                        :type "int")
                        (reparse-symbol enumsubparts) [2108 2121])
                    ("OR_QUERY" variable
                       (:constant-flag t
                        :default-value (2138 2139)
                        :type "int")
                        (reparse-symbol enumsubparts) [2127 2139])
                    ("RANK_QUERY" variable
                       (:constant-flag t
                        :default-value (2158 2159)
                        :type "int")
                        (reparse-symbol enumsubparts) [2145 2159])
                    ("ANDNOT_QUERY" variable
                       (:constant-flag t
                        :default-value (2180 2181)
                        :type "int")
                        (reparse-symbol enumsubparts) [2165 2181])
                    ("MULTI_TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (2206 2207)
                        :type "int")
                        (reparse-symbol enumsubparts) [2187 2207]))                  
                :type "enum")
                nil [2023 2211])
            ("MatchDataLevel" type
               (:members 
                  ( ("MDL_NONE" variable
                       (:constant-flag t
                        :default-value (2250 2251)
                        :type "int")
                        (reparse-symbol enumsubparts) [2239 2251])
                    ("MDL_TERM" variable
                       (:constant-flag t
                        :default-value (2268 2269)
                        :type "int")
                        (reparse-symbol enumsubparts) [2257 2269])
                    ("MDL_SUB_QUERY" variable
                       (:constant-flag t
                        :default-value (2291 2292)
                        :type "int")
                        (reparse-symbol enumsubparts) [2275 2292]))                  
                :type "enum")
                nil [2213 2296])
            ("SyntaxExprType" type
               (:members 
                  ( ("SYNTAX_EXPR_TYPE_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2324 2349])
                    ("SYNTAX_EXPR_TYPE_CONST_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2354 2383])
                    ("SYNTAX_EXPR_TYPE_ATOMIC_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2388 2417])
                    ("SYNTAX_EXPR_TYPE_VIRTUAL_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2422 2452])
                    ("SYNTAX_EXPR_TYPE_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2457 2480])
                    ("SYNTAX_EXPR_TYPE_ADD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2485 2506])
                    ("SYNTAX_EXPR_TYPE_DIV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2511 2532])
                    ("SYNTAX_EXPR_TYPE_MUL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2537 2558])
                    ("SYNTAX_EXPR_TYPE_EQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2563 2586])
                    ("SYNTAX_EXPR_TYPE_NOTEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2591 2617])
                    ("SYNTAX_EXPR_TYPE_LESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2622 2644])
                    ("SYNTAX_EXPR_TYPE_GREATERTHAN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2649 2678])
                    ("SYNTAX_EXPR_TYPE_LESSEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2683 2710])
                    ("SYNTAX_EXPR_TYPE_GREATEREQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2715 2745])
                    ("SYNTAX_EXPR_TYPE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2750 2771])
                    ("SYNTAX_EXPR_TYPE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2776 2796])
                    ("SYNTAX_EXPR_TYPE_RANK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2801 2823])
                    ("SYNTAX_EXPR_TYPE_BITAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2828 2852])
                    ("SYNTAX_EXPR_TYPE_BITOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2857 2880])
                    ("SYNTAX_EXPR_TYPE_BITXOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2885 2909])
                    ("SYNTAX_EXPR_TYPE_FUNC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2914 2936])
                    ("SYNTAX_EXPR_TYPE_FUNC_ARGUMENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2941 2972]))                  
                :type "enum")
                nil [2298 2975])
            ("AtomicSyntaxExprType" type
               (:members 
                  ( ("UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3009 3017])
                    ("INTEGER_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3022 3036])
                    ("FLOAT_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3041 3053])
                    ("STRING_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3058 3071])
                    ("ATTRIBUTE_NAME" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3076 3091]))                  
                :type "enum")
                nil [2977 3094])
            ("AttributeExprScope" type
               (:members 
                  ( ("AE_DEFAULT" variable
                       (:constant-flag t
                        :default-value (3139 3140)
                        :type "int")
                        (reparse-symbol enumsubparts) [3126 3140])
                    ("AE_FILTER" variable
                       (:constant-flag t
                        :default-value (3158 3159)
                        :type "int")
                        (reparse-symbol enumsubparts) [3146 3159])
                    ("AE_SCORER" variable
                       (:constant-flag t
                        :default-value (3177 3178)
                        :type "int")
                        (reparse-symbol enumsubparts) [3165 3178])
                    ("AE_SORTER" variable
                       (:constant-flag t
                        :default-value (3196 3197)
                        :type "int")
                        (reparse-symbol enumsubparts) [3184 3197]))                  
                :type "enum")
                nil [3096 3201])
            ("FuncActionScopeType" type
               (:members 
                  ( ("FUNC_ACTION_SCOPE_MAIN_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3234 3261])
                    ("FUNC_ACTION_SCOPE_SUB_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3266 3292])
                    ("FUNC_ACTION_SCOPE_ADAPTER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3297 3323]))                  
                :type "enum")
                nil [3203 3326])
            ("HaCompressType" type
               (:members 
                  ( ("INVALID_COMPRESS_TYPE" variable
                       (:constant-flag t
                        :default-value (3378 3379)
                        :type "int")
                        (reparse-symbol enumsubparts) [3354 3379])
                    ("NO_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3385 3397])
                    ("Z_SPEED_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3402 3419])
                    ("Z_DEFAULT_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3424 3443])
                    ("SNAPPY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3448 3455])
                    ("LZ4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3460 3464]))                  
                :type "enum")
                nil [3328 3467])
            ("QueryOperator" type
               (:members 
                  ( ("OP_UNKNOWN" variable
                       (:constant-flag t
                        :default-value (3507 3508)
                        :type "int")
                        (reparse-symbol enumsubparts) [3494 3508])
                    ("OP_AND" variable
                       (:constant-flag t
                        :default-value (3523 3524)
                        :type "int")
                        (reparse-symbol enumsubparts) [3514 3524])
                    ("OP_OR" variable
                       (:constant-flag t
                        :default-value (3538 3539)
                        :type "int")
                        (reparse-symbol enumsubparts) [3530 3539])
                    ("OP_WEAKAND" variable
                       (:constant-flag t
                        :default-value (3558 3559)
                        :type "int")
                        (reparse-symbol enumsubparts) [3545 3559]))                  
                :type "enum")
                nil [3469 3563])
            ("ResultFormatType" type
               (:members 
                  ( ("RF_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3593 3604])
                    ("RF_XML" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3609 3616])
                    ("RF_PROTOBUF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3621 3634]))                  
                :type "enum")
                nil [3565 3635])
            ("FetchSummaryType" type
               (:members 
                  ( ("BY_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3665 3676])
                    ("BY_DOCID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3681 3690])
                    ("BY_PK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3695 3701])
                    ("BY_RAWPK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3706 3716]))                  
                :type "enum")
                nil [3637 3717])
            ("QuotaMode" type
               (:members 
                  ( ("QM_PER_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3740 3751])
                    ("QM_PER_LAYER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3756 3769])
                    ("QM_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3774 3785]))                  
                :type "enum")
                nil [3719 3788])
            ("QuotaType" type
               (:members 
                  ( ("QT_PROPOTION" variable
                       (:constant-flag t
                        :default-value (3826 3827)
                        :type "int")
                        (reparse-symbol enumsubparts) [3811 3827])
                    ("QT_AVERAGE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3880 3891])
                    ("QT_QUOTA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3907 3916])
                    ("QT_UNKNOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3921 3932]))                  
                :type "enum")
                nil [3790 3933])
            ("DispatchType" type
               (:members 
                  ( ("DISPATCH_BY_PARTITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3959 3981])
                    ("DISPATCH_BY_REPLICA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3986 4007]))                  
                :type "enum")
                nil [3935 4008])
            ("MergeInStep" type
               (:members 
                  ( ("MERGE_IN_STEP_FULL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4032 4051])
                    ("MERGE_IN_STEP_BEGIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4056 4076])
                    ("MERGE_IN_STEP_DOING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4081 4101])
                    ("MERGE_IN_STEP_END" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [4106 4125]))                  
                :type "enum")
                nil [4010 4126])
            ("SEARCH_PHASE_ONE" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4127 4163])
            ("SEARCH_PHASE_TWO" variable
               (:constant-flag t
                :default-value "2"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4164 4200])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [4202 4257])
            ("getValueFromKeyValueMap" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("keyValueMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4310 4364])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4373 4396])
                    ("defaultValue" variable
                       (:reference 1
                        :constant-flag t
                        :default-value "\"\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4405 4441]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [4258 4605])
            ("MAX_AGGREGATE_GROUP_COUNT" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4607 4655])
            ("DOCID_PARTITION_MODE" variable (:constant-flag t) nil [4665 4685])
            ("NULL_CLUSTER" variable (:constant-flag t) nil [4702 4714])
            ("BuildMode" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4734 4764])
            ("BuildPhase" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4765 4796])
            ("hashid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4858 4884])
            ("clusterid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4885 4914])
            ("INVALID_CLUSTERID" variable
               (:constant-flag t
                :default-value "(clusterid_t)-1"
                :type ("clusterid_t" type (:type "class") nil nil))
                nil [4915 4969])
            ("DEFAULT_BOOST_VALUE" variable
               (:constant-flag t
                :default-value "100"
                :type ("int32_t" type (:type "class") nil nil))
                nil [4971 5011])
            ("MAX_RERANK_SIZE" variable
               (:constant-flag t
                :default-value "1000000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5012 5053])
            ("MIN_INDEX_SWITCH_LIMIT" variable
               (:constant-flag t
                :default-value "150"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5054 5098])
            ("NULL_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5161 5203])
            ("DYNAMIC_CUT_SEPARATOR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\\x1B\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5204 5260])
            ("LAYERKEY_DOCID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%docid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5261 5312])
            ("LAYERKEY_OTHER" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%other\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5313 5364])
            ("LAYERKEY_SEGMENTID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%segmentid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5365 5424])
            ("LAYERKEY_PERCENT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%percent\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5425 5480])
            ("LAYERKEY_UNSORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%unsorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5481 5538])
            ("LAYERKEY_SORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%sorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5539 5592])
            ("PLUGIN_PATH_NAME" variable (:constant-flag t) nil [5603 5619])
            ("DEFAULT_QRS_CHAIN" variable (:constant-flag t) nil [5640 5657])
            ("DEFAULT_DEBUG_QRS_CHAIN" variable (:constant-flag t) nil [5676 5699])
            ("DEFAULT_DEBUG_PROCESSOR" variable (:constant-flag t) nil [5746 5769])
            ("DEFAULT_DEBUG_RANK_PROFILE" variable (:constant-flag t) nil [5811 5837])
            ("DEFAULT_DEBUG_SCORER" variable (:constant-flag t) nil [5887 5907])
            ("DEFAULT_RANK_PROFILE" variable (:constant-flag t) nil [5949 5969])
            ("DEFAULT_SUMMARY_PROFILE" variable (:constant-flag t) nil [5996 6019])
            ("DEFAULT_CONFIG_DIR" variable (:constant-flag t) nil [6045 6063])
            ("LOCAL_URI_PREFIX" variable (:constant-flag t) nil [6088 6104])
            ("FETCHSUMMARY_GID_SEPERATOR" variable (:constant-flag t) nil [6124 6150])
            ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" variable (:constant-flag t) nil [6163 6200])
            ("BUILD_IN_REFERENCE_PREFIX" variable (:constant-flag t) nil [6214 6239])
            ("PROVIDER_VAR_NAME_PREFIX" variable (:constant-flag t) nil [6263 6287])
            ("ISEARCH_BUILD_IN_JOIN_DOCID_REF_PREIX" variable (:constant-flag t) nil [6312 6349])
            ("ISEARCH_BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [6375 6427])
            ("ISEARCH_BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [6453 6508])
            ("STATUS_CHECK_PREFIX" variable (:constant-flag t) nil [6537 6556])
            ("HTTP_SUPPORT_PREFIX" variable (:constant-flag t) nil [6574 6593])
            ("LIST_CMD" variable (:constant-flag t) nil [6617 6625])
            ("GET_FILE_CONTENT_CMD" variable (:constant-flag t) nil [6639 6659])
            ("RESULT_FORMAT_XML" variable (:constant-flag t) nil [6676 6693])
            ("RESULT_FORMAT_PROTOBUF" variable (:constant-flag t) nil [6708 6730])
            ("LOCAL_USER_NAME_DEFAULT" variable (:constant-flag t) nil [6751 6774])
            ("LOCAL_SERVICE_NAME_DEFAULT" variable (:constant-flag t) nil [6788 6814])
            ("HEART_BEAT_META_INFO_KEY" variable (:constant-flag t) nil [6840 6864])
            ("HEART_BEAT_CLUSTER_NAME" variable (:constant-flag t) nil [6886 6909])
            ("RAW_DOCUMENT_FORMAT_HA3" variable (:constant-flag t) nil [6970 6993])
            ("RAW_DOCUMENT_FORMAT_ISEARCH" variable (:constant-flag t) nil [7008 7035])
            ("FSUTIL_BINARY" variable (:constant-flag t) nil [7055 7068])
            ("MAX_PARTITION_RANGE" variable
               (:constant-flag t
                :default-value "65535"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7084 7127])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "MAX_PARTITION_RANGE + 1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7128 7189])
            ("KEEP_INCREMENTAL_VERSION_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7587 7637])
            ("APP_ITERATOR_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7638 7687])
            ("BUILDER_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "500 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7760 7812])
            ("LOCAL_BUILDER_METRICS_STDOUT_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7821 7875])
            ("SERVER_TIMEOUT" variable
               (:constant-flag t
                :default-value "5 * 1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7974 8014])
            ("FETCHSUMMARY_GID_FIELD_SIZE" variable
               (:constant-flag t
                :default-value "5"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8022 8069])
            ("STATUS_CHECK_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "6"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8070 8113])
            ("HTTP_SUPPORT_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "12"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8114 8158])
            ("GET_FILE_SIZE_LIMIT" variable
               (:constant-flag t
                :default-value "100 * 1024"
                :type ("int64_t" type (:type "class") nil nil))
                nil [8159 8206])
            ("DEFAULT_WORKER_RESOURCE" variable
               (:constant-flag t
                :default-value "100"
                :type "int")
                nil [8216 8256])
            ("DEFAULT_PARTITION_RESOURCE" variable
               (:constant-flag t
                :default-value "DEFAULT_WORKER_RESOURCE"
                :type "int")
                nil [8257 8320])
            ("HA3_REQUEST_VERSION" variable (:type "int") nil [8798 8818])
            ("DEFAULT_AMON_AGENT_PORT" variable
               (:constant-flag t
                :default-value "10086"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8881 8928])
            ("INVALID_SEARCHER_CACHE_EXPIRE_TIME" variable
               (:constant-flag t
                :default-value "uint32_t(-1)"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8930 8995])
            ("REALTIME_UNLIMIT_QPS" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8997 9037])
            ("DEFAULT_WORKER_CAPABILITY" variable
               (:constant-flag t
                :default-value "16"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [9038 9084])
            ("HA3_VERSION" variable (:type "int") nil [9149 9161])
            ("DEFAULT_TASK_QUEUE_NAME" variable
               (:constant-flag t
                :default-value "\"__ha3_runtime_default_task_queue\""
                :type ("std::string" type (:type "class") nil nil))
                nil [9162 9241])
            ("HA3_EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [9243 9283])
            ("ONLINE_CONFIG_KEEP_COUNT" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [9285 9324]))          
      :file "isearch.h"
      :pointmax 9402
      :fsize 9401
      :lastmodtime '(23328 60849 723824 292000)
      :unmatched-syntax '((thing 9386 . 9387) (thing 9382 . 9386) (thing 9380 . 9381) (thing 9375 . 9379) (thing 9373 . 9374) (thing 9370 . 9372) (thing 9368 . 9369) (thing 9339 . 9367) (thing 9331 . 9338) (thing 9325 . 9330) (thing 9126 . 9148) (thing 9124 . 9125) (thing 9104 . 9123) (thing 9097 . 9103) (thing 9096 . 9097) (thing 9095 . 9096) (thing 9092 . 9095) (thing 9086 . 9091) (thing 8796 . 8797) (thing 8769 . 8795) (thing 8767 . 8768) (thing 8740 . 8766) (thing 8738 . 8739) (thing 8715 . 8737) (thing 8707 . 8714) (thing 8701 . 8706) (thing 8643 . 8644) (thing 8642 . 8643) (thing 8640 . 8641) (thing 8593 . 8596) (thing 8591 . 8592) (thing 8573 . 8590) (thing 8571 . 8572) (thing 8522 . 8527) (thing 8520 . 8521) (thing 8502 . 8519) (thing 8500 . 8501) (thing 8449 . 8456) (thing 8447 . 8448) (thing 8429 . 8446) (thing 8427 . 8428) (thing 8400 . 8426) (thing 8392 . 8399) (thing 8386 . 8391) (thing 8377 . 8378) (thing 8373 . 8377) (thing 8371 . 8372) (thing 8366 . 8370) (thing 8364 . 8365) (thing 8362 . 8363) (thing 8360 . 8361) (thing 8335 . 8359) (thing 8327 . 8334) (thing 8321 . 8326) (thing 7964 . 7965) (thing 7960 . 7964) (thing 7958 . 7959) (thing 7953 . 7957) (thing 7951 . 7952) (thing 7947 . 7950) (thing 7945 . 7946) (thing 7924 . 7944) (thing 7916 . 7923) (thing 7910 . 7915) (thing 7752 . 7753) (thing 7748 . 7752) (thing 7746 . 7747) (thing 7741 . 7745) (thing 7739 . 7740) (thing 7737 . 7738) (thing 7735 . 7736) (thing 7711 . 7734) (thing 7703 . 7710) (thing 7697 . 7702) (thing 7579 . 7580) (thing 7575 . 7579) (thing 7573 . 7574) (thing 7568 . 7572) (thing 7566 . 7567) (thing 7564 . 7565) (thing 7562 . 7563) (thing 7542 . 7561) (thing 7534 . 7541) (thing 7528 . 7533) (thing 7520 . 7521) (thing 7516 . 7520) (thing 7514 . 7515) (thing 7509 . 7513) (thing 7507 . 7508) (thing 7505 . 7506) (thing 7503 . 7504) (thing 7471 . 7502) (thing 7463 . 7470) (thing 7457 . 7462) (thing 7449 . 7450) (thing 7445 . 7449) (thing 7443 . 7444) (thing 7438 . 7442) (thing 7436 . 7437) (thing 7434 . 7435) (thing 7432 . 7433) (thing 7400 . 7431) (thing 7392 . 7399) (thing 7386 . 7391) (thing 7378 . 7379) (thing 7374 . 7378) (thing 7372 . 7373) (thing 7367 . 7371) (thing 7365 . 7366) (thing 7363 . 7364) (thing 7361 . 7362) (thing 7338 . 7360) (thing 7330 . 7337) (thing 7324 . 7329) (thing 7315 . 7316) (thing 7311 . 7315) (thing 7309 . 7310) (thing 7304 . 7308) (thing 7302 . 7303) (thing 7299 . 7301) (thing 7297 . 7298) (thing 7273 . 7296) (thing 7265 . 7272) (thing 7259 . 7264) (thing 7251 . 7252) (thing 7247 . 7251) (thing 7245 . 7246) (thing 7240 . 7244) (thing 7238 . 7239) (thing 7236 . 7237) (thing 7234 . 7235) (thing 7204 . 7233) (thing 7196 . 7203) (thing 7190 . 7195) (thing 5158 . 5159) (thing 5154 . 5158) (thing 5152 . 5153) (thing 5147 . 5151) (thing 5145 . 5146) (thing 5143 . 5144) (thing 5141 . 5142) (thing 5114 . 5140) (thing 5105 . 5113) (thing 5099 . 5104) (thing 1410 . 1411) (thing 1396 . 1409) (thing 1384 . 1395) (thing 1383 . 1384) (thing 1382 . 1383) (thing 1374 . 1382) (thing 1368 . 1373) (thing 1361 . 1367) (thing 1334 . 1335) (thing 1317 . 1333) (thing 1305 . 1316) (thing 1304 . 1305) (thing 1303 . 1304) (thing 1295 . 1303) (thing 1289 . 1294) (thing 1282 . 1288) (thing 1279 . 1280) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1248 . 1249) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1221 . 1222) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1192 . 1193) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1163 . 1164) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1135 . 1136) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1106 . 1107) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1077 . 1078) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1048 . 1049) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1020 . 1021) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 992 . 993) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 964 . 965) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 936 . 937) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 909 . 910) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909))
      :lexical-table 
        '(("END_DOCID" . ((semantic-list "((docid_t)0x7FFFFFFF)" 595 . 616)))
          ("DEFAULT_DEBUG_QRS_CHAIN" . ((string "\"_@_build_in_DebugQueryMatchQrsChain\"" 5700 . 5737)))
          ("DEFAULT_CONFIG_DIR" . ((string "\"default_conf/\"" 6064 . 6079)))
          ("ISEARCH_BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_subjoin_docid_\"" 6509 . 6528)))
          ("DEFAULT_DEBUG_PROCESSOR" . ((string "\"_@_build_in_MatchInfoProcessor\"" 5770 . 5802)))
          ("MAX_QUOTA" . ((semantic-list "((quota_t)-1)" 635 . 648)))
          ("NULL_CLUSTER" . ((string "\"\"" 4715 . 4717)))
          ("BUILD_IN_REFERENCE_PREFIX" . ((string "\"_@_build_in_\"" 6240 . 6254)))
          ("GET_FILE_CONTENT_CMD" . ((string "\"file\"" 6660 . 6666)))
          ("RESULT_FORMAT_XML" . ((string "\"xml\"" 6694 . 6699)))
          ("DOCID_PARTITION_MODE" . ((string "\"docid\"" 4686 . 4693)))
          ("DEFAULT_QRS_CHAIN" . ((string "\"DEFAULT\"" 5658 . 5667)))
          ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" . ((string "\"_\"" 6201 . 6204)))
          ("DEFAULT_DEBUG_RANK_PROFILE" . ((string "\"_@_build_in_DebugQueryMatchRankProfile\"" 5838 . 5878)))
          ("FETCHSUMMARY_GID_SEPERATOR" . ((string "\"|\"" 6151 . 6154)))
          ("LOCAL_USER_NAME_DEFAULT" . ((string "\"ha\"" 6775 . 6779)))
          ("RAW_DOCUMENT_FORMAT_ISEARCH" . ((string "\"isearch\"" 7036 . 7045)))
          ("ISEARCH_BUILD_IN_JOIN_DOCID_REF_PREIX" . ((string "\"_@_join_docid_\"" 6350 . 6366)))
          ("ISEARCH_BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_join_docid_\"" 6428 . 6444)))
          ("ISEARCH_H_")
          ("DEFAULT_SUMMARY_PROFILE" . ((string "\"DefaultProfile\"" 6020 . 6036)))
          ("PROVIDER_VAR_NAME_PREFIX" . ((string "\"_@_user_data_\"" 6288 . 6303)))
          ("RESULT_FORMAT_PROTOBUF" . ((string "\"protobuf\"" 6731 . 6741)))
          ("LOCAL_SERVICE_NAME_DEFAULT" . ((string "\"local_service\"" 6815 . 6830)))
          ("HEART_BEAT_META_INFO_KEY" . ((string "\"WorkerInfo\"" 6865 . 6877)))
          ("HEART_BEAT_CLUSTER_NAME" . ((string "\"__ha3_admin_cluster_name_\"" 6910 . 6937)))
          ("PLUGIN_PATH_NAME" . ((string "\"plugins/\"" 5620 . 5630)))
          ("HTTP_SUPPORT_PREFIX" . ((string "\"httpsupport:\"" 6594 . 6608)))
          ("RAW_DOCUMENT_FORMAT_HA3" . ((string "\"ha3\"" 6994 . 6999)))
          ("FSUTIL_BINARY" . ((string "\"fs_util_bin\"" 7069 . 7082)))
          ("LIST_CMD" . ((string "\"ls\"" 6626 . 6630)))
          ("DEFAULT_RANK_PROFILE" . ((string "\"DefaultProfile\"" 5970 . 5986)))
          ("UNINITIALIZED_DOCID" . ((semantic-list "((docid_t)-2)" 677 . 690)))
          ("DEFAULT_DEBUG_SCORER" . ((string "\"_@_build_in_RecordInfoScorer\"" 5909 . 5939)))
          ("STATUS_CHECK_PREFIX" . ((string "\"status\"" 6557 . 6565)))
          ("LOCAL_URI_PREFIX" . ((string "\"file://\"" 6105 . 6114)))
          )
)
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ha3/config.h" include (:system-flag t) nil [54 77])
            ("autil/CommonMacros.h" include (:system-flag t) nil [78 109])
            ("BEGIN_HA3_NAMESPACE" variable (:constant-flag t) nil [119 138])
            ("END_HA3_NAMESPACE" variable (:constant-flag t) nil [184 201])
            ("USE_HA3_NAMESPACE" variable (:constant-flag t) nil [217 234])
            ("BEGIN_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [274 297])
            ("END_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [326 347])
            ("ALIAS_NAMESAPCE" variable (:constant-flag t) nil [359 374])
            ("HA3_NS" variable (:constant-flag t) nil [467 473])
            ("tr1/memory" include (:system-flag t) nil [489 510])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [519 534]))          
      :file "common.h"
      :pointmax 608
      :fsize 607
      :lastmodtime '(23328 55418 287330 224000)
      :unmatched-syntax nil
      :lexical-table 
        '(("BEGIN_ISEARCH_NAMESPACE" . 
              ((NAMESPACE "namespace" 298 . 307) (symbol "isearch" 308 . 315) (open-paren "{" 316 . 317)))
          ("USE_HA3_NAMESPACE" (spp-arg-list ("x") 234 . 237) . 
              ((USING "using" 238 . 243) (NAMESPACE "namespace" 244 . 253) (symbol "isearch" 254 . 261) (punctuation ":" 261 . 262) (punctuation ":" 262 . 263) (symbol "x" 263 . 264)))
          ("END_ISEARCH_NAMESPACE" . ((close-paren "}" 348 . 349)))
          ("ISEARCH_COMMON_H_")
          ("BEGIN_HA3_NAMESPACE" (spp-arg-list ("x") 138 . 141) . 
              ((NAMESPACE "namespace" 142 . 151) (symbol "isearch" 152 . 159) (open-paren "{" 160 . 161) (NAMESPACE "namespace" 162 . 171) (symbol "x" 172 . 173) (open-paren "{" 174 . 175)))
          ("ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 374 . 380) . 
              ((NAMESPACE "namespace" 381 . 390) (symbol "isearch" 391 . 398) (semantic-list "{ namespace x = y; }" 399 . 419)))
          ("HA3_TYPEDEF_PTR" (spp-arg-list ("x") 534 . 537) . 
              ((TYPEDEF "typedef" 538 . 545) (symbol "std" 546 . 549) (punctuation ":" 549 . 550) (punctuation ":" 550 . 551) (symbol "tr1" 551 . 554) (punctuation ":" 554 . 555) (punctuation ":" 555 . 556) (symbol "shared_ptr" 556 . 566) (punctuation "<" 566 . 567) (symbol "x" 567 . 568) (punctuation ">" 568 . 569) (spp-symbol-merge ((symbol "x" 570 . 571) (symbol "Ptr" 573 . 576)) 570 . 576) (punctuation ";" 576 . 577)))
          ("END_HA3_NAMESPACE" (spp-arg-list ("x") 201 . 204) . ((close-paren "}" 205 . 206) (close-paren "}" 207 . 208)))
          ("HA3_NS" (spp-arg-list ("x") 473 . 476) . 
              ((symbol "isearch" 477 . 484) (punctuation ":" 484 . 485) (punctuation ":" 485 . 486) (symbol "x" 486 . 487)))
          )
))
  :file "!ssd!sdd!git!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
