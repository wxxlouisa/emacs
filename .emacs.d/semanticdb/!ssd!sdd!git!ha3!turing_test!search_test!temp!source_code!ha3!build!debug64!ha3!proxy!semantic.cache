;; Object proxy/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "proxy/"
  :tables
  (list
    (semanticdb-table "MatchDocDeduper.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/proxy/MatchDocDeduper.h" include (:system-flag t) nil [1 39])
            ("ha3/common/VariableTypeTraits.h" include (:system-flag t) nil [40 82])
            ("ha3/common/CommonDef.h" include (:system-flag t) nil [83 116])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [118 138])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [139 161])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [162 194])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [214 221]))                  
                :type "int")
                nil [196 222])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [243 249]))                  
                :type "int")
                nil [223 250])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [266 272])
                    ("" variable (:type ("MatchDocDeduper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [273 289]))                  
                :type "int")
                nil [252 290])
            ("MatchDocDeduper" function
               (:constructor-flag t
                :parent "MatchDocDeduper"
                :arguments 
                  ( ("allocator" variable
                       (:pointer 1
                        :type ("common::Ha3MatchDocAllocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [324 364])
                    ("needDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [398 413]))                  
                :type ("MatchDocDeduper" type (:type "class") nil nil))
                nil [291 494])
            ("MatchDocDeduper" function
               (:destructor-flag t
                :parent "MatchDocDeduper"
                :type "void")
                nil [496 536])
            ("dedup" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [571 614])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [643 691]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [538 2135])
            ("canDedup" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2168 2211]))                  
                :type "bool")
                nil [2137 2286])
            ("noDedupMeger" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2328 2371])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2407 2455]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [2288 2893])
            ("typedDedup" function
               (:template 
                  ( ("PKType" type (:type "class") nil nil))                  
                :type ("ErrorCode" type (:type "class") nil nil)
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2960 3003])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3037 3085]))                  
                :parent "MatchDocDeduper")
                nil [2895 5034])
            ("mergeMatchDocAllocator" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("matchDocs" variable
                       (:pointer 1
                        :type ("common::MatchDocs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5090 5119])
                    ("matchDocVect" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5128 5169]))                  
                :type "bool")
                nil [5036 5610])
            ("initReference" function
               (:parent "MatchDocDeduper"
                :type "void")
                nil [5612 6028])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6048 6054]))                  
                :type "int")
                nil [6030 6055]))          
      :file "MatchDocDeduper.cpp"
      :pointmax 6057
      :fsize 6056
      :lastmodtime '(23220 43218 995782 128000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!ha3!build!debug64!ha3!proxy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
