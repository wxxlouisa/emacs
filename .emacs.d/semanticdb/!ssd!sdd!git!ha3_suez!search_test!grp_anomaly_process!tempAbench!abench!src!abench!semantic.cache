;; Object abench/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "abench/"
  :tables
  (list
    (semanticdb-table "Worker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("abench/Worker.h" include (:system-flag t) nil [1 27])
            ("abench/Timer.h" include (:system-flag t) nil [28 53])
            ("abench/URLUtil.h" include (:system-flag t) nil [54 81])
            ("abench/Log.h" include (:system-flag t) nil [82 105])
            ("abench/CM2TcpServiceLocator.h" include (:system-flag t) nil [106 146])
            ("abench/CM2HttpServiceLocator.h" include (:system-flag t) nil [147 188])
            ("abench/FixedTcpServiceLocator.h" include (:system-flag t) nil [189 231])
            ("abench/FixedHttpServiceLocator.h" include (:system-flag t) nil [232 275])
            ("abench/hash.h" include (:system-flag t) nil [276 300])
            ("anet/iocomponent.h" include (:system-flag t) nil [302 331])
            ("anet/socket.h" include (:system-flag t) nil [332 356])
            ("iostream" include (:system-flag t) nil [357 376])
            ("map" include (:system-flag t) nil [377 391])
            ("sstream" include (:system-flag t) nil [392 410])
            ("hsfcpp/hsf.h" include nil nil [411 434])
            ("abench" using (:type ("abench" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [436 459])
            ("anet" using (:type ("anet" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [460 481])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [482 502])
            ("on_app_exception" function
               (:prototype-flag t
                :arguments 
                  ( ("error_msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [526 550])
                    ("ex" variable
                       (:pointer 1
                        :type ("hsf::Exception" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [551 570])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [571 600]))                  
                :type "void")
                nil [504 601])
            ("on_hsf_exception" function
               (:prototype-flag t
                :arguments 
                  ( ("error_msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [624 648])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [649 678]))                  
                :type "void")
                nil [602 679])
            ("on_app_response" function
               (:prototype-flag t
                :arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("hsf::Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [701 721])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [722 751]))                  
                :type "void")
                nil [680 752])
            ("Worker" function
               (:constructor-flag t
                :parent "Worker"
                :arguments 
                  ( ("resource" variable
                       (:reference 1
                        :type ("AbenchResource" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [769 795])
                    ("globalInfo" variable
                       (:pointer 1
                        :type ("GlobalInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [795 818]))                  
                :type ("Worker" type (:type "class") nil nil))
                nil [754 3463])
            ("Worker" function
               (:destructor-flag t
                :parent "Worker"
                :type "void")
                nil [3465 4086])
            ("doStaticConnect" function
               (:parent "Worker"
                :arguments 
                  ( ("timerData" variable (:type ("TimerData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4135 4155])
                    ("exeTime" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4155 4179]))                  
                :type "void")
                nil [4106 4250])
            ("doConnect" function
               (:parent "Worker"
                :type "void")
                nil [4252 6137])
            ("doRequest" function
               (:parent "Worker"
                :arguments 
                  ( ("conn" variable
                       (:pointer 1
                        :type ("Connection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9844 9861])
                    ("uri" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9861 9871])
                    ("queryIndex" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9871 9890]))                  
                :type "void")
                nil [9821 13621])
            ("stop" function
               (:parent "Worker"
                :type "void")
                nil [13622 13664])
            ("join" function
               (:parent "Worker"
                :type "void")
                nil [13666 13708])
            ("getUrl" function
               (:parent "Worker"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [13774 13781])
                    ("" variable (:type ("uri" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13781 13785])
                    ("queryIndex" variable
                       (:reference 1
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13786 13806]))                  
                :type "bool")
                nil [13754 14461])
            ("checkFinish" function
               (:parent "Worker"
                :type "bool")
                nil [14463 14884]))          
      :file "Worker.cpp"
      :pointmax 14885
      :fsize 14912
      :lastmodtime '(22466 60615 642693 539000)
      :unmatched-syntax '((thing 13780 . 13781)))
    (semanticdb-table "APacketHandler.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("abench/APacketHandler.h" include (:system-flag t) nil [1 35])
            ("abench/Worker.h" include (:system-flag t) nil [36 62])
            ("abench/Parser.h" include (:system-flag t) nil [63 89])
            ("abench/StringUtil.h" include (:system-flag t) nil [90 120])
            ("assert.h" include (:system-flag t) nil [121 140])
            ("string" include (:system-flag t) nil [141 158])
            ("iostream" include (:system-flag t) nil [159 178])
            ("hsfcpp/hsf.h" include nil nil [179 202])
            ("anet" using (:type ("anet" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [204 225])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [226 246])
            ("abench" using (:type ("abench" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [247 270])
            ("on_app_response" function
               (:arguments 
                  ( ("result" variable
                       (:pointer 1
                        :type ("hsf::Object" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [293 313])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [314 343]))                  
                :type "void")
                nil [272 2025])
            ("on_app_exception" function
               (:arguments 
                  ( ("error_msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2049 2073])
                    ("ex" variable
                       (:pointer 1
                        :type ("hsf::Exception" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2074 2093])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2094 2123]))                  
                :type "void")
                nil [2027 2709])
            ("on_hsf_exception" function
               (:arguments 
                  ( ("error_msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2733 2757])
                    ("cb" variable
                       (:pointer 1
                        :type ("hsf::hsf_invoke_callback" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2758 2787]))                  
                :type "void")
                nil [2711 3341])
            ("APacketHandler" function
               (:constructor-flag t
                :parent "APacketHandler"
                :arguments 
                  ( ("globalInfo" variable
                       (:pointer 1
                        :type ("GlobalInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3374 3397])
                    ("keepAlive" variable (:type "bool") (reparse-symbol arg-sub-list) [3398 3413])
                    ("use_cm2" variable (:type "bool") (reparse-symbol arg-sub-list) [3413 3426]))                  
                :type ("APacketHandler" type (:type "class") nil nil))
                nil [3343 3512])
            ("APacketHandler" function
               (:destructor-flag t
                :parent "APacketHandler"
                :type "void")
                nil [3514 3551])
            ("handlePacket" function
               (:parent "APacketHandler"
                :arguments 
                  ( ("packet" variable
                       (:pointer 1
                        :type ("Packet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3609 3624])
                    ("args" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [3625 3636]))                  
                :type ("IPacketHandler::HPRetCode" type (:type "class") nil nil))
                nil [3553 8916]))          
      :file "APacketHandler.cpp"
      :pointmax 8917
      :fsize 9016
      :lastmodtime '(22466 60615 639693 547000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!search_test!grp_anomaly_process!tempAbench!abench!src!abench!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
