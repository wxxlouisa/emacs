;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56]))          
      :file "SConscript"
      :pointmax 388
      :fsize 387
      :lastmodtime '(23294 27784 904801 235000)
      :unmatched-syntax nil)
    (semanticdb-table "AdminServiceImplTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("suez/admin/AdminServiceImpl.h" include nil nil [32 72])
            ("suez/admin/test/ZkServer.h" include nil nil [73 110])
            ("suez/admin/test/MockRoleManagerWrapper.h" include nil nil [111 162])
            ("suez/common/TimeRecorder.h" include nil nil [163 200])
            ("fslib/fs/FileSystem.h" include (:system-flag t) nil [201 233])
            ("carbon/proto/Carbon.pb.h" include (:system-flag t) nil [234 269])
            ("hippo/proto/Common.pb.h" include (:system-flag t) nil [270 304])
            ("http_arpc/ProtoJsonizer.h" include (:system-flag t) nil [305 341])
            ("autil/legacy/jsonizable.h" include (:system-flag t) nil [342 378])
            ("autil/TimeUtility.h" include (:system-flag t) nil [379 409])
            ("thread" include (:system-flag t) nil [410 427])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [429 449])
            ("testing" using (:type ("testing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [450 474])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [475 497])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [498 528])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [529 565])
            ("fslib" using (:type ("fslib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [566 588])
            ("fslib::fs" using (:type ("fslib::fs" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [589 615])
            ("carbon" using (:type ("carbon" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [616 639])
            ("carbon::proto" using (:type ("carbon::proto" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [640 670])
            ("http_arpc" using (:type ("http_arpc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [671 697])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [698 720])
            ("cm_basic" using (:type ("cm_basic" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [721 746])
            ("suez" type
               (:members 
                  ( ("AdminServiceImplTest" type
                       (:superclasses 
                          ( ("TESTBASE" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [814 821])
                            ("setUp" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [826 839])
                            ("tearDown" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [844 860])
                            ("public" label nil (reparse-symbol classsubparts) [861 868])
                            ("getJsonMapFromFile" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("fileName" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [897 914])
                                    ("jsonMap" variable
                                       (:reference 1
                                        :type ("JsonMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [915 932]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [873 933])
                            ("initZk" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [938 952])
                            ("protected" label nil (reparse-symbol classsubparts) [953 963])
                            ("_zk" variable
                               (:pointer 1
                                :type ("ZkWrapper" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [968 983])
                            ("_host" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [988 1001]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [767 1004])
                    ("setUp" function
                       (:parent "AdminServiceImplTest"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1006 1060])
                    ("tearDown" function
                       (:parent "AdminServiceImplTest"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1062 1133])
                    ("initZk" function
                       (:parent "AdminServiceImplTest"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1135 1385])
                    ("getJsonMapFromFile" function
                       (:parent "AdminServiceImplTest"
                        :arguments 
                          ( ("fileName" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1433 1450])
                            ("jsonMap" variable
                               (:reference 1
                                :type ("JsonMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1451 1468]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1387 1802])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1811 1832])
                            ("" variable (:type ("testCreate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1833 1844]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1804 2439])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2448 2469])
                            ("" variable (:type ("testCreateFail" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2470 2485]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2441 3327])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3336 3357])
                            ("" variable (:type ("testUpdate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3358 3369]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [3329 4633])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4642 4663])
                            ("" variable (:type ("testReadWithDetail" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4664 4683]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4635 8203])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8212 8233])
                            ("" variable (:type ("testReleaseSlot" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8234 8250]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [8205 9231])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9240 9261])
                            ("" variable (:type ("testRead" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9262 9271]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9233 10462])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10471 10492])
                            ("" variable (:type ("testDelete" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10493 10504]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10464 11699])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11708 11729])
                            ("" variable (:type ("testBatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11730 11740]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [11701 14004])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14013 14034])
                            ("" variable (:type ("testSerialize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14035 14049]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14006 14741])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14750 14771])
                            ("" variable (:type ("testMultiThread" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14772 14788]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14743 16521])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16530 16551])
                            ("" variable (:type ("testReRangeGroupStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16552 16575]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [16523 17035])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17044 17065])
                            ("" variable (:type ("testGetCommitError" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17066 17085]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [17037 17393])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("AdminServiceImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17402 17423])
                            ("" variable (:type ("testJsonize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17424 17436]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [17395 17749]))                  
                :type "namespace")
                nil [748 17752]))          
      :file "AdminServiceImplTest.cpp"
      :pointmax 17753
      :fsize 17752
      :lastmodtime '(23294 27790 248807 308000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ops!basic_ops_compile!suez!suez!admin!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
