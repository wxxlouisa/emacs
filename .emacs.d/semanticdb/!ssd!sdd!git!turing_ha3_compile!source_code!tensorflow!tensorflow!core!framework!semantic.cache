;; Object framework/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "framework/"
  :tables
  (list
    (semanticdb-table "shape_inference.h"
      :major-mode 'c++-mode
      :tags 
        '( ("THIRD_PARTY_TENSORFLOW_CORE_FRAMEWORK_SHAPE_INFERENCE_H_" variable (:constant-flag t) nil [743 799])
            ("vector" include (:system-flag t) nil [801 818])
            ("tensorflow/core/framework/node_def_util.h" include nil nil [820 872])
            ("tensorflow/core/framework/tensor.h" include nil nil [873 918])
            ("tensorflow/core/lib/core/errors.h" include nil nil [919 963])
            ("tensorflow/core/lib/core/status.h" include nil nil [964 1008])
            ("tensorflow/core/lib/gtl/inlined_vector.h" include nil nil [1009 1060])
            ("tensorflow/core/platform/macros.h" include nil nil [1061 1105])
            ("tensorflow" type
               (:members 
                  ( ("ShapeRefiner" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1131 1150])
                    ("ShapeRefinerTest" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1151 1174])
                    ("grappler" type
                       (:members 
                          ( ("GraphProperties" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [1197 1219]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1176 1221])
                    ("shape_inference" type
                       (:members 
                          ( ("DimensionOrConstant" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1252 1279])
                            ("InferenceContext" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [1280 1303])
                            ("Dimension" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [1383 1391])
                                    ("Dimension" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("Dimension" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1394 1406])
                                    ("Dimension" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("value" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1419 1431]))                                          
                                        :type ("Dimension" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1409 1432])
                                    ("Dimension" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [1435 1450])
                                    ("value_" variable
                                       (:constant-flag t
                                        :type ("int64" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1454 1473])
                                    ("InferenceContext" friend nil (reparse-symbol classsubparts) [1477 1506])
                                    ("ShapeManager" friend nil (reparse-symbol classsubparts) [1510 1535])
                                    ("TF_DISALLOW_COPY_AND_ASSIGN" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Dimension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1567 1577]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1539 1578]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [1364 1581])
                            ("DimensionHandle" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1608 1615])
                                    ("DimensionHandle" function
                                       (:constructor-flag t
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1618 1638])
                                    ("private" label nil (reparse-symbol classsubparts) [1641 1649])
                                    ("DimensionHandle" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("dim" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Dimension" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1668 1689]))                                          
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1652 1705])
                                    ("->" function
                                       (:operator-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :type ("Dimension" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1709 1755])
                                    ("IsSet" function (:type "bool") (reparse-symbol classsubparts) [1758 1804])
                                    ("SameHandle" function
                                       (:arguments 
                                          ( ("d" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1823 1841]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [1807 1874])
                                    ("ptr_" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Dimension" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1878 1910])
                                    ("DimensionOrConstant" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol classsubparts) [1921 1948])
                                    ("InferenceContext" friend nil (reparse-symbol classsubparts) [1951 1980])
                                    ("ShapeInferenceTest" friend nil (reparse-symbol classsubparts) [1984 2015])
                                    ("ShapeInferenceTestutil" friend nil (reparse-symbol classsubparts) [2019 2054])
                                    ("tensorflow::ShapeRefinerTest" variable (:type "int") (reparse-symbol classsubparts) [2073 2102])
                                    ("ShapeManager" friend nil (reparse-symbol classsubparts) [2105 2130]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [1583 2164])
                            ("Shape" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [2249 2257])
                                    ("Shape" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("Shape" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2260 2268])
                                    ("Shape" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("dims" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("DimensionHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2277 2318]))                                          
                                        :type ("Shape" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2271 2319])
                                    ("Shape" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2322 2333])
                                    ("rank_" variable
                                       (:constant-flag t
                                        :type ("int32" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2337 2355])
                                    ("dims_" variable
                                       (:constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("DimensionHandle" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2358 2399])
                                    ("InferenceContext" friend nil (reparse-symbol classsubparts) [2403 2432])
                                    ("ShapeManager" friend nil (reparse-symbol classsubparts) [2436 2461])
                                    ("TF_DISALLOW_COPY_AND_ASSIGN" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("Shape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2494 2500]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2466 2501]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2234 2504])
                            ("ShapeHandle" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2527 2534])
                                    ("ShapeHandle" function
                                       (:constructor-flag t
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2537 2553])
                                    ("private" label nil (reparse-symbol classsubparts) [2556 2564])
                                    ("ShapeHandle" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("shape" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Shape" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2579 2598]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2567 2616])
                                    ("->" function
                                       (:operator-flag t
                                        :pointer 1
                                        :constant-flag t
                                        :type ("Shape" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2619 2661])
                                    ("IsSet" function (:type "bool") (reparse-symbol classsubparts) [2664 2710])
                                    ("SameHandle" function
                                       (:arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2729 2743]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [2713 2776])
                                    ("ptr_" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "nullptr"
                                        :type ("Shape" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2780 2808])
                                    ("InferenceContext" friend nil (reparse-symbol classsubparts) [2812 2841])
                                    ("ShapeInferenceTest" friend nil (reparse-symbol classsubparts) [2845 2876])
                                    ("ShapeInferenceTestutil" friend nil (reparse-symbol classsubparts) [2880 2915])
                                    ("tensorflow::ShapeRefinerTest" variable (:type "int") (reparse-symbol classsubparts) [2934 2963])
                                    ("ShapeManager" friend nil (reparse-symbol classsubparts) [2966 2991]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2506 3025])
                            ("DimensionOrConstant" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3178 3185])
                                    ("DimensionOrConstant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("dim" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3241 3261]))                                          
                                        :type ("DimensionOrConstant" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [3221 3262])
                                    ("DimensionOrConstant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("val" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3350 3360]))                                          
                                        :type ("DimensionOrConstant" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [3330 3361])
                                    ("dim" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3427 3447])
                                    ("val" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3450 3460])
                                    ("private" label nil (reparse-symbol classsubparts) [3463 3471])
                                    ("DimensionOrConstant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("DimensionOrConstant" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [3474 3496]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3148 3499])
                            ("ShapeAndType" type
                               (:members 
                                  ( ("ShapeAndType" function
                                       (:constructor-flag t
                                        :type ("ShapeAndType" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [3525 3542])
                                    ("ShapeAndType" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3558 3572])
                                            ("t" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3573 3584]))                                          
                                        :type ("ShapeAndType" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [3545 3608])
                                    ("shape" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3612 3630])
                                    ("dtype" variable
                                       (:default-value "DT_INVALID"
                                        :type ("DataType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3633 3661]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3501 3664])
                            ("InferenceContext" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [4227 4234])
                                    ("kUnknownDim" variable
                                       (:default-value "-1"
                                        :type ("int64" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4254 4277])
                                    ("kUnknownRank" variable
                                       (:default-value "-1"
                                        :type ("int32" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4297 4321])
                                    ("InferenceContext" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("graph_def_version" variable (:type "int") (reparse-symbol arg-sub-list) [4924 4946])
                                            ("node_def" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("NodeDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4947 4971])
                                            ("op_def" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OpDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4991 5011])
                                            ("input_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [5031 5076])
                                            ("input_tensors" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("Tensor" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [5096 5144])
                                            ("input_tensors_as_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [5164 5220])
                                            ("input_handle_shapes_and_types" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("std::unique_ptr" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5240 5349]))                                          
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4907 5350])
                                    ("InferenceContext" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("graph_def_version" variable (:type "int") (reparse-symbol arg-sub-list) [5965 5987])
                                            ("node_def" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("NodeDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5988 6012])
                                            ("op_def" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OpDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6013 6033])
                                            ("input_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("TensorShapeProto" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6040 6090])
                                            ("input_tensors" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("Tensor" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6097 6145])
                                            ("input_tensors_as_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("TensorShapeProto" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6152 6213])
                                            ("input_handle_shapes_and_types" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("std::unique_ptr" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6220 6359]))                                          
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5941 6360])
                                    ("InferenceContext" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("graph_def_version" variable (:type "int") (reparse-symbol arg-sub-list) [6975 6997])
                                            ("node_def" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("NodeDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6998 7022])
                                            ("op_def" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OpDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7023 7043])
                                            ("input_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("PartialTensorShape" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7050 7102])
                                            ("input_tensors" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("Tensor" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7109 7157])
                                            ("input_tensors_as_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("PartialTensorShape" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7164 7227])
                                            ("input_handle_shapes_and_types" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("std::unique_ptr" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [7234 7375]))                                          
                                        :type ("InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6951 7376])
                                    ("InferenceContext" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [7380 7400])
                                    ("Run" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("std::function" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7610 7630])
                                            ("" variable (:type ("Status" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7630 7674])
                                            ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7677 7680]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7592 7681])
                                    ("MergeInput" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [8750 8758])
                                            ("shape" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8759 8777]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [8734 8985])
                                    ("RelaxInput" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [10432 10440])
                                            ("shape" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10441 10459]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [10416 10655])
                                    ("input" function
                                       (:arguments 
                                          ( ("idx" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10677 10687]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10659 10718])
                                    ("input" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("input_name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10734 10757])
                                            ("output" variable
                                               (:pointer 1
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [10758 10791]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10721 10798])
                                    ("num_inputs" function (:type "int") (reparse-symbol classsubparts) [10801 10850])
                                    ("input_tensor" function
                                       (:pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [11012 11020]))                                          
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10985 11140])
                                    ("requested_input_tensor" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [11246 11254]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [11218 11307])
                                    ("requested_input_tensor_as_partial_shape" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [11465 11473]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [11420 11543])
                                    ("set_input_tensors" function
                                       (:arguments 
                                          ( ("input_tensors" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("Tensor" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [11570 11618]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11547 11660])
                                    ("set_input_tensors_as_shapes" function
                                       (:arguments 
                                          ( ("input_tensors_as_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [11704 11760]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11664 11822])
                                    ("set_output" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [11842 11850])
                                            ("shape" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11851 11869]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11826 11896])
                                    ("set_output" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("output_name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11917 11941])
                                            ("shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [11962 12001]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11899 12002])
                                    ("num_outputs" function (:type "int") (reparse-symbol classsubparts) [12006 12057])
                                    ("output" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [12079 12087]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12060 12119])
                                    ("output" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("output_name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12136 12160])
                                            ("output" variable
                                               (:pointer 1
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [12177 12210]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12122 12217])
                                    ("attrs" function (:type ("AttrSlice" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12221 12278])
                                    ("op" function
                                       (:prototype-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12282 12300])
                                    ("Dim" function
                                       (:arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12440 12454])
                                            ("idx" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12455 12465]))                                          
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12420 12637])
                                    ("Rank" function
                                       (:arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12651 12665]))                                          
                                        :type ("int32" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12640 12748])
                                    ("RankKnown" function
                                       (:arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12766 12780]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12751 12845])
                                    ("Value" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("d" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12867 12889]))                                          
                                        :type ("int64" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12848 12951])
                                    ("ValueKnown" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("d" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12977 12999]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12954 13047])
                                    ("ShapeHandleToProto" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("handle" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13197 13216])
                                            ("proto" variable
                                               (:pointer 1
                                                :type ("TensorShapeProto" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [13217 13241]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [13173 13242])
                                    ("FullyDefined" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13337 13351]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [13319 13352])
                                    ("NumElements" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13481 13495]))                                          
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13453 13496])
                                    ("DebugString" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("s" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13519 13533]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13500 13534])
                                    ("DebugString" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("d" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13556 13574]))                                          
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13537 13575])
                                    ("DebugString" function
                                       (:prototype-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13637 13664])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [13951 13970])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [14070 14089])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [14187 14206])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [14509 14528])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [14738 14757])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [15097 15116])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [15401 15420])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [15704 15723])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [16034 16053])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [16240 16259])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [16463 16482])
                                    ("MakeShape" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("dims" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("DimensionHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [16604 16645]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16582 16646])
                                    ("MakeShape" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("dims" variable (:type ("std::initializer_list" type
                                                 (:template-specifier 
                                                    ( ("DimensionOrConstant" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [16671 16719]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16649 16720])
                                    ("UnknownShape" function
                                       (:prototype-flag t
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16758 16785])
                                    ("UnknownShapeOfRank" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("rank" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16879 16890]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16848 16891])
                                    ("Scalar" function
                                       (:prototype-flag t
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16940 16961])
                                    ("Vector" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("dim" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17027 17051]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17008 17052])
                                    ("Matrix" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("dim1" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17119 17144])
                                            ("dim2" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17145 17170]))                                          
                                        :type ("ShapeHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17100 17171])
                                    ("MakeShapeFromShapeTensor" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("input_idx" variable (:type "int") (reparse-symbol arg-sub-list) [17432 17446])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17447 17464]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17400 17465])
                                    ("MakeShapeFromShapeProto" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("proto" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("TensorShapeProto" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17560 17590])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17624 17641]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17529 17642])
                                    ("MakeShapeFromPartialTensorShape" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("partial_shape" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("PartialTensorShape" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17760 17800])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17801 17818]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17714 17819])
                                    ("MakeShapeFromTensorShape" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("shape" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("TensorShape" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17915 17940])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17941 17958]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17883 17959])
                                    ("MakeDim" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("d" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18093 18115]))                                          
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18062 18159])
                                    ("UnknownDim" function
                                       (:typemodifiers ("inline")
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18163 18231])
                                    ("GetScalarFromTensor" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("t" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Tensor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18455 18471])
                                            ("val" variable
                                               (:pointer 1
                                                :type ("int64" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18472 18483]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18428 18484])
                                    ("MakeDimForScalarInput" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [18687 18695])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18696 18717]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [18658 18718])
                                    ("MakeDimForScalarInputWithNegativeIndexing" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [19070 19078])
                                            ("input_rank" variable (:type "int") (reparse-symbol arg-sub-list) [19079 19094])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19146 19167]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19021 19168])
                                    ("GetAttr" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("Status" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("attr_name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19444 19466])
                                            ("value" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19467 19476]))                                          
                                        :prototype-flag t)
                                        (reparse-symbol classsubparts) [19408 19483])
                                    ("Divide" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("dividend" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19702 19727])
                                            ("divisor" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19728 19756])
                                            ("evenly_divisible" variable (:type "bool") (reparse-symbol arg-sub-list) [19773 19795])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19796 19817]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19688 19818])
                                    ("Add" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19888 19910])
                                            ("second" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19911 19938])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [19952 19973]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [19877 19974])
                                    ("Subtract" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20062 20084])
                                            ("second" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20085 20112])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20131 20152]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20046 20153])
                                    ("Multiply" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20232 20254])
                                            ("second" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20255 20282])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20301 20322]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20216 20323])
                                    ("Min" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20542 20564])
                                            ("second" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20565 20592])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20606 20627]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20531 20628])
                                    ("Max" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("first" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20772 20794])
                                            ("second" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20795 20822])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20836 20857]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20761 20858])
                                    ("construction_status" function (:type ("Status" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20862 20929])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [22016 22035])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [22208 22227])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [22807 22826])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [23004 23023])
                                    ("output_handle_shapes_and_types" function
                                       (:pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [23244 23252]))                                          
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("ShapeAndType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [23180 23313])
                                    ("input_handle_shapes_and_types" function
                                       (:pointer 1
                                        :constant-flag t
                                        :arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [23537 23545]))                                          
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("ShapeAndType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [23474 23605])
                                    ("set_output_handle_shapes_and_types" function
                                       (:arguments 
                                          ( ("idx" variable (:type "int") (reparse-symbol arg-sub-list) [23656 23664])
                                            ("shapes_and_types" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeAndType" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [23665 23715]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [23609 23827])
                                    ("MakeShapeFromTensor" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("t" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Tensor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24195 24211])
                                            ("tensor_shape" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24212 24237])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24267 24284]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24168 24285])
                                    ("graph_def_version" function (:type "int") (reparse-symbol classsubparts) [24289 24349])
                                    ("private" label nil (reparse-symbol classsubparts) [24352 24360])
                                    ("ShapeManager" type
                                       (:members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [24447 24454])
                                            ("ShapeManager" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :type ("ShapeManager" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [24459 24474])
                                            ("ShapeManager" function
                                               (:prototype-flag t
                                                :destructor-flag t
                                                :type "void")
                                                (reparse-symbol classsubparts) [24479 24495])
                                            ("MakeShape" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("dims" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("DimensionHandle" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [24621 24662]))                                                  
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [24599 24663])
                                            ("UnknownShape" function
                                               (:prototype-flag t
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [24705 24732])
                                            ("MakeDim" function
                                               (:typemodifiers ("inline")
                                                :arguments 
                                                  ( ("d" variable (:type ("DimensionOrConstant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24870 24892]))                                                  
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [24839 25056])
                                            ("private" label nil (reparse-symbol classsubparts) [25061 25069])
                                            ("all_shapes_" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("Shape" type (:pointer 1) nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [25074 25106])
                                            ("all_dims_" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("Dimension" type (:pointer 1) nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [25135 25169]))                                          
                                        :type "class")
                                        (reparse-symbol classsubparts) [24423 25196])
                                    ("tensorflow::grappler::GraphProperties" variable (:type "int") (reparse-symbol classsubparts) [25215 25253])
                                    ("tensorflow::ShapeRefiner" variable (:type "int") (reparse-symbol classsubparts) [25336 25361])
                                    ("ShapeInferenceTest" friend nil (reparse-symbol classsubparts) [25365 25396])
                                    ("ShapeInferenceTestutil" friend nil (reparse-symbol classsubparts) [25437 25472])
                                    ("PreInputInit" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("op_def" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("OpDef" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25620 25640])
                                            ("input_tensors" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("Tensor" type
                                                             (:pointer 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [25661 25709])
                                            ("input_tensors_as_shapes" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("ShapeHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [25730 25786]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [25602 25787])
                                    ("PostInputInit" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("input_handle_data" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("std::unique_ptr" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [25809 25908]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [25790 25909])
                                    ("GetDimension" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("d" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("DimensionOrConstant" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25942 25971]))                                          
                                        :type ("DimensionHandle" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [25913 25972])
                                    ("ReturnUnknownShape" function
                                       (:arguments 
                                          ( ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26002 26019]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [25976 26077])
                                    ("ReturnCreatedShape" function
                                       (:arguments 
                                          ( ("dims" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("DimensionHandle" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [26106 26147])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26176 26193]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26080 26252])
                                    ("AttachContext" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("status" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Status" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26327 26348]))                                          
                                        :type ("Status" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26306 26349])
                                    ("Relax" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("d0" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26557 26576])
                                            ("d1" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26577 26596])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("DimensionHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26597 26618]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [26546 26619])
                                    ("Relax" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("s0" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26763 26778])
                                            ("s1" variable (:type ("ShapeHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26779 26794])
                                            ("out" variable
                                               (:pointer 1
                                                :type ("ShapeHandle" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26795 26812]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [26752 26813])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [27046 27065])
                                    ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [27312 27331])
                                    ("shape_manager_" variable (:type ("ShapeManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27335 27363])
                                    ("inputs_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("ShapeHandle" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27464 27497])
                                    ("input_tensors_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("Tensor" type
                                                 (:pointer 1
                                                  :constant-flag t)
                                                  nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27500 27542])
                                    ("requested_input_tensor_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27545 27587])
                                    ("outputs_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("ShapeHandle" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27590 27624])
                                    ("input_tensors_as_shapes_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("ShapeHandle" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27670 27720])
                                    ("requested_input_tensor_as_partial_shape_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27723 27782])
                                    ("input_handle_shapes_and_types_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("std::unique_ptr" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [27964 28057])
                                    ("output_handle_shapes_and_types_" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("std::unique_ptr" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [28241 28335])
                                    ("graph_def_version_" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [28339 28368])
                                    ("node_def_" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("NodeDef" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [28371 28396])
                                    ("input_name_map_" variable (:type ("NameRangeMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28399 28428])
                                    ("output_name_map_" variable (:type ("NameRangeMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28431 28461])
                                    ("construction_status_" variable (:type ("Status" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28566 28594])
                                    ("TF_DISALLOW_COPY_AND_ASSIGN" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("InferenceContext" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28626 28643]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [28598 28644]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [4201 28647])
                            ("Dimension" function
                               (:constructor-flag t
                                :parent "Dimension"
                                :typemodifiers ("inline")
                                :type ("Dimension" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [28792 28864])
                            ("Dimension" function
                               (:constructor-flag t
                                :parent "Dimension"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("value" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28893 28905]))                                  
                                :type ("Dimension" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [28865 29109])
                            ("Shape" function
                               (:constructor-flag t
                                :parent "Shape"
                                :typemodifiers ("inline")
                                :type ("Shape" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [29111 29175])
                            ("Shape" function
                               (:constructor-flag t
                                :parent "Shape"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("dims" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("DimensionHandle" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [29196 29237]))                                  
                                :type ("Shape" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [29176 29278])
                            ("DimensionOrConstant" function
                               (:constructor-flag t
                                :parent "DimensionOrConstant"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("dim" variable (:type ("DimensionHandle" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29328 29348]))                                  
                                :type ("DimensionOrConstant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [29280 29438])
                            ("DimensionOrConstant" function
                               (:constructor-flag t
                                :parent "DimensionOrConstant"
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("val" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29488 29498]))                                  
                                :type ("DimensionOrConstant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [29440 29691])
                            ("GetAttr" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("Status" type (:type "class") nil nil)
                                :arguments 
                                  ( ("attr_name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29745 29767])
                                    ("value" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29768 29777]))                                  
                                :parent "InferenceContext")
                                (reparse-symbol namespacesubparts) [29693 29839]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1223 29842]))                  
                :type "namespace")
                nil [1107 29874]))          
      :file "shape_inference.h"
      :pointmax 29969
      :fsize 29968
      :lastmodtime '(23410 40770 219280 209000)
      :unmatched-syntax '((thing 7675 . 7676) (thing 7674 . 7675) (thing 7636 . 7674) (thing 7629 . 7630) (thing 4287 . 4296) (thing 4280 . 4286) (thing 4244 . 4253) (thing 4237 . 4243) (thing 2991 . 2992) (thing 2933 . 2934) (thing 2932 . 2933) (thing 2926 . 2931) (thing 2919 . 2925) (thing 2915 . 2916) (thing 2876 . 2877) (thing 2841 . 2842) (thing 2461 . 2462) (thing 2432 . 2433) (thing 2130 . 2131) (thing 2072 . 2073) (thing 2071 . 2072) (thing 2065 . 2070) (thing 2058 . 2064) (thing 2054 . 2055) (thing 2015 . 2016) (thing 1980 . 1981) (thing 1914 . 1920) (thing 1535 . 1536) (thing 1506 . 1507) (thing 13868 . 13874) (thing 13875 . 13883) (thing 13883 . 13950) (thing 13973 . 13979) (thing 13980 . 13995) (thing 13995 . 14069) (thing 14092 . 14098) (thing 14099 . 14113) (thing 14113 . 14186) (thing 14417 . 14423) (thing 14424 . 14433) (thing 14433 . 14508) (thing 14660 . 14666) (thing 14667 . 14672) (thing 14672 . 14737) (thing 14977 . 14983) (thing 14984 . 14995) (thing 14995 . 15096) (thing 15311 . 15317) (thing 15318 . 15323) (thing 15323 . 15400) (thing 15624 . 15630) (thing 15631 . 15639) (thing 15639 . 15703) (thing 15943 . 15949) (thing 15950 . 15958) (thing 15958 . 16033) (thing 16150 . 16156) (thing 16157 . 16168) (thing 16168 . 16239) (thing 16350 . 16356) (thing 16357 . 16367) (thing 16367 . 16462) (thing 21907 . 21911) (thing 21912 . 21942) (thing 21942 . 22015) (thing 22098 . 22102) (thing 22103 . 22134) (thing 22134 . 22207) (thing 22693 . 22697) (thing 22698 . 22733) (thing 22733 . 22806) (thing 22889 . 22893) (thing 22894 . 22930) (thing 22930 . 23003) (thing 25200 . 25206) (thing 25207 . 25212) (thing 25213 . 25214) (thing 25214 . 25215) (thing 25321 . 25327) (thing 25328 . 25333) (thing 25334 . 25335) (thing 25335 . 25336) (thing 25396 . 25397) (thing 25472 . 25473) (thing 26913 . 26917) (thing 26918 . 26943) (thing 26943 . 27045) (thing 27174 . 27178) (thing 27179 . 27209) (thing 27209 . 27311))
      :lexical-table 
        '(("THIRD_PARTY_TENSORFLOW_CORE_FRAMEWORK_SHAPE_INFERENCE_H_")
          )
)
    (semanticdb-table "node_def_util.h"
      :file "node_def_util.h"
      :fsize 13315
      :lastmodtime '(23410 40770 212280 388000))
    (semanticdb-table "tensor.h"
      :major-mode 'c++-mode
      :tags 
        '( ("TENSORFLOW_CORE_FRAMEWORK_TENSOR_H_" variable (:constant-flag t) nil [723 758])
            ("third_party/eigen3/unsupported/Eigen/CXX11/Tensor" include nil nil [760 820])
            ("tensorflow/core/framework/allocator.h" include nil nil [821 869])
            ("tensorflow/core/framework/tensor_shape.h" include nil nil [870 921])
            ("tensorflow/core/framework/tensor_types.h" include nil nil [922 973])
            ("tensorflow/core/framework/types.h" include nil nil [974 1018])
            ("tensorflow/core/framework/types.pb.h" include nil nil [1019 1066])
            ("tensorflow/core/lib/core/refcount.h" include nil nil [1067 1113])
            ("tensorflow/core/lib/core/status.h" include nil nil [1114 1158])
            ("tensorflow/core/lib/core/stringpiece.h" include nil nil [1159 1208])
            ("tensorflow/core/lib/gtl/inlined_vector.h" include nil nil [1209 1260])
            ("tensorflow/core/platform/logging.h" include nil nil [1261 1306])
            ("tensorflow/core/platform/macros.h" include nil nil [1307 1351])
            ("tensorflow/core/platform/types.h" include nil nil [1352 1395])
            ("tensorflow" type
               (:members 
                  ( ("AllocationDescription" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1546 1574])
                    ("Allocator" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1575 1591])
                    ("OpKernelContext" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1592 1614])
                    ("TensorBuffer" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1615 1634])
                    ("TensorCApi" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1635 1652])
                    ("TensorDescription" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1653 1677])
                    ("TensorProto" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1678 1696])
                    ("VariantTensorData" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1697 1721])
                    ("Tensor" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1806 1813])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2354 2363])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2830 2844])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2845 2870]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2823 2871])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:pointer 1
                                        :type ("Allocator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3391 3404])
                                    ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3405 3419])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3420 3445]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3384 3446])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:pointer 1
                                        :type ("Allocator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4105 4118])
                                    ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4119 4133])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4134 4159])
                                    ("allocation_attr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AllocationAttributes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4169 4213]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4098 4214])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4457 4471]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4450 4472])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4507 4527]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4500 4528])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4717 4725])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4726 4732]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4710 4733])
                            ("Tensor" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4737 4747])
                            ("dtype" function (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4780 4833])
                            ("shape" function
                               (:constant-flag t
                                :type ("TensorShape" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4876 4927])
                            ("dims" function (:type "int") (reparse-symbol classsubparts) [5102 5145])
                            ("dim_size" function
                               (:arguments 
                                  ( ("d" variable (:type "int") (reparse-symbol arg-sub-list) [5213 5219]))                                  
                                :type ("int64" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5198 5257])
                            ("NumElements" function (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5310 5370])
                            ("IsSameSize" function
                               (:arguments 
                                  ( ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5390 5406]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5374 5460])
                            ("SharesBufferWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5559 5575]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5537 5582])
                            ("IsInitialized" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5800 5827])
                            ("TotalBytes" function
                               (:prototype-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5888 5914])
                            ("AllocatedBytes" function
                               (:prototype-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5978 6008])
                            ("IsAligned" function (:type "bool") (reparse-symbol classsubparts) [6059 6251])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6343 6363]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6325 6431])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6509 6517])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6518 6524]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6491 6525])
                            ("Slice" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dim0_start" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7625 7642])
                                    ("dim0_limit" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7643 7660]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7612 7667])
                            ("Extract" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("start" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8240 8252])
                                    ("num_elems" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8253 8269])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8287 8312]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8225 8319])
                            ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [8528 8547])
                            ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [8605 8624])
                            ("AsProtoField" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("TensorProto" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8895 8914]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8877 8921])
                            ("AsProtoTensorContent" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("TensorProto" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8950 8969]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8924 8976])
                            ("vec" function (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9918 9960])
                            ("matrix" function (:type ("Matrix" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10008 10056])
                            ("tensor" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10125 10141])
                            ("bit_casted_tensor" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10480 10507])
                            ("reinterpret_last_dimension" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11030 11066])
                            ("flat" function (:type ("Flat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12276 12335])
                            ("unaligned_flat" function (:type ("UnalignedFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12383 12471])
                            ("flat_inner_dims" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12819 12844])
                            ("flat_outer_dims" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13193 13218])
                            ("flat_inner_outer_dims" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("begin" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13785 13797]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13756 13798])
                            ("shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [13881 13914]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13867 13915])
                            ("bit_casted_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14287 14320]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14255 14321])
                            ("unaligned_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14430 14463]))                                  
                                :type ("UnalignedTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14390 14464])
                            ("scalar" function
                               (:prototype-flag t
                                :type ("Scalar" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14751 14767])
                            ("vec" function (:type ("ConstVec" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14862 14915])
                            ("matrix" function (:type ("ConstMatrix" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14963 15022])
                            ("tensor" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15091 15118])
                            ("bit_casted_tensor" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15457 15495])
                            ("reinterpret_last_dimension" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16018 16065])
                            ("flat" function (:type ("ConstFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16113 16183])
                            ("unaligned_flat" function (:type ("UnalignedConstFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16231 16330])
                            ("shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16425 16458]))                                  
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16399 16465])
                            ("bit_casted_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16842 16875]))                                  
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16805 16882])
                            ("unaligned_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16996 17029]))                                  
                                :type ("UnalignedConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16951 17036])
                            ("scalar" function
                               (:prototype-flag t
                                :type ("ConstScalar" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17084 17111])
                            ("flat_inner_dims" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17184 17220])
                            ("flat_outer_dims" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17293 17329])
                            ("flat_inner_outer_dims" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("begin" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17436 17448]))                                  
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17402 17455])
                            ("SummarizeValue" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("max_entries" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17551 17569]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17529 17576])
                            ("DebugString" function
                               (:prototype-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17649 17676])
                            ("FillDescription" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("description" variable
                                       (:pointer 1
                                        :type ("TensorDescription" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17827 17858]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17806 17865])
                            ("tensor_data" function
                               (:prototype-flag t
                                :type ("StringPiece" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18406 18438])
                            ("UnsafeCopyFromInternal" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18634 18648])
                                    ("dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18649 18664])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18695 18714]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18606 18715])
                            ("base" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :pointer 1
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [18719 18759])
                            ("private" label nil (reparse-symbol classsubparts) [18761 18769])
                            ("RefCountIsOne" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [18867 18894])
                            ("CheckType" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expected_dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18912 18936]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18897 18943])
                            ("CheckTypeAndIsAligned" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expected_dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18973 18997]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18946 19004])
                            ("CheckIsAlignedAndSingleElement" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [19007 19051])
                            ("set_dtype" function
                               (:arguments 
                                  ( ("t" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19069 19080]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [19054 19109])
                            ("FillDimsAndValidateCompatibleShape" function
                               (:template 
                                  ( ("size_t" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19185 19218])
                                    ("dims" variable
                                       (:pointer 1
                                        :type ("Eigen::array" type
                                             (:template-specifier 
                                                ( ("Eigen::DenseIndex" type nil nil nil)
                                                  ("NDIMS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [19225 19270]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [19112 19277])
                            ("ComputeFlatInnerDims" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("orig" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19378 19406])
                                    ("num_out_dims" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19407 19426]))                                  
                                :type ("gtl::InlinedVector" type
                                     (:template-specifier 
                                        ( ("int64" type nil nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [19314 19427])
                            ("ComputeFlatOuterDims" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("orig" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [19494 19522])
                                    ("num_out_dims" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19523 19542]))                                  
                                :type ("gtl::InlinedVector" type
                                     (:template-specifier 
                                        ( ("int64" type nil nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [19430 19543])
                            ("shape_" variable (:type ("TensorShape" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19547 19566])
                            ("buf_" variable
                               (:pointer 1
                                :type ("TensorBuffer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19569 19588])
                            ("DMAHelper" friend nil (reparse-symbol classsubparts) [19592 19614])
                            ("TensorCApi" friend nil (reparse-symbol classsubparts) [19618 19641])
                            ("TensorReference" friend nil (reparse-symbol classsubparts) [19645 19673])
                            ("VariableOp" friend nil (reparse-symbol classsubparts) [19705 19728])
                            ("AutoReloadVariableOp" friend nil (reparse-symbol classsubparts) [19770 19803])
                            ("TensorTestHelper" friend nil (reparse-symbol classsubparts) [19835 19864])
                            ("OpKernelContext" friend nil (reparse-symbol classsubparts) [19900 19928])
                            ("AssignVariableOp" type
                               (:template 
                                  ( ("Device" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [19972 20043])
                            ("PrepareToUpdateVariable" function
                               (:template 
                                  ( ("Device" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type ("Status" type (:type "class") nil nil)
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20167 20188])
                                    ("tensor" variable
                                       (:pointer 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20189 20204]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [20081 20205])
                            ("NumpyTensorBuffer" friend nil (reparse-symbol classsubparts) [20243 20273])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20507 20521])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20522 20547])
                                    ("buf" variable
                                       (:pointer 1
                                        :type ("TensorBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20548 20566]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [20500 20567])
                            ("CanUseDMA" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [20571 20594])
                            ("set_shape" function
                               (:arguments 
                                  ( ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20788 20813]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20773 20885])
                            ("CopyFromInternal" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20911 20931])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20932 20957]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [20889 20958])
                            ("FillDimsAndValidateCompatibleShape" function
                               (:template 
                                  ( ("size_t" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("dims" variable
                                       (:pointer 1
                                        :type ("Eigen::array" type
                                             (:template-specifier 
                                                ( ("Eigen::DenseIndex" type nil nil nil)
                                                  ("NDIMS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [21035 21080])
                                    ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [21087 21120]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [20962 21127]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1790 21130])
                    ("TensorBuffer" type
                       (:superclasses 
                          ( ("core::RefCounted" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [21286 21293])
                            ("data" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [21382 21413])
                            ("size" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21416 21448])
                            ("root_buffer" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("TensorBuffer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21574 21614])
                            ("FillAllocationDescription" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("AllocationDescription" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21720 21749]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [21674 21760])
                            ("base" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :pointer 1)
                                (reparse-symbol classsubparts) [21764 21850])
                            ("OwnsMemory" function
                               (:typemodifiers ("virtual")
                                :type "bool")
                                (reparse-symbol classsubparts) [21913 21961]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [21238 21964])
                    ("base" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :parent "Tensor"
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [21966 22069])
                    ("tensor" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22134 22340])
                    ("tensor" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22405 22638])
                    ("bit_casted_tensor" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22703 22893])
                    ("bit_casted_tensor" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22958 23175])
                    ("reinterpret_last_dimension" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23240 23659])
                    ("reinterpret_last_dimension" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23724 24169])
                    ("FillDimsAndValidateCompatibleShape" function
                       (:template 
                          ( ("size_t" type nil nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [24248 24281])
                            ("dims" variable
                               (:pointer 1
                                :type ("Eigen::array" type
                                     (:template-specifier 
                                        ( ("Eigen::DenseIndex" type nil nil nil)
                                          ("NDIMS" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [24286 24331]))                          
                        :parent "Tensor")
                        (reparse-symbol namespacesubparts) [24171 24565])
                    ("shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [24657 24690]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24630 24914])
                    ("bit_casted_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [25017 25050]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24979 25247])
                    ("unaligned_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [25358 25391]))                          
                        :type ("UnalignedTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [25312 25612])
                    ("FillDimsAndValidateCompatibleShape" function
                       (:template 
                          ( ("size_t" type nil nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("dims" variable
                               (:pointer 1
                                :type ("Eigen::array" type
                                     (:template-specifier 
                                        ( ("Eigen::DenseIndex" type nil nil nil)
                                          ("NDIMS" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [25691 25736])
                            ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [25741 25774]))                          
                        :parent "Tensor")
                        (reparse-symbol namespacesubparts) [25614 26008])
                    ("shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [26105 26138]))                          
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26073 26366])
                    ("bit_casted_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [26474 26507]))                          
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26431 26708])
                    ("unaligned_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [26824 26857]))                          
                        :type ("UnalignedConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26773 27082])
                    ("scalar" function
                       (:parent "Tensor"
                        :type ("Scalar" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27126 27237])
                    ("scalar" function
                       (:parent "Tensor"
                        :type ("ConstScalar" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27281 27408])
                    ("flat_inner_dims" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27473 27585])
                    ("flat_outer_dims" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27650 27762])
                    ("flat_inner_outer_dims" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("begin" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27864 27876]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27827 28055])
                    ("flat_inner_dims" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28120 28243])
                    ("flat_outer_dims" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28308 28431])
                    ("flat_inner_outer_dims" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("begin" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28538 28550]))                          
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28496 28735])
                    ("Tensor" function
                       (:constructor-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28759 28779]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28737 28854])
                    ("Tensor" function
                       (:constructor-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28878 28886])
                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28887 28893]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28856 28978])
                    ("=" function
                       (:operator-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29013 29021])
                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29022 29028]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28980 29266]))                  
                :type "namespace")
                nil [1397 29290]))          
      :file "tensor.h"
      :pointmax 29364
      :fsize 29363
      :lastmodtime '(23410 40770 220280 184000)
      :unmatched-syntax '((thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4441 . 4449) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 4724 . 4725) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6516 . 6517) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6757 . 6761) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6762 . 6770) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6770 . 6833) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6834 . 6852) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 6853 . 6978) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8487 . 8491) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8492 . 8501) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8501 . 8527) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8550 . 8554) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8555 . 8564) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 8564 . 8604) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9874 . 9882) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9883 . 9884) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9884 . 9892) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9893 . 9894) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9894 . 9895) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9898 . 9906) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9907 . 9913) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9913 . 9914) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9915 . 9916) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9917 . 9918) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9964 . 9972) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9973 . 9974) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9974 . 9982) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9983 . 9984) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9984 . 9985) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9988 . 9996) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 9997 . 10003) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10003 . 10004) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10004 . 10005) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10005 . 10006) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10060 . 10068) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10069 . 10070) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10070 . 10078) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10079 . 10080) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10080 . 10081) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10082 . 10088) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10089 . 10094) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10094 . 10095) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10098 . 10106) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10107 . 10113) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10113 . 10114) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10114 . 10115) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10115 . 10116) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10117 . 10122) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10122 . 10123) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10123 . 10124) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10124 . 10125) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10415 . 10423) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10424 . 10425) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10425 . 10433) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10434 . 10435) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10435 . 10436) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10437 . 10443) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10444 . 10449) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10449 . 10450) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10453 . 10461) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10462 . 10468) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10468 . 10469) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10469 . 10470) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10470 . 10471) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10472 . 10477) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10477 . 10478) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10478 . 10479) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10479 . 10480) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10965 . 10973) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10974 . 10975) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10975 . 10983) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10984 . 10985) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10985 . 10986) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10987 . 10993) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10994 . 10999) (thing 10999 . 11000) (thing 10999 . 11000) (thing 10999 . 11000) (thing 10999 . 11000) (thing 10999 . 11000) (thing 10999 . 11000) (thing 10999 . 11000) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11003 . 11011) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11012 . 11018) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11018 . 11019) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11019 . 11020) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11020 . 11021) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11022 . 11027) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11027 . 11028) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11028 . 11029) (thing 11029 . 11030) (thing 11029 . 11030) (thing 11029 . 11030) (thing 11029 . 11030) (thing 11029 . 11030) (thing 11029 . 11030) (thing 11029 . 11030) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12232 . 12240) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12241 . 12242) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12242 . 12250) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12251 . 12252) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12252 . 12253) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12256 . 12264) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12265 . 12271) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12271 . 12272) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12272 . 12273) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12273 . 12274) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12274 . 12275) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12275 . 12276) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12339 . 12347) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12348 . 12349) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12349 . 12357) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12358 . 12359) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12359 . 12360) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12363 . 12371) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12372 . 12378) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12378 . 12379) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12379 . 12380) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12380 . 12381) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12381 . 12382) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12382 . 12383) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12750 . 12758) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12759 . 12760) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12760 . 12768) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12769 . 12770) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12770 . 12771) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12772 . 12778) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12779 . 12784) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12785 . 12786) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12787 . 12788) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12788 . 12789) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12792 . 12800) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12801 . 12807) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12807 . 12808) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12808 . 12809) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12809 . 12810) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12811 . 12816) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12816 . 12817) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12817 . 12818) (thing 12818 . 12819) (thing 12818 . 12819) (thing 12818 . 12819) (thing 12818 . 12819) (thing 12818 . 12819) (thing 12818 . 12819) (thing 12818 . 12819) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13124 . 13132) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13133 . 13134) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13134 . 13142) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13143 . 13144) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13144 . 13145) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13146 . 13152) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13153 . 13158) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13159 . 13160) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13161 . 13162) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13162 . 13163) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13166 . 13174) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13175 . 13181) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13181 . 13182) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13182 . 13183) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13183 . 13184) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13185 . 13190) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13190 . 13191) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13191 . 13192) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13192 . 13193) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13687 . 13695) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13696 . 13697) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13697 . 13705) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13706 . 13707) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13707 . 13708) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13709 . 13715) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13716 . 13721) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13722 . 13723) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13724 . 13725) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13725 . 13726) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13729 . 13737) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13738 . 13744) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13744 . 13745) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13745 . 13746) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13746 . 13747) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13748 . 13753) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13753 . 13754) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13754 . 13755) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13755 . 13756) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13802 . 13810) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13811 . 13812) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13812 . 13820) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13821 . 13822) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13822 . 13823) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13824 . 13830) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13831 . 13836) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13836 . 13837) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13840 . 13848) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13849 . 13855) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13855 . 13856) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13856 . 13857) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13857 . 13858) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13859 . 13864) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13864 . 13865) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13865 . 13866) (thing 13866 . 13867) (thing 13866 . 13867) (thing 13866 . 13867) (thing 13866 . 13867) (thing 13866 . 13867) (thing 13866 . 13867) (thing 13866 . 13867) (thing 14190 . 14198) (thing 14190 . 14198) (thing 14190 . 14198) (thing 14190 . 14198) (thing 14190 . 14198) (thing 14199 . 14200) (thing 14199 . 14200) (thing 14199 . 14200) (thing 14199 . 14200) (thing 14199 . 14200) (thing 14200 . 14208) (thing 14200 . 14208) (thing 14200 . 14208) (thing 14200 . 14208) (thing 14200 . 14208) (thing 14209 . 14210) (thing 14209 . 14210) (thing 14209 . 14210) (thing 14209 . 14210) (thing 14209 . 14210) (thing 14210 . 14211) (thing 14210 . 14211) (thing 14210 . 14211) (thing 14210 . 14211) (thing 14210 . 14211) (thing 14212 . 14218) (thing 14212 . 14218) (thing 14212 . 14218) (thing 14212 . 14218) (thing 14212 . 14218) (thing 14219 . 14224) (thing 14219 . 14224) (thing 14219 . 14224) (thing 14219 . 14224) (thing 14219 . 14224) (thing 14224 . 14225) (thing 14224 . 14225) (thing 14224 . 14225) (thing 14224 . 14225) (thing 14224 . 14225) (thing 14228 . 14236) (thing 14228 . 14236) (thing 14228 . 14236) (thing 14228 . 14236) (thing 14228 . 14236) (thing 14237 . 14243) (thing 14237 . 14243) (thing 14237 . 14243) (thing 14237 . 14243) (thing 14237 . 14243) (thing 14243 . 14244) (thing 14243 . 14244) (thing 14243 . 14244) (thing 14243 . 14244) (thing 14243 . 14244) (thing 14244 . 14245) (thing 14244 . 14245) (thing 14244 . 14245) (thing 14244 . 14245) (thing 14244 . 14245) (thing 14245 . 14246) (thing 14245 . 14246) (thing 14245 . 14246) (thing 14245 . 14246) (thing 14245 . 14246) (thing 14247 . 14252) (thing 14247 . 14252) (thing 14247 . 14252) (thing 14247 . 14252) (thing 14247 . 14252) (thing 14252 . 14253) (thing 14252 . 14253) (thing 14252 . 14253) (thing 14252 . 14253) (thing 14252 . 14253) (thing 14253 . 14254) (thing 14253 . 14254) (thing 14253 . 14254) (thing 14253 . 14254) (thing 14253 . 14254) (thing 14254 . 14255) (thing 14254 . 14255) (thing 14254 . 14255) (thing 14254 . 14255) (thing 14254 . 14255) (thing 14325 . 14333) (thing 14325 . 14333) (thing 14325 . 14333) (thing 14325 . 14333) (thing 14334 . 14335) (thing 14334 . 14335) (thing 14334 . 14335) (thing 14334 . 14335) (thing 14335 . 14343) (thing 14335 . 14343) (thing 14335 . 14343) (thing 14335 . 14343) (thing 14344 . 14345) (thing 14344 . 14345) (thing 14344 . 14345) (thing 14344 . 14345) (thing 14345 . 14346) (thing 14345 . 14346) (thing 14345 . 14346) (thing 14345 . 14346) (thing 14347 . 14353) (thing 14347 . 14353) (thing 14347 . 14353) (thing 14347 . 14353) (thing 14354 . 14359) (thing 14354 . 14359) (thing 14354 . 14359) (thing 14354 . 14359) (thing 14359 . 14360) (thing 14359 . 14360) (thing 14359 . 14360) (thing 14359 . 14360) (thing 14363 . 14371) (thing 14363 . 14371) (thing 14363 . 14371) (thing 14363 . 14371) (thing 14372 . 14378) (thing 14372 . 14378) (thing 14372 . 14378) (thing 14372 . 14378) (thing 14378 . 14379) (thing 14378 . 14379) (thing 14378 . 14379) (thing 14378 . 14379) (thing 14379 . 14380) (thing 14379 . 14380) (thing 14379 . 14380) (thing 14379 . 14380) (thing 14380 . 14381) (thing 14380 . 14381) (thing 14380 . 14381) (thing 14380 . 14381) (thing 14382 . 14387) (thing 14382 . 14387) (thing 14382 . 14387) (thing 14382 . 14387) (thing 14387 . 14388) (thing 14387 . 14388) (thing 14387 . 14388) (thing 14387 . 14388) (thing 14388 . 14389) (thing 14388 . 14389) (thing 14388 . 14389) (thing 14388 . 14389) (thing 14389 . 14390) (thing 14389 . 14390) (thing 14389 . 14390) (thing 14389 . 14390) (thing 14707 . 14715) (thing 14707 . 14715) (thing 14707 . 14715) (thing 14707 . 14715) (thing 14716 . 14717) (thing 14716 . 14717) (thing 14716 . 14717) (thing 14716 . 14717) (thing 14717 . 14725) (thing 14717 . 14725) (thing 14717 . 14725) (thing 14717 . 14725) (thing 14726 . 14727) (thing 14726 . 14727) (thing 14726 . 14727) (thing 14726 . 14727) (thing 14727 . 14728) (thing 14727 . 14728) (thing 14727 . 14728) (thing 14727 . 14728) (thing 14731 . 14739) (thing 14731 . 14739) (thing 14731 . 14739) (thing 14731 . 14739) (thing 14740 . 14746) (thing 14740 . 14746) (thing 14740 . 14746) (thing 14740 . 14746) (thing 14746 . 14747) (thing 14746 . 14747) (thing 14746 . 14747) (thing 14746 . 14747) (thing 14747 . 14748) (thing 14747 . 14748) (thing 14747 . 14748) (thing 14747 . 14748) (thing 14748 . 14749) (thing 14748 . 14749) (thing 14748 . 14749) (thing 14748 . 14749) (thing 14749 . 14750) (thing 14749 . 14750) (thing 14749 . 14750) (thing 14749 . 14750) (thing 14750 . 14751) (thing 14750 . 14751) (thing 14750 . 14751) (thing 14750 . 14751) (thing 14818 . 14826) (thing 14818 . 14826) (thing 14818 . 14826) (thing 14818 . 14826) (thing 14827 . 14828) (thing 14827 . 14828) (thing 14827 . 14828) (thing 14827 . 14828) (thing 14828 . 14836) (thing 14828 . 14836) (thing 14828 . 14836) (thing 14828 . 14836) (thing 14837 . 14838) (thing 14837 . 14838) (thing 14837 . 14838) (thing 14837 . 14838) (thing 14838 . 14839) (thing 14838 . 14839) (thing 14838 . 14839) (thing 14838 . 14839) (thing 14842 . 14850) (thing 14842 . 14850) (thing 14842 . 14850) (thing 14842 . 14850) (thing 14851 . 14857) (thing 14851 . 14857) (thing 14851 . 14857) (thing 14851 . 14857) (thing 14857 . 14858) (thing 14857 . 14858) (thing 14857 . 14858) (thing 14857 . 14858) (thing 14858 . 14859) (thing 14858 . 14859) (thing 14858 . 14859) (thing 14858 . 14859) (thing 14859 . 14860) (thing 14859 . 14860) (thing 14859 . 14860) (thing 14859 . 14860) (thing 14860 . 14861) (thing 14860 . 14861) (thing 14860 . 14861) (thing 14860 . 14861) (thing 14861 . 14862) (thing 14861 . 14862) (thing 14861 . 14862) (thing 14861 . 14862) (thing 14919 . 14927) (thing 14919 . 14927) (thing 14919 . 14927) (thing 14919 . 14927) (thing 14928 . 14929) (thing 14928 . 14929) (thing 14928 . 14929) (thing 14928 . 14929) (thing 14929 . 14937) (thing 14929 . 14937) (thing 14929 . 14937) (thing 14929 . 14937) (thing 14938 . 14939) (thing 14938 . 14939) (thing 14938 . 14939) (thing 14938 . 14939) (thing 14939 . 14940) (thing 14939 . 14940) (thing 14939 . 14940) (thing 14939 . 14940) (thing 14943 . 14951) (thing 14943 . 14951) (thing 14943 . 14951) (thing 14943 . 14951) (thing 14952 . 14958) (thing 14952 . 14958) (thing 14952 . 14958) (thing 14952 . 14958) (thing 14958 . 14959) (thing 14958 . 14959) (thing 14958 . 14959) (thing 14958 . 14959) (thing 14959 . 14960) (thing 14959 . 14960) (thing 14959 . 14960) (thing 14959 . 14960) (thing 14960 . 14961) (thing 14960 . 14961) (thing 14960 . 14961) (thing 14960 . 14961) (thing 14961 . 14962) (thing 14961 . 14962) (thing 14961 . 14962) (thing 14961 . 14962) (thing 14962 . 14963) (thing 14962 . 14963) (thing 14962 . 14963) (thing 14962 . 14963) (thing 15026 . 15034) (thing 15026 . 15034) (thing 15026 . 15034) (thing 15026 . 15034) (thing 15035 . 15036) (thing 15035 . 15036) (thing 15035 . 15036) (thing 15035 . 15036) (thing 15036 . 15044) (thing 15036 . 15044) (thing 15036 . 15044) (thing 15036 . 15044) (thing 15045 . 15046) (thing 15045 . 15046) (thing 15045 . 15046) (thing 15045 . 15046) (thing 15046 . 15047) (thing 15046 . 15047) (thing 15046 . 15047) (thing 15046 . 15047) (thing 15048 . 15054) (thing 15048 . 15054) (thing 15048 . 15054) (thing 15048 . 15054) (thing 15055 . 15060) (thing 15055 . 15060) (thing 15055 . 15060) (thing 15055 . 15060) (thing 15060 . 15061) (thing 15060 . 15061) (thing 15060 . 15061) (thing 15060 . 15061) (thing 15064 . 15072) (thing 15064 . 15072) (thing 15064 . 15072) (thing 15064 . 15072) (thing 15073 . 15079) (thing 15073 . 15079) (thing 15073 . 15079) (thing 15073 . 15079) (thing 15079 . 15080) (thing 15079 . 15080) (thing 15079 . 15080) (thing 15079 . 15080) (thing 15080 . 15081) (thing 15080 . 15081) (thing 15080 . 15081) (thing 15080 . 15081) (thing 15081 . 15082) (thing 15081 . 15082) (thing 15081 . 15082) (thing 15081 . 15082) (thing 15083 . 15088) (thing 15083 . 15088) (thing 15083 . 15088) (thing 15083 . 15088) (thing 15088 . 15089) (thing 15088 . 15089) (thing 15088 . 15089) (thing 15088 . 15089) (thing 15089 . 15090) (thing 15089 . 15090) (thing 15089 . 15090) (thing 15089 . 15090) (thing 15090 . 15091) (thing 15090 . 15091) (thing 15090 . 15091) (thing 15090 . 15091) (thing 15392 . 15400) (thing 15392 . 15400) (thing 15392 . 15400) (thing 15392 . 15400) (thing 15401 . 15402) (thing 15401 . 15402) (thing 15401 . 15402) (thing 15401 . 15402) (thing 15402 . 15410) (thing 15402 . 15410) (thing 15402 . 15410) (thing 15402 . 15410) (thing 15411 . 15412) (thing 15411 . 15412) (thing 15411 . 15412) (thing 15411 . 15412) (thing 15412 . 15413) (thing 15412 . 15413) (thing 15412 . 15413) (thing 15412 . 15413) (thing 15414 . 15420) (thing 15414 . 15420) (thing 15414 . 15420) (thing 15414 . 15420) (thing 15421 . 15426) (thing 15421 . 15426) (thing 15421 . 15426) (thing 15421 . 15426) (thing 15426 . 15427) (thing 15426 . 15427) (thing 15426 . 15427) (thing 15426 . 15427) (thing 15430 . 15438) (thing 15430 . 15438) (thing 15430 . 15438) (thing 15430 . 15438) (thing 15439 . 15445) (thing 15439 . 15445) (thing 15439 . 15445) (thing 15439 . 15445) (thing 15445 . 15446) (thing 15445 . 15446) (thing 15445 . 15446) (thing 15445 . 15446) (thing 15446 . 15447) (thing 15446 . 15447) (thing 15446 . 15447) (thing 15446 . 15447) (thing 15447 . 15448) (thing 15447 . 15448) (thing 15447 . 15448) (thing 15447 . 15448) (thing 15449 . 15454) (thing 15449 . 15454) (thing 15449 . 15454) (thing 15449 . 15454) (thing 15454 . 15455) (thing 15454 . 15455) (thing 15454 . 15455) (thing 15454 . 15455) (thing 15455 . 15456) (thing 15455 . 15456) (thing 15455 . 15456) (thing 15455 . 15456) (thing 15456 . 15457) (thing 15456 . 15457) (thing 15456 . 15457) (thing 15456 . 15457) (thing 15953 . 15961) (thing 15953 . 15961) (thing 15953 . 15961) (thing 15953 . 15961) (thing 15962 . 15963) (thing 15962 . 15963) (thing 15962 . 15963) (thing 15962 . 15963) (thing 15963 . 15971) (thing 15963 . 15971) (thing 15963 . 15971) (thing 15963 . 15971) (thing 15972 . 15973) (thing 15972 . 15973) (thing 15972 . 15973) (thing 15972 . 15973) (thing 15973 . 15974) (thing 15973 . 15974) (thing 15973 . 15974) (thing 15973 . 15974) (thing 15975 . 15981) (thing 15975 . 15981) (thing 15975 . 15981) (thing 15975 . 15981) (thing 15982 . 15987) (thing 15982 . 15987) (thing 15982 . 15987) (thing 15982 . 15987) (thing 15987 . 15988) (thing 15987 . 15988) (thing 15987 . 15988) (thing 15987 . 15988) (thing 15991 . 15999) (thing 15991 . 15999) (thing 15991 . 15999) (thing 15991 . 15999) (thing 16000 . 16006) (thing 16000 . 16006) (thing 16000 . 16006) (thing 16000 . 16006) (thing 16006 . 16007) (thing 16006 . 16007) (thing 16006 . 16007) (thing 16006 . 16007) (thing 16007 . 16008) (thing 16007 . 16008) (thing 16007 . 16008) (thing 16007 . 16008) (thing 16008 . 16009) (thing 16008 . 16009) (thing 16008 . 16009) (thing 16008 . 16009) (thing 16010 . 16015) (thing 16010 . 16015) (thing 16010 . 16015) (thing 16010 . 16015) (thing 16015 . 16016) (thing 16015 . 16016) (thing 16015 . 16016) (thing 16015 . 16016) (thing 16016 . 16017) (thing 16016 . 16017) (thing 16016 . 16017) (thing 16016 . 16017) (thing 16017 . 16018) (thing 16017 . 16018) (thing 16017 . 16018) (thing 16017 . 16018) (thing 16069 . 16077) (thing 16069 . 16077) (thing 16069 . 16077) (thing 16069 . 16077) (thing 16078 . 16079) (thing 16078 . 16079) (thing 16078 . 16079) (thing 16078 . 16079) (thing 16079 . 16087) (thing 16079 . 16087) (thing 16079 . 16087) (thing 16079 . 16087) (thing 16088 . 16089) (thing 16088 . 16089) (thing 16088 . 16089) (thing 16088 . 16089) (thing 16089 . 16090) (thing 16089 . 16090) (thing 16089 . 16090) (thing 16089 . 16090) (thing 16093 . 16101) (thing 16093 . 16101) (thing 16093 . 16101) (thing 16093 . 16101) (thing 16102 . 16108) (thing 16102 . 16108) (thing 16102 . 16108) (thing 16102 . 16108) (thing 16108 . 16109) (thing 16108 . 16109) (thing 16108 . 16109) (thing 16108 . 16109) (thing 16109 . 16110) (thing 16109 . 16110) (thing 16109 . 16110) (thing 16109 . 16110) (thing 16110 . 16111) (thing 16110 . 16111) (thing 16110 . 16111) (thing 16110 . 16111) (thing 16111 . 16112) (thing 16111 . 16112) (thing 16111 . 16112) (thing 16111 . 16112) (thing 16112 . 16113) (thing 16112 . 16113) (thing 16112 . 16113) (thing 16112 . 16113) (thing 16187 . 16195) (thing 16187 . 16195) (thing 16187 . 16195) (thing 16196 . 16197) (thing 16196 . 16197) (thing 16196 . 16197) (thing 16197 . 16205) (thing 16197 . 16205) (thing 16197 . 16205) (thing 16206 . 16207) (thing 16206 . 16207) (thing 16206 . 16207) (thing 16207 . 16208) (thing 16207 . 16208) (thing 16207 . 16208) (thing 16211 . 16219) (thing 16211 . 16219) (thing 16211 . 16219) (thing 16220 . 16226) (thing 16220 . 16226) (thing 16220 . 16226) (thing 16226 . 16227) (thing 16226 . 16227) (thing 16226 . 16227) (thing 16227 . 16228) (thing 16227 . 16228) (thing 16227 . 16228) (thing 16228 . 16229) (thing 16228 . 16229) (thing 16228 . 16229) (thing 16229 . 16230) (thing 16229 . 16230) (thing 16229 . 16230) (thing 16230 . 16231) (thing 16230 . 16231) (thing 16230 . 16231) (thing 16334 . 16342) (thing 16334 . 16342) (thing 16334 . 16342) (thing 16343 . 16344) (thing 16343 . 16344) (thing 16343 . 16344) (thing 16344 . 16352) (thing 16344 . 16352) (thing 16344 . 16352) (thing 16353 . 16354) (thing 16353 . 16354) (thing 16353 . 16354) (thing 16354 . 16355) (thing 16354 . 16355) (thing 16354 . 16355) (thing 16356 . 16362) (thing 16356 . 16362) (thing 16356 . 16362) (thing 16363 . 16368) (thing 16363 . 16368) (thing 16363 . 16368) (thing 16368 . 16369) (thing 16368 . 16369) (thing 16368 . 16369) (thing 16372 . 16380) (thing 16372 . 16380) (thing 16372 . 16380) (thing 16381 . 16387) (thing 16381 . 16387) (thing 16381 . 16387) (thing 16387 . 16388) (thing 16387 . 16388) (thing 16387 . 16388) (thing 16388 . 16389) (thing 16388 . 16389) (thing 16388 . 16389) (thing 16389 . 16390) (thing 16389 . 16390) (thing 16389 . 16390) (thing 16391 . 16396) (thing 16391 . 16396) (thing 16391 . 16396) (thing 16396 . 16397) (thing 16396 . 16397) (thing 16396 . 16397) (thing 16397 . 16398) (thing 16397 . 16398) (thing 16397 . 16398) (thing 16398 . 16399) (thing 16398 . 16399) (thing 16398 . 16399) (thing 16740 . 16748) (thing 16740 . 16748) (thing 16740 . 16748) (thing 16749 . 16750) (thing 16749 . 16750) (thing 16749 . 16750) (thing 16750 . 16758) (thing 16750 . 16758) (thing 16750 . 16758) (thing 16759 . 16760) (thing 16759 . 16760) (thing 16759 . 16760) (thing 16760 . 16761) (thing 16760 . 16761) (thing 16760 . 16761) (thing 16762 . 16768) (thing 16762 . 16768) (thing 16762 . 16768) (thing 16769 . 16774) (thing 16769 . 16774) (thing 16769 . 16774) (thing 16774 . 16775) (thing 16774 . 16775) (thing 16774 . 16775) (thing 16778 . 16786) (thing 16778 . 16786) (thing 16778 . 16786) (thing 16787 . 16793) (thing 16787 . 16793) (thing 16787 . 16793) (thing 16793 . 16794) (thing 16793 . 16794) (thing 16793 . 16794) (thing 16794 . 16795) (thing 16794 . 16795) (thing 16794 . 16795) (thing 16795 . 16796) (thing 16795 . 16796) (thing 16795 . 16796) (thing 16797 . 16802) (thing 16797 . 16802) (thing 16797 . 16802) (thing 16802 . 16803) (thing 16802 . 16803) (thing 16802 . 16803) (thing 16803 . 16804) (thing 16803 . 16804) (thing 16803 . 16804) (thing 16804 . 16805) (thing 16804 . 16805) (thing 16804 . 16805) (thing 16886 . 16894) (thing 16886 . 16894) (thing 16886 . 16894) (thing 16895 . 16896) (thing 16895 . 16896) (thing 16895 . 16896) (thing 16896 . 16904) (thing 16896 . 16904) (thing 16896 . 16904) (thing 16905 . 16906) (thing 16905 . 16906) (thing 16905 . 16906) (thing 16906 . 16907) (thing 16906 . 16907) (thing 16906 . 16907) (thing 16908 . 16914) (thing 16908 . 16914) (thing 16908 . 16914) (thing 16915 . 16920) (thing 16915 . 16920) (thing 16915 . 16920) (thing 16920 . 16921) (thing 16920 . 16921) (thing 16920 . 16921) (thing 16924 . 16932) (thing 16924 . 16932) (thing 16924 . 16932) (thing 16933 . 16939) (thing 16933 . 16939) (thing 16933 . 16939) (thing 16939 . 16940) (thing 16939 . 16940) (thing 16939 . 16940) (thing 16940 . 16941) (thing 16940 . 16941) (thing 16940 . 16941) (thing 16941 . 16942) (thing 16941 . 16942) (thing 16941 . 16942) (thing 16943 . 16948) (thing 16943 . 16948) (thing 16943 . 16948) (thing 16948 . 16949) (thing 16948 . 16949) (thing 16948 . 16949) (thing 16949 . 16950) (thing 16949 . 16950) (thing 16949 . 16950) (thing 16950 . 16951) (thing 16950 . 16951) (thing 16950 . 16951) (thing 17040 . 17048) (thing 17040 . 17048) (thing 17040 . 17048) (thing 17049 . 17050) (thing 17049 . 17050) (thing 17049 . 17050) (thing 17050 . 17058) (thing 17050 . 17058) (thing 17050 . 17058) (thing 17059 . 17060) (thing 17059 . 17060) (thing 17059 . 17060) (thing 17060 . 17061) (thing 17060 . 17061) (thing 17060 . 17061) (thing 17064 . 17072) (thing 17064 . 17072) (thing 17064 . 17072) (thing 17073 . 17079) (thing 17073 . 17079) (thing 17073 . 17079) (thing 17079 . 17080) (thing 17079 . 17080) (thing 17079 . 17080) (thing 17080 . 17081) (thing 17080 . 17081) (thing 17080 . 17081) (thing 17081 . 17082) (thing 17081 . 17082) (thing 17081 . 17082) (thing 17082 . 17083) (thing 17082 . 17083) (thing 17082 . 17083) (thing 17083 . 17084) (thing 17083 . 17084) (thing 17083 . 17084) (thing 17115 . 17123) (thing 17115 . 17123) (thing 17115 . 17123) (thing 17124 . 17125) (thing 17124 . 17125) (thing 17124 . 17125) (thing 17125 . 17133) (thing 17125 . 17133) (thing 17125 . 17133) (thing 17134 . 17135) (thing 17134 . 17135) (thing 17134 . 17135) (thing 17135 . 17136) (thing 17135 . 17136) (thing 17135 . 17136) (thing 17137 . 17143) (thing 17137 . 17143) (thing 17137 . 17143) (thing 17144 . 17149) (thing 17144 . 17149) (thing 17144 . 17149) (thing 17150 . 17151) (thing 17150 . 17151) (thing 17150 . 17151) (thing 17152 . 17153) (thing 17152 . 17153) (thing 17152 . 17153) (thing 17153 . 17154) (thing 17153 . 17154) (thing 17153 . 17154) (thing 17157 . 17165) (thing 17157 . 17165) (thing 17157 . 17165) (thing 17166 . 17172) (thing 17166 . 17172) (thing 17166 . 17172) (thing 17172 . 17173) (thing 17172 . 17173) (thing 17172 . 17173) (thing 17173 . 17174) (thing 17173 . 17174) (thing 17173 . 17174) (thing 17174 . 17175) (thing 17174 . 17175) (thing 17174 . 17175) (thing 17176 . 17181) (thing 17176 . 17181) (thing 17176 . 17181) (thing 17181 . 17182) (thing 17181 . 17182) (thing 17181 . 17182) (thing 17182 . 17183) (thing 17182 . 17183) (thing 17182 . 17183) (thing 17183 . 17184) (thing 17183 . 17184) (thing 17183 . 17184) (thing 17224 . 17232) (thing 17224 . 17232) (thing 17233 . 17234) (thing 17233 . 17234) (thing 17234 . 17242) (thing 17234 . 17242) (thing 17243 . 17244) (thing 17243 . 17244) (thing 17244 . 17245) (thing 17244 . 17245) (thing 17246 . 17252) (thing 17246 . 17252) (thing 17253 . 17258) (thing 17253 . 17258) (thing 17259 . 17260) (thing 17259 . 17260) (thing 17261 . 17262) (thing 17261 . 17262) (thing 17262 . 17263) (thing 17262 . 17263) (thing 17266 . 17274) (thing 17266 . 17274) (thing 17275 . 17281) (thing 17275 . 17281) (thing 17281 . 17282) (thing 17281 . 17282) (thing 17282 . 17283) (thing 17282 . 17283) (thing 17283 . 17284) (thing 17283 . 17284) (thing 17285 . 17290) (thing 17285 . 17290) (thing 17290 . 17291) (thing 17290 . 17291) (thing 17291 . 17292) (thing 17291 . 17292) (thing 17292 . 17293) (thing 17292 . 17293) (thing 17333 . 17341) (thing 17333 . 17341) (thing 17342 . 17343) (thing 17342 . 17343) (thing 17343 . 17351) (thing 17343 . 17351) (thing 17352 . 17353) (thing 17352 . 17353) (thing 17353 . 17354) (thing 17353 . 17354) (thing 17355 . 17361) (thing 17355 . 17361) (thing 17362 . 17367) (thing 17362 . 17367) (thing 17368 . 17369) (thing 17368 . 17369) (thing 17370 . 17371) (thing 17370 . 17371) (thing 17371 . 17372) (thing 17371 . 17372) (thing 17375 . 17383) (thing 17375 . 17383) (thing 17384 . 17390) (thing 17384 . 17390) (thing 17390 . 17391) (thing 17390 . 17391) (thing 17391 . 17392) (thing 17391 . 17392) (thing 17392 . 17393) (thing 17392 . 17393) (thing 17394 . 17399) (thing 17394 . 17399) (thing 17399 . 17400) (thing 17399 . 17400) (thing 17400 . 17401) (thing 17400 . 17401) (thing 17401 . 17402) (thing 17401 . 17402) (thing 19614 . 19615) (thing 19614 . 19615) (thing 19641 . 19642) (thing 19641 . 19642) (thing 19673 . 19674) (thing 19673 . 19674) (thing 19728 . 19729) (thing 19728 . 19729) (thing 19803 . 19804) (thing 19803 . 19804) (thing 19864 . 19865) (thing 19864 . 19865) (thing 19928 . 19929) (thing 19928 . 19929) (thing 20273 . 20274) (thing 20273 . 20274) (thing 21296 . 21297) (thing 21296 . 21297) (thing 21297 . 21309) (thing 21297 . 21309) (thing 21309 . 21311) (thing 21309 . 21311) (thing 21312 . 21320) (thing 21312 . 21320) (thing 21321 . 21323) (thing 21321 . 21323) (thing 22071 . 22079) (thing 22071 . 22079) (thing 22080 . 22081) (thing 22080 . 22081) (thing 22081 . 22089) (thing 22081 . 22089) (thing 22090 . 22091) (thing 22090 . 22091) (thing 22091 . 22092) (thing 22091 . 22092) (thing 22093 . 22099) (thing 22093 . 22099) (thing 22100 . 22105) (thing 22100 . 22105) (thing 22105 . 22106) (thing 22105 . 22106) (thing 22107 . 22115) (thing 22107 . 22115) (thing 22116 . 22122) (thing 22116 . 22122) (thing 22122 . 22123) (thing 22122 . 22123) (thing 22123 . 22124) (thing 22123 . 22124) (thing 22124 . 22125) (thing 22124 . 22125) (thing 22126 . 22131) (thing 22126 . 22131) (thing 22131 . 22132) (thing 22131 . 22132) (thing 22132 . 22133) (thing 22132 . 22133) (thing 22133 . 22134) (thing 22133 . 22134) (thing 22342 . 22350) (thing 22342 . 22350) (thing 22351 . 22352) (thing 22351 . 22352) (thing 22352 . 22360) (thing 22352 . 22360) (thing 22361 . 22362) (thing 22361 . 22362) (thing 22362 . 22363) (thing 22362 . 22363) (thing 22364 . 22370) (thing 22364 . 22370) (thing 22371 . 22376) (thing 22371 . 22376) (thing 22376 . 22377) (thing 22376 . 22377) (thing 22378 . 22386) (thing 22378 . 22386) (thing 22387 . 22393) (thing 22387 . 22393) (thing 22393 . 22394) (thing 22393 . 22394) (thing 22394 . 22395) (thing 22394 . 22395) (thing 22395 . 22396) (thing 22395 . 22396) (thing 22397 . 22402) (thing 22397 . 22402) (thing 22402 . 22403) (thing 22402 . 22403) (thing 22403 . 22404) (thing 22403 . 22404) (thing 22404 . 22405) (thing 22404 . 22405) (thing 22640 . 22648) (thing 22640 . 22648) (thing 22649 . 22650) (thing 22649 . 22650) (thing 22650 . 22658) (thing 22650 . 22658) (thing 22659 . 22660) (thing 22659 . 22660) (thing 22660 . 22661) (thing 22660 . 22661) (thing 22662 . 22668) (thing 22662 . 22668) (thing 22669 . 22674) (thing 22669 . 22674) (thing 22674 . 22675) (thing 22674 . 22675) (thing 22676 . 22684) (thing 22676 . 22684) (thing 22685 . 22691) (thing 22685 . 22691) (thing 22691 . 22692) (thing 22691 . 22692) (thing 22692 . 22693) (thing 22692 . 22693) (thing 22693 . 22694) (thing 22693 . 22694) (thing 22695 . 22700) (thing 22695 . 22700) (thing 22700 . 22701) (thing 22700 . 22701) (thing 22701 . 22702) (thing 22701 . 22702) (thing 22702 . 22703) (thing 22702 . 22703) (thing 22895 . 22903) (thing 22895 . 22903) (thing 22904 . 22905) (thing 22904 . 22905) (thing 22905 . 22913) (thing 22905 . 22913) (thing 22914 . 22915) (thing 22914 . 22915) (thing 22915 . 22916) (thing 22915 . 22916) (thing 22917 . 22923) (thing 22917 . 22923) (thing 22924 . 22929) (thing 22924 . 22929) (thing 22929 . 22930) (thing 22929 . 22930) (thing 22931 . 22939) (thing 22931 . 22939) (thing 22940 . 22946) (thing 22940 . 22946) (thing 22946 . 22947) (thing 22946 . 22947) (thing 22947 . 22948) (thing 22947 . 22948) (thing 22948 . 22949) (thing 22948 . 22949) (thing 22950 . 22955) (thing 22950 . 22955) (thing 22955 . 22956) (thing 22955 . 22956) (thing 22956 . 22957) (thing 22956 . 22957) (thing 22957 . 22958) (thing 22957 . 22958) (thing 23177 . 23185) (thing 23177 . 23185) (thing 23186 . 23187) (thing 23186 . 23187) (thing 23187 . 23195) (thing 23187 . 23195) (thing 23196 . 23197) (thing 23196 . 23197) (thing 23197 . 23198) (thing 23197 . 23198) (thing 23199 . 23205) (thing 23199 . 23205) (thing 23206 . 23211) (thing 23206 . 23211) (thing 23211 . 23212) (thing 23211 . 23212) (thing 23213 . 23221) (thing 23213 . 23221) (thing 23222 . 23228) (thing 23222 . 23228) (thing 23228 . 23229) (thing 23228 . 23229) (thing 23229 . 23230) (thing 23229 . 23230) (thing 23230 . 23231) (thing 23230 . 23231) (thing 23232 . 23237) (thing 23232 . 23237) (thing 23237 . 23238) (thing 23237 . 23238) (thing 23238 . 23239) (thing 23238 . 23239) (thing 23239 . 23240) (thing 23239 . 23240) (thing 23661 . 23669) (thing 23661 . 23669) (thing 23670 . 23671) (thing 23670 . 23671) (thing 23671 . 23679) (thing 23671 . 23679) (thing 23680 . 23681) (thing 23680 . 23681) (thing 23681 . 23682) (thing 23681 . 23682) (thing 23683 . 23689) (thing 23683 . 23689) (thing 23690 . 23695) (thing 23690 . 23695) (thing 23695 . 23696) (thing 23695 . 23696) (thing 23697 . 23705) (thing 23697 . 23705) (thing 23706 . 23712) (thing 23706 . 23712) (thing 23712 . 23713) (thing 23712 . 23713) (thing 23713 . 23714) (thing 23713 . 23714) (thing 23714 . 23715) (thing 23714 . 23715) (thing 23716 . 23721) (thing 23716 . 23721) (thing 23721 . 23722) (thing 23721 . 23722) (thing 23722 . 23723) (thing 23722 . 23723) (thing 23723 . 23724) (thing 23723 . 23724) (thing 24567 . 24575) (thing 24567 . 24575) (thing 24576 . 24577) (thing 24576 . 24577) (thing 24577 . 24585) (thing 24577 . 24585) (thing 24586 . 24587) (thing 24586 . 24587) (thing 24587 . 24588) (thing 24587 . 24588) (thing 24589 . 24595) (thing 24589 . 24595) (thing 24596 . 24601) (thing 24596 . 24601) (thing 24601 . 24602) (thing 24601 . 24602) (thing 24603 . 24611) (thing 24603 . 24611) (thing 24612 . 24618) (thing 24612 . 24618) (thing 24618 . 24619) (thing 24618 . 24619) (thing 24619 . 24620) (thing 24619 . 24620) (thing 24620 . 24621) (thing 24620 . 24621) (thing 24622 . 24627) (thing 24622 . 24627) (thing 24627 . 24628) (thing 24627 . 24628) (thing 24628 . 24629) (thing 24628 . 24629) (thing 24629 . 24630) (thing 24629 . 24630) (thing 24916 . 24924) (thing 24916 . 24924) (thing 24925 . 24926) (thing 24925 . 24926) (thing 24926 . 24934) (thing 24926 . 24934) (thing 24935 . 24936) (thing 24935 . 24936) (thing 24936 . 24937) (thing 24936 . 24937) (thing 24938 . 24944) (thing 24938 . 24944) (thing 24945 . 24950) (thing 24945 . 24950) (thing 24950 . 24951) (thing 24950 . 24951) (thing 24952 . 24960) (thing 24952 . 24960) (thing 24961 . 24967) (thing 24961 . 24967) (thing 24967 . 24968) (thing 24967 . 24968) (thing 24968 . 24969) (thing 24968 . 24969) (thing 24969 . 24970) (thing 24969 . 24970) (thing 24971 . 24976) (thing 24971 . 24976) (thing 24976 . 24977) (thing 24976 . 24977) (thing 24977 . 24978) (thing 24977 . 24978) (thing 24978 . 24979) (thing 24978 . 24979) (thing 25249 . 25257) (thing 25258 . 25259) (thing 25259 . 25267) (thing 25268 . 25269) (thing 25269 . 25270) (thing 25271 . 25277) (thing 25278 . 25283) (thing 25283 . 25284) (thing 25285 . 25293) (thing 25294 . 25300) (thing 25300 . 25301) (thing 25301 . 25302) (thing 25302 . 25303) (thing 25304 . 25309) (thing 25309 . 25310) (thing 25310 . 25311) (thing 25311 . 25312) (thing 26010 . 26018) (thing 26019 . 26020) (thing 26020 . 26028) (thing 26029 . 26030) (thing 26030 . 26031) (thing 26032 . 26038) (thing 26039 . 26044) (thing 26044 . 26045) (thing 26046 . 26054) (thing 26055 . 26061) (thing 26061 . 26062) (thing 26062 . 26063) (thing 26063 . 26064) (thing 26065 . 26070) (thing 26070 . 26071) (thing 26071 . 26072) (thing 26072 . 26073) (thing 26368 . 26376) (thing 26377 . 26378) (thing 26378 . 26386) (thing 26387 . 26388) (thing 26388 . 26389) (thing 26390 . 26396) (thing 26397 . 26402) (thing 26402 . 26403) (thing 26404 . 26412) (thing 26413 . 26419) (thing 26419 . 26420) (thing 26420 . 26421) (thing 26421 . 26422) (thing 26423 . 26428) (thing 26428 . 26429) (thing 26429 . 26430) (thing 26430 . 26431) (thing 26710 . 26718) (thing 26719 . 26720) (thing 26720 . 26728) (thing 26729 . 26730) (thing 26730 . 26731) (thing 26732 . 26738) (thing 26739 . 26744) (thing 26744 . 26745) (thing 26746 . 26754) (thing 26755 . 26761) (thing 26761 . 26762) (thing 26762 . 26763) (thing 26763 . 26764) (thing 26765 . 26770) (thing 26770 . 26771) (thing 26771 . 26772) (thing 26772 . 26773) (thing 27084 . 27092) (thing 27093 . 27094) (thing 27094 . 27102) (thing 27103 . 27104) (thing 27104 . 27105) (thing 27106 . 27114) (thing 27115 . 27121) (thing 27121 . 27122) (thing 27122 . 27123) (thing 27123 . 27124) (thing 27124 . 27125) (thing 27125 . 27126) (thing 27239 . 27247) (thing 27248 . 27249) (thing 27249 . 27257) (thing 27258 . 27259) (thing 27259 . 27260) (thing 27261 . 27269) (thing 27270 . 27276) (thing 27276 . 27277) (thing 27277 . 27278) (thing 27278 . 27279) (thing 27279 . 27280) (thing 27280 . 27281) (thing 27410 . 27418) (thing 27419 . 27420) (thing 27420 . 27428) (thing 27429 . 27430) (thing 27430 . 27431) (thing 27432 . 27438) (thing 27439 . 27444) (thing 27444 . 27445) (thing 27446 . 27454) (thing 27455 . 27461) (thing 27461 . 27462) (thing 27462 . 27463) (thing 27463 . 27464) (thing 27465 . 27470) (thing 27470 . 27471) (thing 27471 . 27472) (thing 27472 . 27473) (thing 27587 . 27595) (thing 27596 . 27597) (thing 27597 . 27605) (thing 27606 . 27607) (thing 27607 . 27608) (thing 27609 . 27615) (thing 27616 . 27621) (thing 27621 . 27622) (thing 27623 . 27631) (thing 27632 . 27638) (thing 27638 . 27639) (thing 27639 . 27640) (thing 27640 . 27641) (thing 27642 . 27647) (thing 27647 . 27648) (thing 27648 . 27649) (thing 27649 . 27650) (thing 27764 . 27772) (thing 27773 . 27774) (thing 27774 . 27782) (thing 27783 . 27784) (thing 27784 . 27785) (thing 27786 . 27792) (thing 27793 . 27798) (thing 27798 . 27799) (thing 27800 . 27808) (thing 27809 . 27815) (thing 27815 . 27816) (thing 27816 . 27817) (thing 27817 . 27818) (thing 27819 . 27824) (thing 27824 . 27825) (thing 27825 . 27826) (thing 27826 . 27827) (thing 28057 . 28065) (thing 28066 . 28067) (thing 28067 . 28075) (thing 28076 . 28077) (thing 28077 . 28078) (thing 28079 . 28085) (thing 28086 . 28091) (thing 28091 . 28092) (thing 28093 . 28101) (thing 28102 . 28108) (thing 28108 . 28109) (thing 28109 . 28110) (thing 28110 . 28111) (thing 28112 . 28117) (thing 28117 . 28118) (thing 28118 . 28119) (thing 28119 . 28120) (thing 28245 . 28253) (thing 28254 . 28255) (thing 28255 . 28263) (thing 28264 . 28265) (thing 28265 . 28266) (thing 28267 . 28273) (thing 28274 . 28279) (thing 28279 . 28280) (thing 28281 . 28289) (thing 28290 . 28296) (thing 28296 . 28297) (thing 28297 . 28298) (thing 28298 . 28299) (thing 28300 . 28305) (thing 28305 . 28306) (thing 28306 . 28307) (thing 28307 . 28308) (thing 28433 . 28441) (thing 28442 . 28443) (thing 28443 . 28451) (thing 28452 . 28453) (thing 28453 . 28454) (thing 28455 . 28461) (thing 28462 . 28467) (thing 28467 . 28468) (thing 28469 . 28477) (thing 28478 . 28484) (thing 28484 . 28485) (thing 28485 . 28486) (thing 28486 . 28487) (thing 28488 . 28493) (thing 28493 . 28494) (thing 28494 . 28495) (thing 28495 . 28496) (thing 28885 . 28886) (thing 29020 . 29021))
      :lexical-table 
        '(("TENSORFLOW_CORE_FRAMEWORK_TENSOR_H_")
          )
)
    (semanticdb-table "allocator.h"
      :file "allocator.h"
      :fsize 13926
      :lastmodtime '(23410 40770 205280 567000))
    (semanticdb-table "tensor_shape.h"
      :file "tensor_shape.h"
      :fsize 20299
      :lastmodtime '(23410 40770 221280 158000))
    (semanticdb-table "tensor_types.h"
      :file "tensor_types.h"
      :fsize 4878
      :lastmodtime '(23410 40770 223280 107000))
    (semanticdb-table "types.h"
      :file "types.h"
      :fsize 8437
      :lastmodtime '(23410 40770 224280 81000))
    (semanticdb-table "variant.h"
      :major-mode 'c++-mode
      :tags 
        '( ("TENSORFLOW_FRAMEWORK_VARIANT_H_" variable (:constant-flag t) nil [719 750])
            ("functional" include (:system-flag t) nil [752 773])
            ("iostream" include (:system-flag t) nil [774 793])
            ("memory" include (:system-flag t) nil [794 811])
            ("type_traits" include (:system-flag t) nil [812 834])
            ("unordered_map" include (:system-flag t) nil [835 859])
            ("utility" include (:system-flag t) nil [860 878])
            ("tensorflow/core/framework/tensor.pb.h" include nil nil [880 928])
            ("tensorflow/core/framework/type_index.h" include nil nil [958 1007])
            ("tensorflow/core/framework/variant_tensor_data.h" include nil nil [1008 1066])
            ("tensorflow/core/lib/core/status.h" include nil nil [1067 1111])
            ("tensorflow/core/lib/strings/strcat.h" include nil nil [1112 1159])
            ("tensorflow/core/platform/mutex.h" include nil nil [1160 1203])
            ("tensorflow" type
               (:members 
                  ( ("TypeNameVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("string" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1274 1289]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1229 1290])
                    ("DebugStringVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("string" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1340 1355]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1292 1356])
                    ("EncodeVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1399 1414])
                            ("data" variable
                               (:pointer 1
                                :type ("VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1415 1439]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1358 1440])
                    ("DecodeVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1483 1513])
                            ("value" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1514 1523]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1442 1524])
                    ("EncodeVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1567 1582])
                            ("buf" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1583 1595]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1526 1596])
                    ("DecodeVariant" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("buf" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1639 1657])
                            ("value" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1658 1667]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1598 1668])
                    ("Variant" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [5446 5453])
                            ("Variant" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5507 5528]))                                  
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5499 5656])
                            ("Variant" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6177 6180])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6181 6187]))                                  
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6169 6265])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6288 6307]))                                  
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6269 6361])
                            ("is_empty" function (:type "bool") (reparse-symbol classsubparts) [6476 6527])
                            ("TypeId" function (:type ("TypeIndex" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6862 7036])
                            ("DebugString" function (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7040 7197])
                            ("get" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :pointer 1)
                                (reparse-symbol classsubparts) [7288 7524])
                            ("get" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :constant-flag t
                                :pointer 1)
                                (reparse-symbol classsubparts) [7615 7878])
                            ("TypeName" function (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8122 8227])
                            ("Encode" function
                               (:arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8305 8329]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8293 8398])
                            ("Decode" function
                               (:arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8468 8498]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8456 8585])
                            ("Encode" function
                               (:arguments 
                                  ( ("buf" variable
                                       (:pointer 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8669 8681]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8657 8749])
                            ("Decode" function
                               (:arguments 
                                  ( ("buf" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8764 8782]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8752 8868])
                            ("MaybeDecodeAndCopy" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("out" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8920 8927]))                                  )
                                (reparse-symbol classsubparts) [8872 9245])
                            ("private" label nil (reparse-symbol classsubparts) [9248 9256])
                            ("TryDecode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("out" variable
                                       (:pointer 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9274 9287]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9259 9294])
                            ("private" label nil (reparse-symbol classsubparts) [9297 9305])
                            ("in_place_t" type (:type "struct") (reparse-symbol classsubparts) [9308 9329])
                            ("in_place" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9349 9371])
                            ("ValueInterface" type
                               (:members 
                                  ( ("TypeId" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("TypeIndex" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [9444 9481])
                                    ("RawPtr" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [9486 9513])
                                    ("RawPtr" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [9518 9557])
                                    ("Clone" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("std::unique_ptr" type
                                             (:template-specifier 
                                                ( ("ValueInterface" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [9562 9620])
                                    ("TypeName" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [9625 9661])
                                    ("DebugString" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [9666 9705])
                                    ("Encode" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type ("VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9730 9754]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9710 9765])
                                    ("Decode" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("data" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9790 9820]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [9770 9825])
                                    ("Encode" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9850 9862]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9830 9873])
                                    ("Decode" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("data" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9898 9917]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [9878 9922]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [9375 9927])
                            ("Value" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Value" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10035 10054])
                                            ("" variable
                                               (:reference 1
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10055 10061])
                                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10065 10070]))                                          
                                        :type ("Value" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [10029 10118])
                                    ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11078 11086]))                                  
                                :superclasses 
                                  ( ("ValueInterface" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol classsubparts) [9931 11091])
                            ("value_" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("ValueInterface" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [11230 11269]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5429 11272])
                    ("get" function
                       (:type "void"
                        :parent "Variant"
                        :pointer 1
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [11274 11307])
                    ("get" function
                       (:type "void"
                        :constant-flag t
                        :parent "Variant"
                        :pointer 1
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [11309 11354]))                  
                :type "namespace")
                nil [1205 11357]))          
      :file "variant.h"
      :pointmax 11431
      :fsize 11430
      :lastmodtime '(23427 31062 627058 836000)
      :unmatched-syntax '((thing 5494 . 5495) (thing 5494 . 5495) (thing 5494 . 5495) (thing 5494 . 5495) (thing 5487 . 5494) (thing 5487 . 5494) (thing 5487 . 5494) (thing 5487 . 5494) (thing 5485 . 5486) (thing 5485 . 5486) (thing 5485 . 5486) (thing 5485 . 5486) (thing 5476 . 5484) (thing 5476 . 5484) (thing 5476 . 5484) (thing 5476 . 5484) (thing 5473 . 5475) (thing 5473 . 5475) (thing 5473 . 5475) (thing 5473 . 5475) (thing 5466 . 5473) (thing 5466 . 5473) (thing 5466 . 5473) (thing 5466 . 5473) (thing 5456 . 5465) (thing 5456 . 5465) (thing 5456 . 5465) (thing 5456 . 5465) (thing 5660 . 5667) (thing 5660 . 5667) (thing 5660 . 5667) (thing 5660 . 5667) (thing 5667 . 5684) (thing 5667 . 5684) (thing 5667 . 5684) (thing 5667 . 5684) (thing 5676 . 5677) (thing 5676 . 5677) (thing 5676 . 5677) (thing 5676 . 5677) (thing 5685 . 5693) (thing 5685 . 5693) (thing 5685 . 5693) (thing 5685 . 5693) (thing 5694 . 5695) (thing 5694 . 5695) (thing 5694 . 5695) (thing 5694 . 5695) (thing 5696 . 5703) (thing 5696 . 5703) (thing 5696 . 5703) (thing 5696 . 5703) (thing 5703 . 5704) (thing 5703 . 5704) (thing 5703 . 5704) (thing 5703 . 5704) (thing 5889 . 5897) (thing 5889 . 5897) (thing 5889 . 5897) (thing 5889 . 5897) (thing 5898 . 5899) (thing 5898 . 5899) (thing 5898 . 5899) (thing 5898 . 5899) (thing 5899 . 5907) (thing 5899 . 5907) (thing 5899 . 5907) (thing 5899 . 5907) (thing 5908 . 5909) (thing 5908 . 5909) (thing 5908 . 5909) (thing 5908 . 5909) (thing 5909 . 5910) (thing 5909 . 5910) (thing 5909 . 5910) (thing 5909 . 5910) (thing 5911 . 5919) (thing 5911 . 5919) (thing 5911 . 5919) (thing 5911 . 5919) (thing 5920 . 5922) (thing 5920 . 5922) (thing 5920 . 5922) (thing 5920 . 5922) (thing 5923 . 5924) (thing 5923 . 5924) (thing 5923 . 5924) (thing 5923 . 5924) (thing 5925 . 5933) (thing 5925 . 5933) (thing 5925 . 5933) (thing 5925 . 5933) (thing 5934 . 5937) (thing 5934 . 5937) (thing 5934 . 5937) (thing 5934 . 5937) (thing 5937 . 5938) (thing 5937 . 5938) (thing 5937 . 5938) (thing 5937 . 5938) (thing 5938 . 5939) (thing 5938 . 5939) (thing 5938 . 5939) (thing 5938 . 5939) (thing 5939 . 5944) (thing 5939 . 5944) (thing 5939 . 5944) (thing 5939 . 5944) (thing 5944 . 5945) (thing 5944 . 5945) (thing 5944 . 5945) (thing 5944 . 5945) (thing 5945 . 5946) (thing 5945 . 5946) (thing 5945 . 5946) (thing 5945 . 5946) (thing 5946 . 5947) (thing 5946 . 5947) (thing 5946 . 5947) (thing 5946 . 5947) (thing 5947 . 5948) (thing 5947 . 5948) (thing 5947 . 5948) (thing 5947 . 5948) (thing 5948 . 5949) (thing 5948 . 5949) (thing 5948 . 5949) (thing 5948 . 5949) (thing 5949 . 5953) (thing 5949 . 5953) (thing 5949 . 5953) (thing 5949 . 5953) (thing 5953 . 5954) (thing 5953 . 5954) (thing 5953 . 5954) (thing 5953 . 5954) (thing 5967 . 5975) (thing 5967 . 5975) (thing 5967 . 5975) (thing 5967 . 5975) (thing 5976 . 5979) (thing 5976 . 5979) (thing 5976 . 5979) (thing 5976 . 5979) (thing 5979 . 5980) (thing 5979 . 5980) (thing 5979 . 5980) (thing 5979 . 5980) (thing 5980 . 5981) (thing 5980 . 5981) (thing 5980 . 5981) (thing 5980 . 5981) (thing 5981 . 5990) (thing 5981 . 5990) (thing 5981 . 5990) (thing 5981 . 5990) (thing 5990 . 5991) (thing 5990 . 5991) (thing 5990 . 5991) (thing 5990 . 5991) (thing 5991 . 5992) (thing 5991 . 5992) (thing 5991 . 5992) (thing 5991 . 5992) (thing 5992 . 5995) (thing 5992 . 5995) (thing 5992 . 5995) (thing 5992 . 5995) (thing 5995 . 5996) (thing 5995 . 5996) (thing 5995 . 5996) (thing 5995 . 5996) (thing 5996 . 5997) (thing 5996 . 5997) (thing 5996 . 5997) (thing 5996 . 5997) (thing 5997 . 6004) (thing 5997 . 6004) (thing 5997 . 6004) (thing 5997 . 6004) (thing 6004 . 6005) (thing 6004 . 6005) (thing 6004 . 6005) (thing 6004 . 6005) (thing 6005 . 6012) (thing 6005 . 6012) (thing 6005 . 6012) (thing 6005 . 6012) (thing 6012 . 6013) (thing 6012 . 6013) (thing 6012 . 6013) (thing 6012 . 6013) (thing 6014 . 6016) (thing 6014 . 6016) (thing 6014 . 6016) (thing 6014 . 6016) (thing 6016 . 6017) (thing 6016 . 6017) (thing 6016 . 6017) (thing 6016 . 6017) (thing 6017 . 6018) (thing 6017 . 6018) (thing 6017 . 6018) (thing 6017 . 6018) (thing 6018 . 6019) (thing 6018 . 6019) (thing 6018 . 6019) (thing 6018 . 6019) (thing 6019 . 6024) (thing 6019 . 6024) (thing 6019 . 6024) (thing 6019 . 6024) (thing 6025 . 6026) (thing 6025 . 6026) (thing 6025 . 6026) (thing 6025 . 6026) (thing 6026 . 6027) (thing 6026 . 6027) (thing 6026 . 6027) (thing 6026 . 6027) (thing 6068 . 6071) (thing 6068 . 6071) (thing 6068 . 6071) (thing 6068 . 6071) (thing 6071 . 6072) (thing 6071 . 6072) (thing 6071 . 6072) (thing 6071 . 6072) (thing 6072 . 6073) (thing 6072 . 6073) (thing 6072 . 6073) (thing 6072 . 6073) (thing 6073 . 6094) (thing 6073 . 6094) (thing 6073 . 6094) (thing 6073 . 6094) (thing 6094 . 6095) (thing 6094 . 6095) (thing 6094 . 6095) (thing 6094 . 6095) (thing 6095 . 6097) (thing 6095 . 6097) (thing 6095 . 6097) (thing 6095 . 6097) (thing 6097 . 6098) (thing 6097 . 6098) (thing 6097 . 6098) (thing 6097 . 6098) (thing 6098 . 6099) (thing 6098 . 6099) (thing 6098 . 6099) (thing 6098 . 6099) (thing 6099 . 6100) (thing 6099 . 6100) (thing 6099 . 6100) (thing 6099 . 6100) (thing 6100 . 6105) (thing 6100 . 6105) (thing 6100 . 6105) (thing 6100 . 6105) (thing 6105 . 6106) (thing 6105 . 6106) (thing 6105 . 6106) (thing 6105 . 6106) (thing 6143 . 6147) (thing 6143 . 6147) (thing 6143 . 6147) (thing 6143 . 6147) (thing 6147 . 6148) (thing 6147 . 6148) (thing 6147 . 6148) (thing 6147 . 6148) (thing 6148 . 6149) (thing 6148 . 6149) (thing 6148 . 6149) (thing 6148 . 6149) (thing 6149 . 6150) (thing 6149 . 6150) (thing 6149 . 6150) (thing 6149 . 6150) (thing 6150 . 6154) (thing 6150 . 6154) (thing 6150 . 6154) (thing 6150 . 6154) (thing 6154 . 6155) (thing 6154 . 6155) (thing 6154 . 6155) (thing 6154 . 6155) (thing 6156 . 6157) (thing 6156 . 6157) (thing 6156 . 6157) (thing 6156 . 6157) (thing 6158 . 6165) (thing 6158 . 6165) (thing 6158 . 6165) (thing 6158 . 6165) (thing 6165 . 6166) (thing 6165 . 6166) (thing 6165 . 6166) (thing 6165 . 6166) (thing 6179 . 6180) (thing 6179 . 6180) (thing 6179 . 6180) (thing 6179 . 6180) (thing 6365 . 6372) (thing 6365 . 6372) (thing 6365 . 6372) (thing 6365 . 6372) (thing 6372 . 6373) (thing 6372 . 6373) (thing 6372 . 6373) (thing 6372 . 6373) (thing 6374 . 6382) (thing 6374 . 6382) (thing 6374 . 6382) (thing 6374 . 6382) (thing 6382 . 6383) (thing 6382 . 6383) (thing 6382 . 6383) (thing 6382 . 6383) (thing 6383 . 6398) (thing 6383 . 6398) (thing 6383 . 6398) (thing 6383 . 6398) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6392 . 6393) (thing 6399 . 6407) (thing 6399 . 6407) (thing 6399 . 6407) (thing 6399 . 6407) (thing 6408 . 6472) (thing 6408 . 6472) (thing 6408 . 6472) (thing 6531 . 6535) (thing 6531 . 6535) (thing 6531 . 6535) (thing 6536 . 6541) (thing 6536 . 6541) (thing 6536 . 6541) (thing 6541 . 6543) (thing 6541 . 6543) (thing 6541 . 6543) (thing 6544 . 6552) (thing 6544 . 6552) (thing 6544 . 6552) (thing 6553 . 6572) (thing 6553 . 6572) (thing 6553 . 6572) (thing 6576 . 6580) (thing 6576 . 6580) (thing 6576 . 6580) (thing 6581 . 6585) (thing 6581 . 6585) (thing 6581 . 6585) (thing 6585 . 6601) (thing 6585 . 6601) (thing 6585 . 6601) (thing 6602 . 6610) (thing 6602 . 6610) (thing 6602 . 6610) (thing 6611 . 6641) (thing 6611 . 6641) (thing 6611 . 6641) (thing 9332 . 9338) (thing 9332 . 9338) (thing 9332 . 9338) (thing 9339 . 9348) (thing 9339 . 9348) (thing 9339 . 9348) (thing 9403 . 9410) (thing 9403 . 9410) (thing 9403 . 9410) (thing 9403 . 9410) (thing 9403 . 9410) (thing 9403 . 9410) (thing 9411 . 9412) (thing 9411 . 9412) (thing 9411 . 9412) (thing 9411 . 9412) (thing 9411 . 9412) (thing 9411 . 9412) (thing 9412 . 9426) (thing 9412 . 9426) (thing 9412 . 9426) (thing 9412 . 9426) (thing 9412 . 9426) (thing 9412 . 9426) (thing 9426 . 9428) (thing 9426 . 9428) (thing 9426 . 9428) (thing 9426 . 9428) (thing 9426 . 9428) (thing 9426 . 9428) (thing 9429 . 9430) (thing 9429 . 9430) (thing 9429 . 9430) (thing 9429 . 9430) (thing 9429 . 9430) (thing 9429 . 9430) (thing 9431 . 9438) (thing 9431 . 9438) (thing 9431 . 9438) (thing 9431 . 9438) (thing 9431 . 9438) (thing 9431 . 9438) (thing 9438 . 9439) (thing 9438 . 9439) (thing 9438 . 9439) (thing 9438 . 9439) (thing 9438 . 9439) (thing 9438 . 9439) (thing 9991 . 9999) (thing 9991 . 9999) (thing 10000 . 10001) (thing 10000 . 10001) (thing 10001 . 10006) (thing 10001 . 10006) (thing 10006 . 10007) (thing 10006 . 10007) (thing 10007 . 10008) (thing 10007 . 10008) (thing 10008 . 10009) (thing 10008 . 10009) (thing 10010 . 10014) (thing 10010 . 10014) (thing 10014 . 10015) (thing 10014 . 10015) (thing 10020 . 10028) (thing 10020 . 10028) (thing 10060 . 10061) (thing 10060 . 10061) (thing 10061 . 10062) (thing 10061 . 10062) (thing 10062 . 10063) (thing 10062 . 10063) (thing 10063 . 10064) (thing 10063 . 10064) (thing 10124 . 10133) (thing 10124 . 10133) (thing 10134 . 10140) (thing 10134 . 10140) (thing 10140 . 10142) (thing 10140 . 10142) (thing 10143 . 10148) (thing 10143 . 10148) (thing 10149 . 10157) (thing 10149 . 10157) (thing 10158 . 10294) (thing 10158 . 10294) (thing 10300 . 10304) (thing 10300 . 10304) (thing 10304 . 10305) (thing 10304 . 10305) (thing 10306 . 10312) (thing 10306 . 10312) (thing 10312 . 10314) (thing 10312 . 10314) (thing 10315 . 10323) (thing 10315 . 10323) (thing 10324 . 10342) (thing 10324 . 10342) (thing 10348 . 10353) (thing 10348 . 10353) (thing 10354 . 10358) (thing 10354 . 10358) (thing 10358 . 10359) (thing 10358 . 10359) (thing 10360 . 10366) (thing 10360 . 10366) (thing 10366 . 10368) (thing 10366 . 10368) (thing 10369 . 10374) (thing 10369 . 10374) (thing 10375 . 10383) (thing 10375 . 10383) (thing 10384 . 10402) (thing 10384 . 10402) (thing 10408 . 10411) (thing 10408 . 10411) (thing 10411 . 10412) (thing 10411 . 10412) (thing 10412 . 10413) (thing 10412 . 10413) (thing 10413 . 10423) (thing 10413 . 10423) (thing 10423 . 10424) (thing 10423 . 10424) (thing 10424 . 10438) (thing 10424 . 10438) (thing 10438 . 10439) (thing 10438 . 10439) (thing 10440 . 10445) (thing 10440 . 10445) (thing 10445 . 10447) (thing 10445 . 10447) (thing 10448 . 10453) (thing 10448 . 10453) (thing 10454 . 10462) (thing 10454 . 10462) (thing 10463 . 10544) (thing 10463 . 10544) (thing 10550 . 10556) (thing 10550 . 10556) (thing 10557 . 10565) (thing 10565 . 10567) (thing 10568 . 10573) (thing 10574 . 10582) (thing 10583 . 10617) (thing 10623 . 10629) (thing 10630 . 10641) (thing 10641 . 10643) (thing 10644 . 10649) (thing 10650 . 10658) (thing 10659 . 10696) (thing 10702 . 10706) (thing 10707 . 10713) (thing 10713 . 10738) (thing 10739 . 10744) (thing 10745 . 10753) (thing 10754 . 10795) (thing 10801 . 10805) (thing 10806 . 10812) (thing 10812 . 10843) (thing 10844 . 10852) (thing 10853 . 10902) (thing 10908 . 10912) (thing 10913 . 10919) (thing 10919 . 10932) (thing 10933 . 10938) (thing 10939 . 10947) (thing 10948 . 10978) (thing 10984 . 10988) (thing 10989 . 10995) (thing 10995 . 11014) (thing 11015 . 11023) (thing 11024 . 11072))
      :lexical-table 
        '(("TENSORFLOW_FRAMEWORK_VARIANT_H_")
          )
)
    (semanticdb-table "type_index.h"
      :file "type_index.h"
      :fsize 3054
      :lastmodtime '(23410 40770 223280 107000))
    (semanticdb-table "variant_tensor_data.h"
      :file "variant_tensor_data.h"
      :fsize 3736
      :lastmodtime '(23410 40770 226280 30000)))
  :file "!ssd!sdd!git!turing_ha3_compile!source_code!tensorflow!tensorflow!core!framework!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
