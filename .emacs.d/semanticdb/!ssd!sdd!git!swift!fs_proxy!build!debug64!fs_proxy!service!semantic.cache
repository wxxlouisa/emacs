;; Object service/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "service/"
  :tables
  (list
    (semanticdb-table "ZkFileReader.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("fs_proxy/service/ZkFileReader.h" include (:system-flag t) nil [1 43])
            ("fs_proxy/service/PreprocessWorkItem.h" include (:system-flag t) nil [44 92])
            ("fs_proxy/monitor/Metrics.h" include (:system-flag t) nil [93 130])
            ("fs_proxy/service/HttpResponser.h" include (:system-flag t) nil [131 174])
            ("fs_proxy/service/ReadFileWorkItem.h" include (:system-flag t) nil [175 221])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [223 243])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [245 270])
            ("anet" using (:type ("anet" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [271 292])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [293 315])
            ("FS_PROXY_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [340 347]))                  
                :type "int")
                nil [317 348])
            ("FS_PROXY_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("monitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [372 380]))                  
                :type "int")
                nil [349 381])
            ("FS_PROXY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [407 415]))                  
                :type "int")
                nil [382 416])
            ("FS_PROXY_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [436 444])
                    ("" variable (:type ("ZkFileReader" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [445 458]))                  
                :type "int")
                nil [417 459])
            ("ZkFileReader" function
               (:constructor-flag t
                :parent "ZkFileReader"
                :arguments 
                  ( ("config" variable
                       (:reference 1
                        :constant-flag t
                        :type ("FsProxyConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [497 528])
                    ("metricsReporter" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AmonMetricsReporterPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [537 583]))                  
                :type ("ZkFileReader" type (:type "class") nil nil))
                nil [461 1039])
            ("ZkFileReader" function
               (:destructor-flag t
                :parent "ZkFileReader"
                :type "void")
                nil [1041 1409])
            ("init" function
               (:parent "ZkFileReader"
                :type "bool")
                nil [1411 1826])
            ("stop" function
               (:parent "ZkFileReader"
                :type "void")
                nil [1828 1932])
            ("addRequest" function
               (:parent "ZkFileReader"
                :arguments 
                  ( ("connection" variable
                       (:pointer 1
                        :type ("anet::Connection" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1964 1993])
                    ("packet" variable
                       (:pointer 1
                        :type ("anet::HTTPPacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1994 2019]))                  
                :type "bool")
                nil [1934 2554])
            ("addReadRequest" function
               (:parent "ZkFileReader"
                :arguments 
                  ( ("readParam" variable
                       (:reference 1
                        :type ("ReadParam" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2590 2611]))                  
                :type "bool")
                nil [2556 3346])
            ("removeWorkItem" function
               (:parent "ZkFileReader"
                :arguments 
                  ( ("zkPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3382 3403]))                  
                :type "void")
                nil [3348 3479])
            ("readFile" function
               (:parent "ZkFileReader"
                :arguments 
                  ( ("readParam" variable
                       (:reference 1
                        :type ("ReadParam" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3509 3530]))                  
                :type "bool")
                nil [3481 4566])
            ("getUsedQuotaInfo" function
               (:pointer 1
                :parent "ZkFileReader"
                :arguments 
                  ( ("serviceName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4614 4640]))                  
                :type ("UsedQuotaInfo" type (:type "class") nil nil))
                nil [4568 5497])
            ("putIntoCache" function
               (:parent "ZkFileReader"
                :arguments 
                  ( ("path" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5531 5550])
                    ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5551 5571])
                    ("isSuccess" variable (:type "bool") (reparse-symbol arg-sub-list) [5572 5587]))                  
                :type "void")
                nil [5499 5676])
            ("isHealth" function
               (:parent "ZkFileReader"
                :type "bool")
                nil [5678 5804])
            ("reportMetrics" function
               (:parent "ZkFileReader"
                :type "void")
                nil [5806 6244])
            ("FS_PROXY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6269 6277]))                  
                :type "int")
                nil [6246 6278]))          
      :file "ZkFileReader.cpp"
      :pointmax 6279
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!fs_proxy!build!debug64!fs_proxy!service!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
