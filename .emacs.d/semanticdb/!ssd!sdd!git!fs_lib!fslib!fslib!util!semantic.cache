;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "Singleton.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FSLIB_SINGLETON_H" variable (:constant-flag t) nil [35 52])
            ("autil/Log.h" include (:system-flag t) nil [54 76])
            ("autil/Lock.h" include (:system-flag t) nil [77 100])
            ("fslib/common/common_define.h" include nil nil [101 140])
            ("fslib/common/common_type.h" include nil nil [141 178])
            ("FSLIB_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [202 207]))                  
                :type "int")
                nil [180 208])
            ("LazyInstantiation" type
               (:members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [236 246])
                    ("create" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [295 298])
                            ("" variable (:type ("ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [299 303]))                          
                        :typemodifiers ("static"))
                        (reparse-symbol classsubparts) [251 386]))                  
                :type "class")
                nil [210 390])
            ("Singleton" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("InstPolicy" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [493 503])
                    ("Singleton" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Singleton" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [518 535]))                          
                        :type ("Singleton" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [508 538])
                    ("Singleton" function
                       (:constructor-flag t
                        :type ("Singleton" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [543 556])
                    ("public" label nil (reparse-symbol classsubparts) [558 565])
                    ("Singleton" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [570 584])
                    ("public" label nil (reparse-symbol classsubparts) [586 593])
                    ("getInstance" function
                       (:prototype-flag t
                        :pointer 1
                        :typemodifiers ("static")
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [743 767]))                  
                :superclasses 
                  ( ("InstPolicy" type
                       (:protection "private"
                        :type "class")
                        nil nil))                  )
                nil [392 770])
            ("getInstance" function
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("InstPolicy" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :parent "Singleton"
                :pointer 1)
                nil [772 1093])
            ("FSLIB_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1115 1120]))                  
                :type "int")
                nil [1095 1121]))          
      :file "Singleton.h"
      :pointmax 1150
      :fsize 1149
      :lastmodtime '(22727 39387 716139 576000)
      :unmatched-syntax '((thing 297 . 298))
      :lexical-table 
        '(("FSLIB_SINGLETON_H")
          )
))
  :file "!ssd!sdd!git!fs_lib!fslib!fslib!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
