;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "OpUtil.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("basic_ops/util/OpUtil.h" include nil nil [1 35])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [37 57])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [58 85])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("checkSparseTensor" function
                               (:arguments 
                                  ( ("values" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [149 170])
                                    ("indices" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [171 193])
                                    ("denseShape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [194 219]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [124 1187])
                            ("extractModelAttribute" function
                               (:arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1216 1236])
                                    ("tableName" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1237 1255])
                                    ("fieldName" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1256 1274]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1189 1496]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [104 1498]))                  
                :type "namespace")
                nil [87 1521]))          
      :file "OpUtil.cpp"
      :pointmax 1541
      :fsize 1540
      :lastmodtime '(23413 4273 759368 668000)
      :unmatched-syntax nil)
    (semanticdb-table "OpUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TURING_OPUTIL_H" variable (:constant-flag t) nil [41 64])
            ("autil/Log.h" include (:system-flag t) nil [66 88])
            ("autil/MultiValueType.h" include (:system-flag t) nil [89 122])
            ("autil/StringUtil.h" include (:system-flag t) nil [123 152])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [153 207])
            ("tensorflow/core/common_runtime/local_device.h" include nil nil [208 264])
            ("resource_reader/ResourceReader.h" include (:system-flag t) nil [265 308])
            ("tensorflow/core/framework/op_kernel.h" include (:system-flag t) nil [309 357])
            ("basic_ops/variant/MultiValueVariant.h" include nil nil [358 406])
            ("suez/turing/common/SessionResource.h" include nil nil [422 469])
            ("suez/turing/common/QueryResource.h" include nil nil [477 522])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("Type2TFType" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("TFType" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [608 625]))                                  )
                                (reparse-symbol namespacesubparts) [561 628])
                            ("Type2TFType" type
                               (:type "struct"
                                :members 
                                  ( ("TFType" type
                                       (:typedef ("tensorflow::int64" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [675 708]))                                  
                                :template-specifier 
                                  ( ("int64_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [629 711])
                            ("Type2TFType" type
                               (:type "struct"
                                :members 
                                  ( ("TFType" type
                                       (:typedef ("tensorflow::uint64" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [759 793]))                                  
                                :template-specifier 
                                  ( ("uint64_t" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [712 796])
                            ("TURING_REQ_TRUE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [806 821])
                            ("TURING_REQ_OK" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1295 1308])
                            ("extractModelAttribute" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1744 1769])
                                    ("tableName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1770 1793])
                                    ("fieldName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1821 1844]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1717 1845])
                            ("checkSparseTensor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("values" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1894 1921])
                                    ("indices" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1969 1997])
                                    ("denseShape" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2045 2076]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1849 2077])
                            ("TRACE_OP_INFO_WITH_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2087 2114])
                            ("GET_SESSION_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2619 2639])
                            ("GET_QUERY_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3592 3610])
                            ("CHECK_TIMEOUT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4243 4256])
                            ("TRACE_OP_INFO" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4743 4756])
                            ("getResourceReader" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("tensorflow::OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5100 5138]))                                  
                                :type ("resource_reader::ResourceReaderPtr" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5040 5472])
                            ("getRuntimeState" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("tensorflow::OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5502 5535])
                                    ("state" variable
                                       (:pointer 2
                                        :type ("tensorflow::RuntimeState" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5536 5569]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [5474 5950])
                            ("TfType2ExprType" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("bool" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6035 6050]))                                  )
                                (reparse-symbol namespacesubparts) [5953 6053])
                            ("TfType2ExprType" type
                               (:template 
                                  ( ("bool" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("int64_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6156 6177]))                                  
                                :template-specifier 
                                  ( ("tensorflow::int64" type nil nil nil)
                                    ("StringToMultiChar" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6055 6180])
                            ("TfType2ExprType" type
                               (:template 
                                  ( ("bool" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("uint64_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6284 6306]))                                  
                                :template-specifier 
                                  ( ("tensorflow::uint64" type nil nil nil)
                                    ("StringToMultiChar" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6182 6309])
                            ("TfType2ExprType" type
                               (:type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("autil::MultiChar" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6371 6401]))                                  
                                :template-specifier 
                                  ( ("std::string" type nil nil nil)
                                    ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6311 6404])
                            ("ExprValue2TfValue" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6455 6470]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [6406 6492])
                            ("ExprValue2TfValue" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("autil::MultiChar" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6531 6561]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6494 6617])
                            ("convertValue" function
                               (:template 
                                  ( ("From" type (:type "class") nil nil)
                                    ("To" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("From" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6682 6699])
                                    ("to" variable
                                       (:reference 1
                                        :type ("To" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6700 6707]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [6619 6726])
                            ("convertValue" function
                               (:template 
                                  ( ("From" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("From" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6778 6795])
                                    ("to" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6796 6812]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [6728 6860])
                            ("convertValue" function
                               (:template 
                                  ( ("To" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("autil::MultiChar" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6910 6939])
                                    ("to" variable
                                       (:reference 1
                                        :type ("To" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6940 6947]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [6862 7034])
                            ("convertValue" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("from" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("autil::MultiChar" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7061 7090])
                                    ("to" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7091 7107]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [7036 7159])
                            ("CASE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7169 7173])
                            ("gatherTensorMulti" function
                               (:template 
                                  ( ("IndexType" type (:type "class") nil nil))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil)
                                :arguments 
                                  ( ("tensor" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8295 8328])
                                    ("index" variable (:type ("IndexType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8329 8345])
                                    ("indexSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8346 8363])
                                    ("result" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8401 8428]))                                  )
                                (reparse-symbol namespacesubparts) [8229 8906])
                            ("CASE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8928 8932])
                            ("gatherTensor" function
                               (:template 
                                  ( ("IndexType" type (:type "class") nil nil))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil)
                                :arguments 
                                  ( ("tensor" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10936 10969])
                                    ("index" variable (:type ("IndexType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10970 10986])
                                    ("indexSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10987 11004])
                                    ("result" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11037 11064]))                                  )
                                (reparse-symbol namespacesubparts) [10874 11917]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [541 11932]))                  
                :type "namespace")
                nil [524 11934]))          
      :file "OpUtil.h"
      :pointmax 11979
      :fsize 11978
      :lastmodtime '(23413 4273 759368 668000)
      :unmatched-syntax '((thing 2044 . 2045) (thing 2043 . 2044) (thing 2037 . 2042) (thing 1968 . 1969) (thing 1967 . 1968) (thing 1961 . 1966) (thing 1893 . 1894) (thing 1892 . 1893) (thing 1886 . 1891) (thing 1848 . 1849) (thing 1847 . 1848))
      :lexical-table 
        '(("TURING_REQ_TRUE" (spp-arg-list ("expr" "status") 821 . 835) . 
              ((DO "do" 861 . 863) (semantic-list "{                                                 \\
        bool re = (expr);                                \\
        if (!re) {                                       \\
            auto s = (status);                           \\
            AUTIL_LOG(WARN, \"%s\", s.ToString().c_str()); \\
            return s;                                    \\
        }                                                \\
    }" 864 . 1275) (WHILE "while" 1276 . 1281) (semantic-list "(0)" 1282 . 1285)))
          ("TURING_REQ_OK" (spp-arg-list ("status") 1308 . 1316) . 
              ((DO "do" 1350 . 1352) (semantic-list "{                                                 \\
        auto s = (status);                               \\
        if (!s.ok()) {                                   \\
            AUTIL_LOG(WARN, \"%s\", s.ToString().c_str()); \\
            return s;                                    \\
        }                                                \\
    }" 1353 . 1705) (WHILE "while" 1706 . 1711) (semantic-list "(0)" 1712 . 1715)))
          ("ISEARCH_TURING_OPUTIL_H")
          ("TRACE_OP_INFO" (spp-arg-list nil 4756 . 4758) . ((semantic-list "({                                                                  \\
        auto sessionResource = GET_SESSION_RESOURCE();                  \\
        auto queryResource = GET_QUERY_RESOURCE(sessionResource);       \\
    })" 4813 . 5037)))
          ("GET_SESSION_RESOURCE" (spp-arg-list nil 2639 . 2641) . ((semantic-list "({                                                                                           \\
        auto device = dynamic_cast<tensorflow::LocalDevice *>(ctx->device());                    \\
        OP_REQUIRES(ctx, device,                                                                 \\
                    ::tensorflow::Status(tensorflow::error::UNAVAILABLE, \"not a local device\")); \\
        auto sessionResource = device->GetSessionResource();                                     \\
        OP_REQUIRES(                                                                             \\
            ctx, sessionResource,                                                                \\
            ::tensorflow::Status(tensorflow::error::UNAVAILABLE, \"SessionResource is null\"));    \\
        sessionResource;                                                                         \\
    })" 2689 . 3582)))
          ("TRACE_OP_INFO_WITH_RESOURCE" (spp-arg-list ("queryResource") 2114 . 2129) . ((semantic-list "({                                                                  \\
        if (queryResource->tracer) {                                    \\
            REQUEST_TRACE_WITH_TRACER(queryResource->tracer.get(), TRACE3, \\
                    \"name [%s], op [%s]\", ctx->op_kernel().name().c_str(), \\
                    ctx->op_kernel().type_string().c_str());            \\
        }                                                               \\
    })" 2157 . 2609)))
          ("GET_QUERY_RESOURCE" (spp-arg-list ("sessionResource") 3610 . 3627) . ((semantic-list "({                                                                                           \\
        int64_t runId = ctx->step_id();                                                          \\
        auto queryResource = sessionResource->getQueryResource(runId);                           \\
        OP_REQUIRES(ctx, queryResource, errors::Unavailable(\"invalid query resource: \", runId)); \\
        TRACE_OP_INFO_WITH_RESOURCE(queryResource);                     \\
        queryResource;                                                  \\
    })" 3687 . 4233)))
          ("CHECK_TIMEOUT" (spp-arg-list ("queryResource") 4256 . 4271) . ((semantic-list "({                                                                          \\
        if (queryResource->timeoutTerminator) {                                 \\
            OP_REQUIRES(ctx, !queryResource->timeoutTerminator->checkTimeout(), \\
                        errors::Unavailable(\"query timeout.\"));                 \\
        }                                                                       \\
    })" 4321 . 4733)))
          )
))
  :file "!ssd!sdd!git!turing_ha3_compile!source_code!basic_ops!basic_ops!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
