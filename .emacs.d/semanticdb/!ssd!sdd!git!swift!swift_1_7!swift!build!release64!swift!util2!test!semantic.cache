;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "FakeFslibFile.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/util2/test/FakeFslibFile.h" include nil nil [1 44])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [68 73]))                  
                :type "int")
                nil [46 74])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [91 96])
                    ("" variable (:type ("FakeFslibFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [97 111]))                  
                :type "int")
                nil [75 112])
            ("FakeFslibFile" function
               (:constructor-flag t
                :parent "FakeFslibFile"
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :type ("fslib::fs::File" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [143 165]))                  
                :type ("FakeFslibFile" type (:type "class") nil nil))
                nil [114 287])
            ("FakeFslibFile" function
               (:destructor-flag t
                :parent "FakeFslibFile"
                :type "void")
                nil [289 343])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [365 370]))                  
                :type "int")
                nil [345 371]))          
      :file "FakeFslibFile.cpp"
      :pointmax 373
      :fsize 372
      :lastmodtime '(22938 53302 928470 426000)
      :unmatched-syntax nil)
    (semanticdb-table "TargetRecorderTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/util2/TargetRecorder.h" include nil nil [1 40])
            ("fslib/fs/FileSystem.h" include nil nil [41 73])
            ("swift/test/unittest.h" include nil nil [74 106])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [108 128])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152 157]))                  
                :type "int")
                nil [130 158])
            ("TargetRecorderTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :type "class")
                nil [160 212])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TargetRecorderTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [221 240])
                    ("" variable (:type ("testSimple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241 252]))                  
                :type "int")
                nil [214 847])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [869 874]))                  
                :type "int")
                nil [849 875]))          
      :file "TargetRecorderTest.cpp"
      :pointmax 877
      :fsize 876
      :lastmodtime '(22938 53314 320470 513000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift_1_7!swift!build!release64!swift!util2!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
