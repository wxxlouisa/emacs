;; Object service/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "service/"
  :tables
  (list
    (semanticdb-table "BrokerWorker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/broker/service/BrokerWorker.h" include nil nil [1 47])
            ("swift/config/BrokerConfigParser.h" include nil nil [48 92])
            ("swift/config/ConfigReader.h" include nil nil [93 131])
            ("swift/config/ConfigDefine.h" include nil nil [132 170])
            ("autil/StringUtil.h" include nil nil [171 200])
            ("swift/common/PathDefine.h" include nil nil [201 237])
            ("autil/TimeUtility.h" include nil nil [238 268])
            ("autil/StringUtil.h" include nil nil [269 298])
            ("swift/protocol/Heartbeat.pb.h" include nil nil [299 339])
            ("fslib/fs/FileSystem.h" include nil nil [340 372])
            ("swift/broker/version.h" include nil nil [373 406])
            ("sys/types.h" include (:system-flag t) nil [407 429])
            ("unistd.h" include (:system-flag t) nil [430 449])
            ("BEGIN_WORKER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [484 496]))                  
                :type "int")
                nil [451 497])
            ("createWorker" function
               (:pointer 1
                :type ("WorkerBase" type (:type "class") nil nil))
                nil [498 575])
            ("END_WORKER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [607 619]))                  
                :type "int")
                nil [576 620])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 652]))                  
                :type "int")
                nil [622 653])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [670 678])
                    ("" variable (:type ("BrokerWorker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [679 692]))                  
                :type "int")
                nil [654 693])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [714 721]))                  
                :type "int")
                nil [694 722])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("monitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [743 751]))                  
                :type "int")
                nil [723 752])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [773 778]))                  
                :type "int")
                nil [753 779])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [800 807]))                  
                :type "int")
                nil [780 808])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [829 838]))                  
                :type "int")
                nil [809 839])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [840 862])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [863 883])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [884 909])
            ("BrokerWorker::CHECK_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "200 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [911 975])
            ("BrokerWorker::AMON_REPORT_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [986 1048])
            ("BrokerWorker::LEADER_RETRY_TIME_INTERVAL" variable
               (:constant-flag t
                :default-value "1000 * 1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [1062 1132])
            ("BrokerWorker::LEADER_RETRY_COUNT" variable
               (:constant-flag t
                :default-value "90"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [1139 1192])
            ("BrokerWorker::CONFIG" variable
               (:constant-flag t
                :default-value "\"config\""
                :type ("string" type (:type "class") nil nil))
                nil [1194 1239])
            ("BrokerWorker::ROLE" variable
               (:constant-flag t
                :default-value "\"role\""
                :type ("string" type (:type "class") nil nil))
                nil [1240 1281])
            ("BrokerWorker::DEFAULT_LEADER_LEASE_TIME" variable
               (:constant-flag t
                :default-value "\"10\""
                :type ("string" type (:type "class") nil nil))
                nil [1283 1343])
            ("BrokerWorker::DEFAULT_LEADER_LOOP_INTERVAL" variable
               (:constant-flag t
                :default-value "\"2\""
                :type ("string" type (:type "class") nil nil))
                nil [1351 1413])
            ("BrokerWorker" function
               (:constructor-flag t
                :parent "BrokerWorker"
                :type ("BrokerWorker" type (:type "class") nil nil))
                nil [1420 1770])
            ("BrokerWorker" function
               (:destructor-flag t
                :parent "BrokerWorker"
                :type "void")
                nil [1772 2117])
            ("doInitOptions" function
               (:parent "BrokerWorker"
                :type "void")
                nil [2119 2391])
            ("doExtractOptions" function
               (:parent "BrokerWorker"
                :type "void")
                nil [2393 2548])
            ("doInit" function
               (:parent "BrokerWorker"
                :type "bool")
                nil [2550 3593])
            ("loadConfig" function
               (:parent "BrokerWorker"
                :type "bool")
                nil [3595 4347])
            ("doStart" function
               (:parent "BrokerWorker"
                :type "bool")
                nil [4349 5933])
            ("doStop" function
               (:parent "BrokerWorker"
                :type "void")
                nil [5935 6363])
            ("doIdle" function
               (:parent "BrokerWorker"
                :type "void")
                nil [6365 6413])
            ("becomeLeader" function
               (:parent "BrokerWorker"
                :type "void")
                nil [6415 6589])
            ("getAccessKey" function
               (:parent "BrokerWorker"
                :type ("string" type (:type "class") nil nil))
                nil [6591 6716])
            ("noLongerLeader" function
               (:parent "BrokerWorker"
                :type "void")
                nil [6718 6975])
            ("amonReport" function
               (:parent "BrokerWorker"
                :type "void")
                nil [6977 7309])
            ("checkMonitor" function
               (:parent "BrokerWorker"
                :type "void")
                nil [7311 7491])
            ("getWorkerAddress" function
               (:parent "BrokerWorker"
                :type ("string" type (:type "class") nil nil))
                nil [7493 7618])
            ("getHeartbeatAddress" function
               (:parent "BrokerWorker"
                :type ("string" type (:type "class") nil nil))
                nil [7620 7756])
            ("getHeartbeatInfo" function
               (:parent "BrokerWorker"
                :type ("HeartbeatInfo" type (:type "class") nil nil))
                nil [7758 7894])
            ("initHeartbeat" function
               (:parent "BrokerWorker"
                :type "bool")
                nil [7896 8183])
            ("heartbeat" function
               (:parent "BrokerWorker"
                :type "void")
                nil [8185 8710])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8732 8740]))                  
                :type "int")
                nil [8712 8741]))          
      :file "BrokerWorker.cpp"
      :pointmax 8742
      :fsize 8741
      :lastmodtime '(22939 52165 354658 976000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift_1_6!swift!swift!broker!service!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
