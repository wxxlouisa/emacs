;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("admin_starter_test_sources" variable nil nil [58 177])
            ("libsname" variable nil nil [179 316])
            ("admin_startertest" variable nil nil [318 503]))          
      :file "SConscript"
      :pointmax 505
      :fsize 504
      :lastmodtime '(22939 43126 24085 558000)
      :unmatched-syntax nil)
    (semanticdb-table "HippoHelperTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/test/unittest.h" include nil nil [1 33])
            ("swift/tools/admin_starter/HippoHelper.h" include nil nil [34 84])
            ("swift/tools/admin_starter/test/MockHippoClient.h" include nil nil [85 144])
            ("hippo/proto/Common.pb.h" include nil nil [145 179])
            ("fslib/fs/FileSystem.h" include nil nil [180 212])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [214 234])
            ("testing" using (:type ("testing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [235 259])
            ("fslib::fs" using (:type ("fslib::fs" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [260 286])
            ("swift" type
               (:members 
                  ( ("tools" type
                       (:members 
                          ( ("HippoHelperTest" type
                               (:superclasses 
                                  ( ("SWIFT_TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [372 379])
                                    ("setUp" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [384 397])
                                    ("tearDown" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [402 418]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [324 421])
                            ("setUp" function
                               (:parent "HippoHelperTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [423 456])
                            ("tearDown" function
                               (:parent "HippoHelperTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [458 494])
                            ("ACTION_P2" function
                               (:arguments 
                                  ( ("" variable (:type ("SET_ERROR_INFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [506 521])
                                    ("" variable (:type ("errorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [522 532])
                                    ("" variable (:type ("errorMsg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533 542]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [496 738])
                            ("HIPPO_HELPER_TEST_CALL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [748 770])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("stopApp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1729 1777])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("updateAdminConf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1779 1835])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("getAppStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1837 1887])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1897 1913])
                                    ("" variable (:type ("testWriteVersionFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1914 1935]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1890 2289])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2298 2314])
                                    ("" variable (:type ("testStartApp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2315 2328]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2291 3202]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [305 3205]))                  
                :type "namespace")
                nil [287 3208]))          
      :file "HippoHelperTest.cpp"
      :pointmax 3210
      :fsize 3209
      :lastmodtime '(22943 33267 10938 945000)
      :unmatched-syntax '((thing 1777 . 1778) (thing 1835 . 1836) (thing 1887 . 1888) (thing 3205 . 3206) (thing 3208 . 3209))
      :lexical-table 
        '(("HIPPO_HELPER_TEST_CALL" (spp-arg-list ("helperMethod" "clientMethod") 770 . 798) . 
              ((symbol "TEST_F" 818 . 824) (semantic-list "(HippoHelperTest, test##helperMethod)" 824 . 861) (semantic-list "{                       \\
        string configPath = TEST_DATA_PATH\"/hippo_helper_test/\";        \\
        HippoHelper hippoHelper;                                        \\
        ASSERT_TRUE(hippoHelper.init(configPath));                      \\
        hippoHelper.writeVersionFile();                                 \\
        hippo::MockHippoClient *hippoClient = ASSERT_CAST_AND_RETURN(   \\
                hippo::MockHippoClient, hippoHelper._hippoClient);      \\
        EXPECT_CALL(*hippoClient, clientMethod(_, _))                   \\
            .WillOnce(SET_ERROR_INFO(hippo::proto::ERROR_NONE, \"\"))     \\
            .WillOnce(SET_ERROR_INFO(hippo::proto::ERROR_MASTER_NOT_LEADER, \"not leader\")); \\
        EXPECT_TRUE(hippoHelper.helperMethod());                        \\
        EXPECT_FALSE(hippoHelper.helperMethod());                       \\
    }" 862 . 1727)))
          )
)
    (semanticdb-table "MockHippoClient.h"
      :file "MockHippoClient.h"
      :fsize 2902
      :lastmodtime '(22925 26700 310789 692000)))
  :file "!ssd!sdd!git!swift!swift_1_7!swift!swift!tools!admin_starter!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
