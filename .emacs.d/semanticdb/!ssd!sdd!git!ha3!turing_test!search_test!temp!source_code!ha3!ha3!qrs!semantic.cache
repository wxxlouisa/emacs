;; Object qrs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "qrs/"
  :tables
  (list
    (semanticdb-table "MatchDocs2Hits.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/qrs/MatchDocs2Hits.h" include (:system-flag t) nil [1 36])
            ("ha3/proxy/SimpleAttributeExpressionCreator.h" include (:system-flag t) nil [37 92])
            ("ha3/common/VirtualAttrConvertor.h" include (:system-flag t) nil [93 137])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [139 159])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178 185]))                  
                :type "int")
                nil [160 186])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [205 212]))                  
                :type "int")
                nil [187 213])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [234 238]))                  
                :type "int")
                nil [214 239])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [254 258])
                    ("" variable (:type ("MatchDocs2Hits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [259 274]))                  
                :type "int")
                nil [240 275])
            ("MatchDocs2Hits" function
               (:constructor-flag t
                :parent "MatchDocs2Hits"
                :type ("MatchDocs2Hits" type (:type "class") nil nil))
                nil [277 327])
            ("MatchDocs2Hits" function
               (:destructor-flag t
                :parent "MatchDocs2Hits"
                :type "void")
                nil [329 367])
            ("clear" function
               (:parent "MatchDocs2Hits"
                :type "void")
                nil [369 728])
            ("extractNames" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("referVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("matchdoc::ReferenceVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [764 806])
                    ("prefix" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [842 863])
                    ("nameVec" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [864 888]))                  
                :type "void")
                nil [730 1194])
            ("fillExtraDocIdentifier" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("matchDoc" variable
                       (:constant-flag t
                        :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1240 1274])
                    ("extId" variable
                       (:reference 1
                        :type ("ExtraDocIdentifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1283 1309]))                  
                :type "void")
                nil [1196 1822])
            ("convertOne" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("matchDoc" variable
                       (:constant-flag t
                        :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1858 1892]))                  
                :type ("HitPtr" type (:type "class") nil nil))
                nil [1824 3372])
            ("initAttributeReferences" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3419 3448])
                    ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("common::Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3457 3509]))                  
                :type "bool")
                nil [3374 4371])
            ("initUserData" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("common::Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4407 4459]))                  
                :type "void")
                nil [4373 4649])
            ("initIdentifiers" function
               (:parent "MatchDocs2Hits"
                :arguments 
                  ( ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("common::Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4688 4740])
                    ("matchDocs" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatchDocs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4778 4805]))                  
                :type "void")
                nil [4651 5341])
            ("convert" function
               (:pointer 1
                :parent "MatchDocs2Hits"
                :arguments 
                  ( ("matchDocs" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MatchDocs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5373 5400])
                    ("requestPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5401 5430])
                    ("sortExprMetaVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::SortExprMeta" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5462 5514])
                    ("errResult" variable
                       (:reference 1
                        :type ("ErrorResult" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5546 5569])
                    ("clusterList" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5600 5644]))                  
                :type ("Hits" type (:type "class") nil nil))
                nil [5343 7771])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7791 7795]))                  
                :type "int")
                nil [7773 7796]))          
      :file "MatchDocs2Hits.cpp"
      :pointmax 7797
      :fsize 7796
      :lastmodtime '(23220 43218 999782 134000)
      :unmatched-syntax nil)
    (semanticdb-table "SyntaxExprValidator.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/qrs/SyntaxExprValidator.h" include (:system-flag t) nil [1 41])
            ("ha3/queryparser/AtomicSyntaxExpr.h" include (:system-flag t) nil [42 87])
            ("ha3/queryparser/BinarySyntaxExpr.h" include (:system-flag t) nil [88 133])
            ("ha3/queryparser/FuncSyntaxExpr.h" include (:system-flag t) nil [134 177])
            ("ha3/search/TypeTransformer.h" include (:system-flag t) nil [178 217])
            ("ha3/common/VariableTypeTraits.h" include (:system-flag t) nil [218 260])
            ("autil/StringUtil.h" include (:system-flag t) nil [261 290])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [292 312])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("queryparser" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [331 343]))                  
                :type "int")
                nil [313 344])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [363 370]))                  
                :type "int")
                nil [345 371])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [390 397]))                  
                :type "int")
                nil [372 398])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [417 424]))                  
                :type "int")
                nil [399 425])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [447 451]))                  
                :type "int")
                nil [427 452])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [467 471])
                    ("" variable (:type ("SyntaxExprValidator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472 492]))                  
                :type "int")
                nil [453 493])
            ("SyntaxExprValidator" function
               (:constructor-flag t
                :parent "SyntaxExprValidator"
                :arguments 
                  ( ("attrInfos" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AttributeInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [536 568])
                    ("funcInfoMap" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ClusterFuncMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [577 611])
                    ("clusterNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [612 647])
                    ("virtualAttributes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("common::VirtualAttribute" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [657 721]))                  
                :type ("SyntaxExprValidator" type (:type "class") nil nil))
                nil [495 921])
            ("SyntaxExprValidator" function
               (:destructor-flag t
                :parent "SyntaxExprValidator"
                :type "void")
                nil [923 970])
            ("validateAttributeAndGetInfo" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("attrName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1035 1058])
                    ("syntaxExprType" variable
                       (:reference 1
                        :type ("SyntaxExprType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1059 1090])
                    ("resultType" variable
                       (:reference 1
                        :type ("ExprResultType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1099 1126])
                    ("isMultiValue" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [1127 1146])
                    ("isSubExpression" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [1147 1169]))                  
                :type "void")
                nil [972 2782])
            ("findActualExpr" function
               (:pointer 1
                :parent "SyntaxExprValidator"
                :constant-flag t
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2848 2877]))                  
                :type ("SyntaxExpr" type (:type "class") nil nil))
                nil [2784 3324])
            ("validateBinarySyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BinarySyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3396 3431]))                  
                :type ("ExprResultType" type (:type "class") nil nil))
                nil [3326 5245])
            ("checkStringValueInBinaryExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5311 5340])
                    ("leftExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5350 5377])
                    ("rightExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5387 5415]))                  
                :type "bool")
                nil [5247 5802])
            ("supportStringAttribute" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExprType" variable (:type ("SyntaxExprType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5918 5948]))                  
                :type "bool")
                nil [5860 6345])
            ("checkConstExprType" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("constExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6402 6430])
                    ("nonconstExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6440 6471]))                  
                :type ("ExprResultType" type (:type "class") nil nil))
                nil [6347 8472])
            ("checkConstExprValue" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("expr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AtomicSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8520 8549]))                  
                :type "bool")
                nil [8474 8708])
            ("checkExprType" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("exprA" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8760 8784])
                    ("exprB" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8794 8818]))                  
                :type ("ExprResultType" type (:type "class") nil nil))
                nil [8710 10677])
            ("checkBinaryExprWithMultiValue" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10735 10764]))                  
                :type "bool")
                nil [10679 11001])
            ("checkBinaryExprWithStringType" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11059 11088]))                  
                :type "bool")
                nil [11003 11343])
            ("visitAtomicSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AtomicSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11393 11428]))                  
                :type "void")
                nil [11345 12141])
            ("visitAddSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AddSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12192 12224]))                  
                :type "void")
                nil [12147 12439])
            ("visitMinusSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MinusSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12492 12526]))                  
                :type "void")
                nil [12445 12741])
            ("visitMulSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MulSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12792 12824]))                  
                :type "void")
                nil [12747 13039])
            ("visitDivSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("DivSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13090 13122]))                  
                :type "void")
                nil [13045 13337])
            ("visitEqualSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EqualSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13390 13424]))                  
                :type "void")
                nil [13343 13552])
            ("visitNotEqualSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("NotEqualSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13608 13645]))                  
                :type "void")
                nil [13558 13773])
            ("visitLessSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("LessSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13825 13858]))                  
                :type "void")
                nil [13779 13995])
            ("visitGreaterSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("GreaterSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14050 14086]))                  
                :type "void")
                nil [14001 14223])
            ("visitLessEqualSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("LessEqualSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14280 14318]))                  
                :type "void")
                nil [14229 14455])
            ("visitGreaterEqualSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("GreaterEqualSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14515 14556]))                  
                :type "void")
                nil [14461 14693])
            ("visitAndSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14744 14776]))                  
                :type "void")
                nil [14699 15157])
            ("visitOrSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("OrSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15207 15238]))                  
                :type "void")
                nil [15163 15622])
            ("checkBitOpResultType" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("resultType" variable (:type ("ExprResultType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15671 15697]))                  
                :type "bool")
                nil [15624 16329])
            ("checkBitOpSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BinarySyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16379 16414]))                  
                :type "void")
                nil [16332 16669])
            ("visitBitAndSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BitAndSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16719 16754]))                  
                :type "void")
                nil [16671 16796])
            ("visitBitXorSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BitXorSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16846 16881]))                  
                :type "void")
                nil [16798 16923])
            ("visitBitOrSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("BitOrSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16972 17006]))                  
                :type "void")
                nil [16925 17048])
            ("visitRankSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RankSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17096 17129]))                  
                :type "void")
                nil [17050 17164])
            ("visitFuncSyntaxExpr" function
               (:parent "SyntaxExprValidator"
                :arguments 
                  ( ("syntaxExpr" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("FuncSyntaxExpr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17212 17245]))                  
                :type "void")
                nil [17166 20332])
            ("validateFuncName" function
               (:pointer 1
                :parent "SyntaxExprValidator"
                :constant-flag t
                :arguments 
                  ( ("funcName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20397 20420]))                  
                :type ("FunctionProtoInfo" type (:type "class") nil nil))
                nil [20334 21478])
            ("reset" function
               (:parent "SyntaxExprValidator"
                :type "void")
                nil [21480 21566])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21590 21594]))                  
                :type "int")
                nil [21572 21595]))          
      :file "SyntaxExprValidator.cpp"
      :pointmax 21597
      :fsize 21596
      :lastmodtime '(23236 28035 919512 438000)
      :unmatched-syntax nil)
    (semanticdb-table "QueryFlatten.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/qrs/QueryFlatten.h" include (:system-flag t) nil [1 34])
            ("ha3/common/Query.h" include (:system-flag t) nil [35 64])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [66 86])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105 112]))                  
                :type "int")
                nil [87 113])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [135 139]))                  
                :type "int")
                nil [115 140])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155 159])
                    ("" variable (:type ("QueryFlatten" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160 173]))                  
                :type "int")
                nil [141 174])
            ("QueryFlatten" function
               (:constructor-flag t
                :parent "QueryFlatten"
                :type ("QueryFlatten" type (:type "class") nil nil))
                nil [176 235])
            ("QueryFlatten" function
               (:destructor-flag t
                :parent "QueryFlatten"
                :type "void")
                nil [237 311])
            ("visitTermQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TermQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [347 370]))                  
                :type "void")
                nil [313 444])
            ("visitPhraseQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PhraseQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [482 507]))                  
                :type "void")
                nil [446 583])
            ("visitMultiTermQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("MultiTermQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [624 652]))                  
                :type "void")
                nil [585 732])
            ("flatten" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("resultQuery" variable
                       (:pointer 1
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [761 780])
                    ("srcQuery" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [809 831]))                  
                :type "void")
                nil [734 1781])
            ("visitAndQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1816 1838]))                  
                :type "void")
                nil [1783 1951])
            ("visitOrQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("OrQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1985 2006]))                  
                :type "void")
                nil [1953 2117])
            ("visitAndNotQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndNotQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2155 2180]))                  
                :type "void")
                nil [2119 2299])
            ("visitRankQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RankQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2335 2358]))                  
                :type "void")
                nil [2301 2473])
            ("visitNumberQuery" function
               (:parent "QueryFlatten"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("NumberQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2511 2536]))                  
                :type "void")
                nil [2475 2612])
            ("stealQuery" function
               (:pointer 1
                :parent "QueryFlatten"
                :type ("Query" type (:type "class") nil nil))
                nil [2614 2735])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2755 2759]))                  
                :type "int")
                nil [2737 2760]))          
      :file "QueryFlatten.cpp"
      :pointmax 2762
      :fsize 2761
      :lastmodtime '(23220 43219 3782 141000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!ha3!ha3!qrs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
