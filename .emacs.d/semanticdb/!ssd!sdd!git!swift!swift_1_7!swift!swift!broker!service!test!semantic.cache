;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("broker_nest_test_sources" variable nil nil [58 323])
            ("libsname" variable nil nil [325 707])
            ("broker_nest_test" variable nil nil [710 892]))          
      :file "SConscript"
      :pointmax 894
      :fsize 893
      :lastmodtime '(22948 54710 161431 811000)
      :unmatched-syntax nil)
    (semanticdb-table "TaskInfoMonitorTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sstream" include (:system-flag t) nil [1 19])
            ("autil/StringUtil.h" include nil nil [20 49])
            ("swift/common/Common.h" include nil nil [50 82])
            ("swift/common/Log.h" include nil nil [83 112])
            ("swift/test/unittest.h" include nil nil [113 145])
            ("swift/broker/service/TaskInfoMonitor.h" include nil nil [146 195])
            ("swift/broker/service/ZkConnectionStatus.h" include nil nil [196 248])
            ("swift/protocol/Common.pb.h" include nil nil [249 286])
            ("autil/Lock.h" include nil nil [287 310])
            ("swift/heartbeat/test/ZkServer.h" include nil nil [311 353])
            ("swift/protocol/test/MessageCreator.h" include nil nil [354 401])
            ("swift/protocol/MessageComparator.h" include nil nil [402 447])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [449 469])
            ("std::tr1::placeholders" using (:type ("std::tr1::placeholders" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [470 509])
            ("cm_basic" using (:type ("cm_basic" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [510 535])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [556 565]))                  
                :type "int")
                nil [536 566])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [589 597]))                  
                :type "int")
                nil [567 598])
            ("TaskInfoMonitorTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [652 659])
                    ("TaskInfoMonitorTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("TaskInfoMonitorTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [664 686])
                    ("TaskInfoMonitorTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [691 714])
                    ("public" label nil (reparse-symbol classsubparts) [715 722])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [727 740])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [745 761])
                    ("public" label nil (reparse-symbol classsubparts) [762 769])
                    ("checkExtractParameter" function
                       (:prototype-flag t
                        :arguments 
                          ( ("address" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [801 828])
                            ("f" variable (:type "bool") (reparse-symbol arg-sub-list) [860 867])
                            ("expectHost" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [900 930])
                            ("expectPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [962 992]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [774 993])
                    ("initTPSupervisor" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [998 1022])
                    ("addTaskInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dispatchInfo" variable
                               (:reference 1
                                :type ("protocol::DispatchInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1045 1082])
                            ("partitionId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1104 1135])
                            ("bufferSize" variable
                               (:default-value "1024"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1157 1183]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1028 1185])
                    ("protected" label nil (reparse-symbol classsubparts) [1186 1196])
                    ("_rand" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1201 1219])
                    ("_globalMsg" variable (:type ("protocol::DispatchInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1255 1289])
                    ("_host" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1294 1312])
                    ("_config" variable (:type ("config::BrokerConfig" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1317 1346])
                    ("_status" variable
                       (:pointer 1
                        :type ("ZkConnectionStatus" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1351 1379])
                    ("_tpSupervisor" variable
                       (:pointer 1
                        :type ("TopicPartitionSupervisor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1384 1424])
                    ("_count" variable (:type "int") (reparse-symbol classsubparts) [1429 1440])
                    ("_zkServer" variable (:type ("heartbeat::ZkServer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1445 1475])
                    ("protected" label nil (reparse-symbol classsubparts) [1476 1486])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1491 1511]))                  
                :type "class")
                nil [600 1514])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1532 1540])
                    ("" variable (:type ("TaskInfoMonitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1541 1561]))                  
                :type "int")
                nil [1516 1562])
            ("TaskInfoMonitorTest" function
               (:constructor-flag t
                :parent "TaskInfoMonitorTest"
                :type ("TaskInfoMonitorTest" type (:type "class") nil nil))
                nil [1565 1611])
            ("TaskInfoMonitorTest" function
               (:destructor-flag t
                :parent "TaskInfoMonitorTest"
                :type "void")
                nil [1613 1660])
            ("setUp" function
               (:parent "TaskInfoMonitorTest"
                :type "void")
                nil [1662 2093])
            ("tearDown" function
               (:parent "TaskInfoMonitorTest"
                :type "void")
                nil [2095 2244])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TaskInfoMonitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2253 2273])
                    ("" variable (:type ("testExtractParameter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2274 2295]))                  
                :type "int")
                nil [2246 2963])
            ("checkExtractParameter" function
               (:parent "TaskInfoMonitorTest"
                :arguments 
                  ( ("address" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3014 3041])
                    ("f" variable (:type "bool") (reparse-symbol arg-sub-list) [3050 3057])
                    ("expectHost" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3066 3096])
                    ("expectPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3105 3135]))                  
                :type "void")
                nil [2966 3393])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TaskInfoMonitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3402 3422])
                    ("" variable (:type ("testTrigleCreate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3423 3440]))                  
                :type "int")
                nil [3395 5840])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TaskInfoMonitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5849 5869])
                    ("" variable (:type ("testPathExistBeforeStart" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5870 5895]))                  
                :type "int")
                nil [5842 8389])
            ("initTPSupervisor" function
               (:parent "TaskInfoMonitorTest"
                :type "void")
                nil [8391 9270])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TaskInfoMonitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9279 9299])
                    ("" variable (:type ("testDisconnectedAndDeadNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9300 9328]))                  
                :type "int")
                nil [9272 10962])
            ("addTaskInfo" function
               (:parent "TaskInfoMonitorTest"
                :arguments 
                  ( ("dispatchInfo" variable
                       (:reference 1
                        :type ("DispatchInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11002 11029])
                    ("partitionId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11068 11099])
                    ("bufferSize" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11138 11158]))                  
                :type "void")
                nil [10964 11439])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11461 11469]))                  
                :type "int")
                nil [11441 11470]))          
      :file "TaskInfoMonitorTest.cpp"
      :pointmax 11472
      :fsize 11471
      :lastmodtime '(23008 11780 408894 814000)
      :unmatched-syntax nil)
    (semanticdb-table "TransporterImplTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/common/Common.h" include nil nil [1 33])
            ("swift/common/Log.h" include nil nil [34 63])
            ("swift/test/unittest.h" include nil nil [64 96])
            ("swift/broker/service/TransporterImpl.h" include nil nil [97 146])
            ("swift/broker/service/test/FakeClosure.h" include nil nil [147 197])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [199 219])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241 250]))                  
                :type "int")
                nil [221 251])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275 283]))                  
                :type "int")
                nil [253 284])
            ("TransporterImplTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [338 345])
                    ("TransporterImplTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("TransporterImplTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [350 372])
                    ("TransporterImplTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [377 400])
                    ("public" label nil (reparse-symbol classsubparts) [401 408])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [413 426])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [431 447])
                    ("protected" label nil (reparse-symbol classsubparts) [448 458])
                    ("_status" variable
                       (:pointer 1
                        :type ("ZkConnectionStatus" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [463 491])
                    ("protected" label nil (reparse-symbol classsubparts) [492 502])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [507 527]))                  
                :type "class")
                nil [286 530])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [548 556])
                    ("" variable (:type ("TransporterImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [557 577]))                  
                :type "int")
                nil [532 578])
            ("TransporterImplTest" function
               (:constructor-flag t
                :parent "TransporterImplTest"
                :type ("TransporterImplTest" type (:type "class") nil nil))
                nil [581 627])
            ("TransporterImplTest" function
               (:destructor-flag t
                :parent "TransporterImplTest"
                :type "void")
                nil [629 676])
            ("setUp" function
               (:parent "TransporterImplTest"
                :type "void")
                nil [678 785])
            ("tearDown" function
               (:parent "TransporterImplTest"
                :type "void")
                nil [787 896])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TransporterImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [905 925])
                    ("" variable (:type ("testPartitionNotRunning" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [926 950]))                  
                :type "int")
                nil [898 2025])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TransporterImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2034 2054])
                    ("" variable (:type ("testPartitionNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2055 2077]))                  
                :type "int")
                nil [2027 2632])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("TransporterImplTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2641 2661])
                    ("" variable (:type ("testInvalidRequest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2662 2681]))                  
                :type "int")
                nil [2634 3185])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3207 3215]))                  
                :type "int")
                nil [3187 3216]))          
      :file "TransporterImplTest.cpp"
      :pointmax 3218
      :fsize 3217
      :lastmodtime '(23008 11780 408894 814000)
      :unmatched-syntax nil)
    (semanticdb-table "FakeClosure.h"
      :file "FakeClosure.h"
      :fsize 653
      :lastmodtime '(22925 26700 288789 700000))
    (semanticdb-table "BrokerPartitionTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/common/Common.h" include nil nil [1 33])
            ("swift/common/Log.h" include nil nil [34 63])
            ("swift/test/unittest.h" include nil nil [64 96])
            ("swift/broker/service/BrokerPartition.h" include nil nil [97 146])
            ("swift/test/test.h" include nil nil [147 175])
            ("swift/protocol/test/MessageCreator.h" include nil nil [176 223])
            ("swift/broker/service/test/FakeClosure.h" include nil nil [224 274])
            ("swift/common/FieldGroupWriter.h" include nil nil [275 317])
            ("swift/protocol/MessageCompressor.h" include nil nil [318 363])
            ("swift/util/MessageUtil.h" include nil nil [364 399])
            ("autil/ZlibCompressor.h" include nil nil [400 433])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [435 455])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [456 478])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [499 506]))                  
                :type "int")
                nil [479 507])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [528 533]))                  
                :type "int")
                nil [508 534])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [555 564]))                  
                :type "int")
                nil [535 565])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("storage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [586 594]))                  
                :type "int")
                nil [566 595])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [616 623]))                  
                :type "int")
                nil [596 624])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [647 655]))                  
                :type "int")
                nil [625 656])
            ("BrokerPartitionTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [710 717])
                    ("BrokerPartitionTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("BrokerPartitionTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [722 744])
                    ("BrokerPartitionTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [749 772])
                    ("public" label nil (reparse-symbol classsubparts) [773 780])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [785 798])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [803 819])
                    ("protected" label nil (reparse-symbol classsubparts) [820 830])
                    ("getMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [866 893])
                            ("startId" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [929 946])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [947 962]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [835 963])
                    ("sendMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1000 1027])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1028 1043]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [968 1044])
                    ("sendMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1081 1108])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1109 1124])
                            ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1161 1185])
                            ("compressMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1186 1210])
                            ("compressRequest" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1248 1276])
                            ("errorMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1278 1299])
                            ("mergeMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1337 1358]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1049 1360])
                    ("getMaxMessageId" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1401 1428])
                            ("msgId" variable
                               (:reference 1
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1429 1444]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1365 1445])
                    ("getMinMessageIdByTime" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1492 1519])
                            ("timestamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1532 1550])
                            ("msgId" variable
                               (:reference 1
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1551 1566]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1450 1567])
                    ("protected" label nil (reparse-symbol classsubparts) [1568 1578])
                    ("_config" variable (:type ("config::BrokerConfig" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1583 1612])
                    ("protected" label nil (reparse-symbol classsubparts) [1613 1623])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1628 1648]))                  
                :type "class")
                nil [658 1651])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1669 1677])
                    ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1678 1698]))                  
                :type "int")
                nil [1653 1699])
            ("BrokerPartitionTest" function
               (:constructor-flag t
                :parent "BrokerPartitionTest"
                :type ("BrokerPartitionTest" type (:type "class") nil nil))
                nil [1702 1748])
            ("BrokerPartitionTest" function
               (:destructor-flag t
                :parent "BrokerPartitionTest"
                :type "void")
                nil [1750 1797])
            ("setUp" function
               (:parent "BrokerPartitionTest"
                :type "void")
                nil [1799 1869])
            ("tearDown" function
               (:parent "BrokerPartitionTest"
                :type "void")
                nil [1871 1946])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1955 1975])
                    ("" variable (:type ("testSentAndGetMessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1976 1998]))                  
                :type "int")
                nil [1948 3404])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3413 3433])
                    ("" variable (:type ("testPreparePartitionConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3434 3461]))                  
                :type "int")
                nil [3406 7777])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7786 7806])
                    ("" variable (:type ("testInitWithSecurityMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7807 7832]))                  
                :type "int")
                nil [7779 9054])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9063 9083])
                    ("" variable (:type ("testGetMessageWithCompress" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9084 9111]))                  
                :type "int")
                nil [9056 11158])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11167 11187])
                    ("" variable (:type ("testCompressRequestLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11188 11213]))                  
                :type "int")
                nil [11160 12946])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12955 12975])
                    ("" variable (:type ("testCompressMessageLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12976 13001]))                  
                :type "int")
                nil [12948 15614])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15623 15643])
                    ("" variable (:type ("testCompressMessageLevelFiledFilter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15644 15680]))                  
                :type "int")
                nil [15616 18990])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18999 19019])
                    ("" variable (:type ("testCompressMessageLevelWithErrorDecodeError" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19020 19065]))                  
                :type "int")
                nil [18992 22046])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22056 22076])
                    ("" variable (:type ("test_unpack_failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22077 22096]))                  
                :type "int")
                nil [22049 23369])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23379 23399])
                    ("" variable (:type ("test_decompress_failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23400 23423]))                  
                :type "int")
                nil [23372 24756])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24765 24785])
                    ("" variable (:type ("testSentAndGetMergeMessage_PB" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24786 24816]))                  
                :type "int")
                nil [24758 37321])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37330 37350])
                    ("" variable (:type ("testSentAndGetMergeMessage_FB" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37351 37381]))                  
                :type "int")
                nil [37323 51668])
            ("getMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51712 51739])
                    ("startId" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51777 51794])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51795 51810]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [51670 51994])
            ("sendMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52039 52066])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52067 52082]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [51996 52459])
            ("sendMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52504 52531])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52532 52547])
                    ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [52556 52575])
                    ("compressMsg" variable (:type "bool") (reparse-symbol arg-sub-list) [52576 52593])
                    ("compressRequest" variable (:type "bool") (reparse-symbol arg-sub-list) [52594 52615])
                    ("errorMsgCompress" variable (:type "bool") (reparse-symbol arg-sub-list) [52616 52638])
                    ("mergeMessage" variable (:type "bool") (reparse-symbol arg-sub-list) [52647 52665]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [52461 54108])
            ("getMaxMessageId" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54157 54184])
                    ("msgId" variable
                       (:reference 1
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54185 54200]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [54110 54417])
            ("getMinMessageIdByTime" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54472 54499])
                    ("timestamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54508 54526])
                    ("msgId" variable
                       (:reference 1
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54527 54542]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [54419 54803])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54826 54834]))                  
                :type "int")
                nil [54806 54835]))          
      :file "BrokerPartitionTest.cpp"
      :pointmax 54836
      :fsize 54835
      :lastmodtime '(23292 9014 433220 605000)
      :unmatched-syntax '((thing 22499 . 22509) (thing 22499 . 22509) (thing 22499 . 22509) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22498 . 22508) (thing 22475 . 22478) (thing 22475 . 22478) (thing 22475 . 22478) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 22474 . 22477) (thing 20018 . 20021) (thing 20012 . 20016) (thing 19486 . 19496) (thing 19462 . 19465) (thing 13956 . 13959) (thing 13956 . 13959) (thing 13956 . 13959) (thing 13956 . 13959) (thing 13956 . 13959) (thing 13950 . 13954) (thing 13950 . 13954) (thing 13950 . 13954) (thing 13950 . 13954) (thing 13950 . 13954) (thing 13422 . 13432) (thing 13422 . 13432) (thing 13422 . 13432) (thing 13422 . 13432) (thing 13422 . 13432) (thing 13398 . 13401) (thing 13398 . 13401) (thing 13398 . 13401) (thing 13398 . 13401) (thing 13398 . 13401) (thing 11572 . 11582) (thing 11572 . 11582) (thing 11572 . 11582) (thing 11572 . 11582) (thing 11548 . 11551) (thing 11548 . 11551) (thing 11548 . 11551) (thing 11548 . 11551) (thing 5501 . 5511) (thing 5477 . 5480) (thing 3730 . 3740) (thing 3706 . 3709) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24830 . 24836) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841) (thing 24838 . 24841))))
  :file "!ssd!sdd!git!swift!swift_1_7!swift!swift!broker!service!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
