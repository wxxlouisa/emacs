;; Object admin/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "admin/"
  :tables
  (list
    (semanticdb-table "AdminWorker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/admin/AdminWorker.h" include nil nil [1 37])
            ("swift/config/AdminConfig.h" include nil nil [38 75])
            ("swift/config/ConfigDefine.h" include nil nil [76 114])
            ("swift/common/PathDefine.h" include nil nil [115 151])
            ("autil/StringUtil.h" include nil nil [152 181])
            ("swift/admin/CM2ServiceAdapter.h" include nil nil [182 224])
            ("swift/admin/version.h" include nil nil [225 257])
            ("BEGIN_WORKER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [292 304]))                  
                :type "int")
                nil [259 305])
            ("createWorker" function
               (:pointer 1
                :type ("WorkerBase" type (:type "class") nil nil))
                nil [306 380])
            ("END_WORKER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [412 424]))                  
                :type "int")
                nil [381 425])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [449 455]))                  
                :type "int")
                nil [427 456])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [473 479])
                    ("" variable (:type ("AdminWorker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [480 492]))                  
                :type "int")
                nil [457 493])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [514 521]))                  
                :type "int")
                nil [494 522])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [543 552]))                  
                :type "int")
                nil [523 553])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("monitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [574 582]))                  
                :type "int")
                nil [554 583])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 611]))                  
                :type "int")
                nil [584 612])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [614 634])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [635 660])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [661 683])
            ("AdminWorker::AMON_REPORT_INTERVAL" variable
               (:constant-flag t
                :default-value "1000 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [685 747])
            ("AdminWorker" function
               (:constructor-flag t
                :parent "AdminWorker"
                :type ("AdminWorker" type (:type "class") nil nil))
                nil [761 890])
            ("AdminWorker" function
               (:destructor-flag t
                :parent "AdminWorker"
                :type "void")
                nil [892 1115])
            ("doInitOptions" function
               (:parent "AdminWorker"
                :type "void")
                nil [1117 1247])
            ("doExtractOptions" function
               (:parent "AdminWorker"
                :type "void")
                nil [1249 1350])
            ("doInit" function
               (:parent "AdminWorker"
                :type "bool")
                nil [1352 2239])
            ("doStart" function
               (:parent "AdminWorker"
                :type "bool")
                nil [2241 3358])
            ("becomeLeader" function
               (:parent "AdminWorker"
                :type "void")
                nil [3360 4483])
            ("noLongerLeader" function
               (:parent "AdminWorker"
                :type "void")
                nil [4485 4913])
            ("doStop" function
               (:parent "AdminWorker"
                :type "void")
                nil [4915 5248])
            ("doIdle" function
               (:parent "AdminWorker"
                :type "void")
                nil [5250 5358])
            ("getAccessKey" function
               (:parent "AdminWorker"
                :type ("string" type (:type "class") nil nil))
                nil [5360 5484])
            ("getWorkerAddress" function
               (:parent "AdminWorker"
                :type ("string" type (:type "class") nil nil))
                nil [5486 5608])
            ("getHeartbeatAddress" function
               (:parent "AdminWorker"
                :type ("string" type (:type "class") nil nil))
                nil [5610 5749])
            ("getHeartbeatInfo" function
               (:parent "AdminWorker"
                :type ("HeartbeatInfo" type (:type "class") nil nil))
                nil [5751 5887])
            ("initHeartbeat" function
               (:parent "AdminWorker"
                :type "bool")
                nil [5889 6175])
            ("heartbeat" function
               (:parent "AdminWorker"
                :type "void")
                nil [6177 6363])
            ("amonReport" function
               (:parent "AdminWorker"
                :type "void")
                nil [6365 6695])
            ("publishServiceToCm2" function
               (:parent "AdminWorker"
                :type "bool")
                nil [6696 8026])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8048 8054]))                  
                :type "int")
                nil [8028 8055]))          
      :file "AdminWorker.cpp"
      :pointmax 8057
      :fsize 8056
      :lastmodtime '(22948 54710 152431 804000)
      :unmatched-syntax nil)
    (semanticdb-table "ZkDataAccessor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/admin/ZkDataAccessor.h" include nil nil [1 40])
            ("swift/protocol/Heartbeat.pb.h" include nil nil [41 81])
            ("swift/protocol/MessageComparator.h" include nil nil [82 127])
            ("swift/common/PathDefine.h" include nil nil [128 164])
            ("swift/util2/TargetRecorder.h" include nil nil [165 204])
            ("autil/StringUtil.h" include nil nil [205 234])
            ("sstream" include (:system-flag t) nil [235 253])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [276 282]))                  
                :type "int")
                nil [254 283])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [300 306])
                    ("" variable (:type ("ZkDataAccessor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [307 322]))                  
                :type "int")
                nil [284 323])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [344 353]))                  
                :type "int")
                nil [324 354])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [375 382]))                  
                :type "int")
                nil [355 383])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [404 409]))                  
                :type "int")
                nil [384 410])
            ("http_arpc" using (:type ("http_arpc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [412 438])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [439 459])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [460 482])
            ("LEADER_HISTORY_MAX_COUNT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "100"
                :type "int")
                nil [484 532])
            ("ZkDataAccessor" function
               (:constructor-flag t
                :parent "ZkDataAccessor"
                :type ("ZkDataAccessor" type (:type "class") nil nil))
                nil [534 570])
            ("ZkDataAccessor" function
               (:destructor-flag t
                :parent "ZkDataAccessor"
                :type "void")
                nil [572 609])
            ("init" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("zkWrapper" variable
                       (:pointer 1
                        :type ("cm_basic::ZkWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [637 668])
                    ("sysRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [695 717]))                  
                :type "bool")
                nil [611 1072])
            ("mkZkDirs" function
               (:parent "ZkDataAccessor"
                :type "bool")
                nil [1074 1994])
            ("getTopicPartitionInfos" function
               (:parent "ZkDataAccessor"
                :type ("TopicPartitionInfos" type (:type "class") nil nil))
                nil [1997 2100])
            ("loadTopicInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :type ("TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2138 2161])
                    ("topicPartInfos" variable
                       (:reference 1
                        :type ("TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2170 2206]))                  
                :type "bool")
                nil [2102 2606])
            ("loadTopicInfosFromNewFiles" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :type ("TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2656 2679])
                    ("topicPartInfos" variable
                       (:reference 1
                        :type ("TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2688 2724]))                  
                :type "bool")
                nil [2608 3101])
            ("recoverPartitionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3146 3175])
                    ("partitionInfos" variable
                       (:reference 1
                        :type ("TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3185 3221]))                  
                :type "bool")
                nil [3103 4059])
            ("addTopic" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMeta" variable
                       (:reference 1
                        :constant-flag t
                        :type ("protocol::TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4091 4139]))                  
                :type "bool")
                nil [4061 5177])
            ("modifyTopic" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("newMeta" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5212 5248]))                  
                :type "bool")
                nil [5179 6032])
            ("deleteTopic" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("name" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6067 6086]))                  
                :type "bool")
                nil [6034 7303])
            ("setTopicPartitionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicPartInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("protocol::TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7349 7401]))                  
                :type "bool")
                nil [7305 7618])
            ("writeTopicMetas" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :constant-flag t
                        :type ("protocol::TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7657 7696]))                  
                :type "bool")
                nil [7620 7925])
            ("writeTopicPartitionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicPartitionInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("protocol::TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7973 8030]))                  
                :type "bool")
                nil [7927 8303])
            ("readTopicMetas" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :type ("protocol::TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8341 8374]))                  
                :type "bool")
                nil [8305 8478])
            ("readTopicPartitionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicPartitionInfos" variable
                       (:reference 1
                        :type ("protocol::TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8525 8576]))                  
                :type "bool")
                nil [8480 8693])
            ("getTopicMeta" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8729 8753])
                    ("topicMeta" variable
                       (:reference 1
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8787 8819]))                  
                :type "bool")
                nil [8695 9251])
            ("loadTopicInfosFromOldFiles" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :type ("protocol::TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9301 9334])
                    ("topicPartInfos" variable
                       (:reference 1
                        :type ("protocol::TopicPartitionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9343 9389]))                  
                :type "bool")
                nil [9253 11385])
            ("getTopicMetaOld" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11424 11448])
                    ("meta" variable
                       (:reference 1
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11486 11513]))                  
                :type "bool")
                nil [11387 11622])
            ("getTopicInfoOld" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11661 11685])
                    ("topicInfo" variable
                       (:reference 1
                        :type ("TopicInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11723 11744]))                  
                :type "bool")
                nil [11624 12452])
            ("getAllTopicNameOld" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("names" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12493 12515]))                  
                :type "bool")
                nil [12453 12764])
            ("setDispatchedTask" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("dispatchInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("DispatchInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12805 12838]))                  
                :type "bool")
                nil [12766 12958])
            ("getDispatchedTask" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12999 13022])
                    ("dispatchInfo" variable
                       (:reference 1
                        :type ("DispatchInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13023 13050]))                  
                :type "bool")
                nil [12960 13135])
            ("setLeaderInfo" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("leaderInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LeaderInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13172 13201]))                  
                :type "bool")
                nil [13137 13553])
            ("getLeaderInfo" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("leaderInfo" variable
                       (:reference 1
                        :type ("LeaderInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13590 13614]))                  
                :type "bool")
                nil [13555 13695])
            ("addLeaderInfoToHistory" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("leaderInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LeaderInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13741 13770]))                  
                :type "bool")
                nil [13697 14561])
            ("getHistoryLeaders" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("historyLeaders" variable
                       (:reference 1
                        :type ("LeaderInfoHistory" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14602 14636]))                  
                :type "bool")
                nil [14563 14724])
            ("remove" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("path" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14754 14773]))                  
                :type "bool")
                nil [14726 15084])
            ("readConfigVersion" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("versionStr" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15125 15149]))                  
                :type "bool")
                nil [15086 15402])
            ("writeConfigVersion" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("versionStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15444 15474]))                  
                :type "bool")
                nil [15404 15689])
            ("readLeaderAddress" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15730 15758])
                    ("leaderAddress" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15795 15822]))                  
                :type "bool")
                nil [15691 16155])
            ("writeLeaderAddress" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16197 16220])
                    ("leaderAddress" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16221 16249]))                  
                :type "bool")
                nil [16157 16546])
            ("writeFile" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("path" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16615 16634])
                    ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16635 16657]))                  
                :type "bool")
                nil [16584 16896])
            ("ZFS_PREFIX" variable (:constant-flag t) nil [16972 16982])
            ("ZFS_PREFIX_LEN" variable (:constant-flag t) nil [17000 17014])
            ("getHostFromZkPath" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("zkPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17059 17085]))                  
                :type ("string" type (:type "class") nil nil))
                nil [17018 17351])
            ("getPathFromZkPath" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("zkPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17394 17420]))                  
                :type ("string" type (:type "class") nil nil))
                nil [17353 17782])
            ("createPath" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("path" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17816 17835]))                  
                :type "bool")
                nil [17784 18106])
            ("setBrokerVersionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("roleVersionInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RoleVersionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18151 18192]))                  
                :type "bool")
                nil [18108 18567])
            ("getBrokerVersionInfos" function
               (:parent "ZkDataAccessor"
                :arguments 
                  ( ("roleVersionInfos" variable
                       (:reference 1
                        :type ("RoleVersionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18612 18647]))                  
                :type "bool")
                nil [18569 18894])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18916 18922]))                  
                :type "int")
                nil [18896 18923]))          
      :file "ZkDataAccessor.cpp"
      :pointmax 18924
      :fsize 20507
      :lastmodtime '(23008 11780 401894 829000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ZFS_PREFIX_LEN" . ((number "6" 17015 . 17016)))
          ("ZFS_PREFIX" . ((string "\"zfs://\"" 16983 . 16991)))
          )
)
    (semanticdb-table "CM2ServiceAdapter.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/admin/CM2ServiceAdapter.h" include nil nil [1 43])
            ("swift/common/Log.h" include nil nil [44 73])
            ("cm_basic/basic_struct/proto/cm_common.pb.h" include nil nil [74 127])
            ("arpc/ANetRPCController.h" include nil nil [128 163])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [165 185])
            ("arpc" using (:type ("arpc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [186 207])
            ("cm_basic" using (:type ("cm_basic" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [208 233])
            ("cm_server" using (:type ("cm_server" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [234 260])
            ("google::protobuf" using (:type ("google::protobuf" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [261 294])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [318 324]))                  
                :type "int")
                nil [296 325])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [343 349])
                    ("" variable (:type ("CM2ServiceAdapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [350 368]))                  
                :type "int")
                nil [327 369])
            ("Jsonize" function
               (:parent "CM2ServiceConfig"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [402 447]))                  
                :type "void")
                nil [371 594])
            ("CM2ServiceAdapter" function
               (:constructor-flag t
                :parent "CM2ServiceAdapter"
                :type ("CM2ServiceAdapter" type (:type "class") nil nil))
                nil [596 722])
            ("CM2ServiceAdapter" function
               (:destructor-flag t
                :parent "CM2ServiceAdapter"
                :type "void")
                nil [724 947])
            ("CM2_SERVER_RPC_CALL" variable (:constant-flag t) nil [957 976])
            ("init" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("config" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CM2ServiceConfig" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2417 2448]))                  
                :type "bool")
                nil [2388 3041])
            ("publish" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("nodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceNodeSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3075 3103]))                  
                :type "bool")
                nil [3043 3156])
            ("unpublish" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("nodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceNodeSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3192 3220]))                  
                :type "bool")
                nil [3158 3271])
            ("getNodes" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("nodes" variable
                       (:reference 1
                        :type ("ServiceNodeSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3306 3328]))                  
                :type "bool")
                nil [3273 4346])
            ("toServiceNode" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("node" variable
                       (:reference 1
                        :constant-flag t
                        :type ("cm_basic::CMNode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4393 4422]))                  
                :type ("ServiceNode" type (:type "class") nil nil))
                nil [4348 4715])
            ("toCMNode" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("node" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceNode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4762 4786]))                  
                :type ("cm_basic::CMNode" type (:type "class") nil nil))
                nil [4717 5621])
            ("operateNodes" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("nodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceNodeSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5660 5688])
                    ("type" variable (:type ("CMD_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5689 5703]))                  
                :type "bool")
                nil [5623 6879])
            ("getServiceStub" function
               (:pointer 1
                :parent "CM2ServiceAdapter"
                :type ("CMCmdProcService" type (:type "class") nil nil))
                nil [6881 7205])
            ("getRpcChannel" function
               (:pointer 1
                :parent "CM2ServiceAdapter"
                :type ("ANetRPCChannel" type (:type "class") nil nil))
                nil [7207 7782])
            ("getLeader" function
               (:parent "CM2ServiceAdapter"
                :arguments 
                  ( ("leaderSpec" variable
                       (:pointer 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7818 7837]))                  
                :type "bool")
                nil [7784 8411])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8461 8468]))                  
                :type "int")
                nil [8441 8469]))          
      :file "CM2ServiceAdapter.cpp"
      :pointmax 8471
      :fsize 8470
      :lastmodtime '(23044 164 202099 351000)
      :unmatched-syntax nil)
    (semanticdb-table "AdminRequestChecker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/admin/ParaChecker.h" include nil nil [1 37])
            ("swift/admin/AdminRequestChecker.h" include nil nil [38 82])
            ("swift/admin/TopicInfo.h" include nil nil [83 117])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [141 147]))                  
                :type "int")
                nil [119 148])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [165 171])
                    ("" variable (:type ("AdminRequestChecker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172 192]))                  
                :type "int")
                nil [149 193])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [214 223]))                  
                :type "int")
                nil [194 224])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [245 251]))                  
                :type "int")
                nil [225 252])
            ("MIN_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [254 293])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "65536"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [294 337])
            ("MIN_PARTITION_BUFFER_SIZE" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [338 383])
            ("MAX_PARTITION_BUFFER_SIZE" variable
               (:constant-flag t
                :default-value "256 * 1024"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [384 438])
            ("MIN_RESOURCE" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [439 471])
            ("MAX_RESOURCE" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [472 507])
            ("MIN_PARTITION_LIMIT" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [508 547])
            ("MIN_OBSOLETE_FILE_TIME_INTERVAL" variable
               (:constant-flag t
                :default-value "1"
                :type ("int64_t" type (:type "class") nil nil))
                nil [548 598])
            ("MIN_RESERVED_FILE_COUNT" variable
               (:constant-flag t
                :default-value "2"
                :type ("int32_t" type (:type "class") nil nil))
                nil [599 641])
            ("AdminRequestChecker" function
               (:constructor-flag t
                :parent "AdminRequestChecker"
                :type ("AdminRequestChecker" type (:type "class") nil nil))
                nil [643 689])
            ("AdminRequestChecker" function
               (:destructor-flag t
                :parent "AdminRequestChecker"
                :type "void")
                nil [691 738])
            ("checkTopicCreationRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [801 837])
                    ("hasDfsRoot" variable (:type "bool") (reparse-symbol arg-sub-list) [838 854])
                    ("checkPartCnt" variable (:type "bool") (reparse-symbol arg-sub-list) [855 873]))                  
                :type "bool")
                nil [740 4332])
            ("checkTopicModifyRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4393 4429]))                  
                :type "bool")
                nil [4334 5176])
            ("checkTopicDeletionRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicDeletionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5239 5275]))                  
                :type "bool")
                nil [5178 5480])
            ("checkTopicInfoRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5530 5562]))                  
                :type "bool")
                nil [5482 5763])
            ("checkPartitionInfoRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PartitionInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5817 5853]))                  
                :type "bool")
                nil [5765 6104])
            ("checkRoleAddressRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RoleAddressRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6156 6190]))                  
                :type "bool")
                nil [6106 6712])
            ("checkErrorRequest" function
               (:parent "AdminRequestChecker"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ErrorRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6759 6787]))                  
                :type "bool")
                nil [6714 7002])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7024 7030]))                  
                :type "int")
                nil [7004 7031]))          
      :file "AdminRequestChecker.cpp"
      :pointmax 7033
      :fsize 7032
      :lastmodtime '(23008 11780 396894 840000)
      :unmatched-syntax nil)
    (semanticdb-table "SysController.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sstream" include (:system-flag t) nil [1 19])
            ("swift/admin/SysController.h" include nil nil [20 58])
            ("swift/config/AdminConfig.h" include nil nil [59 96])
            ("swift/protocol/ErrCode.pb.h" include nil nil [97 135])
            ("swift/common/PathDefine.h" include nil nil [136 172])
            ("fslib/fslib.h" include nil nil [173 197])
            ("fslib/fs/FileSystem.h" include nil nil [198 230])
            ("swift/util2/FileUtil.h" include nil nil [231 264])
            ("autil/StringUtil.h" include nil nil [265 294])
            ("autil/TimeUtility.h" include nil nil [295 325])
            ("http_arpc/ProtoJsonizer.h" include nil nil [326 362])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [385 391]))                  
                :type "int")
                nil [363 392])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [409 415])
                    ("" variable (:type ("SysController" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [416 430]))                  
                :type "int")
                nil [393 431])
            ("SWIFT_USE_ROOT_NAMESPACE" variable (:type "int") nil [433 458])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [479 484]))                  
                :type "int")
                nil [459 485])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [506 513]))                  
                :type "int")
                nil [486 514])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [535 544]))                  
                :type "int")
                nil [515 545])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [566 573]))                  
                :type "int")
                nil [546 574])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [595 601]))                  
                :type "int")
                nil [575 602])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [604 624])
            ("cm_basic" using (:type ("cm_basic" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [625 650])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [651 673])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [674 704])
            ("fslib::fs" using (:type ("fslib::fs" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [705 731])
            ("fslib" using (:type ("fslib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [732 754])
            ("CANDIDATE_WAIT_TIME_MS" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [756 807])
            ("CHECK_IS_LEADER" variable (:constant-flag t) nil [817 832])
            ("SET_OK" variable (:constant-flag t) nil [1362 1368])
            ("SysController" function
               (:constructor-flag t
                :parent "SysController"
                :type ("SysController" type (:type "class") nil nil))
                nil [1701 1980])
            ("SysController" function
               (:destructor-flag t
                :parent "SysController"
                :type "void")
                nil [1982 2175])
            ("init" function
               (:parent "SysController"
                :arguments 
                  ( ("config" variable
                       (:pointer 1
                        :type ("AdminConfig" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2202 2222]))                  
                :type "bool")
                nil [2177 2433])
            ("start" function
               (:parent "SysController"
                :arguments 
                  ( ("zkWrapper" variable
                       (:pointer 1
                        :type ("ZkWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2461 2482])
                    ("leaderChecker" variable
                       (:pointer 1
                        :type ("LeaderChecker" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2483 2512]))                  
                :type "bool")
                nil [2435 3512])
            ("turnToLeader" function
               (:parent "SysController"
                :arguments 
                  ( ("address" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3547 3569])
                    ("httpAddress" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3570 3596]))                  
                :type "bool")
                nil [3514 4116])
            ("turnToFollower" function
               (:parent "SysController"
                :type "void")
                nil [4118 4209])
            ("stop" function
               (:parent "SysController"
                :type "void")
                nil [4211 4940])
            ("isStopped" function
               (:parent "SysController"
                :type "bool")
                nil [4942 5006])
            ("syncTopicInfo" function
               (:parent "SysController"
                :type "void")
                nil [5008 5313])
            ("updateDfsRoot" function
               (:parent "SysController"
                :arguments 
                  ( ("topicMetas" variable
                       (:reference 1
                        :type ("protocol::TopicMetas" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5349 5382]))                  
                :type "bool")
                nil [5315 9292])
            ("loadTopicInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("isFollower" variable (:type "bool") (reparse-symbol arg-sub-list) [9328 9344]))                  
                :type "bool")
                nil [9294 13809])
            ("updatePartitionBufferSize" function
               (:parent "SysController"
                :arguments 
                  ( ("meta" variable
                       (:reference 1
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13857 13884]))                  
                :type "void")
                nil [13811 14874])
            ("updateCreateTime" function
               (:parent "SysController"
                :arguments 
                  ( ("meta" variable
                       (:reference 1
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14913 14940]))                  
                :type "void")
                nil [14876 15183])
            ("initHeartbeatMonitor" function
               (:parent "SysController"
                :type "bool")
                nil [15185 16208])
            ("receiveHeartbeat" function
               (:parent "SysController"
                :arguments 
                  ( ("heartbeatInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16247 16282]))                  
                :type "void")
                nil [16210 16379])
            ("updateOneTopicStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("topicInfo" variable
                       (:pointer 1
                        :type ("TopicInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16422 16443])
                    ("topicPartitionInfo" variable
                       (:pointer 1
                        :type ("TopicPartitionInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16452 16491]))                  
                :type "bool")
                nil [16381 17426])
            ("updateTopicStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("topics" variable
                       (:reference 1
                        :type ("TopicMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17466 17483]))                  
                :type "void")
                nil [17428 19079])
            ("clearWorkerTask" function
               (:parent "SysController"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19117 19140]))                  
                :type "void")
                nil [19081 19440])
            ("updateWorkerStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("workers" variable
                       (:reference 1
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19482 19501]))                  
                :type "void")
                nil [19443 23258])
            ("fillTaskInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("ti" variable
                       (:pointer 1
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23293 23306])
                    ("topicMeta" variable
                       (:reference 1
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23307 23339]))                  
                :type "void")
                nil [23260 24307])
            ("execute" function
               (:parent "SysController"
                :type "void")
                nil [24309 24687])
            ("doExecute" function
               (:parent "SysController"
                :type "void")
                nil [24689 25583])
            ("isRoleEnoughToMakeDecision" function
               (:parent "SysController"
                :arguments 
                  ( ("configPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25632 25657])
                    ("roleVersion" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25667 25693])
                    ("aliveBrokerWorkers" variable
                       (:reference 1
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25694 25724]))                  
                :type "bool")
                nil [25585 26394])
            ("canMakeDecision" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26432 26475])
                    ("aliveBrokerWorkers" variable
                       (:reference 1
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26512 26542]))                  
                :type "bool")
                nil [26396 27775])
            ("doTransferPartition" function
               (:parent "SysController"
                :type "void")
                nil [27777 28568])
            ("getRoleNames" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28603 28646])
                    ("roleNames" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [28680 28706]))                  
                :type "void")
                nil [28570 29497])
            ("updateAppPlan" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29533 29576]))                  
                :type "void")
                nil [29499 29631])
            ("finishUpgrade" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [29667 29710]))                  
                :type "bool")
                nil [29633 30490])
            ("makeDescision" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30526 30569])
                    ("topicMap" variable
                       (:reference 1
                        :type ("TopicMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30604 30623])
                    ("brokerWorkers" variable
                       (:reference 1
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [30624 30649]))                  
                :type "void")
                nil [30492 32467])
            ("isUpdateVersionFinish" function
               (:parent "SysController"
                :arguments 
                  ( ("versionManager" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ConfigVersionManager" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32511 32554]))                  
                :type "bool")
                nil [32469 35024])
            ("getAllCurrentPartition" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35084 35108]))                  
                :type ("WorkerInfo::TaskSet" type (:type "class") nil nil))
                nil [35026 35373])
            ("getAllCurrentPartitionWithAddress" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35444 35468]))                  
                :type ("WorkerInfo::TaskMap" type (:type "class") nil nil))
                nil [35375 35736])
            ("getNotTimeoutCurrentPartition" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [35803 35827])
                    ("timeout" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35886 35902]))                  
                :type ("WorkerInfo::TaskSet" type (:type "class") nil nil))
                nil [35738 36255])
            ("getAliveWorkerCurrentPartition" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36323 36347]))                  
                :type ("WorkerInfo::TaskSet" type (:type "class") nil nil))
                nil [36257 36452])
            ("getAllTargetPartition" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36513 36537]))                  
                :type ("WorkerInfo::TaskSet" type (:type "class") nil nil))
                nil [36456 36800])
            ("filterWorkerByVersion" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36849 36873])
                    ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [36883 36905]))                  
                :type ("WorkerMap" type (:type "class") nil nil))
                nil [36802 37183])
            ("filterWorkers" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [37224 37248])
                    ("alive" variable (:type "bool") (reparse-symbol arg-sub-list) [37249 37260]))                  
                :type ("WorkerMap" type (:type "class") nil nil))
                nil [37185 37634])
            ("initDecisionResource" function
               (:parent "SysController"
                :type "bool")
                nil [37636 38010])
            ("releaseDecisionResource" function
               (:parent "SysController"
                :type "void")
                nil [38012 38621])
            ("runMain" function
               (:parent "SysController"
                :type "void")
                nil [38624 39384])
            ("createTopic" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39418 39454])
                    ("response" variable
                       (:pointer 1
                        :type ("TopicCreationResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [39487 39519]))                  
                :type "void")
                nil [39386 41455])
            ("clearOldTopicData" function
               (:parent "SysController"
                :arguments 
                  ( ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [41495 41519]))                  
                :type "bool")
                nil [41457 42045])
            ("modifyTopic" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicCreationRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [42088 42124])
                    ("response" variable
                       (:pointer 1
                        :type ("TopicCreationResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [42133 42165]))                  
                :type "void")
                nil [42047 45176])
            ("deleteTopic" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicDeletionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45210 45246])
                    ("response" variable
                       (:pointer 1
                        :type ("TopicDeletionResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [45279 45311]))                  
                :type "void")
                nil [45178 45986])
            ("getSysInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EmptyRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46028 46056])
                    ("response" variable
                       (:pointer 1
                        :type ("SysInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46065 46091]))                  
                :type "void")
                nil [45988 46311])
            ("fillTopicInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("topicInfoPtr" variable (:type ("TopicInfoPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46347 46373])
                    ("ti" variable
                       (:pointer 1
                        :type ("protocol::TopicInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46374 46398]))                  
                :type "void")
                nil [46313 48582])
            ("getTopicInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TopicInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [48617 48649])
                    ("response" variable
                       (:pointer 1
                        :type ("TopicInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [48683 48711]))                  
                :type "void")
                nil [48584 50037])
            ("getAllTopicInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EmptyRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50075 50103])
                    ("response" variable
                       (:pointer 1
                        :type ("AllTopicInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50140 50171]))                  
                :type "void")
                nil [50039 50662])
            ("getAllTopicName" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EmptyRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50700 50728])
                    ("response" variable
                       (:pointer 1
                        :type ("TopicNameResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [50765 50793]))                  
                :type "void")
                nil [50664 51190])
            ("getPartitionInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PartitionInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51229 51265])
                    ("response" variable
                       (:pointer 1
                        :type ("PartitionInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [51303 51335]))                  
                :type "void")
                nil [51192 53014])
            ("doGetPartitionInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PartitionInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53054 53090])
                    ("topicInfoPtr" variable
                       (:reference 1
                        :type ("TopicInfoPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53130 53157])
                    ("response" variable
                       (:pointer 1
                        :type ("PartitionInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [53197 53229]))                  
                :type "void")
                nil [53015 54586])
            ("getLeaderInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("LeaderInfoRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54622 54655])
                    ("response" variable
                       (:pointer 1
                        :type ("LeaderInfoResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54690 54719]))                  
                :type "void")
                nil [54588 54926])
            ("getRoleAddress" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RoleAddressRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [54963 54997])
                    ("response" variable
                       (:pointer 1
                        :type ("RoleAddressResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55033 55063]))                  
                :type "void")
                nil [54928 56109])
            ("getAllWorkerStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("EmptyRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56150 56178])
                    ("response" variable
                       (:pointer 1
                        :type ("WorkerStatusResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56218 56249]))                  
                :type "void")
                nil [56111 56472])
            ("fillStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("worker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56505 56529])
                    ("response" variable
                       (:reference 1
                        :type ("WorkerStatusResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56561 56592]))                  
                :type "void")
                nil [56474 56887])
            ("getPartitionError" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ErrorRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56927 56955])
                    ("response" variable
                       (:pointer 1
                        :type ("PartitionErrorResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [56994 57027]))                  
                :type "void")
                nil [56889 57170])
            ("getWorkerError" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ErrorRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57207 57235])
                    ("response" variable
                       (:pointer 1
                        :type ("WorkerErrorResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57271 57301]))                  
                :type "void")
                nil [57172 57441])
            ("updateBrokerConfig" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UpdateBrokerConfigRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57482 57523])
                    ("response" variable
                       (:pointer 1
                        :type ("UpdateBrokerConfigResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [57563 57600]))                  
                :type "void")
                nil [57443 58600])
            ("rollbackBrokerConfig" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RollbackBrokerConfigRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58643 58686])
                    ("response" variable
                       (:pointer 1
                        :type ("RollbackBrokerConfigResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [58695 58734]))                  
                :type "void")
                nil [58602 59756])
            ("transferPartition" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PartitionTransferRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59797 59837])
                    ("response" variable
                       (:pointer 1
                        :type ("PartitionTransferResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [59876 59912]))                  
                :type "void")
                nil [59759 60844])
            ("changeSlot" function
               (:parent "SysController"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("ChangeSlotRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60877 60910])
                    ("response" variable
                       (:pointer 1
                        :type ("ChangeSlotResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60949 60978]))                  
                :type "void")
                nil [60846 61602])
            ("constructResponseByRoleStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("roleType" variable
                       (:constant-flag t
                        :type ("RoleType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61654 61678])
                    ("roleStatus" variable
                       (:constant-flag t
                        :type ("RoleStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61687 61715])
                    ("allWorker" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61716 61743])
                    ("response" variable
                       (:pointer 1
                        :type ("RoleAddressResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61752 61782]))                  
                :type "void")
                nil [61604 62766])
            ("constructAddressGroup" function
               (:parent "SysController"
                :arguments 
                  ( ("roleType" variable
                       (:constant-flag t
                        :type ("RoleType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62810 62834])
                    ("roleStatus" variable
                       (:constant-flag t
                        :type ("RoleStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62843 62871])
                    ("addressMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62872 62900])
                    ("addressGroup" variable
                       (:pointer 1
                        :type ("AddressGroup" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62909 62936]))                  
                :type "void")
                nil [62768 63184])
            ("updateSysStatus" function
               (:parent "SysController"
                :type "void")
                nil [63186 63588])
            ("isPrimary" function
               (:parent "SysController"
                :type "bool")
                nil [63590 63695])
            ("setPrimary" function
               (:parent "SysController"
                :arguments 
                  ( ("isPrimary" variable (:type "bool") (reparse-symbol arg-sub-list) [63728 63743]))                  
                :type "void")
                nil [63697 63874])
            ("getLeaderStatus" function
               (:parent "SysController"
                :type "bool")
                nil [63876 63987])
            ("setLeaderStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("isLeader" variable (:type "bool") (reparse-symbol arg-sub-list) [64025 64039]))                  
                :type "void")
                nil [63989 64177])
            ("getHeartbeatMonitorStatus" function
               (:parent "SysController"
                :type "bool")
                nil [64179 64306])
            ("setHeartbeatMonitorStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("status" variable (:type ("ZkWrapper::ZkStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64354 64381]))                  
                :type "void")
                nil [64308 64625])
            ("updateHeartBeatStatus" function
               (:parent "SysController"
                :arguments 
                  ( ("status" variable (:type ("ZkWrapper::ZkStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64669 64696]))                  
                :type "void")
                nil [64627 64762])
            ("setInfo" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64814 64826])
                    ("ec" variable (:type ("protocol::ErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64827 64850])
                    ("msgStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [64851 64872]))                  
                :parent "SysController")
                nil [64764 65172])
            ("initCleanDataThread" function
               (:parent "SysController"
                :type "bool")
                nil [65175 65544])
            ("initCleanExpiredTopicThread" function
               (:parent "SysController"
                :type "bool")
                nil [65545 65955])
            ("initSyncLeaderInfoThread" function
               (:parent "SysController"
                :type "bool")
                nil [65957 66330])
            ("doUpdateLeaderInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("currentAdminInfoVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("AdminInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [66371 66416]))                  
                :type "bool")
                nil [66332 67105])
            ("updateLeaderInfo" function
               (:parent "SysController"
                :type "void")
                nil [67107 68353])
            ("syncLeaderInfo" function
               (:parent "SysController"
                :type "void")
                nil [68355 69048])
            ("checkLeaderInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("filePath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69086 69109])
                    ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [69110 69132])
                    ("json" variable (:type "bool") (reparse-symbol arg-sub-list) [69133 69143]))                  
                :type "void")
                nil [69050 70036])
            ("doSyncLeaderInfo" function
               (:parent "SysController"
                :arguments 
                  ( ("filePath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70075 70098])
                    ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [70099 70121]))                  
                :type "void")
                nil [70038 70696])
            ("deleteExpiredTopic" function
               (:parent "SysController"
                :type "void")
                nil [70698 71888])
            ("removeOldData" function
               (:parent "SysController"
                :type "void")
                nil [71890 71978])
            ("removeOldZkData" function
               (:parent "SysController"
                :type "void")
                nil [71980 72852])
            ("doRemoveOldZkData" function
               (:parent "SysController"
                :arguments 
                  ( ("paths" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [72892 72920])
                    ("currentVersion" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [72959 72988])
                    ("targetVersion" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [73027 73055]))                  
                :type "void")
                nil [72854 73652])
            ("removeOldTopicData" function
               (:parent "SysController"
                :type "void")
                nil [73654 74837])
            ("doRemoveOldTopicData" function
               (:parent "SysController"
                :arguments 
                  ( ("dfsRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [74889 74911])
                    ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [74920 74944])
                    ("reserveDataByHour" variable (:type "double") (reparse-symbol arg-sub-list) [74953 74978]))                  
                :type "void")
                nil [74839 75722])
            ("getTopicLastModifyTime" function
               (:parent "SysController"
                :arguments 
                  ( ("topicName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75776 75800])
                    ("dfsRoot" variable
                       (:constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75801 75822])
                    ("lastModifyTime" variable
                       (:reference 1
                        :type ("uint64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75824 75849]))                  
                :type "bool")
                nil [75724 76614])
            ("initBrokerConfig" function
               (:parent "SysController"
                :type "bool")
                nil [76616 77031])
            ("setAdminMetricsReporter" function
               (:parent "SysController"
                :arguments 
                  ( ("reporter" variable
                       (:pointer 1
                        :type ("monitor::AdminMetricsReporter" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77077 77117]))                  
                :type "void")
                nil [77033 77147])
            ("amonReport" function
               (:parent "SysController"
                :type "void")
                nil [77149 77622])
            ("getCurrentAndTargetVersion" function
               (:parent "SysController"
                :arguments 
                  ( ("current" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77671 77687])
                    ("target" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [77688 77703]))                  
                :type "void")
                nil [77624 77845])
            ("loadBrokerVersionInfos" function
               (:parent "SysController"
                :type "bool")
                nil [77847 78086])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [78108 78114]))                  
                :type "int")
                nil [78088 78115]))          
      :file "SysController.cpp"
      :pointmax 78116
      :fsize 78115
      :lastmodtime '(23069 5414 710613 610000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CHECK_IS_LEADER" (spp-arg-list ("response") 832 . 842) . 
              ((DO "do" 879 . 881) (semantic-list "{                                                        \\
        if (!isPrimary()) {                                     \\
            ErrorInfo *ei = response->mutable_errorinfo();      \\
            ei->set_errcode(ERROR_ADMIN_NOT_LEADER);            \\
            ei->set_errmsg(ErrorCode_Name(ei->errcode()));      \\
            return;                                             \\
        }                                                       \\
    }" 882 . 1342) (WHILE "while" 1343 . 1348) (semantic-list "(0)" 1348 . 1351) (punctuation ";" 1351 . 1352)))
          ("SET_OK" (spp-arg-list ("resource") 1368 . 1378) . 
              ((DO "do" 1424 . 1426) (semantic-list "{                                                        \\
        ErrorInfo *ei = response->mutable_errorinfo();          \\
        ei->set_errcode(ERROR_NONE);                            \\
        ei->set_errmsg(ErrorCode_Name(ei->errcode()));          \\
    }" 1427 . 1689) (WHILE "while" 1690 . 1695) (semantic-list "(0)" 1695 . 1698) (punctuation ";" 1698 . 1699)))
          )
)
    (semanticdb-table "SysController.h"
      :file "SysController.h"
      :fsize 10246
      :lastmodtime '(23008 11780 398894 835000))
    (semanticdb-table "ParaChecker.h"
      :file "ParaChecker.h"
      :fsize 533
      :lastmodtime '(22925 26700 281789 703000))
    (semanticdb-table "AdminRequestChecker.h"
      :file "AdminRequestChecker.h"
      :fsize 1194
      :lastmodtime '(23008 11780 396894 840000))
    (semanticdb-table "TopicInfo.h"
      :file "TopicInfo.h"
      :fsize 2564
      :lastmodtime '(23008 11780 398894 835000)))
  :file "!ssd!sdd!git!swift!swift_1_7!swift!build!release64!swift!admin!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
