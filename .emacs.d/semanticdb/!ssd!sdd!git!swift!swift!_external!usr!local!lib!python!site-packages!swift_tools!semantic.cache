;; Object swift_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "swift_tools/"
  :tables
  (list
    (semanticdb-table "topic_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("base_cmd" include nil nil [12 27])
            ("swift_common_define" include nil nil [28 54])
            ("swift_admin_delegate" include nil nil [55 82])
            ("status_analyzer" include nil nil [83 105])
            ("swift_util" include nil nil [106 123])
            ("swift.protocol.Common_pb2" include nil nil [124 163])
            ("swift.protocol.AdminRequestResponse_pb2" include nil nil [164 217])
            ("transport_cmd_base" include nil nil [218 243])
            ("time" include nil nil [244 255])
            ("swift_broker_delegate" include nil nil [256 284])
            ("local_file_util" include nil nil [285 307])
            ("zlib" include nil nil [308 319])
            ("json" include nil nil [320 331])
            ("TopicAddCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {at|addtopic}
       {-z zookeeper_address           | --zookeeper=zookeeper_address }
       {-t topic_name                  | --topic=topic_name }
       {-c partition_count             | --partcount=partition_count }
       {-s partition_buf_size          | --partbuf=partition_buf_size }
       {-b partition_file_buf_size     | --partfilebuf=partition_file_buf_size }
       {-y partition_max_buf_size      | --partmaxbuf=partition_max_buf_size }
       {-x partition_min_buf_size      | --partminbuf=partition_min_buf_size }
       {-r partition_resource          | --partresource=partition_resource }
       {-l partition_limit             | --partlimit=partition_limit }
       {-m topic_mode                  | --topicmode=topic_mode }
       {-f                             | --fieldfilter }
       {-i obsolete_file_interval      | --obsoletefileinterval=obsolete_file_interval }
       {-n reserved_file_count         | --reservedfilecount=reserved_file_count }
       {-d                             | --deletetopicdata }
       {-o security_commit_time        | --committime=security_commit_time }
       {-p security_commit_data        | --commitdata=security_commit_data }
       {-q                             | --compress=compress_single_msg }
       {-u                             | --compressthres=compress_single_msg_threshold }
       {-a                             | --dfsroot=dfs_root }
       {-e                             | --extenddfsroot=extend_dfs_root }
       {-g                             | --topicgroup=topic_group }
       {-j                             | --expired=expired }
    options:
       -z zookeeper_address,      --zookeeper=zookeeper_address         : required, zookeeper root address
       -t topic_name,             --topic=topic_name                    : required, topic name, eg: news
       -c partition_count,        --partcount=partition_count           : required, partition count of the topic
       -s partition_buf_size      --partbuf=partition_buf_size          : [deprecated], partition buffer size of the topic, M
       -b partition_file_buf_size --partfilebuf=partition_file_buf_size : [deprecated], partition read file buffer size of the topic, M
       -x partition_min_buf_size  --partmaxbuf=partition_max_buf_size   : [optional], partition max buffer size of the topic, M
       -y partition_max_buf_size  --partminbuf=partition_min_buf_size   : [optional], partition min buffer size of the topic, M
       -r partition_resource      --partresource=partition_resource     : optional, partition resource[1,1000], default is 100
       -l partition_limit         --partlimit=partition_limit           : optional, partition limit of this topic in one broker, default is no limit
       -m topic_mode              --topicmode=topic_mode                : optional, normal_mode | security_mode | memory_only_mode | memory_perfer_mode, default is normal_mode
       -f                         --fieldfilter                         : optional, filter fields in msg if specialized
       -i obsolete_file_interval  --obsoletefileinterval=obsolete_file_interval : optional, obsolete file time interval, unit is hour.
       -n reserved_file_count     --reservedfilecount=reserved_file_count       : optional, reserved file count.
       -d                         --deletetopicdata                     : optional, delete old topic data if specialized
       -o security_commit_time    --committime=security_commit_time     : optional, max wait time for commit message in security_mode
       -p security_commit_data    --commitdata=security_commit_data     : optional, max data size for commit message in security_mode
       -q                         --compress=compress_single_msg        : optional, compress msg in this topic
       -u                         --compressthres=compress_single_msg_threshold        : optional, compress msg great than threshold [default:2048]
       -a                         --dfsroot=dfs_root                    : optional, dfs_root
       -e                         --extenddfsroot=extend_dfs_root       : optional, extend dfs_root add old data when dfs root changed
       -g                         --topicgroup=topic_group              : optional, topic_group
       -j                         --expired=expired                     : optional, topic expired time, auto delete topic after expired, second
Example:
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -y 100 -b 128
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10 -y 100 -r 30
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -m security_mode -f
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -i 1 -n 5
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2 -q
    swift at -z zfs://10.250.12.23:1234/root -t news -c 1 -j 1000
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -a hdfs://xxx/1 -e hdfs://xxx/2,hdfs://xxx/3
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -s 10 [deprecated]
    '''" code nil (reparse-symbol indented_block_body) [374 5581])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5605 5609]))                          )
                        (reparse-symbol indented_block_body) [5590 8945])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8983 8987])
                            ("options" variable nil (reparse-symbol function_parameters) [8989 8996]))                          )
                        (reparse-symbol indented_block_body) [8958 12798])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12818 12822])
                            ("options" variable nil (reparse-symbol function_parameters) [12824 12831]))                          )
                        (reparse-symbol indented_block_body) [12803 14286])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14309 14313]))                          )
                        (reparse-symbol indented_block_body) [14291 14468])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14481 14485]))                          )
                        (reparse-symbol indented_block_body) [14473 15783])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15808 15812])
                            ("timeout" variable nil (reparse-symbol function_parameters) [15814 15821]))                          )
                        (reparse-symbol indented_block_body) [15788 16107])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16130 16134])
                            ("topicName" variable nil (reparse-symbol function_parameters) [16136 16145]))                          )
                        (reparse-symbol indented_block_body) [16112 16966]))                  
                :type "class")
                nil [333 16966])
            ("TopicModifyCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {mt|modifytopic}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t topic_name          | --topic=topic_name }
       {-r partition_resource  | --partresource=partition_resource }
       {-l partition_limit     | --partlimit=partition_limit }
       {-g topic_group         | --group=topic_group }
       {-j expired_time        | --expired_time=expired_time }
    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address     : required, zookeeper root address
       -t topic_names,        --topic=topic_names               : required, topic name, eg: news,news1
       -f topic_file,         --topic_file=topic_file           : optional, topic file, will append in topic_names, one topic per line
       -r partition_resource  --partresource=partition_resource : optional, partition resource
       -l partition_limit     --partlimit=partition_limit       : optional, partition limit of this topic in one broker
       -g topic_group         --group=topic_group               : optional, change topic group name
       -j expired_time        --expired_time=expired_time       : optional, change expired time for topic, -1 no expired,  second

Example:
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 10
    swift mt -z zfs://10.250.12.23:1234/root -t news -l 2
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 20 -l 3
    swift mt -z zfs://10.250.12.23:1234/root -t news -g group_name
    swift mt -z zfs://10.250.12.23:1234/root -t news -j -1       
    '''" code nil (reparse-symbol indented_block_body) [17011 18537])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18557 18561]))                          )
                        (reparse-symbol indented_block_body) [18542 19273])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19311 19315])
                            ("options" variable nil (reparse-symbol function_parameters) [19317 19324]))                          )
                        (reparse-symbol indented_block_body) [19286 20472])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20492 20496])
                            ("options" variable nil (reparse-symbol function_parameters) [20498 20505]))                          )
                        (reparse-symbol indented_block_body) [20477 21004])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21027 21031]))                          )
                        (reparse-symbol indented_block_body) [21009 21186])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21199 21203]))                          )
                        (reparse-symbol indented_block_body) [21191 21777]))                  
                :type "class")
                nil [16967 21777])
            ("TopicDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dt|deletetopic}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t topic_name          | --topic=topic_name }
       {-f file_name           | --file=file_name }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : optional, topic name, eg: news
       -f file_name,          --file=file_name                : optional,
 file name

Example:
    swift dt -z zfs://10.250.12.23:1234/root -t news 
    swift dt -z zfs://10.250.12.23:1234/root -f file_name
    '''" code nil (reparse-symbol indented_block_body) [21822 22444])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22464 22468]))                          )
                        (reparse-symbol indented_block_body) [22449 22682])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22712 22716])
                            ("options" variable nil (reparse-symbol function_parameters) [22718 22725]))                          )
                        (reparse-symbol indented_block_body) [22687 23132])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23152 23156])
                            ("options" variable nil (reparse-symbol function_parameters) [23158 23165]))                          )
                        (reparse-symbol indented_block_body) [23137 23429])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23452 23456]))                          )
                        (reparse-symbol indented_block_body) [23434 23611])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23625 23629]))                          )
                        (reparse-symbol indented_block_body) [23617 24791])
                    ("writeFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24815 24819])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [24821 24834]))                          )
                        (reparse-symbol indented_block_body) [24796 25015]))                  
                :type "class")
                nil [21778 25015])
            ("TopicNamesCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gtn|gettopicnames}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f file_name           | --file=file_name }
    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f file_name           --file=file_name 
Example:
    swift gtn -z zfs://10.250.12.23:1234/root 
    swift gtn -z zfs://10.250.12.23:1234/root -f file.txt
       
    '''" code nil (reparse-symbol indented_block_body) [25059 25497])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25520 25524]))                          )
                        (reparse-symbol indented_block_body) [25502 25682])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25702 25706]))                          )
                        (reparse-symbol indented_block_body) [25687 25837])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25857 25861])
                            ("options" variable nil (reparse-symbol function_parameters) [25863 25870]))                          )
                        (reparse-symbol indented_block_body) [25842 26030])
                    ("writeTopicName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26054 26058])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [26060 26070]))                          )
                        (reparse-symbol indented_block_body) [26035 26271])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26284 26288]))                          )
                        (reparse-symbol indented_block_body) [26276 26904]))                  
                :type "class")
                nil [25016 26904])
            ("TopicInfosCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gti|gettopicinfo}
       {-z zookeeper_address   | --zookeeper=zookeeper_address}
       {-t topic_name          | --topic=topic_name}
       [-c cmd_type            | --cmdtype=cmd_type]

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : required, topic name, eg: news
       -c cmd_type,           --cmdtype=cmd_type              : optional, command type, default: summary
          summary:            topic summary infos
          message:            protocol message
          verbose:            topic verbose infos
       -s sortType            --sort=sortType                 : optional, partid(default)|brokeraddress| partstatus
       -g group_name          --group=group_name              : optional, group name when get all topic info
       

Example:
    swift gti -z zfs://10.250.12.23:1234/root
    swift gti -z zfs://10.250.12.23:1234/root -t news 
    swift gti -z zfs://10.250.12.23:1234/root -t news -c message
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose -s brokeraddress
    '''" code nil (reparse-symbol indented_block_body) [26948 28172])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28192 28196]))                          )
                        (reparse-symbol indented_block_body) [28177 29346])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29384 29388])
                            ("options" variable nil (reparse-symbol function_parameters) [29390 29397]))                          )
                        (reparse-symbol indented_block_body) [29359 29738])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29758 29762])
                            ("options" variable nil (reparse-symbol function_parameters) [29764 29771]))                          )
                        (reparse-symbol indented_block_body) [29743 29997])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30020 30024]))                          )
                        (reparse-symbol indented_block_body) [30002 30182])
                    ("printTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30206 30210]))                          )
                        (reparse-symbol indented_block_body) [30187 33684])
                    ("printAllTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33711 33715]))                          )
                        (reparse-symbol indented_block_body) [33689 34800])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34813 34817]))                          )
                        (reparse-symbol indented_block_body) [34805 34954]))                  
                :type "class")
                nil [26905 34954])
            ("TopicDeleteByTimeCmd" type
               (:superclasses ("transport_cmd_base.TransportCmdBase")
                :members 
                  ( ("'''
    swift {dtt|deletetopicsbytime}
       {-z zookeeper_address     | --zookeeper=zookeeper_address }
       {-i interval              | --interval=interval }
       {-e exclude_topics,       | --exclude=exclude_topics }
       {-f exclude_topics_file,  | --exclude_file=exclude_topics_file }
       {-p prefix_name           | --prefix_name=prefix_name }
       {-t topic_names           | --topic_names=topic_names }

    options:
       -z zookeeper_address,    --zookeeper=zookeeper_address       : required, zookeeper root address
       -i time_interval,        --interval=time_interval            : required, delete topics if the last message arrived interval hours before, (unit:hours)
       -e exclude_topics,       --exclude=exclude_topics            : option, don't delete exclude topics 
       -f exclude_topics_file,  --exclude_file=exclude_topics_file  : option, don't delete exclude topics in file,one topic per line
       -p prefix_name           --prefix_name=prefix_name           : option, delete topic prefix with specified
       -t topic_names           --topic_names=topic_names           : option, delete topic with specified topic names
Example:
    swift dtt -z zfs://10.250.12.23:1234/root -i 48
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -e topic_a,topic_b
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -f a.txt
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -p model_
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -t topic_name_file
       
    '''" code nil (reparse-symbol indented_block_body) [35024 36532])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36552 36556]))                          )
                        (reparse-symbol indented_block_body) [36537 37067])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37105 37109])
                            ("options" variable nil (reparse-symbol function_parameters) [37111 37118]))                          )
                        (reparse-symbol indented_block_body) [37080 37373])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37393 37397])
                            ("options" variable nil (reparse-symbol function_parameters) [37399 37406]))                          )
                        (reparse-symbol indented_block_body) [37378 38286])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38309 38313]))                          )
                        (reparse-symbol indented_block_body) [38291 38545])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38559 38563]))                          )
                        (reparse-symbol indented_block_body) [38551 39234])
                    ("getNeedDeleteTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39267 39271]))                          )
                        (reparse-symbol indented_block_body) [39239 39960])
                    ("needDelete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39980 39984])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [39986 39995]))                          )
                        (reparse-symbol indented_block_body) [39965 41627])
                    ("getTopicCreateTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41655 41659])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [41661 41670]))                          )
                        (reparse-symbol indented_block_body) [41632 42248]))                  
                :type "class")
                nil [34955 42248])
            ("TopicDataDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dtd|deletetopicdata}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-d dfs_root            | --dfs=dfs_root }
       {-i interval            | --interval=interval }
       {-e exclude             | --exclude=exclude_topics }
       {-t topic_name          | --topic_name=topic_name }
       {-f exclude_file        | --exclude_file=exclude_file }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -d dfs_root,           --dfs=dfs_root                  : required, dfs root address
       -i time_interval,      --interval=time_interval        : required, delete topic data if the topic is not running and the last message is arrived interval time ago. (unit:hours)
       -e exclude_topics,     --exclude=exclude_topics        : option, don't delete the specified topic data
       -t topic_name,         --topic=topic_name              : option, only delete the specified topic data
       -f exclude_file,       --exclude_file=exclude_file     : option, don't delete the specified topic data in file

Example:
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -f abc.txt
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -e topic_a,topic_b
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -t topic_a  -d hdfs://xxxx/path
       
    '''" code nil (reparse-symbol indented_block_body) [42326 43792])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43812 43816]))                          )
                        (reparse-symbol indented_block_body) [43797 44311])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44349 44353])
                            ("options" variable nil (reparse-symbol function_parameters) [44355 44362]))                          )
                        (reparse-symbol indented_block_body) [44324 44720])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44740 44744])
                            ("options" variable nil (reparse-symbol function_parameters) [44746 44753]))                          )
                        (reparse-symbol indented_block_body) [44725 45372])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45403 45407]))                          )
                        (reparse-symbol indented_block_body) [45385 45565])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45579 45583]))                          )
                        (reparse-symbol indented_block_body) [45571 46435])
                    ("getAllRunningTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46468 46472]))                          )
                        (reparse-symbol indented_block_body) [46440 46831])
                    ("getCandidataTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46863 46867]))                          )
                        (reparse-symbol indented_block_body) [46836 47523])
                    ("getTopicLastModifyTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47555 47559])
                            ("fileUtil" variable nil (reparse-symbol function_parameters) [47561 47569])
                            ("topicDataPath" variable nil (reparse-symbol function_parameters) [47571 47584]))                          )
                        (reparse-symbol indented_block_body) [47528 48491])
                    ("delTopicData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48513 48517])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [48519 48529]))                          )
                        (reparse-symbol indented_block_body) [48496 48772]))                  
                :type "class")
                nil [42278 48772])
            ("ExportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {et|exporttopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f export_file_name    | --file=export_file_name }
       {-g group_name          | --group=group_name }
       {-p prefix              | --prefix=prefix_name }
       {-t topic_names         | --topic=topic_names }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f export_file_name,   --file=export_file_name         : required, export file name
       -g group_name,         --group=group_name              : optional, export group name, default export all topic
       -m migrateDfs,         --migrate=migrate_dfs           : optional, migrate dfs, add new hdfs, add current dfs into extendDfs root      
       -p prefix,             --prefix = prefix               : optional, export topic info with prefix      
       -i topicName,          --topic = topic_names           : optional, export topic info with topic_name file
Example:
    swift et -z zfs://10.250.12.23:1234/root -f a.json
    swift et -z zfs://10.250.12.23:1234/root -f a.json -g swift    
    swift et -z zfs://10.250.12.23:1234/root -f a.json -p prefix
    swift et -z zfs://10.250.12.23:1234/root -f a.json -i topicNameFile
    '''" code nil (reparse-symbol indented_block_body) [48819 50102])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50123 50127]))                          )
                        (reparse-symbol indented_block_body) [50108 50590])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50628 50632])
                            ("options" variable nil (reparse-symbol function_parameters) [50634 50641]))                          )
                        (reparse-symbol indented_block_body) [50603 50882])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50902 50906])
                            ("options" variable nil (reparse-symbol function_parameters) [50908 50915]))                          )
                        (reparse-symbol indented_block_body) [50887 51454])
                    ("getDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51474 51478]))                          )
                        (reparse-symbol indented_block_body) [51459 52164])
                    ("hasDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52184 52188])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [52190 52197]))                          )
                        (reparse-symbol indented_block_body) [52169 52524])
                    ("hasTopicGroup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52547 52551])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [52553 52560]))                          )
                        (reparse-symbol indented_block_body) [52529 52895])
                    ("generateMap" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52921 52925])
                            ("topicMetas" variable nil (reparse-symbol function_parameters) [52927 52937]))                          )
                        (reparse-symbol indented_block_body) [52905 54502])
                    ("updateMigrateDfs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54532 54536])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [54538 54547]))                          )
                        (reparse-symbol indented_block_body) [54511 55111])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55124 55128]))                          )
                        (reparse-symbol indented_block_body) [55116 55846]))                  
                :type "class")
                nil [48774 55846])
            ("ImportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {it|importtopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}
       {-d delete_exist        | --delete_exist=delete_exist}
       {-c continue            | --continue=continue}
       {-g group               | --group=group}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic
       -d delete_exist        --delete_exist=delete_exist     : optional, delete exist topic ,default is false
       -c continue_exist      --continue=continue             : optional, continue if add topic has error ,default is false
       -g group               --group=group                   : optional, add in specified group name
Example:
    swift it -z zfs://10.250.12.23:1234/root -f a.json -w 30
    swift it -z zfs://10.250.12.23:1234/root -f a.json -d -c
    swift it -z zfs://10.250.12.23:1234/root -f a.json -g igraph
    '''" code nil (reparse-symbol indented_block_body) [55892 57101])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57122 57126]))                          )
                        (reparse-symbol indented_block_body) [57107 57744])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57774 57778])
                            ("options" variable nil (reparse-symbol function_parameters) [57780 57787]))                          )
                        (reparse-symbol indented_block_body) [57749 58028])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58048 58052])
                            ("options" variable nil (reparse-symbol function_parameters) [58054 58061]))                          )
                        (reparse-symbol indented_block_body) [58033 58466])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58489 58493]))                          )
                        (reparse-symbol indented_block_body) [58471 58648])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58661 58665]))                          )
                        (reparse-symbol indented_block_body) [58653 65201])
                    ("addFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65223 65227])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [65229 65242]))                          )
                        (reparse-symbol indented_block_body) [65206 65380])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65405 65409])
                            ("timeout" variable nil (reparse-symbol function_parameters) [65411 65418])
                            ("topicName" variable nil (reparse-symbol function_parameters) [65420 65429]))                          )
                        (reparse-symbol indented_block_body) [65385 65705])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65728 65732])
                            ("topicName" variable nil (reparse-symbol function_parameters) [65734 65743]))                          )
                        (reparse-symbol indented_block_body) [65710 66564]))                  
                :type "class")
                nil [55847 66564])
            ("UpdateTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {ut|updatetopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic

Example:
    swift ut -z zfs://10.250.12.23:1234/root -f a.json -w 30
    '''" code nil (reparse-symbol indented_block_body) [66610 67193])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [67214 67218]))                          )
                        (reparse-symbol indented_block_body) [67199 67476])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [67506 67510])
                            ("options" variable nil (reparse-symbol function_parameters) [67512 67519]))                          )
                        (reparse-symbol indented_block_body) [67481 67760])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [67780 67784])
                            ("options" variable nil (reparse-symbol function_parameters) [67786 67793]))                          )
                        (reparse-symbol indented_block_body) [67765 68052])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68075 68079]))                          )
                        (reparse-symbol indented_block_body) [68057 68234])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68247 68251]))                          )
                        (reparse-symbol indented_block_body) [68239 69110])
                    ("addOneTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69131 69135])
                            ("topicDescription" variable nil (reparse-symbol function_parameters) [69137 69153]))                          )
                        (reparse-symbol indented_block_body) [69115 73592])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [73617 73621])
                            ("timeout" variable nil (reparse-symbol function_parameters) [73623 73630])
                            ("topicName" variable nil (reparse-symbol function_parameters) [73632 73641]))                          )
                        (reparse-symbol indented_block_body) [73597 73917])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [73940 73944])
                            ("topicName" variable nil (reparse-symbol function_parameters) [73946 73955]))                          )
                        (reparse-symbol indented_block_body) [73922 74776]))                  
                :type "class")
                nil [66565 74776])
            ("TransferPartitionCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {tp|transferpartition}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t transfer_info       | --transfer=transfer_info }
    options:
       -z zookeeper_address,     --zookeeper=zookeeper_address     : required, zookeeper root address
       -t transfer_info,         --transfer=transfer_info          : required, topic name, eg: role_name1:0.3,role_name2:0.1
       -g group_name,            --group_name=group_name           : opitional, group name, eg: swift_mainse

Example:
    swift tp -z zfs://10.250.12.23:1234/root -t group1##broker_1_0:0.3;group2##broker_1_0:0.2
    swift tp -z zfs://10.250.12.23:1234/root -t all
    swift tp -z zfs://10.250.12.23:1234/root -t all -g swift_mainse
    '''" code nil (reparse-symbol indented_block_body) [74827 75569])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75589 75593]))                          )
                        (reparse-symbol indented_block_body) [75574 75826])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75865 75869])
                            ("options" variable nil (reparse-symbol function_parameters) [75871 75878]))                          )
                        (reparse-symbol indented_block_body) [75840 76132])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76152 76156])
                            ("options" variable nil (reparse-symbol function_parameters) [76158 76165]))                          )
                        (reparse-symbol indented_block_body) [76137 76322])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76345 76349]))                          )
                        (reparse-symbol indented_block_body) [76327 76504])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76517 76521]))                          )
                        (reparse-symbol indented_block_body) [76509 76821]))                  
                :type "class")
                nil [74777 76821]))          
      :file "topic_cmd.py"
      :pointmax 76821
      :fsize 76820
      :lastmodtime '(22804 12748 885910 0)
      :unmatched-syntax nil)
    (semanticdb-table "base_cmd.py"
      :file "base_cmd.py"
      :fsize 5692
      :lastmodtime '(22784 18641 865236 0))
    (semanticdb-table "swift_common_define.py"
      :file "swift_common_define.py"
      :fsize 2733
      :lastmodtime '(22784 18641 868236 0))
    (semanticdb-table "swift_admin_delegate.py"
      :file "swift_admin_delegate.py"
      :fsize 11196
      :lastmodtime '(22784 18641 867236 0))
    (semanticdb-table "status_analyzer.py"
      :file "status_analyzer.py"
      :fsize 3496
      :lastmodtime '(22784 18641 867236 0))
    (semanticdb-table "swift_util.py"
      :file "swift_util.py"
      :fsize 3833
      :lastmodtime '(22784 18641 868236 0))
    (semanticdb-table "transport_cmd_base.py"
      :file "transport_cmd_base.py"
      :fsize 3995
      :lastmodtime '(22784 18641 871236 0))
    (semanticdb-table "swift_broker_delegate.py"
      :file "swift_broker_delegate.py"
      :fsize 8874
      :lastmodtime '(22784 18762 301186 0))
    (semanticdb-table "local_file_util.py"
      :file "local_file_util.py"
      :fsize 1943
      :lastmodtime '(22784 18641 867236 0))
    (semanticdb-table "json.py"
      :file "json.py"
      :fsize 11481
      :lastmodtime '(22784 18641 867236 0)))
  :file "!ssd!sdd!git!swift!swift!_external!usr!local!lib!python!site-packages!swift_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
