;; Object qrs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "qrs/"
  :tables
  (list
    (semanticdb-table "MatchInfoProcessor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/qrs/MatchInfoProcessor.h" include (:system-flag t) nil [1 40])
            ("sstream" include (:system-flag t) nil [41 59])
            ("string" include (:system-flag t) nil [60 77])
            ("assert.h" include (:system-flag t) nil [78 97])
            ("autil/StringUtil.h" include (:system-flag t) nil [98 127])
            ("algorithm" include (:system-flag t) nil [128 148])
            ("ha3/common/QueryTermVisitor.h" include (:system-flag t) nil [149 189])
            ("build_service/analyzer/Token.h" include (:system-flag t) nil [190 231])
            ("ha3/qrs/ParsedQueryVisitor.h" include (:system-flag t) nil [232 271])
            ("ha3/qrs/TransAnd2OrVisitor.h" include (:system-flag t) nil [272 311])
            ("ha3/qrs/IndexLimitQueryVisitor.h" include (:system-flag t) nil [312 355])
            ("build_service/analyzer/Analyzer.h" include (:system-flag t) nil [356 400])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [402 422])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [423 445])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [446 476])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [477 513])
            ("build_service::analyzer" using (:type ("build_service::analyzer" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [515 555])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [575 582]))                  
                :type "int")
                nil [557 583])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [602 609]))                  
                :type "int")
                nil [584 610])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [632 636]))                  
                :type "int")
                nil [612 637])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [652 656])
                    ("" variable (:type ("MatchInfoProcessor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [657 676]))                  
                :type "int")
                nil [638 677])
            ("clone" function
               (:parent "MatchInfoProcessor"
                :type ("QrsProcessorPtr" type (:type "class") nil nil))
                nil [679 798])
            ("init" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("keyValues" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyValueMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [830 859])
                    ("resourceReader" variable
                       (:pointer 1
                        :type ("config::ResourceReader" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [872 911]))                  
                :type "bool")
                nil [800 1608])
            ("process" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1643 1666])
                    ("resultPtr" variable
                       (:reference 1
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1700 1721]))                  
                :type "void")
                nil [1610 2148])
            ("rewriteQuery" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2188 2211]))                  
                :type "bool")
                nil [2150 3652])
            ("fillSummary" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3691 3720])
                    ("resultPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3758 3785]))                  
                :type "void")
                nil [3654 3887])
            ("analyzeMatchInfo" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3931 3960])
                    ("resultPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3969 3996]))                  
                :type "void")
                nil [3889 5949])
            ("getQueryIndexs" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("tableInfoPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TableInfoPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5991 6024])
                    ("queryIndexs" variable
                       (:reference 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6066 6091]))                  
                :type "void")
                nil [5951 6613])
            ("reportMatchResult" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("checkResult" variable
                       (:reference 1
                        :constant-flag t
                        :type ("CheckResult" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6658 6689]))                  
                :type "void")
                nil [6615 6833])
            ("getSummaryInfo" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("tableInfoPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TableInfoPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6875 6908])
                    ("summaryInfoMap" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6950 6986]))                  
                :type "void")
                nil [6835 7601])
            ("getSummaryFields" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("hitPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HitPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7660 7681])
                    ("summaryInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7691 7729]))                  
                :type ("map" type
                     (:template-specifier 
                        ( ("string" type nil nil nil)
                          ("string" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [7603 8151])
            ("tokenSummary" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("summaryFieldMap" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8191 8228])
                    ("summaryInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8238 8277]))                  
                :type "void")
                nil [8153 9215])
            ("getAnalyzerName" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9260 9284])
                    ("summaryInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9294 9332]))                  
                :type ("string" type (:type "class") nil nil))
                nil [9217 9499])
            ("replaceAll" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("str" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9537 9549])
                    ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9550 9569])
                    ("to" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9570 9587]))                  
                :type "void")
                nil [9501 9820])
            ("removeSummaryTag" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("titleStr" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9864 9886]))                  
                :type "void")
                nil [9822 10258])
            ("getAttributes" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("attributeMap" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10299 10333])
                    ("hitPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("common::HitPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10373 10402]))                  
                :type "void")
                nil [10260 10670])
            ("parseMatchInfo" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("hitPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HitPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10712 10733])
                    ("matchTermMap" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10734 10766]))                  
                :type "void")
                nil [10672 11893])
            ("checkPhraseError" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("phraseMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11937 11974])
                    ("summaryMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11984 12022])
                    ("resInfo" variable
                       (:reference 1
                        :type ("CheckResultInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12023 12048]))                  
                :type "void")
                nil [11895 12788])
            ("getTableInfo" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("clusterName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12836 12862]))                  
                :type ("TableInfoPtr" type (:type "class") nil nil))
                nil [12790 13073])
            ("traceQuery" function
               (:parent "MatchInfoProcessor"
                :arguments 
                  ( ("prefix" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13111 13132])
                    ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13133 13152]))                  
                :type "void")
                nil [13075 13419])
            ("Jsonize" function
               (:parent "CheckQueryResult"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13452 13497]))                  
                :type "void")
                nil [13421 13773])
            ("Jsonize" function
               (:parent "CheckFilterResult"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13807 13852]))                  
                :type "void")
                nil [13775 13898])
            ("Jsonize" function
               (:parent "CheckResult"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13926 13971]))                  
                :type "void")
                nil [13900 14082])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14102 14106]))                  
                :type "int")
                nil [14084 14107]))          
      :file "MatchInfoProcessor.cpp"
      :pointmax 14109
      :fsize 14108
      :lastmodtime '(22468 63444 649838 266000)
      :unmatched-syntax nil)
    (semanticdb-table "TransAnd2OrVisitor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("TransAnd2OrVisitor.h" include nil nil [1 32])
            ("ha3/common/Query.h" include (:system-flag t) nil [33 62])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [64 84])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103 110]))                  
                :type "int")
                nil [85 111])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [132 136]))                  
                :type "int")
                nil [112 137])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152 156])
                    ("" variable (:type ("TransAnd2OrVisitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157 176]))                  
                :type "int")
                nil [138 177])
            ("TransAnd2OrVisitor" function
               (:constructor-flag t
                :parent "TransAnd2OrVisitor"
                :type ("TransAnd2OrVisitor" type (:type "class") nil nil))
                nil [179 223])
            ("TransAnd2OrVisitor" function
               (:destructor-flag t
                :parent "TransAnd2OrVisitor"
                :type "void")
                nil [225 270])
            ("visitTermQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("TermQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [312 335]))                  
                :type "void")
                nil [272 367])
            ("visitPhraseQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PhraseQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [411 436]))                  
                :type "void")
                nil [369 725])
            ("visitAndQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [766 788]))                  
                :type "void")
                nil [727 822])
            ("visitOrQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("OrQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [862 883]))                  
                :type "void")
                nil [824 917])
            ("visitAndNotQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AndNotQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [961 986]))                  
                :type "void")
                nil [919 1020])
            ("visitRankQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RankQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1062 1085]))                  
                :type "void")
                nil [1022 1119])
            ("visitNumberQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("NumberQuery" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1163 1188]))                  
                :type "void")
                nil [1121 1220])
            ("stealQuery" function
               (:pointer 1
                :parent "TransAnd2OrVisitor"
                :type ("Query" type (:type "class") nil nil))
                nil [1221 1323])
            ("visitAdvancedQuery" function
               (:parent "TransAnd2OrVisitor"
                :arguments 
                  ( ("query" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1368 1387]))                  
                :type "void")
                nil [1324 1720])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1740 1744]))                  
                :type "int")
                nil [1722 1745]))          
      :file "TransAnd2OrVisitor.cpp"
      :pointmax 1747
      :fsize 1746
      :lastmodtime '(22468 63444 651838 261000)
      :unmatched-syntax nil)
    (semanticdb-table "TransAnd2OrVisitor.h"
      :file "TransAnd2OrVisitor.h"
      :fsize 1122
      :lastmodtime '(22468 63444 651838 261000)))
  :file "!ssd!sdd!git!ha3_suez!online!ha3!ha3!qrs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
