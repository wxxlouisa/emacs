;; Object master/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "master/"
  :tables
  (list
    (semanticdb-table "CarbonDriver.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/CarbonDriver.h" include nil nil [1 33])
            ("common/PathUtil.h" include nil nil [34 62])
            ("config.h" include nil nil [63 82])
            ("fslib/fslib.h" include (:system-flag t) nil [83 107])
            ("autil/StringUtil.h" include (:system-flag t) nil [108 137])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [139 159])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [160 182])
            ("USE_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [204 211]))                  
                :type "int")
                nil [183 212])
            ("USE_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("monitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [234 242]))                  
                :type "int")
                nil [213 243])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [267 274]))                  
                :type "int")
                nil [244 275])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [294 301])
                    ("" variable (:type ("CarbonDriver" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [302 315]))                  
                :type "int")
                nil [277 316])
            ("CarbonDriver" function
               (:constructor-flag t
                :parent "CarbonDriver"
                :arguments 
                  ( ("mode" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [345 364]))                  
                :type ("CarbonDriver" type (:type "class") nil nil))
                nil [318 386])
            ("CarbonDriver" function
               (:destructor-flag t
                :parent "CarbonDriver"
                :type "void")
                nil [388 421])
            ("init" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("applicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [448 476])
                    ("hippoZk" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [501 523])
                    ("carbonZk" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [548 571])
                    ("backupPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [596 621])
                    ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [646 664])
                    ("leaderElector" variable
                       (:pointer 1
                        :type ("LeaderElector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [666 695])
                    ("isNewStart" variable (:type "bool") (reparse-symbol arg-sub-list) [720 736])
                    ("amonitorPort" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [761 783]))                  
                :type "bool")
                nil [424 2099])
            ("start" function
               (:parent "CarbonDriver"
                :type "bool")
                nil [2102 2398])
            ("stop" function
               (:parent "CarbonDriver"
                :type "void")
                nil [2400 2700])
            ("recover" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("isAppRestart" variable (:type "bool") (reparse-symbol arg-sub-list) [2729 2747]))                  
                :type "bool")
                nil [2702 3219])
            ("removeSerializeDir" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("serializePath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3259 3287]))                  
                :type "bool")
                nil [3221 4527])
            ("checkAppRestart" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("isAppRestart" variable
                       (:pointer 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [4564 4583]))                  
                :type "bool")
                nil [4529 5717])
            ("writeAppChecksum" function
               (:parent "CarbonDriver"
                :type "bool")
                nil [5719 6367])
            ("initHippoAdapter" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("applicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6414 6442])
                    ("hippoZk" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6451 6473])
                    ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6482 6500])
                    ("leaderElector" variable
                       (:pointer 1
                        :type ("LeaderElector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6502 6531]))                  
                :type "bool")
                nil [6369 6937])
            ("initGroupManager" function
               (:parent "CarbonDriver"
                :type "bool")
                nil [6939 7456])
            ("initMonitor" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("appId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7489 7509])
                    ("port" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7510 7524]))                  
                :type "bool")
                nil [7458 7864])
            ("newStart" function
               (:parent "CarbonDriver"
                :arguments 
                  ( ("serializePath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7894 7922]))                  
                :type "bool")
                nil [7866 8146])
            ("recover" function
               (:parent "CarbonDriver"
                :type "bool")
                nil [8148 8598])
            ("getCarbonInfo" function
               (:parent "CarbonDriver"
                :type ("CarbonInfo" type (:type "class") nil nil))
                nil [8600 8694])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8717 8724]))                  
                :type "int")
                nil [8696 8725]))          
      :file "CarbonDriver.cpp"
      :pointmax 8727
      :fsize 8830
      :lastmodtime '(22856 60673 705540 85000)
      :unmatched-syntax '((thing 665 . 666) (thing 664 . 665) (thing 651 . 664) (thing 6487 . 6500) (thing 6500 . 6501) (thing 6501 . 6502)))
    (semanticdb-table "CarbonDriver.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_CARBONDRIVER_H" variable (:constant-flag t) nil [39 60])
            ("common/common.h" include nil nil [62 88])
            ("carbon/Log.h" include nil nil [89 112])
            ("master/GroupPlanManager.h" include nil nil [113 149])
            ("master/GroupManager.h" include nil nil [150 182])
            ("master/HippoAdapter.h" include nil nil [183 215])
            ("master/SerializerCreator.h" include nil nil [216 253])
            ("master/GlobalVariable.h" include nil nil [254 288])
            ("monitor/CarbonMonitorSingleton.h" include nil nil [289 332])
            ("worker_framework/LeaderElector.h" include (:system-flag t) nil [333 376])
            ("autil/Lock.h" include (:system-flag t) nil [377 400])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [425 432]))                  
                :type "int")
                nil [402 433])
            ("CarbonDriver" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [456 463])
                    ("CarbonDriver" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("mode" variable
                               (:reference 1
                                :constant-flag t
                                :default-value "CARBON_MODE_LIB"
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [481 522]))                          
                        :type ("CarbonDriver" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [468 524])
                    ("CarbonDriver" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [529 545])
                    ("private" label nil (reparse-symbol classsubparts) [546 554])
                    ("CarbonDriver" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CarbonDriver" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [572 593]))                          
                        :type ("CarbonDriver" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [559 594])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CarbonDriver" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [623 644]))                          
                        :type ("CarbonDriver" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [599 645])
                    ("public" label nil (reparse-symbol classsubparts) [646 653])
                    ("init" function
                       (:prototype-flag t
                        :arguments 
                          ( ("applicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [668 701])
                            ("hippoZk" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [716 743])
                            ("carbonZk" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [758 786])
                            ("backupPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [801 831])
                            ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [846 864])
                            ("leaderElector" variable
                               (:pointer 1
                                :type ("LeaderElector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [866 895])
                            ("isNewStart" variable (:type "bool") (reparse-symbol arg-sub-list) [910 926])
                            ("amonitorPort" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [941 963]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [658 964])
                    ("start" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [970 983])
                    ("stop" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [989 1001])
                    ("getGroupPlanManager" function (:type ("GroupPlanManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1007 1099])
                    ("getGroupManager" function (:type ("GroupManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1109 1189])
                    ("getCarbonInfo" function
                       (:prototype-flag t
                        :type ("CarbonInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1195 1228])
                    ("private" label nil (reparse-symbol classsubparts) [1230 1238])
                    ("initHippoAdapter" function
                       (:prototype-flag t
                        :arguments 
                          ( ("applicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1265 1298])
                            ("hippoZk" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1325 1352])
                            ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1379 1397])
                            ("leaderElector" variable
                               (:pointer 1
                                :type ("LeaderElector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1399 1428]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1243 1429])
                    ("initGroupManager" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1435 1459])
                    ("initMonitor" function
                       (:prototype-flag t
                        :arguments 
                          ( ("appId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1482 1507])
                            ("port" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1508 1522]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1465 1523])
                    ("newStart" function
                       (:prototype-flag t
                        :arguments 
                          ( ("serializePath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1547 1580]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1533 1581])
                    ("recover" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1587 1602])
                    ("recover" function
                       (:prototype-flag t
                        :arguments 
                          ( ("isAppRestart" variable (:type "bool") (reparse-symbol arg-sub-list) [1629 1647]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1616 1648])
                    ("removeSerializeDir" function
                       (:prototype-flag t
                        :arguments 
                          ( ("serializePath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1678 1711]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1654 1712])
                    ("checkAppRestart" function
                       (:prototype-flag t
                        :arguments 
                          ( ("isAppRestart" variable
                               (:pointer 1
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1739 1758]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1718 1759])
                    ("writeAppChecksum" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1765 1789])
                    ("private" label nil (reparse-symbol classsubparts) [1795 1803])
                    ("_groupPlanManagerPtr" variable (:type ("GroupPlanManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1808 1849])
                    ("_groupManagerPtr" variable (:type ("GroupManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1854 1887])
                    ("_hippoAdapterPtr" variable (:type ("HippoAdapterPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1892 1925])
                    ("_serializerCreatorPtr" variable (:type ("SerializerCreatorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1930 1973])
                    ("_mode" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1978 1996])
                    ("private" label nil (reparse-symbol classsubparts) [1997 2005])
                    ("CARBON_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [2010 2031]))                  
                :type "class")
                nil [435 2034])
            ("CARBON_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("CarbonDriver" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2055 2068]))                  
                :type "int")
                nil [2036 2069])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2092 2099]))                  
                :type "int")
                nil [2071 2100]))          
      :file "CarbonDriver.h"
      :pointmax 2133
      :fsize 2187
      :lastmodtime '(22856 60673 705540 85000)
      :unmatched-syntax '((thing 865 . 866) (thing 864 . 865) (thing 851 . 864) (thing 1384 . 1397) (thing 1397 . 1398) (thing 1398 . 1399))
      :lexical-table 
        '(("CARBON_CARBONDRIVER_H")
          )
)
    (semanticdb-table "GroupManager.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/GroupManager.h" include nil nil [1 33])
            ("common/Recorder.h" include nil nil [34 62])
            ("carbon/Log.h" include nil nil [63 86])
            ("monitor/CarbonMonitorSingleton.h" include nil nil [87 130])
            ("autil/StringUtil.h" include (:system-flag t) nil [131 160])
            ("fslib/fslib.h" include (:system-flag t) nil [161 185])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [187 207])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [208 230])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [254 261]))                  
                :type "int")
                nil [231 262])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [281 288])
                    ("" variable (:type ("GroupManager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [289 302]))                  
                :type "int")
                nil [264 303])
            ("__ADJUST_SCHEDULE_INTERVAL" variable (:constant-flag t) nil [313 339])
            ("__ADJUST_HIPPO_ADAPTER_STATUS" variable (:constant-flag t) nil [371 400])
            ("__ADJUST_HIPPO_ADAPTER_STATUS_STOP" variable (:constant-flag t) nil [432 466])
            ("__ADJUST_HIPPO_ADAPTER_STATUS_START" variable (:constant-flag t) nil [482 517])
            ("GroupManager" function
               (:constructor-flag t
                :parent "GroupManager"
                :arguments 
                  ( ("hippoAdapterPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HippoAdapterPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [554 593])
                    ("groupPlanManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlanManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [621 668])
                    ("serializerCreatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SerializerCreatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [696 745]))                  
                :type ("GroupManager" type (:type "class") nil nil))
                nil [527 1082])
            ("GroupManager" function
               (:destructor-flag t
                :parent "GroupManager"
                :type "void")
                nil [1084 1129])
            ("start" function
               (:parent "GroupManager"
                :type "bool")
                nil [1131 1765])
            ("stop" function
               (:parent "GroupManager"
                :type "void")
                nil [1767 1952])
            ("recover" function
               (:parent "GroupManager"
                :type "bool")
                nil [1954 3685])
            ("releaseSlots" function
               (:parent "GroupManager"
                :arguments 
                  ( ("releaseSlotInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("ReleaseSlotInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3719 3772])
                    ("errorInfo" variable
                       (:pointer 1
                        :type ("ErrorInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3805 3826]))                  
                :type "bool")
                nil [3687 4520])
            ("checkSlotInfoExist" function
               (:parent "GroupManager"
                :arguments 
                  ( ("releaseSlotInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ReleaseSlotInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4569 4617])
                    ("notFoundSlot" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ReleaseSlotInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4626 4664]))                  
                :type "bool")
                nil [4522 6080])
            ("adjustRunningArgs" function
               (:parent "GroupManager"
                :arguments 
                  ( ("field" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6119 6139])
                    ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6140 6160]))                  
                :type "bool")
                nil [6082 6576])
            ("schedule" function
               (:parent "GroupManager"
                :type "void")
                nil [6579 7648])
            ("diffAndRecordGroupStatus" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupStatusCache" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("groupid_t" type nil nil nil)
                                  ("GroupStatus" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7705 7757]))                  
                :type "void")
                nil [7652 8171])
            ("recordStatus" function
               (:parent "GroupManager"
                :arguments 
                  ( ("newGroupStatus" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8205 8239])
                    ("oriGroupStatus" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8272 8306]))                  
                :type "void")
                nil [8173 8826])
            ("releaseTags" function
               (:parent "GroupManager"
                :type "void")
                nil [8828 9086])
            ("genToReleaseTags" function
               (:parent "GroupManager"
                :arguments 
                  ( ("toReleaseTags" variable
                       (:pointer 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9124 9150]))                  
                :type "void")
                nil [9088 9807])
            ("getResourceTags" function
               (:parent "GroupManager"
                :arguments 
                  ( ("tags" variable
                       (:pointer 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9844 9861]))                  
                :type "void")
                nil [9809 10027])
            ("updateGroupPlans" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupPlanMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10066 10099]))                  
                :type "void")
                nil [10030 10699])
            ("createGroup" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("groupid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10736 10761]))                  
                :type ("GroupPtr" type (:type "class") nil nil))
                nil [10701 11359])
            ("stopDeletedGroups" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupPlanMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11399 11432]))                  
                :type "void")
                nil [11362 11997])
            ("executeOpsCmd" function
               (:parent "GroupManager"
                :type "void")
                nil [11999 12494])
            ("scheduleGroups" function
               (:parent "GroupManager"
                :type "void")
                nil [12496 12681])
            ("getGroupStatus" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupIds" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("groupid_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12717 12751])
                    ("groupStatusVect" variable
                       (:pointer 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("GroupStatus" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12786 12823]))                  
                :type "void")
                nil [12683 13627])
            ("getAllGroupStatus" function
               (:parent "GroupManager"
                :arguments 
                  ( ("groupStatusMap" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("groupid_t" type nil nil nil)
                                  ("GroupStatus" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [13675 13719]))                  
                :type "void")
                nil [13629 13994])
            ("__forTestAdjustHippoAdapterStatus" function
               (:parent "GroupManager"
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14049 14074]))                  
                :type "bool")
                nil [13996 14511])
            ("__forTestAdjustScheduleInterval" function
               (:parent "GroupManager"
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14564 14589]))                  
                :type "bool")
                nil [14513 15370])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15395 15402]))                  
                :type "int")
                nil [15374 15403]))          
      :file "GroupManager.cpp"
      :pointmax 15405
      :fsize 15443
      :lastmodtime '(22856 60673 705540 85000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__ADJUST_HIPPO_ADAPTER_STATUS_STOP" . ((string "\"stop\"" 467 . 473)))
          ("__ADJUST_HIPPO_ADAPTER_STATUS_START" . ((string "\"start\"" 518 . 525)))
          ("__ADJUST_HIPPO_ADAPTER_STATUS" . ((string "\"hippo_adapter_status\"" 401 . 423)))
          ("__ADJUST_SCHEDULE_INTERVAL" . ((string "\"schedule_interval\"" 343 . 362)))
          )
)
    (semanticdb-table "Group.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/Group.h" include nil nil [1 26])
            ("carbon/Log.h" include nil nil [27 50])
            ("common/Recorder.h" include nil nil [51 79])
            ("history/TimeLine.h" include nil nil [80 109])
            ("master/Util.h" include nil nil [110 134])
            ("master/GroupScheduler.h" include nil nil [135 169])
            ("master/SignatureGenerator.h" include nil nil [170 208])
            ("common/JsonUtil.h" include nil nil [209 237])
            ("monitor/MonitorUtil.h" include nil nil [238 270])
            ("autil/legacy/jsonizable.h" include (:system-flag t) nil [271 307])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [309 329])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [330 352])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [353 383])
            ("carbon::common" using (:type ("carbon::common" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [384 415])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [440 447]))                  
                :type "int")
                nil [417 448])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [467 474])
                    ("" variable (:type ("Group" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475 481]))                  
                :type "int")
                nil [450 482])
            ("Group" function
               (:constructor-flag t
                :parent "Group"
                :arguments 
                  ( ("groupId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("groupid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [497 522])
                    ("serializerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SerializerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [536 571])
                    ("hippoAdapterPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HippoAdapterPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [585 624])
                    ("healthCheckerManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HealthCheckerManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [638 693])
                    ("serviceSwitchManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceSwitchManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [707 762]))                  
                :type ("Group" type (:type "class") nil nil))
                nil [484 1046])
            ("Group" function
               (:destructor-flag t
                :parent "Group"
                :type "void")
                nil [1048 1067])
            ("Group" function
               (:constructor-flag t
                :parent "Group"
                :arguments 
                  ( ("group" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Group" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1082 1101]))                  
                :type ("Group" type (:type "class") nil nil))
                nil [1069 1124])
            ("=" function
               (:operator-flag t
                :parent "Group"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Group" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1152 1169]))                  
                :type ("Group" type (:type "class") nil nil))
                nil [1126 1794])
            ("Jsonize" function
               (:parent "Group"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1816 1861]))                  
                :type "void")
                nil [1796 2024])
            ("setPlan" function
               (:parent "Group"
                :arguments 
                  ( ("groupPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2046 2073]))                  
                :type "void")
                nil [2026 2184])
            ("stop" function
               (:parent "Group"
                :type "void")
                nil [2186 2469])
            ("isStopped" function
               (:parent "Group"
                :type "bool")
                nil [2471 2704])
            ("getGroupAvailablePercent" function
               (:parent "Group"
                :type ("int32_t" type (:type "class") nil nil))
                nil [2706 3765])
            ("schedule" function
               (:parent "Group"
                :type "void")
                nil [3767 4127])
            ("execute" function
               (:parent "Group"
                :type "void")
                nil [4129 4279])
            ("getResourceTags" function
               (:parent "Group"
                :arguments 
                  ( ("tags" variable
                       (:pointer 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4309 4326]))                  
                :type "void")
                nil [4281 4479])
            ("updateRoles" function
               (:parent "Group"
                :type "void")
                nil [4481 5634])
            ("scheduleRoles" function
               (:parent "Group"
                :type "void")
                nil [5636 6149])
            ("removeUselessVersions" function
               (:parent "Group"
                :type "void")
                nil [6151 7298])
            ("removeStoppedRoles" function
               (:parent "Group"
                :type "void")
                nil [7300 7800])
            ("persist" function
               (:parent "Group"
                :arguments 
                  ( ("backupGroup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Group" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7822 7847]))                  
                :type "bool")
                nil [7802 8017])
            ("recordHistory" function
               (:parent "Group"
                :arguments 
                  ( ("groupPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8045 8072]))                  
                :type "void")
                nil [8019 8435])
            ("recordPlan" function
               (:parent "Group"
                :arguments 
                  ( ("groupPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8462 8489]))                  
                :type "void")
                nil [8439 8950])
            ("doPersist" function
               (:parent "Group"
                :arguments 
                  ( ("backUpGroup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Group" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8974 8999]))                  
                :type "bool")
                nil [8952 9660])
            ("fillGroupStatus" function
               (:parent "Group"
                :arguments 
                  ( ("status" variable
                       (:pointer 1
                        :type ("GroupStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9690 9710]))                  
                :type "void")
                nil [9662 10050])
            ("recover" function
               (:parent "Group"
                :type "bool")
                nil [10052 11630])
            ("createRole" function
               (:parent "Group"
                :arguments 
                  ( ("roleId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11658 11681]))                  
                :type ("RolePtr" type (:type "class") nil nil))
                nil [11632 11906])
            ("releaseSlot" function
               (:parent "Group"
                :arguments 
                  ( ("releaseSlotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ReleaseSlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11932 11971]))                  
                :type "void")
                nil [11908 12256])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12279 12286]))                  
                :type "int")
                nil [12258 12287]))          
      :file "Group.cpp"
      :pointmax 12288
      :fsize 12287
      :lastmodtime '(22850 12252 166928 240000)
      :unmatched-syntax nil)
    (semanticdb-table "Role.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/Role.h" include nil nil [1 25])
            ("carbon/Log.h" include nil nil [26 49])
            ("common/Recorder.h" include nil nil [50 78])
            ("master/SignatureGenerator.h" include nil nil [79 117])
            ("master/SlotMapper.h" include nil nil [118 148])
            ("master/ReplicaNodesAdjuster.h" include nil nil [149 189])
            ("master/SlotUtil.h" include nil nil [190 218])
            ("master/Util.h" include nil nil [219 243])
            ("autil/StringUtil.h" include (:system-flag t) nil [244 273])
            ("cmath" include (:system-flag t) nil [274 290])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [292 312])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [313 335])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [359 366]))                  
                :type "int")
                nil [336 367])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [386 393])
                    ("" variable (:type ("Role" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [394 399]))                  
                :type "int")
                nil [369 400])
            ("DEBUG_SHOW_INT" variable (:constant-flag t) nil [410 424])
            ("Role" function
               (:constructor-flag t
                :parent "Role"
                :type ("Role" type (:type "class") nil nil))
                nil [460 560])
            ("Role" function
               (:constructor-flag t
                :parent "Role"
                :arguments 
                  ( ("roleId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [573 596])
                    ("roleGUID" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleguid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [597 624]))                  
                :type ("Role" type (:type "class") nil nil))
                nil [562 722])
            ("Role" function
               (:destructor-flag t
                :parent "Role"
                :type "void")
                nil [724 741])
            ("Role" function
               (:constructor-flag t
                :parent "Role"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [754 770]))                  
                :type ("Role" type (:type "class") nil nil))
                nil [743 791])
            ("=" function
               (:operator-flag t
                :parent "Role"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [817 833]))                  
                :type ("Role" type (:type "class") nil nil))
                nil [793 1884])
            ("init" function
               (:parent "Role"
                :arguments 
                  ( ("hippoAdapterPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HippoAdapterPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1902 1941])
                    ("healthCheckerManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HealthCheckerManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1958 2013])
                    ("serviceSwitchManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceSwitchManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2030 2085])
                    ("recover" variable (:type "bool") (reparse-symbol arg-sub-list) [2102 2115]))                  
                :type "bool")
                nil [1886 2606])
            ("setPlan" function
               (:parent "Role"
                :arguments 
                  ( ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2627 2652])
                    ("rolePlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RolePlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2653 2678]))                  
                :type "void")
                nil [2608 3447])
            ("setEmptyPlan" function
               (:parent "Role"
                :arguments 
                  ( ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3473 3498]))                  
                :type "void")
                nil [3449 3683])
            ("update" function
               (:parent "Role"
                :type "void")
                nil [3685 3970])
            ("schedule" function
               (:parent "Role"
                :arguments 
                  ( ("scheduleParams" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ScheduleParams" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3992 4029]))                  
                :type "void")
                nil [3972 4451])
            ("assignSlots" function
               (:parent "Role"
                :type "void")
                nil [4453 5342])
            ("ajustReplicaNodes" function
               (:parent "Role"
                :type "void")
                nil [5344 5801])
            ("scheduleAllReplicaNodes" function
               (:parent "Role"
                :type "void")
                nil [5803 6411])
            ("getTargetLatestCount" function
               (:parent "Role"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6413 6591])
            ("getResourceTags" function
               (:parent "Role"
                :arguments 
                  ( ("tags" variable
                       (:pointer 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6620 6637]))                  
                :type "void")
                nil [6593 6821])
            ("getVersionedPlan" function
               (:parent "Role"
                :arguments 
                  ( ("versionedPlanMap" variable
                       (:pointer 1
                        :type ("VersionedPlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6851 6886]))                  
                :type "void")
                nil [6823 7109])
            ("updateSlotInfos" function
               (:parent "Role"
                :arguments 
                  ( ("workerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7138 7172]))                  
                :type "void")
                nil [7111 7666])
            ("getReplicaNodes" function
               (:parent "Role"
                :constant-flag t
                :type ("ReplicaNodeVect" type (:type "class") nil nil))
                nil [7668 7750])
            ("updateHealthInfos" function
               (:parent "Role"
                :arguments 
                  ( ("workerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7781 7815]))                  
                :type "void")
                nil [7752 8770])
            ("updateServiceInfos" function
               (:parent "Role"
                :arguments 
                  ( ("workerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8802 8836]))                  
                :type "void")
                nil [8772 9738])
            ("selectOldVersion" function
               (:parent "Role"
                :type ("version_t" type (:type "class") nil nil))
                nil [9740 10019])
            ("getOldVerCountMap" function
               (:parent "Role"
                :type ("map" type
                     (:template-specifier 
                        ( ("version_t" type nil nil nil)
                          ("int32_t" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [10021 10740])
            ("removeVersionPlan" function
               (:parent "Role"
                :arguments 
                  ( ("version" variable (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10771 10789]))                  
                :type "void")
                nil [10742 11125])
            ("getVerAvailablePercent" function
               (:parent "Role"
                :arguments 
                  ( ("verAvailablePercent" variable
                       (:pointer 1
                        :type ("PercentMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11170 11202]))                  
                :type "void")
                nil [11127 12682])
            ("getHealthChecker" function
               (:parent "Role"
                :type ("HealthCheckerPtr" type (:type "class") nil nil))
                nil [12684 13218])
            ("getServiceSwitch" function
               (:parent "Role"
                :type ("ServiceSwitchPtr" type (:type "class") nil nil))
                nil [13220 13599])
            ("updateServiceConfigs" function
               (:parent "Role"
                :type "void")
                nil [13601 13801])
            ("getAllWorkerNodes" function
               (:parent "Role"
                :arguments 
                  ( ("workerNodes" variable
                       (:pointer 1
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13832 13860]))                  
                :type "void")
                nil [13803 13987])
            ("execute" function
               (:parent "Role"
                :type "void")
                nil [13989 14163])
            ("setFinalPlan" function
               (:parent "Role"
                :type "void")
                nil [14165 14329])
            ("fillRoleStatus" function
               (:parent "Role"
                :arguments 
                  ( ("status" variable
                       (:pointer 1
                        :type ("RoleStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14357 14376]))                  
                :type "void")
                nil [14331 14723])
            ("isStopped" function
               (:parent "Role"
                :type "bool")
                nil [14725 14821])
            ("stop" function
               (:parent "Role"
                :type "void")
                nil [14823 14931])
            ("Jsonize" function
               (:parent "Role"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14952 14997]))                  
                :type "void")
                nil [14933 15393])
            ("recoverReplicaNodes" function
               (:parent "Role"
                :type "bool")
                nil [15395 15901])
            ("updateBrokenRecoverQuotaConfig" function
               (:parent "Role"
                :type "void")
                nil [15903 16091])
            ("getBaseCount" function
               (:parent "Role"
                :arguments 
                  ( ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16120 16145]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [16093 16467])
            ("recoverServiceAdapters" function
               (:parent "Role"
                :type "bool")
                nil [16469 16705])
            ("isWorking" function
               (:parent "Role"
                :type "bool")
                nil [16707 17372])
            ("releaseSlot" function
               (:parent "Role"
                :arguments 
                  ( ("releaseSlotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ReleaseSlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17397 17436]))                  
                :type "void")
                nil [17374 17990])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18013 18020]))                  
                :type "int")
                nil [17992 18021]))          
      :file "Role.cpp"
      :pointmax 18023
      :fsize 18022
      :lastmodtime '(22850 12252 174928 232000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DEBUG_SHOW_INT" (spp-arg-list ("v") 424 . 427) . ((symbol "CARBON_LOG" 428 . 438) (semantic-list "(DEBUG, #v \":%d\", v)" 438 . 458)))
          )
)
    (semanticdb-table "Role.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_ROLE_H" variable (:constant-flag t) nil [31 44])
            ("common/common.h" include nil nil [46 72])
            ("carbon/Log.h" include nil nil [73 96])
            ("carbon/RolePlan.h" include nil nil [97 125])
            ("carbon/Ops.h" include nil nil [126 149])
            ("master/ReplicaNode.h" include nil nil [150 181])
            ("master/HippoAdapter.h" include nil nil [182 214])
            ("master/NodeSelector.h" include nil nil [215 247])
            ("master/HealthChecker.h" include nil nil [248 281])
            ("master/ServiceSwitch.h" include nil nil [282 315])
            ("master/HealthCheckerManager.h" include nil nil [316 356])
            ("master/ServiceSwitchManager.h" include nil nil [357 397])
            ("master/RoleExecutor.h" include nil nil [398 430])
            ("master/ReplicaNodeCreator.h" include nil nil [431 469])
            ("master/ExtVersionedPlan.h" include nil nil [470 506])
            ("autil/legacy/jsonizable.h" include (:system-flag t) nil [507 543])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [569 576]))                  
                :type "int")
                nil [546 577])
            ("PercentMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("version_t" type nil nil nil)
                          ("int32_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [579 627])
            ("ScheduleParams" type
               (:members 
                  ( ("ScheduleParams" function
                       (:constructor-flag t
                        :type ("ScheduleParams" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [657 756])
                    ("holdingCountMap" variable (:type ("std::map" type
                         (:template-specifier 
                            ( ("version_t" type nil nil nil)
                              ("int32_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [766 811])
                    ("minHealthCount" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [816 839])
                    ("maxCount" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [844 861])
                    ("timeStamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [866 884]))                  
                :type "struct")
                nil [629 887])
            ("Role" type
               (:superclasses 
                  ( ("autil::legacy::Jsonizable" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [937 944])
                    ("Role" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [949 956])
                    ("Role" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("roleId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("roleid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [971 994])
                            ("roleGUID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("roleguid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [995 1022]))                          
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [966 1023])
                    ("Role" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1029 1045])
                    ("public" label nil (reparse-symbol classsubparts) [1047 1054])
                    ("Role" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Role" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1064 1080]))                          
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1059 1081])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Role" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1105 1121]))                          
                        :type ("Role" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1087 1122])
                    ("public" label nil (reparse-symbol classsubparts) [1128 1135])
                    ("Jsonize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("json" variable
                               (:reference 1
                                :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1153 1198]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1140 1199])
                    ("public" label nil (reparse-symbol classsubparts) [1205 1212])
                    ("init" function
                       (:prototype-flag t
                        :arguments 
                          ( ("hippoAdapterPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoAdapterPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1227 1266])
                            ("healthCheckerManagerPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HealthCheckerManagerPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1281 1336])
                            ("serviceSwitchManagerPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ServiceSwitchManagerPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1351 1406])
                            ("recover" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1421 1441]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1217 1443])
                    ("setPlan" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("version" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1497 1522])
                            ("rolePlan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RolePlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1523 1548]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1476 1549])
                    ("setEmptyPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("version" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1573 1598]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1555 1599])
                    ("isStopped" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [1636 1667])
                    ("stop" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1673 1685])
                    ("schedule" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("scheduleParams" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ScheduleParams" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1740 1777]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1718 1778])
                    ("update" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1811 1833])
                    ("execute" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1866 1889])
                    ("getReplicaNodes" function
                       (:prototype-flag t
                        :constant-flag t
                        :type ("ReplicaNodeVect" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1899 1946])
                    ("getOldVerCountMap" function
                       (:prototype-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("version_t" type nil nil nil)
                                  ("int32_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [1952 2007])
                    ("getVerAvailablePercent" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("verAvailablePercent" variable
                               (:pointer 1
                                :type ("PercentMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2080 2112]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2044 2119])
                    ("getTargetCount" function (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2125 2185])
                    ("getBaseCount" function
                       (:prototype-flag t
                        :arguments 
                          ( ("version" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2212 2237]))                          
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2191 2244])
                    ("getNodeCount" function (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2250 2311])
                    ("getResourceTags" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tags" variable
                               (:pointer 1
                                :type ("std::set" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2338 2360]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2317 2367])
                    ("isVersionExist" function
                       (:arguments 
                          ( ("ver" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2393 2414]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2373 2495])
                    ("fillRoleStatus" function
                       (:prototype-flag t
                        :arguments 
                          ( ("status" variable
                               (:pointer 1
                                :type ("RoleStatus" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2521 2540]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2501 2547])
                    ("removeVersionPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("version" variable (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2576 2594]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2553 2595])
                    ("getGUID" function (:type ("roleguid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2601 2649])
                    ("recoverServiceAdapters" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [2655 2685])
                    ("releaseSlot" function
                       (:prototype-flag t
                        :arguments 
                          ( ("releaseSlotInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ReleaseSlotInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2708 2747]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2691 2748])
                    ("public" label nil (reparse-symbol classsubparts) [2754 2761])
                    ("setReplicaNodes" function
                       (:arguments 
                          ( ("replicaNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ReplicaNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2804 2840]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2783 2886])
                    ("setGlobalPlan" function
                       (:arguments 
                          ( ("globalPlan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GlobalPlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2911 2940]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2892 2982])
                    ("setVersionedPlan" function
                       (:arguments 
                          ( ("versionedPlan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ExtVersionedPlanMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3010 3051]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2988 3100])
                    ("setHealthChecker" function
                       (:arguments 
                          ( ("healthCheckerPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HealthCheckerPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3128 3169]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3106 3223])
                    ("setServiceSwitch" function
                       (:arguments 
                          ( ("serviceSwitchPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ServiceSwitchPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3251 3292]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3229 3346])
                    ("private" label nil (reparse-symbol classsubparts) [3347 3355])
                    ("assignSlots" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3360 3379])
                    ("ajustReplicaNodes" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3389 3414])
                    ("scheduleAllReplicaNodes" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3424 3455])
                    ("setFinalPlan" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3465 3485])
                    ("updateServiceConfigs" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3495 3523])
                    ("updateSlotInfos" function
                       (:prototype-flag t
                        :arguments 
                          ( ("workerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3554 3588]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3533 3589])
                    ("updateHealthInfos" function
                       (:prototype-flag t
                        :arguments 
                          ( ("workerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3622 3656]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3599 3657])
                    ("updateServiceInfos" function
                       (:prototype-flag t
                        :arguments 
                          ( ("workerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3691 3725]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3667 3726])
                    ("getTargetLatestCount" function
                       (:prototype-flag t
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3736 3773])
                    ("selectOldVersion" function
                       (:prototype-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3779 3814])
                    ("createReplicaNode" function
                       (:prototype-flag t
                        :type ("ReplicaNodePtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3820 3855])
                    ("getAllWorkerNodes" function
                       (:prototype-flag t
                        :arguments 
                          ( ("workerNodes" variable
                               (:pointer 1
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3884 3912]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3861 3919])
                    ("recoverReplicaNodes" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3925 3952])
                    ("updateBrokenRecoverQuotaConfig" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3958 3996])
                    ("getVersionedPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("versionedPlanMap" variable
                               (:pointer 1
                                :type ("VersionedPlanMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4024 4059]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4002 4066])
                    ("isWorking" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [4072 4089])
                    ("getHealthChecker" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type ("HealthCheckerPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4118 4162])
                    ("getServiceSwitch" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type ("ServiceSwitchPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4168 4212])
                    ("private" label nil (reparse-symbol classsubparts) [4213 4221])
                    ("_roleId" variable (:type ("roleid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4226 4243])
                    ("_roleGUID" variable (:type ("roleguid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4248 4269])
                    ("_globalPlan" variable (:type ("GlobalPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4274 4297])
                    ("_versionedPlans" variable (:type ("ExtVersionedPlanMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4302 4338])
                    ("_latestVersion" variable (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4343 4368])
                    ("_replicaNodes" variable (:type ("ReplicaNodeVect" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4373 4403])
                    ("_scheduleParams" variable (:type ("ScheduleParams" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4413 4444])
                    ("_slotInfos" variable (:type ("SlotInfoMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4449 4472])
                    ("_hippoAdapterPtr" variable (:type ("HippoAdapterPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4477 4510])
                    ("_healthCheckerPtr" variable (:type ("HealthCheckerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4515 4550])
                    ("_serviceSwitchPtr" variable (:type ("ServiceSwitchPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4555 4590])
                    ("_brokenRecoverQuotaPtr" variable (:type ("BrokenRecoverQuotaPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4595 4640])
                    ("_healthCheckerManagerPtr" variable (:type ("HealthCheckerManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4645 4694])
                    ("_serviceSwitchManagerPtr" variable (:type ("ServiceSwitchManagerPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4699 4748])
                    ("_roleExecutorPtr" variable (:type ("RoleExecutorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4753 4786])
                    ("_replicaNodeCreatorPtr" variable (:type ("ReplicaNodeCreatorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4791 4836])
                    ("_idGeneratorPtr" variable (:type ("IdGeneratorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4841 4872])
                    ("private" label nil (reparse-symbol classsubparts) [4873 4881])
                    ("CARBON_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [4886 4907]))                  
                :type "class")
                nil [889 4910])
            ("CARBON_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Role" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4931 4936]))                  
                :type "int")
                nil [4912 4937])
            ("RoleMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("RolePtr" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [4939 4986])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5009 5016]))                  
                :type "int")
                nil [4988 5017]))          
      :file "Role.h"
      :pointmax 5042
      :fsize 5041
      :lastmodtime '(22850 12252 174928 232000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CARBON_ROLE_H")
          )
)
    (semanticdb-table "HippoAdapter.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/HippoAdapter.h" include nil nil [1 33])
            ("carbon/Log.h" include nil nil [34 57])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [59 79])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [80 102])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [103 125])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149 156]))                  
                :type "int")
                nil [126 157])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176 183])
                    ("" variable (:type ("HippoAdapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [184 197]))                  
                :type "int")
                nil [159 198])
            ("HippoAdapter" function
               (:constructor-flag t
                :parent "HippoAdapter"
                :type ("HippoAdapter" type (:type "class") nil nil))
                nil [200 258])
            ("HippoAdapter" function
               (:destructor-flag t
                :parent "HippoAdapter"
                :type "void")
                nil [260 319])
            ("init" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("hippoZkRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [345 376])
                    ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [401 419])
                    ("leaderElector" variable
                       (:pointer 1
                        :type ("LeaderElector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [421 450])
                    ("applicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [475 508]))                  
                :type "bool")
                nil [321 969])
            ("start" function
               (:parent "HippoAdapter"
                :type "bool")
                nil [971 1247])
            ("stop" function
               (:parent "HippoAdapter"
                :type "bool")
                nil [1249 1385])
            ("fillRoleRequest" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("resourceRequest" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResourceRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1431 1470])
                    ("roleRequest" variable
                       (:pointer 1
                        :type ("RoleRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1479 1504]))                  
                :type "void")
                nil [1387 2180])
            ("allocateSlots" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("resourcePlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("ResourceRequest" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2224 2273])
                    ("releasedSlots" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("ReleasePreference" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2282 2334]))                  
                :type "void")
                nil [2182 3000])
            ("fillProcessContext" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("launchPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LaunchPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3049 3078])
                    ("context" variable
                       (:pointer 1
                        :type ("ProcessContext" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3079 3103]))                  
                :type "void")
                nil [3002 3245])
            ("launchSlots" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("launchPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("LaunchPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3278 3321]))                  
                :type "void")
                nil [3247 4065])
            ("extractSlotInfo" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("slotInfoVect" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfoVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4111 4144])
                    ("slotInfos" variable
                       (:pointer 1
                        :type ("SlotInfoMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4153 4176]))                  
                :type "void")
                nil [4067 4349])
            ("getSlotInfos" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("slotInfos" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("SlotInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4383 4416]))                  
                :type "void")
                nil [4351 4678])
            ("releaseTag" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("tag" variable
                       (:reference 1
                        :constant-flag t
                        :type ("tag_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4710 4727]))                  
                :type "void")
                nil [4680 4839])
            ("getSlots" function
               (:parent "HippoAdapter"
                :type ("map" type
                     (:template-specifier 
                        ( ("tag_t" type nil nil nil)
                          ("SlotInfoVect" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [4841 5313])
            ("getSlotsByTag" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("tag" variable
                       (:reference 1
                        :constant-flag t
                        :type ("tag_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5355 5372]))                  
                :type ("SlotInfoMap" type (:type "class") nil nil))
                nil [5315 5578])
            ("getSlotsByTags" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("tags" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5621 5649]))                  
                :type ("SlotInfoMap" type (:type "class") nil nil))
                nil [5580 5960])
            ("getAllTags" function
               (:parent "HippoAdapter"
                :arguments 
                  ( ("tags" variable
                       (:pointer 1
                        :type ("set" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5992 6009]))                  
                :type "void")
                nil [5962 6258])
            ("isWorking" function
               (:parent "HippoAdapter"
                :type "bool")
                nil [6260 6371])
            ("getAppChecksum" function
               (:parent "HippoAdapter"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6373 6493])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6515 6522]))                  
                :type "int")
                nil [6494 6523]))          
      :file "HippoAdapter.cpp"
      :pointmax 6524
      :fsize 6523
      :lastmodtime '(22850 12252 167928 239000)
      :unmatched-syntax '((thing 420 . 421) (thing 419 . 420) (thing 406 . 419)))
    (semanticdb-table "RoleExecutor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/RoleExecutor.h" include nil nil [1 33])
            ("master/GlobalVariable.h" include nil nil [34 68])
            ("carbon/Log.h" include nil nil [69 92])
            ("master/SlotUtil.h" include nil nil [93 121])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [123 143])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167 174]))                  
                :type "int")
                nil [144 175])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [194 201])
                    ("" variable (:type ("RoleExecutor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [202 215]))                  
                :type "int")
                nil [177 216])
            ("RoleExecutor" function
               (:constructor-flag t
                :parent "RoleExecutor"
                :arguments 
                  ( ("hippoAdapterPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HippoAdapterPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [245 284]))                  
                :type ("RoleExecutor" type (:type "class") nil nil))
                nil [218 328])
            ("RoleExecutor" function
               (:destructor-flag t
                :parent "RoleExecutor"
                :type "void")
                nil [330 363])
            ("execute" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("roleId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [401 424])
                    ("allWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [433 470])
                    ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("version_t" type nil nil nil)
                                  ("ExtVersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [479 534]))                  
                :type "void")
                nil [365 983])
            ("getResourceRequests" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("roleId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1033 1056])
                    ("allWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1065 1102])
                    ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("version_t" type nil nil nil)
                                  ("ExtVersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1111 1166])
                    ("resourceRequestMap" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("ResourceRequest" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1175 1223])
                    ("releaseSlots" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("ReleasePreference" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1232 1277]))                  
                :type "void")
                nil [985 1696])
            ("groupWorkerNodesByTag" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("allWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1748 1785])
                    ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("version_t" type nil nil nil)
                                  ("ExtVersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1794 1849])
                    ("tagedWorkerNodes" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("WorkerNodeVect" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1858 1903]))                  
                :type "void")
                nil [1698 2836])
            ("groupVersionedPlanByTag" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("version_t" type nil nil nil)
                                  ("ExtVersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2890 2945])
                    ("tagedVersionedPlans" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("VersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2954 3001]))                  
                :type "void")
                nil [2838 3263])
            ("genResourceRequests" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("roleId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("roleid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3313 3336])
                    ("tagedWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("WorkerNodeVect" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3345 3396])
                    ("tagedVersionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("VersionedPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3405 3458])
                    ("resourceRequestMap" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("ResourceRequest" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3467 3515]))                  
                :type "void")
                nil [3265 4212])
            ("countSlotsNeedAllocate" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("tag" variable
                       (:reference 1
                        :constant-flag t
                        :type ("tag_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4259 4276])
                    ("tagedWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("WorkerNodeVect" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4285 4336]))                  
                :type ("int32_t" type (:type "class") nil nil))
                nil [4214 4783])
            ("getReleaseSlots" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("tagedWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("WorkerNodeVect" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4829 4880])
                    ("releaseSlots" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("ReleasePreference" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4889 4934]))                  
                :type "void")
                nil [4785 6249])
            ("getLaunchPlans" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("allWorkerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6285 6322])
                    ("launchPlanMap" variable
                       (:pointer 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("SlotId" type nil nil nil)
                                  ("LaunchPlan" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6357 6396]))                  
                :type "void")
                nil [6251 6910])
            ("fillRoleUidInLaunchPlan" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("nodeId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("nodeid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6955 6978])
                    ("launchPlan" variable
                       (:pointer 1
                        :type ("LaunchPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6979 7002]))                  
                :type "void")
                nil [6912 7607])
            ("checkEnvExisted" function
               (:parent "RoleExecutor"
                :arguments 
                  ( ("envs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("hippo::PairType" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7644 7680])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7681 7699]))                  
                :type "bool")
                nil [7609 7984])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8007 8014]))                  
                :type "int")
                nil [7986 8015]))          
      :file "RoleExecutor.cpp"
      :pointmax 8017
      :fsize 8016
      :lastmodtime '(22850 12252 174928 232000)
      :unmatched-syntax nil)
    (semanticdb-table "HippoAdapter.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_HIPPOADAPTER_H" variable (:constant-flag t) nil [39 60])
            ("carbon/CommonDefine.h" include nil nil [62 94])
            ("carbon/RolePlan.h" include nil nil [95 123])
            ("common/common.h" include nil nil [124 150])
            ("carbon/Log.h" include nil nil [151 174])
            ("hippo/MasterDriver.h" include nil nil [175 206])
            ("autil/Lock.h" include (:system-flag t) nil [207 230])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [255 262]))                  
                :type "int")
                nil [232 263])
            ("ResourceRequest" type
               (:members 
                  ( ("resourcePlan" variable (:type ("ResourcePlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [294 320])
                    ("count" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [325 339]))                  
                :type "struct")
                nil [265 342])
            ("HippoAdapter" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [365 372])
                    ("HippoAdapter" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HippoAdapter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [377 392])
                    ("HippoAdapter" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [397 421])
                    ("private" label nil (reparse-symbol classsubparts) [422 430])
                    ("HippoAdapter" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoAdapter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [448 469]))                          
                        :type ("HippoAdapter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [435 470])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoAdapter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [499 520]))                          
                        :type ("HippoAdapter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [475 521])
                    ("public" label nil (reparse-symbol classsubparts) [522 529])
                    ("init" function
                       (:prototype-flag t
                        :arguments 
                          ( ("hippoZkRoot" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [544 575])
                            ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [590 608])
                            ("leaderElector" variable
                               (:pointer 1
                                :type ("LeaderElector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [610 639])
                            ("applicationId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [654 687]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [534 688])
                    ("start" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [694 707])
                    ("stop" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [717 729])
                    ("allocateSlots" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("resourcePlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("ResourceRequest" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [802 856])
                            ("releasedSlots" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("ReleasePreference" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [869 926]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [762 927])
                    ("launchSlots" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("launchPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("LaunchPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [985 1033]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [960 1034])
                    ("getSlotsByTags" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("tags" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::set" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1102 1130]))                          
                        :type ("SlotInfoMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1067 1137])
                    ("getSlotsByTag" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("tag" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tag_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1204 1221]))                          
                        :type ("SlotInfoMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1170 1228])
                    ("getAllTags" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tags" variable
                               (:pointer 1
                                :type ("std::set" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1250 1272]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1234 1279])
                    ("isWorking" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1289 1312])
                    ("releaseTag" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tag" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tag_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1334 1351]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1318 1352])
                    ("getAppChecksum" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1358 1389])
                    ("private" label nil (reparse-symbol classsubparts) [1395 1403])
                    ("getSlots" function
                       (:prototype-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("tag_t" type nil nil nil)
                                  ("SlotInfoVect" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [1408 1455])
                    ("fillRoleRequest" function
                       (:prototype-flag t
                        :arguments 
                          ( ("resourceRequest" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ResourceRequest" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1495 1534])
                            ("roleRequest" variable
                               (:pointer 1
                                :type ("hippo::RoleRequest" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1547 1579]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1461 1580])
                    ("fillProcessContext" function
                       (:prototype-flag t
                        :arguments 
                          ( ("launchPlan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LaunchPlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1623 1652])
                            ("context" variable
                               (:pointer 1
                                :type ("ProcessContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1653 1677]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1586 1678])
                    ("extractSlotInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("slotInfoVect" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SlotInfoVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1718 1751])
                            ("slotInfos" variable
                               (:pointer 1
                                :type ("SlotInfoMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1764 1787]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1684 1794])
                    ("getSlotInfos" function
                       (:prototype-flag t
                        :arguments 
                          ( ("slotInfos" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("SlotInfo" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1818 1856]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1800 1857])
                    ("private" label nil (reparse-symbol classsubparts) [1863 1871])
                    ("_masterDriver" variable
                       (:pointer 1
                        :type ("hippo::MasterDriver" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1876 1911])
                    ("_lock" variable
                       (:typemodifiers ("mutable")
                        :type ("autil::ThreadMutex" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1916 1949])
                    ("private" label nil (reparse-symbol classsubparts) [1950 1958])
                    ("CARBON_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1963 1984]))                  
                :type "class")
                nil [344 1987])
            ("CARBON_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("HippoAdapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2008 2021]))                  
                :type "int")
                nil [1989 2022])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2045 2052]))                  
                :type "int")
                nil [2024 2053]))          
      :file "HippoAdapter.h"
      :pointmax 2086
      :fsize 2085
      :lastmodtime '(22850 12252 167928 239000)
      :unmatched-syntax '((thing 609 . 610) (thing 608 . 609) (thing 595 . 608))
      :lexical-table 
        '(("CARBON_HIPPOADAPTER_H")
          )
)
    (semanticdb-table "DefaultHealthChecker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/DefaultHealthChecker.h" include nil nil [1 41])
            ("carbon/Log.h" include nil nil [42 65])
            ("common/SlotUtil.h" include nil nil [66 94])
            ("master/WorkerNode.h" include nil nil [95 125])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [127 147])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [148 170])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [171 193])
            ("USE_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [215 222]))                  
                :type "int")
                nil [194 223])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [247 254]))                  
                :type "int")
                nil [224 255])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [274 281])
                    ("" variable (:type ("DefaultHealthChecker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [282 303]))                  
                :type "int")
                nil [257 304])
            ("DefaultHealthChecker" function
               (:constructor-flag t
                :parent "DefaultHealthChecker"
                :arguments 
                  ( ("id" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [349 366]))                  
                :type ("DefaultHealthChecker" type (:type "class") nil nil))
                nil [306 394])
            ("DefaultHealthChecker" function
               (:destructor-flag t
                :parent "DefaultHealthChecker"
                :type "void")
                nil [396 445])
            ("doUpdate" function
               (:parent "DefaultHealthChecker"
                :arguments 
                  ( ("workerNodes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("WorkerNodePtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [483 524]))                  
                :type "void")
                nil [447 1104])
            ("doCheck" function
               (:parent "DefaultHealthChecker"
                :type "void")
                nil [1106 1843])
            ("checkSlotInfo" function
               (:parent "DefaultHealthChecker"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1892 1917]))                  
                :type ("HealthType" type (:type "class") nil nil))
                nil [1845 3027])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3050 3057]))                  
                :type "int")
                nil [3029 3058]))          
      :file "DefaultHealthChecker.cpp"
      :pointmax 3060
      :fsize 3059
      :lastmodtime '(22850 12252 165928 241000)
      :unmatched-syntax nil)
    (semanticdb-table "DefaultHealthChecker.h"
      :file "DefaultHealthChecker.h"
      :fsize 991
      :lastmodtime '(22850 12252 165928 241000))
    (semanticdb-table "SlotUtil.h"
      :file "SlotUtil.h"
      :fsize 1913
      :lastmodtime '(22850 12252 176928 230000))
    (semanticdb-table "WorkerNode.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_WORKERNODE_H" variable (:constant-flag t) nil [37 56])
            ("carbon/CommonDefine.h" include nil nil [419 451])
            ("carbon/RolePlan.h" include nil nil [452 480])
            ("carbon/Status.h" include nil nil [481 507])
            ("common/common.h" include nil nil [508 534])
            ("carbon/Log.h" include nil nil [535 558])
            ("master/HealthChecker.h" include nil nil [559 592])
            ("master/ServiceSwitch.h" include nil nil [593 626])
            ("master/ExtVersionedPlan.h" include nil nil [627 663])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [688 695]))                  
                :type "int")
                nil [665 696])
            ("WorkerNode" type
               (:superclasses 
                  ( ("autil::legacy::Jsonizable" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [752 759])
                    ("WorkerNode" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("WorkerNode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [764 777])
                    ("WorkerNode" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("nodeGUID" variable
                               (:reference 1
                                :constant-flag t
                                :type ("nodeid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [793 818]))                          
                        :type ("WorkerNode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [782 819])
                    ("WorkerNode" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [824 846])
                    ("public" label nil (reparse-symbol classsubparts) [847 854])
                    ("Jsonize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("json" variable
                               (:reference 1
                                :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [872 917]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [859 918])
                    ("public" label nil (reparse-symbol classsubparts) [920 927])
                    ("recover" function
                       (:prototype-flag t
                        :arguments 
                          ( ("latestVersion" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [945 976])
                            ("versionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ExtVersionedPlanMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [994 1036]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [932 1037])
                    ("schedule" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1042 1066])
                    ("setPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("version" variable
                               (:reference 1
                                :constant-flag t
                                :type ("version_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1084 1109])
                            ("plan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ExtVersionedPlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1110 1139]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1071 1140])
                    ("setFinalPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("plan" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ExtVersionedPlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1163 1192]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1145 1193])
                    ("assignSlot" function
                       (:prototype-flag t
                        :arguments 
                          ( ("slotInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SlotInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1214 1239]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1198 1240])
                    ("updateSlotInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("slotInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SlotInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1265 1290]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1245 1291])
                    ("updateHealthInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("healthInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HealthInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1318 1347]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1296 1348])
                    ("updateServiceInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("serviceInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ServiceInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1376 1407]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1353 1408])
                    ("release" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1413 1436])
                    ("releaseWithPref" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pref" variable (:type ("ReleasePreference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1462 1485]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1441 1486])
                    ("public" label nil (reparse-symbol classsubparts) [1487 1494])
                    ("isAvailable" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1499 1524])
                    ("isCompleted" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [1529 1562])
                    ("isBroken" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [1567 1597])
                    ("inBadState" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [1602 1634])
                    ("getGeneralStateString" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1639 1695])
                    ("fillWorkerNodeStatus" function
                       (:prototype-flag t
                        :arguments 
                          ( ("workerNodeStatus" variable
                               (:pointer 1
                                :type ("WorkerNodeStatus" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1726 1761]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1700 1768])
                    ("hasEmptySlotInfo" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1773 1803])
                    ("isNeedSlot" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1808 1832])
                    ("public" label nil (reparse-symbol classsubparts) [1833 1840])
                    ("isAssignedSlot" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1845 1873])
                    ("isUnAssignedSlot" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1878 1908])
                    ("canReleaseSlot" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1913 1941])
                    ("isSlotReleased" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [1946 1982])
                    ("isOffline" function (:type "bool") (reparse-symbol classsubparts) [1987 2030])
                    ("getId" function (:type ("nodeid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2035 2077])
                    ("getSlotInfo" function
                       (:constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2082 2139])
                    ("getSlotId" function (:type ("SlotId" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2144 2188])
                    ("getIp" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2193 2219])
                    ("getHealthInfoMetas" function
                       (:prototype-flag t
                        :type ("KVMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2224 2257])
                    ("getServiceInfoMetas" function
                       (:prototype-flag t
                        :type ("KVMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2262 2296])
                    ("getReleasePreference" function (:type ("ReleasePreference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2301 2365])
                    ("getCurPlan" function (:type ("VersionedPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2374 2435])
                    ("getFinalPlan" function (:type ("VersionedPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2440 2505])
                    ("getCurVersion" function (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2510 2565])
                    ("targetHasReached" function (:type "bool") (reparse-symbol classsubparts) [2570 2629])
                    ("getNextVersion" function (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2680 2737])
                    ("getHealthStatus" function (:type ("HealthType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2742 2813])
                    ("getWorkerStatus" function (:type ("WorkerType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2818 2889])
                    ("getServiceStatus" function (:type ("ServiceType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2894 2962])
                    ("getSlotStatus" function (:type ("SlotType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2967 3021])
                    ("public" label nil (reparse-symbol classsubparts) [3023 3030])
                    ("getSlotAllocStatus" function (:type ("SlotAllocStatus" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3050 3133])
                    ("setSlotAllocStatus" function
                       (:arguments 
                          ( ("status" variable (:type ("SlotAllocStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3162 3185]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3138 3228])
                    ("setSlotId" function
                       (:arguments 
                          ( ("slotId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SlotId" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3248 3269]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3233 3303])
                    ("setOfflineFlag" function
                       (:arguments 
                          ( ("flag" variable (:type "bool") (reparse-symbol arg-sub-list) [3328 3338]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3308 3371])
                    ("isReclaiming" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [3376 3410])
                    ("private" label nil (reparse-symbol classsubparts) [3411 3419])
                    ("dealwithSlotUnAssigned" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3424 3454])
                    ("dealwithSlotAssigned" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3459 3487])
                    ("dealwithSlotLost" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3492 3516])
                    ("dealwithSlotOfflining" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3521 3550])
                    ("dealwithSlotReleasing" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3555 3584])
                    ("dealwithSlotReleased" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [3589 3617])
                    ("stepProcessUpdateGracefully" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3622 3657])
                    ("stepProcessResourcePlan" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3662 3693])
                    ("stepProcessLaunchPlan" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3698 3727])
                    ("stepProcessHealthInfo" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3732 3761])
                    ("stepProcessServiceInfo" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3766 3796])
                    ("isDead" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3801 3821])
                    ("isLongTimeNotMatchPlan" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3826 3862])
                    ("resourcePlanMatch" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3867 3898])
                    ("launchPlanMatch" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3903 3932])
                    ("healthInfoMatch" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [3937 3966])
                    ("serviceInfoMatch" function
                       (:prototype-flag t
                        :arguments 
                          ( ("online" variable (:type "bool") (reparse-symbol arg-sub-list) [3993 4005]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3971 4012])
                    ("healthInfoReady" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [4017 4046])
                    ("fixPref" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4051 4066])
                    ("tryMoveToSlotReleasing" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4071 4101])
                    ("public" label nil (reparse-symbol classsubparts) [4102 4109])
                    ("AssignedScheduleStep" type
                       (:members 
                          ( ("STEP_BEGIN" variable
                               (:constant-flag t
                                :default-value (4163 4164)
                                :type "int")
                                (reparse-symbol enumsubparts) [4150 4164])
                            ("STEP_PROCESS_UPDATE_GRACEFULLY" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4174 4205])
                            ("STEP_PROCESS_RESOURCE_PLAN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4214 4241])
                            ("STEP_PROCESS_LAUNCH_PLAN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4250 4275])
                            ("STEP_PROCESS_HEALTH_INFO" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4284 4309])
                            ("STEP_PROCESS_SERVICE_INFO" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4318 4344]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [4114 4351])
                    ("_assignedStep" variable (:type ("AssignedScheduleStep" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4356 4391])
                    ("private" label nil (reparse-symbol classsubparts) [4421 4429])
                    ("_nodeId" variable (:type ("nodeid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4460 4477])
                    ("_curVersion" variable (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4482 4504])
                    ("_nextVersion" variable (:type ("version_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4509 4532])
                    ("_extCurPlan" variable (:type ("ExtVersionedPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4537 4566])
                    ("_extNextPlan" variable (:type ("ExtVersionedPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4571 4601])
                    ("_extFinalPlan" variable (:type ("ExtVersionedPlan" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4606 4637])
                    ("_slotId" variable (:type ("SlotId" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4642 4657])
                    ("_ip" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4662 4678])
                    ("_offline" variable (:type "bool") (reparse-symbol classsubparts) [4683 4697])
                    ("_releasing" variable (:type "bool") (reparse-symbol classsubparts) [4702 4718])
                    ("_targetHasReached" variable (:type "bool") (reparse-symbol classsubparts) [4723 4746])
                    ("_pref" variable (:type ("ReleasePreference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4751 4775])
                    ("_lastNotMatchTime" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4780 4806])
                    ("_slotAllocStatus" variable (:type ("SlotAllocStatus" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4811 4844])
                    ("_slotInfo" variable (:type ("SlotInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4876 4895])
                    ("_healthInfo" variable (:type ("HealthInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4900 4923])
                    ("_serviceInfo" variable (:type ("ServiceInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4928 4953])
                    ("_slotStatus" variable (:type ("SlotType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4958 4979])
                    ("private" label nil (reparse-symbol classsubparts) [4980 4988])
                    ("CARBON_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [4993 5014]))                  
                :type "class")
                nil [698 5017])
            ("CARBON_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("WorkerNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5038 5049]))                  
                :type "int")
                nil [5019 5050])
            ("WorkerNodeVect" type
               (:typedef ("std::vector" type
                     (:template-specifier 
                        ( ("WorkerNodePtr" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [5051 5101])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5124 5131]))                  
                :type "int")
                nil [5103 5132]))          
      :file "WorkerNode.h"
      :pointmax 5163
      :fsize 5162
      :lastmodtime '(22850 12252 176928 230000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CARBON_WORKERNODE_H")
          )
)
    (semanticdb-table "SlotUtil.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/SlotUtil.h" include nil nil [1 29])
            ("carbon/Log.h" include nil nil [30 53])
            ("hippo/HippoUtil.h" include (:system-flag t) nil [54 82])
            ("sstream" include (:system-flag t) nil [83 101])
            ("master/SignatureGenerator.h" include nil nil [102 140])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [142 162])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186 193]))                  
                :type "int")
                nil [163 194])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [213 220])
                    ("" variable (:type ("SlotUtil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [221 230]))                  
                :type "int")
                nil [196 231])
            ("SlotUtil" function
               (:constructor-flag t
                :parent "SlotUtil"
                :type ("SlotUtil" type (:type "class") nil nil))
                nil [233 257])
            ("SlotUtil" function
               (:destructor-flag t
                :parent "SlotUtil"
                :type "void")
                nil [259 284])
            ("isEmptySlot" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [313 334]))                  
                :type "bool")
                nil [286 448])
            ("isPackageReady" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("packageInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("PackageInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [480 525])
                    ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [557 582]))                  
                :type "bool")
                nil [450 1049])
            ("isProcessReady" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("processInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("ProcessInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1085 1130])
                    ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1162 1187]))                  
                :type "bool")
                nil [1055 2292])
            ("isDataReady" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("dataInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("DataInfo" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2321 2360])
                    ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2388 2413]))                  
                :type "bool")
                nil [2294 3880])
            ("isSlotInfoMatchingPlan" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("launchPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LaunchPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3920 3949])
                    ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3988 4013]))                  
                :type "bool")
                nil [3882 4235])
            ("toString" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4263 4284]))                  
                :type ("string" type (:type "class") nil nil))
                nil [4237 4424])
            ("toString" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4456 4481]))                  
                :type ("string" type (:type "class") nil nil))
                nil [4430 4519])
            ("hasFailedProcess" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4553 4578]))                  
                :type "bool")
                nil [4521 4787])
            ("hasFailedDataStatus" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4824 4849]))                  
                :type "bool")
                nil [4789 5041])
            ("isSlotUnRecoverable" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5078 5103]))                  
                :type "bool")
                nil [5043 5256])
            ("isPackageInstalled" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5292 5317]))                  
                :type "bool")
                nil [5258 5394])
            ("isAllProcessAlive" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5429 5454]))                  
                :type "bool")
                nil [5396 5643])
            ("isAllProcessRunning" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5680 5705]))                  
                :type "bool")
                nil [5645 5844])
            ("checkAllProcessStatus" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5883 5908])
                    ("allowedStatus" variable
                       (:reference 1
                        :constant-flag t
                        :type ("set" type
                             (:template-specifier 
                                ( ("ProcessStatus::Status" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5946 5994]))                  
                :type "bool")
                nil [5846 6296])
            ("getIp" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6326 6351]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [6298 6401])
            ("extractSlotStatus" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6442 6467]))                  
                :type ("SlotStatus" type (:type "class") nil nil))
                nil [6403 7111])
            ("hasRestartingProcess" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7149 7174]))                  
                :type "bool")
                nil [7113 7382])
            ("rewriteProcInstanceId" function
               (:parent "SlotUtil"
                :arguments 
                  ( ("launchPlan" variable
                       (:pointer 1
                        :type ("LaunchPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7421 7444]))                  
                :type "void")
                nil [7384 7760])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7783 7790]))                  
                :type "int")
                nil [7762 7791]))          
      :file "SlotUtil.cpp"
      :pointmax 7792
      :fsize 7791
      :lastmodtime '(22850 12252 176928 230000)
      :unmatched-syntax nil)
    (semanticdb-table "WorkerNode.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/WorkerNode.h" include nil nil [1 31])
            ("carbon/Log.h" include nil nil [32 55])
            ("common/Recorder.h" include nil nil [56 84])
            ("master/SlotUtil.h" include nil nil [85 113])
            ("master/HealthChecker.h" include nil nil [114 147])
            ("master/ServiceSwitch.h" include nil nil [148 181])
            ("master/Util.h" include nil nil [182 206])
            ("autil/TimeUtility.h" include (:system-flag t) nil [207 237])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [239 259])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [260 282])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [306 313]))                  
                :type "int")
                nil [283 314])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [333 340])
                    ("" variable (:type ("WorkerNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [341 352]))                  
                :type "int")
                nil [316 353])
            ("WorkerNode" function
               (:constructor-flag t
                :parent "WorkerNode"
                :type ("WorkerNode" type (:type "class") nil nil))
                nil [354 741])
            ("WorkerNode" function
               (:constructor-flag t
                :parent "WorkerNode"
                :arguments 
                  ( ("nodeId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("nodeid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [766 789]))                  
                :type ("WorkerNode" type (:type "class") nil nil))
                nil [743 1150])
            ("WorkerNode" function
               (:destructor-flag t
                :parent "WorkerNode"
                :type "void")
                nil [1152 1181])
            ("RECOVER_PLAN" variable (:constant-flag t) nil [1191 1203])
            ("recover" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("latestVersion" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2029 2060])
                    ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2086 2128]))                  
                :type "bool")
                nil [2004 2302])
            ("fixPref" function
               (:parent "WorkerNode"
                :type "void")
                nil [2325 2597])
            ("assignSlot" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2627 2652]))                  
                :type "void")
                nil [2599 3529])
            ("isUnAssignedSlot" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3531 3623])
            ("isAssignedSlot" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3625 3713])
            ("canReleaseSlot" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3715 3804])
            ("isSlotReleased" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3806 3894])
            ("hasEmptySlotInfo" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3896 3993])
            ("isAvailable" function
               (:parent "WorkerNode"
                :type "bool")
                nil [3995 4200])
            ("resourcePlanMatch" function
               (:parent "WorkerNode"
                :type "bool")
                nil [4202 4276])
            ("launchPlanMatch" function
               (:parent "WorkerNode"
                :type "bool")
                nil [4278 4585])
            ("healthInfoMatch" function
               (:parent "WorkerNode"
                :type "bool")
                nil [4587 4774])
            ("serviceInfoMatch" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("online" variable (:type "bool") (reparse-symbol arg-sub-list) [4810 4822]))                  
                :type "bool")
                nil [4776 4977])
            ("healthInfoReady" function
               (:parent "WorkerNode"
                :type "bool")
                nil [4979 5198])
            ("setPlan" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5225 5250])
                    ("plan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5276 5305]))                  
                :type "void")
                nil [5200 5867])
            ("setFinalPlan" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("plan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5899 5928]))                  
                :type "void")
                nil [5869 5958])
            ("schedule" function
               (:parent "WorkerNode"
                :type "void")
                nil [5960 6881])
            ("dealwithSlotUnAssigned" function
               (:parent "WorkerNode"
                :type "void")
                nil [6883 7213])
            ("dealwithSlotAssigned" function
               (:parent "WorkerNode"
                :type "void")
                nil [7215 8016])
            ("stepProcessResourcePlan" function
               (:parent "WorkerNode"
                :type "bool")
                nil [8017 8301])
            ("stepProcessUpdateGracefully" function
               (:parent "WorkerNode"
                :type "bool")
                nil [8303 8716])
            ("stepProcessLaunchPlan" function
               (:parent "WorkerNode"
                :type "bool")
                nil [8717 9026])
            ("stepProcessHealthInfo" function
               (:parent "WorkerNode"
                :type "bool")
                nil [9027 9209])
            ("stepProcessServiceInfo" function
               (:parent "WorkerNode"
                :type "bool")
                nil [9210 9486])
            ("dealwithSlotLost" function
               (:parent "WorkerNode"
                :type "void")
                nil [9488 9588])
            ("dealwithSlotOfflining" function
               (:parent "WorkerNode"
                :type "void")
                nil [9590 9753])
            ("dealwithSlotReleasing" function
               (:parent "WorkerNode"
                :type "void")
                nil [9755 9897])
            ("dealwithSlotReleased" function
               (:parent "WorkerNode"
                :type "void")
                nil [9899 10029])
            ("releaseWithPref" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("pref" variable (:type ("ReleasePreference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10064 10087]))                  
                :type "void")
                nil [10031 10307])
            ("release" function
               (:parent "WorkerNode"
                :type "void")
                nil [10309 10685])
            ("updateSlotInfo" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("slotInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SlotInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10719 10744]))                  
                :type "void")
                nil [10687 11008])
            ("updateHealthInfo" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("healthInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HealthInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11044 11073]))                  
                :type "void")
                nil [11010 11534])
            ("updateServiceInfo" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("serviceInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ServiceInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11571 11602]))                  
                :type "void")
                nil [11536 12070])
            ("getGeneralStateString" function
               (:parent "WorkerNode"
                :constant-flag t
                :type ("string" type (:type "class") nil nil))
                nil [12072 12559])
            ("inBadState" function
               (:parent "WorkerNode"
                :type "bool")
                nil [12561 12661])
            ("isBroken" function
               (:parent "WorkerNode"
                :type "bool")
                nil [12663 12898])
            ("isCompleted" function
               (:parent "WorkerNode"
                :type "bool")
                nil [12900 13180])
            ("isReclaiming" function
               (:parent "WorkerNode"
                :type "bool")
                nil [13182 13328])
            ("isDead" function
               (:parent "WorkerNode"
                :type "bool")
                nil [13330 13413])
            ("isLongTimeNotMatchPlan" function
               (:parent "WorkerNode"
                :type "bool")
                nil [13415 13871])
            ("getIp" function
               (:parent "WorkerNode"
                :type ("string" type (:type "class") nil nil))
                nil [13873 13925])
            ("getHealthInfoMetas" function
               (:parent "WorkerNode"
                :type ("KVMap" type (:type "class") nil nil))
                nil [13927 14005])
            ("getServiceInfoMetas" function
               (:parent "WorkerNode"
                :type ("KVMap" type (:type "class") nil nil))
                nil [14007 14087])
            ("fillWorkerNodeStatus" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("status" variable
                       (:pointer 1
                        :type ("WorkerNodeStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14127 14152]))                  
                :type "void")
                nil [14089 14939])
            ("Jsonize" function
               (:parent "WorkerNode"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14966 15011]))                  
                :type "void")
                nil [14941 15501])
            ("isNeedSlot" function
               (:parent "WorkerNode"
                :type "bool")
                nil [15503 15721])
            ("tryMoveToSlotReleasing" function
               (:parent "WorkerNode"
                :typemodifiers ("inline")
                :type "void")
                nil [15723 15926])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15949 15956]))                  
                :type "int")
                nil [15928 15957]))          
      :file "WorkerNode.cpp"
      :pointmax 15959
      :fsize 15958
      :lastmodtime '(22850 12252 176928 230000)
      :unmatched-syntax nil
      :lexical-table 
        '(("RECOVER_PLAN" (spp-arg-list ("planVersion" "targetPlan") 1203 . 1228) . ((semantic-list "{                                                                   \\
        ExtVersionedPlanMap::const_iterator it;                         \\
        it = versionedPlans.find(planVersion);                          \\
        if (it == versionedPlans.end()) {                               \\
            CARBON_LOG(ERROR, \"workerNode [%s] recover failed: \"        \\
                       #planVersion \" plan not found\",                  \\
                       _nodeId.c_str());                                \\
            return false;                                               \\
        }                                                               \\
        targetPlan = it->second;                                        \\
    }" 1261 . 2002)))
          )
)
    (semanticdb-table "ReplicaNode.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master/ReplicaNode.h" include nil nil [1 32])
            ("carbon/Log.h" include nil nil [33 56])
            ("autil/StringUtil.h" include (:system-flag t) nil [57 86])
            ("autil/TimeUtility.h" include (:system-flag t) nil [87 117])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [119 139])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [140 162])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [186 193]))                  
                :type "int")
                nil [163 194])
            ("CARBON_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [213 220])
                    ("" variable (:type ("ReplicaNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [221 233]))                  
                :type "int")
                nil [196 234])
            ("ReplicaNode" function
               (:constructor-flag t
                :parent "ReplicaNode"
                :type ("ReplicaNode" type (:type "class") nil nil))
                nil [236 310])
            ("ReplicaNode" function
               (:constructor-flag t
                :parent "ReplicaNode"
                :arguments 
                  ( ("nodeId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("nodeid_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [337 360])
                    ("quotaPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokenRecoverQuotaPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [386 424])
                    ("workerNodeCreatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeCreatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [450 499]))                  
                :type ("ReplicaNode" type (:type "class") nil nil))
                nil [312 829])
            ("ReplicaNode" function
               (:destructor-flag t
                :parent "ReplicaNode"
                :type "void")
                nil [831 862])
            ("ReplicaNode" function
               (:constructor-flag t
                :parent "ReplicaNode"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ReplicaNode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [889 912]))                  
                :type ("ReplicaNode" type (:type "class") nil nil))
                nil [864 933])
            ("=" function
               (:operator-flag t
                :parent "ReplicaNode"
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ReplicaNode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [971 994]))                  
                :type ("ReplicaNode" type (:type "class") nil nil))
                nil [935 1535])
            ("setPlan" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("version" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1563 1588])
                    ("extPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1615 1647]))                  
                :type "void")
                nil [1537 1699])
            ("release" function
               (:parent "ReplicaNode"
                :type "void")
                nil [1701 1946])
            ("schedule" function
               (:parent "ReplicaNode"
                :type "void")
                nil [1948 2027])
            ("adjustInternalNode" function
               (:parent "ReplicaNode"
                :type "void")
                nil [2029 3306])
            ("releaseCurNodeAndSwapBackup" function
               (:parent "ReplicaNode"
                :type "void")
                nil [3308 3693])
            ("scheduleNodes" function
               (:parent "ReplicaNode"
                :type "void")
                nil [3695 3990])
            ("getWorkerNodes" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("workerNodes" variable
                       (:pointer 1
                        :type ("WorkerNodeVect" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4025 4053]))                  
                :type "void")
                nil [3992 4234])
            ("isReleased" function
               (:parent "ReplicaNode"
                :type "bool")
                nil [4236 4594])
            ("setFinalPlan" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("plan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4627 4656]))                  
                :type "void")
                nil [4596 4822])
            ("fillReplicaNodeStatus" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("status" variable
                       (:pointer 1
                        :type ("ReplicaNodeStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4864 4890]))                  
                :type "void")
                nil [4824 5204])
            ("isAvailable" function
               (:parent "ReplicaNode"
                :type "bool")
                nil [5206 5342])
            ("targetHasReached" function
               (:parent "ReplicaNode"
                :type "bool")
                nil [5344 5440])
            ("isUnAssignedSlot" function
               (:parent "ReplicaNode"
                :type "bool")
                nil [5442 5538])
            ("Jsonize" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5566 5611]))                  
                :type "void")
                nil [5540 5915])
            ("recover" function
               (:parent "ReplicaNode"
                :arguments 
                  ( ("latestVersion" variable
                       (:reference 1
                        :constant-flag t
                        :type ("version_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5943 5974])
                    ("versionedPlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ExtVersionedPlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6001 6043])
                    ("brokenRecoverQuotaPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokenRecoverQuotaPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6070 6121])
                    ("workerNodeCreatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("WorkerNodeCreatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6148 6197]))                  
                :type "bool")
                nil [5917 7123])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7146 7153]))                  
                :type "int")
                nil [7125 7154]))          
      :file "ReplicaNode.cpp"
      :pointmax 7155
      :fsize 7154
      :lastmodtime '(22850 12252 174928 232000)
      :unmatched-syntax nil)
    (semanticdb-table "RoleExecutor.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_ROLEEXECUTOR_H" variable (:constant-flag t) nil [39 60])
            ("carbon/CommonDefine.h" include nil nil [62 94])
            ("common/common.h" include nil nil [95 121])
            ("carbon/Log.h" include nil nil [122 145])
            ("master/HippoAdapter.h" include nil nil [146 178])
            ("master/WorkerNode.h" include nil nil [179 209])
            ("master/ExtVersionedPlan.h" include nil nil [210 246])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [271 278]))                  
                :type "int")
                nil [248 279])
            ("RoleExecutor" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [302 309])
                    ("RoleExecutor" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("hippoAdapterPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoAdapterPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [327 366]))                          
                        :type ("RoleExecutor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [314 367])
                    ("RoleExecutor" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [372 388])
                    ("private" label nil (reparse-symbol classsubparts) [389 397])
                    ("RoleExecutor" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RoleExecutor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [415 436]))                          
                        :type ("RoleExecutor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [402 437])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RoleExecutor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [466 487]))                          
                        :type ("RoleExecutor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [442 488])
                    ("public" label nil (reparse-symbol classsubparts) [489 496])
                    ("execute" function
                       (:prototype-flag t
                        :arguments 
                          ( ("roleId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("roleid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [514 537])
                            ("allWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [555 592])
                            ("versionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("version_t" type nil nil nil)
                                          ("ExtVersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [610 670]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [501 671])
                    ("public" label nil (reparse-symbol classsubparts) [673 680])
                    ("getResourceRequests" function
                       (:prototype-flag t
                        :arguments 
                          ( ("roleId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("roleid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [723 746])
                            ("allWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [759 796])
                            ("versionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("version_t" type nil nil nil)
                                          ("ExtVersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [809 869])
                            ("resourceRequestMap" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("ResourceRequest" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [882 935])
                            ("releaseSlots" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("ReleasePreference" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [948 998]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [685 999])
                    ("groupWorkerNodesByTag" function
                       (:prototype-flag t
                        :arguments 
                          ( ("allWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1041 1078])
                            ("versionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("version_t" type nil nil nil)
                                          ("ExtVersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1087 1147])
                            ("tagedWorkerNodes" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("WorkerNodeVect" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1156 1206]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1005 1207])
                    ("groupVersionedPlanByTag" function
                       (:prototype-flag t
                        :arguments 
                          ( ("versionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("version_t" type nil nil nil)
                                          ("ExtVersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1255 1315])
                            ("tagedVersionedPlans" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("VersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1328 1380]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1213 1381])
                    ("genResourceRequests" function
                       (:prototype-flag t
                        :arguments 
                          ( ("roleId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("roleid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1425 1448])
                            ("tagedWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("WorkerNodeVect" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1461 1517])
                            ("tagedVersionedPlans" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("VersionedPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1530 1588])
                            ("resourceRequestMap" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("ResourceRequest" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1601 1654]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1387 1655])
                    ("countSlotsNeedAllocate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tag" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tag_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1705 1722])
                            ("tagedWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("WorkerNodeVect" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1735 1791]))                          
                        :type ("int32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1661 1792])
                    ("getReleaseSlots" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tagedWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("tag_t" type nil nil nil)
                                          ("WorkerNodeVect" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1832 1888])
                            ("releaseSlots" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("ReleasePreference" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1901 1951]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1798 1952])
                    ("getLaunchPlans" function
                       (:prototype-flag t
                        :arguments 
                          ( ("allWorkerNodes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerNodeVect" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1978 2015])
                            ("launchPlanMap" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("SlotId" type nil nil nil)
                                          ("LaunchPlan" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2040 2084]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1958 2085])
                    ("public" label nil (reparse-symbol classsubparts) [2087 2094])
                    ("fillRoleUidInLaunchPlan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("nodeId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("nodeid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2147 2170])
                            ("launchPlan" variable
                               (:pointer 1
                                :type ("LaunchPlan" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2171 2194]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2118 2195])
                    ("private" label nil (reparse-symbol classsubparts) [2196 2204])
                    ("checkEnvExisted" function
                       (:prototype-flag t
                        :arguments 
                          ( ("envs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("hippo::PairType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2230 2271])
                            ("key" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2272 2295]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2209 2296])
                    ("private" label nil (reparse-symbol classsubparts) [2298 2306])
                    ("_hippoAdapterPtr" variable (:type ("HippoAdapterPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2311 2344])
                    ("private" label nil (reparse-symbol classsubparts) [2345 2353])
                    ("CARBON_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [2358 2379]))                  
                :type "class")
                nil [281 2382])
            ("CARBON_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("RoleExecutor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2403 2416]))                  
                :type "int")
                nil [2384 2417])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2440 2447]))                  
                :type "int")
                nil [2419 2448]))          
      :file "RoleExecutor.h"
      :pointmax 2481
      :fsize 2480
      :lastmodtime '(22850 12252 174928 232000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CARBON_ROLEEXECUTOR_H")
          )
)
    (semanticdb-table "GlobalVariable.h"
      :file "GlobalVariable.h"
      :fsize 782
      :lastmodtime '(22850 12252 166928 240000)))
  :file "!ssd!sdd!git!carbon!src!master!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
