;; Object zlib-1.2.11/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "zlib-1.2.11/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("CC" variable (:default-value ("gcc")) nil [621 628])
            ("CFLAGS" variable (:default-value ("-O3" "-fPIC" "-D_LARGEFILE64_SOURCE=1" "-DHAVE_HIDDEN")) nil [629 684])
            ("SFLAGS" variable (:default-value ("-O3" "-fPIC" "-D_LARGEFILE64_SOURCE=1" "-DHAVE_HIDDEN")) nil [871 926])
            ("LDFLAGS" variable nil nil [926 935])
            ("TEST_LDFLAGS" variable (:default-value ("-L." "libz.a")) nil [935 959])
            ("LDSHARED" variable (:default-value ("gcc" "-shared" "-Wl,-soname,libz.so.1,--version-script,zlib.map")) nil [959 1028])
            ("CPP" variable (:default-value ("gcc" "-E")) nil [1028 1039])
            ("STATICLIB" variable (:default-value ("libz.a")) nil [1040 1057])
            ("SHAREDLIB" variable (:default-value ("libz.so")) nil [1057 1075])
            ("SHAREDLIBV" variable (:default-value ("libz.so.1.2.11")) nil [1075 1101])
            ("SHAREDLIBM" variable (:default-value ("libz.so.1")) nil [1101 1122])
            ("LIBS" variable (:default-value ("$(STATICLIB)" "$(SHAREDLIBV)")) nil [1122 1154])
            ("AR" variable (:default-value ("ar")) nil [1155 1161])
            ("ARFLAGS" variable (:default-value ("rc")) nil [1161 1172])
            ("RANLIB" variable (:default-value ("ranlib")) nil [1172 1186])
            ("LDCONFIG" variable (:default-value ("ldconfig")) nil [1186 1204])
            ("LDSHAREDLIBC" variable (:default-value ("-lc")) nil [1204 1221])
            ("TAR" variable (:default-value ("tar")) nil [1221 1229])
            ("SHELL" variable (:default-value ("/bin/sh")) nil [1229 1243])
            ("EXE" variable nil nil [1243 1248])
            ("prefix" variable (:default-value ("/usr/local")) nil [1249 1268])
            ("exec_prefix" variable (:default-value ("${prefix}")) nil [1268 1291])
            ("libdir" variable (:default-value ("${exec_prefix}/lib")) nil [1291 1318])
            ("sharedlibdir" variable (:default-value ("${libdir}")) nil [1318 1342])
            ("includedir" variable (:default-value ("${prefix}/include")) nil [1342 1372])
            ("mandir" variable (:default-value ("${prefix}/share/man")) nil [1372 1400])
            ("man3dir" variable (:default-value ("${mandir}/man3")) nil [1400 1425])
            ("pkgconfigdir" variable (:default-value ("${libdir}/pkgconfig")) nil [1425 1460])
            ("SRCDIR" variable nil nil [1460 1468])
            ("ZINC" variable nil nil [1468 1474])
            ("ZINCOUT" variable (:default-value ("-I.")) nil [1474 1486])
            ("OBJZ" variable (:default-value ("adler32.o" "crc32.o" "deflate.o" "infback.o" "inffast.o" "inflate.o" "inftrees.o" "trees.o" "zutil.o")) nil [1487 1579])
            ("OBJG" variable (:default-value ("compress.o" "uncompr.o" "gzclose.o" "gzlib.o" "gzread.o" "gzwrite.o")) nil [1579 1644])
            ("OBJC" variable (:default-value ("$(OBJZ)" "$(OBJG)")) nil [1644 1667])
            ("PIC_OBJZ" variable (:default-value ("adler32.lo" "crc32.lo" "deflate.lo" "infback.lo" "inffast.lo" "inflate.lo" "inftrees.lo" "trees.lo" "zutil.lo")) nil [1668 1773])
            ("PIC_OBJG" variable (:default-value ("compress.lo" "uncompr.lo" "gzclose.lo" "gzlib.lo" "gzread.lo" "gzwrite.lo")) nil [1773 1848])
            ("PIC_OBJC" variable (:default-value ("$(PIC_OBJZ)" "$(PIC_OBJG)")) nil [1848 1883])
            ("OBJA" variable nil nil [1944 1951])
            ("PIC_OBJA" variable nil nil [1951 1962])
            ("OBJS" variable (:default-value ("$(OBJC)" "$(OBJA)")) nil [1963 1986])
            ("PIC_OBJS" variable (:default-value ("$(PIC_OBJC)" "$(PIC_OBJA)")) nil [1987 2022])
            ("all" function (:arguments ("static" "shared" "all64")) nil [2023 2048])
            ("static" function (:arguments ("example$(EXE)" "minigzip$(EXE)")) nil [2049 2086])
            ("shared" function (:arguments ("examplesh$(EXE)" "minigzipsh$(EXE)")) nil [2087 2128])
            ("all64" function (:arguments ("example64$(EXE)" "minigzip64$(EXE)")) nil [2129 2169])
            ("check" function (:arguments ("test")) nil [2170 2182])
            ("test" function (:arguments ("all" "teststatic" "testshared" "test64")) nil [2183 2222])
            ("teststatic" function (:arguments ("static")) nil [2223 2455])
            ("testshared" function (:arguments ("shared")) nil [2456 2987])
            ("test64" function (:arguments ("all64")) nil [2988 3234])
            ("infcover.o" function (:arguments ("$(SRCDIR)test/infcover.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3235 3358])
            ("infcover" function (:arguments ("infcover.o" "libz.a")) nil [3359 3428])
            ("cover" function (:arguments ("infcover")) nil [3429 3484])
            ("libz.a" function (:arguments ("$(OBJS)")) nil [3485 3573])
            ("match.o" function (:arguments ("match.S")) nil [3574 3674])
            ("match.lo" function (:arguments ("match.S")) nil [3675 3783])
            ("example.o" function (:arguments ("$(SRCDIR)test/example.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3784 3904])
            ("minigzip.o" function (:arguments ("$(SRCDIR)test/minigzip.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3905 4028])
            ("example64.o" function (:arguments ("$(SRCDIR)test/example.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [4029 4174])
            ("minigzip64.o" function (:arguments ("$(SRCDIR)test/minigzip.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [4175 4323])
            ("adler32.o" function (:arguments ("$(SRCDIR)adler32.c")) nil [4325 4408])
            ("crc32.o" function (:arguments ("$(SRCDIR)crc32.c")) nil [4409 4486])
            ("deflate.o" function (:arguments ("$(SRCDIR)deflate.c")) nil [4487 4570])
            ("infback.o" function (:arguments ("$(SRCDIR)infback.c")) nil [4571 4654])
            ("inffast.o" function (:arguments ("$(SRCDIR)inffast.c")) nil [4655 4738])
            ("inflate.o" function (:arguments ("$(SRCDIR)inflate.c")) nil [4739 4822])
            ("inftrees.o" function (:arguments ("$(SRCDIR)inftrees.c")) nil [4823 4909])
            ("trees.o" function (:arguments ("$(SRCDIR)trees.c")) nil [4910 4987])
            ("zutil.o" function (:arguments ("$(SRCDIR)zutil.c")) nil [4988 5065])
            ("compress.o" function (:arguments ("$(SRCDIR)compress.c")) nil [5066 5152])
            ("uncompr.o" function (:arguments ("$(SRCDIR)uncompr.c")) nil [5153 5236])
            ("gzclose.o" function (:arguments ("$(SRCDIR)gzclose.c")) nil [5237 5320])
            ("gzlib.o" function (:arguments ("$(SRCDIR)gzlib.c")) nil [5321 5398])
            ("gzread.o" function (:arguments ("$(SRCDIR)gzread.c")) nil [5399 5479])
            ("gzwrite.o" function (:arguments ("$(SRCDIR)gzwrite.c")) nil [5480 5563])
            ("adler32.lo" function (:arguments ("$(SRCDIR)adler32.c")) nil [5565 5733])
            ("crc32.lo" function (:arguments ("$(SRCDIR)crc32.c")) nil [5734 5892])
            ("deflate.lo" function (:arguments ("$(SRCDIR)deflate.c")) nil [5893 6061])
            ("infback.lo" function (:arguments ("$(SRCDIR)infback.c")) nil [6062 6230])
            ("inffast.lo" function (:arguments ("$(SRCDIR)inffast.c")) nil [6231 6399])
            ("inflate.lo" function (:arguments ("$(SRCDIR)inflate.c")) nil [6400 6568])
            ("inftrees.lo" function (:arguments ("$(SRCDIR)inftrees.c")) nil [6569 6742])
            ("trees.lo" function (:arguments ("$(SRCDIR)trees.c")) nil [6743 6901])
            ("zutil.lo" function (:arguments ("$(SRCDIR)zutil.c")) nil [6902 7060])
            ("compress.lo" function (:arguments ("$(SRCDIR)compress.c")) nil [7061 7234])
            ("uncompr.lo" function (:arguments ("$(SRCDIR)uncompr.c")) nil [7235 7403])
            ("gzclose.lo" function (:arguments ("$(SRCDIR)gzclose.c")) nil [7404 7572])
            ("gzlib.lo" function (:arguments ("$(SRCDIR)gzlib.c")) nil [7573 7731])
            ("gzread.lo" function (:arguments ("$(SRCDIR)gzread.c")) nil [7732 7895])
            ("gzwrite.lo" function (:arguments ("$(SRCDIR)gzwrite.c")) nil [7896 8064])
            ("$(SHAREDLIBV)" function (:arguments ("$(PIC_OBJS)" "libz.a")) nil [8066 8271])
            ("placebo" function (:arguments ("$(PIC_OBJS)" "libz.a")) nil [8066 8271])
            ("example" function (:arguments ("example.o" "$(STATICLIB)")) nil [8272 8359])
            ("minigzip" function (:arguments ("minigzip.o" "$(STATICLIB)")) nil [8360 8450])
            ("examplesh" function (:arguments ("example.o" "$(SHAREDLIBV)")) nil [8451 8543])
            ("minigzipsh" function (:arguments ("minigzip.o" "$(SHAREDLIBV)")) nil [8544 8639])
            ("example64" function (:arguments ("example64.o" "$(STATICLIB)")) nil [8640 8733])
            ("minigzip64" function (:arguments ("minigzip64.o" "$(STATICLIB)")) nil [8734 8830])
            ("install-libs" function (:arguments ("$(LIBS)")) nil [8831 10282])
            ("install" function (:arguments ("install-libs")) nil [10377 10679])
            ("uninstall" function nil nil [10680 10987])
            ("docs" function (:arguments ("zlib.3.pdf")) nil [10988 11005])
            ("zlib.3.pdf" function (:arguments ("$(SRCDIR)zlib.3")) nil [11006 11090])
            ("zconf.h.cmakein" function (:arguments ("$(SRCDIR)zconf.h.in")) nil [11091 11363])
            ("zconf" function (:arguments ("$(SRCDIR)zconf.h.in")) nil [11364 11426])
            ("mostlyclean" function (:arguments ("clean")) nil [11427 11446])
            ("clean" function nil nil [11446 11792])
            ("maintainer-clean" function (:arguments ("distclean")) nil [11793 11821])
            ("distclean" function (:arguments ("clean" "zconf" "zconf.h.cmakein" "docs")) nil [11821 12274])
            ("tags" function nil nil [12275 12304])
            ("zutil.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12305 12365])
            ("adler32.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12305 12365])
            ("gzlib.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [12365 12445])
            ("gzclose.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [12365 12445])
            ("example.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [12445 12512])
            ("compress.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [12445 12512])
            ("crc32.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)crc32.h")) nil [12512 12579])
            ("deflate.o" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12579 12650])
            ("inflate.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [12650 12790])
            ("infback.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [12650 12790])
            ("inffast.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h")) nil [12790 12900])
            ("inftrees.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h")) nil [12900 12973])
            ("trees.o" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)trees.h")) nil [12973 13059])
            ("zutil.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13060 13122])
            ("adler32.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13060 13122])
            ("gzlib.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [13122 13206])
            ("gzclose.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [13122 13206])
            ("example.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [13206 13277])
            ("compress.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [13206 13277])
            ("crc32.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)crc32.h")) nil [13277 13345])
            ("deflate.lo" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13345 13417])
            ("inflate.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [13417 13559])
            ("infback.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [13417 13559])
            ("inffast.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h")) nil [13559 13670])
            ("inftrees.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h")) nil [13670 13744]))          
      :file "Makefile"
      :pointmax 13831
      :fsize 13830
      :lastmodtime '(23017 26676 963299 880000)
      :unmatched-syntax '((thing 13744 . 13744) (thing 13744 . 13752) (thing 13752 . 13753) (thing 13754 . 13755) (thing 13755 . 13763) (thing 13763 . 13772) (thing 13773 . 13774) (thing 13774 . 13782) (thing 13782 . 13789) (thing 13790 . 13791) (thing 13791 . 13799) (thing 13799 . 13805) (thing 13806 . 13813) (thing 13814 . 13815) (thing 13815 . 13823) (thing 13823 . 13830))))
  :file "!ssd!sdd!git!swift!swift_1_7!swift_client!swift!swift!libs!z!lib!zlib-1.2.11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
