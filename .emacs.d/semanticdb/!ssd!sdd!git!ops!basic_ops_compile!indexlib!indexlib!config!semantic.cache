;; Object config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "config/"
  :tables
  (list
    (semanticdb-table "index_schema.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("indexlib/config/index_schema.h" include nil nil [1 42])
            ("sstream" include (:system-flag t) nil [43 61])
            ("indexlib/common/exception.h" include nil nil [62 100])
            ("autil/legacy/any.h" include nil nil [101 130])
            ("autil/legacy/jsonizable.h" include nil nil [131 167])
            ("autil/legacy/json.h" include nil nil [168 198])
            ("indexlib/config/configurator_define.h" include nil nil [199 247])
            ("indexlib/config/truncate_index_name_mapper.h" include nil nil [248 303])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [305 325])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [326 356])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [357 393])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [394 419])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [438 445]))                  
                :type "int")
                nil [421 446])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [467 474]))                  
                :type "int")
                nil [448 475])
            ("IE_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [490 497])
                    ("" variable (:type ("IndexSchema" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [498 510]))                  
                :type "int")
                nil [477 511])
            ("GetIndexConfig" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("indexName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [556 580]))                  
                :type ("IndexConfigPtr" type (:type "class") nil nil))
                nil [513 1000])
            ("Check" function
               (:parent "IndexSchema"
                :type "void")
                nil [1002 1251])
            ("CheckIndexNameNotSummary" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1296 1330]))                  
                :type "void")
                nil [1253 1601])
            ("CheckTireIndex" function
               (:parent "IndexSchema"
                :type "void")
                nil [1603 1917])
            ("GetIndexConfig" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("id" variable (:type ("indexid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1961 1974]))                  
                :type ("IndexConfigPtr" type (:type "class") nil nil))
                nil [1918 2415])
            ("AddIndexConfig" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2450 2484]))                  
                :type "void")
                nil [2417 2767])
            ("AddIndexConfig" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2802 2836])
                    ("nameMap" variable
                       (:reference 1
                        :type ("NameMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2871 2888])
                    ("indexConfigs" variable
                       (:reference 1
                        :type ("IndexConfigVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2922 2954]))                  
                :type "void")
                nil [2769 4749])
            ("Jsonize" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4777 4822]))                  
                :type "void")
                nil [4751 5725])
            ("AssertEqual" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5757 5782]))                  
                :type "void")
                nil [5727 6192])
            ("AssertCompatible" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6229 6254]))                  
                :type "void")
                nil [6194 6679])
            ("IsInIndex" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6709 6727]))                  
                :type "bool")
                nil [6681 6860])
            ("SetExistFlag" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6893 6927]))                  
                :type "void")
                nil [6862 7824])
            ("SetExistFlag" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7857 7875])
                    ("indexId" variable (:type ("indexid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7876 7894]))                  
                :type "void")
                nil [7826 8043])
            ("LoadTruncateTermInfo" function
               (:parent "IndexSchema"
                :arguments 
                  ( ("metaDir" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8084 8106]))                  
                :type "void")
                nil [8045 8578])
            ("GetIndexIdList" function
               (:parent "IndexSchema"
                :constant-flag t
                :arguments 
                  ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8638 8656]))                  
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("indexid_t" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [8580 8869])
            ("GetPrimaryKeyIndexFieldName" function
               (:parent "IndexSchema"
                :type ("std::string" type (:type "class") nil nil))
                nil [8871 9068])
            ("HasPrimaryKeyAttribute" function
               (:parent "IndexSchema"
                :type "bool")
                nil [9070 9250])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9270 9277]))                  
                :type "int")
                nil [9253 9278]))          
      :file "index_schema.cpp"
      :pointmax 9280
      :fsize 9279
      :lastmodtime '(23348 24529 896793 55000)
      :unmatched-syntax nil)
    (semanticdb-table "index_schema.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__INDEXLIB_INDEX_SCHEMA_H" variable (:constant-flag t) nil [43 68])
            ("indexlib/common/common.h" include nil nil [70 105])
            ("indexlib/indexlib.h" include nil nil [106 136])
            ("indexlib/common/log.h" include nil nil [137 169])
            ("tr1/memory" include (:system-flag t) nil [170 191])
            ("indexlib/config/index_config.h" include nil nil [192 233])
            ("indexlib/config/single_field_index_config.h" include nil nil [234 288])
            ("indexlib/config/package_index_config.h" include nil nil [289 338])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [359 366]))                  
                :type "int")
                nil [340 367])
            ("IndexSchema" type
               (:superclasses 
                  ( ("autil::legacy::Jsonizable" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("private" label nil (reparse-symbol classsubparts) [424 432])
                    ("IndexConfigVector" type
                       (:typedef ("std::vector" type
                             (:template-specifier 
                                ( ("IndexConfigPtr" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [437 491])
                    ("NameMap" type
                       (:typedef ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("indexid_t" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [496 545])
                    ("FlagVector" type
                       (:typedef ("std::vector" type
                             (:template-specifier 
                                ( ("std::vector" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [550 606])
                    ("public" label nil (reparse-symbol classsubparts) [608 615])
                    ("Iterator" type
                       (:typedef ("IndexConfigVector::const_iterator" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [620 671])
                    ("public" label nil (reparse-symbol classsubparts) [673 680])
                    ("IndexSchema" function
                       (:constructor-flag t
                        :type ("IndexSchema" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [685 751])
                    ("IndexSchema" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [757 774])
                    ("public" label nil (reparse-symbol classsubparts) [776 783])
                    ("AddIndexConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [808 840]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [788 841])
                    ("GetIndexConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [877 906]))                          
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [847 913])
                    ("GetIndexConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable (:type ("indexid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [948 961]))                          
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [918 968])
                    ("GetIndexIdList" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1019 1037]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("indexid_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [974 1044])
                    ("GetIndexCount" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1049 1145])
                    ("Begin" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1151 1205])
                    ("End" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1210 1260])
                    ("IsInIndex" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1281 1299]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1266 1306])
                    ("Jsonize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("json" variable
                               (:reference 1
                                :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1324 1369]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1311 1370])
                    ("AssertEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1392 1417]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1375 1424])
                    ("AssertCompatible" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1451 1476]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1429 1483])
                    ("HasPrimaryKeyIndex" function (:type "bool") (reparse-symbol classsubparts) [1522 1594])
                    ("HasPrimaryKeyAttribute" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1599 1635])
                    ("GetPrimaryKeyIndexType" function (:type ("IndexType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1640 1735])
                    ("GetPrimaryKeyIndexFieldName" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1740 1788])
                    ("GetPrimaryKeyIndexFieldId" function (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1793 1871])
                    ("GetPrimaryKeyIndexConfig" function
                       (:constant-flag t
                        :type ("SingleFieldIndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1876 1980])
                    ("LoadTruncateTermInfo" function
                       (:prototype-flag t
                        :arguments 
                          ( ("metaDir" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2043 2070]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2017 2071])
                    ("Check" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2076 2089])
                    ("private" label nil (reparse-symbol classsubparts) [2095 2103])
                    ("AddIndexConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2128 2162])
                            ("nameMap" variable
                               (:reference 1
                                :type ("NameMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2188 2205])
                            ("intoxicants" variable
                               (:reference 1
                                :type ("IndexConfigVector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2230 2261]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2108 2262])
                    ("SetExistFlag" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2286 2320]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2268 2321])
                    ("SetExistFlag" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2344 2362])
                            ("indexId" variable (:type ("indexid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2363 2381]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2326 2382])
                    ("CheckTireIndex" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2387 2409])
                    ("CheckIndexNameNotSummary" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2444 2478]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2414 2485])
                    ("private" label nil (reparse-symbol classsubparts) [2487 2495])
                    ("mIndexConfigs" variable (:type ("IndexConfigVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2500 2532])
                    ("mVirtualIndexConfigs" variable (:type ("IndexConfigVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2537 2576])
                    ("mIndexName2IdMap" variable (:type ("NameMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2581 2606])
                    ("mVirtualIndexname2IdMap" variable (:type ("NameMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2611 2643])
                    ("mFlagVector" variable (:type ("FlagVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2669 2692])
                    ("mPrimaryKeyIndexConfig" variable (:type ("SingleFieldIndexConfigPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2725 2774])
                    ("mPrimaryKeyIndexId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2779 2808])
                    ("private" label nil (reparse-symbol classsubparts) [2810 2818])
                    ("IE_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [2823 2840]))                  
                :type "class")
                nil [369 2843])
            ("IndexSchemaPtr" type
               (:typedef ("std::tr1::shared_ptr" type
                     (:template-specifier 
                        ( ("IndexSchema" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [2845 2902])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2995 3002]))                  
                :type "int")
                nil [2978 3003]))          
      :file "index_schema.h"
      :pointmax 3040
      :fsize 3039
      :lastmodtime '(23348 24529 896793 55000)
      :unmatched-syntax nil
      :lexical-table 
        '(("__INDEXLIB_INDEX_SCHEMA_H")
          )
)
    (semanticdb-table "kkv_index_config.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("indexlib/config/kkv_index_config.h" include nil nil [1 46])
            ("indexlib/config/configurator_define.h" include nil nil [47 95])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [97 117])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [138 145]))                  
                :type "int")
                nil [119 146])
            ("IE_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [160 167])
                    ("" variable (:type ("KKVIndexConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [168 183]))                  
                :type "int")
                nil [147 184])
            ("KKVIndexFieldInfo::INVALID_COUNT_LIMITS" variable
               (:constant-flag t
                :default-value "numeric_limits<uint32_t>::max()"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [186 275])
            ("KKVIndexFieldInfo::INVALID_SKIPLIST_THRESHOLD" variable
               (:constant-flag t
                :default-value "numeric_limits<uint32_t>::max()"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [276 371])
            ("KKVIndexFieldInfo::DEFAULT_PROTECTION_THRESHOLD" variable
               (:constant-flag t
                :default-value "numeric_limits<uint32_t>::max()"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [372 469])
            ("KKVIndexConfig::DEFAULT_SKEY_TS_TRUNC_FIELD_NAME" variable
               (:constant-flag t
                :default-value "\"$TIME_STAMP\""
                :type ("string" type (:type "class") nil nil))
                nil [470 548])
            ("KKVIndexFieldInfo" function
               (:constructor-flag t
                :parent "KKVIndexFieldInfo"
                :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                nil [550 833])
            ("Jsonize" function
               (:parent "KKVIndexFieldInfo"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [867 912]))                  
                :type "void")
                nil [835 2752])
            ("AssertEqual" function
               (:parent "KKVIndexFieldInfo"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2790 2821]))                  
                :type "void")
                nil [2754 3588])
            ("KKVKeyTypeToString" function
               (:parent "KKVIndexFieldInfo"
                :arguments 
                  ( ("keyType" variable (:type ("KKVKeyType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3639 3658]))                  
                :type ("string" type (:type "class") nil nil))
                nil [3594 3843])
            ("StringToKKVKeyType" function
               (:parent "KKVIndexFieldInfo"
                :arguments 
                  ( ("str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3894 3912]))                  
                :type ("KKVKeyType" type (:type "class") nil nil))
                nil [3845 4086])
            ("CreateIterator" function
               (:parent "KKVIndexConfig"
                :type ("IndexConfig::Iterator" type (:type "class") nil nil))
                nil [4088 4340])
            ("IsInIndex" function
               (:parent "KKVIndexConfig"
                :arguments 
                  ( ("fieldId" variable (:type ("fieldid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4373 4391]))                  
                :type "bool")
                nil [4342 4560])
            ("AssertEqual" function
               (:parent "KKVIndexConfig"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfig" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4595 4620]))                  
                :type "void")
                nil [4562 5063])
            ("AssertCompatible" function
               (:parent "KKVIndexConfig"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfig" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5103 5128]))                  
                :type "void")
                nil [5065 5162])
            ("Clone" function
               (:pointer 1
                :parent "KKVIndexConfig"
                :type ("IndexConfig" type (:type "class") nil nil))
                nil [5164 5248])
            ("Check" function
               (:parent "KKVIndexConfig"
                :type "void")
                nil [5250 6839])
            ("Jsonize" function
               (:parent "KKVIndexConfig"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6870 6915]))                  
                :type "void")
                nil [6841 8061])
            ("InitDefaultSortParams" function
               (:parent "KKVIndexConfig"
                :type "void")
                nil [8063 8467])
            ("InitDefaultSkipListThreshold" function
               (:parent "KKVIndexConfig"
                :type "void")
                nil [8469 8697])
            ("DisableUnsupportParam" function
               (:parent "KKVIndexConfig"
                :type "void")
                nil [8699 9067])
            ("CheckSortParams" function
               (:parent "KKVIndexConfig"
                :type "void")
                nil [9069 10857])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10876 10883]))                  
                :type "int")
                nil [10859 10884]))          
      :file "kkv_index_config.cpp"
      :pointmax 10886
      :fsize 10885
      :lastmodtime '(23348 24529 896793 55000)
      :unmatched-syntax nil)
    (semanticdb-table "kkv_index_config.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__INDEXLIB_KKV_INDEX_CONFIG_H" variable (:constant-flag t) nil [47 76])
            ("tr1/memory" include (:system-flag t) nil [78 99])
            ("indexlib/indexlib.h" include nil nil [100 130])
            ("indexlib/common/log.h" include nil nil [131 163])
            ("indexlib/common/common.h" include nil nil [164 199])
            ("indexlib/config/sort_param.h" include nil nil [200 239])
            ("indexlib/config/kv_index_config.h" include nil nil [240 284])
            ("indexlib/config/kkv_index_preference.h" include nil nil [285 334])
            ("indexlib/config/pack_attribute_config.h" include nil nil [335 385])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [406 413]))                  
                :type "int")
                nil [387 414])
            ("KKVKeyType" type
               (:members 
                  ( ("kkv_prefix" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [438 449])
                    ("kkv_suffix" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [454 465]))                  
                :type "enum")
                nil [416 468])
            ("KKVIndexFieldInfo" type
               (:superclasses 
                  ( ("autil::legacy::Jsonizable" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [531 538])
                    ("KKVIndexFieldInfo" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [543 563])
                    ("KKVIndexFieldInfo" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [568 591])
                    ("public" label nil (reparse-symbol classsubparts) [592 599])
                    ("override" variable (:type "int") (reparse-symbol classsubparts) [663 672])
                    ("AssertEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [694 725]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [677 732])
                    ("NeedTruncate" function (:type "bool") (reparse-symbol classsubparts) [737 810])
                    ("private" label nil (reparse-symbol classsubparts) [812 820])
                    ("KKVKeyTypeToString" function
                       (:prototype-flag t
                        :arguments 
                          ( ("keyType" variable (:type ("KKVKeyType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [856 875]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [825 876])
                    ("StringToKKVKeyType" function
                       (:prototype-flag t
                        :arguments 
                          ( ("str" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [911 934]))                          
                        :type ("KKVKeyType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [881 935])
                    ("public" label nil (reparse-symbol classsubparts) [941 948])
                    ("fieldName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [953 975])
                    ("keyType" variable (:type ("KKVKeyType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [980 999])
                    ("countLimits" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1004 1025])
                    ("skipListThreshold" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1030 1057])
                    ("protectionThreshold" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1062 1091])
                    ("sortParams" variable (:type ("SortParams" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1096 1118])
                    ("enableStoreOptimize" variable (:type "bool") (reparse-symbol classsubparts) [1123 1148])
                    ("enableKeepSortSequence" variable (:type "bool") (reparse-symbol classsubparts) [1153 1181])
                    ("public" label nil (reparse-symbol classsubparts) [1187 1194])
                    ("INVALID_COUNT_LIMITS" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1199 1242])
                    ("INVALID_SKIPLIST_THRESHOLD" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1247 1296])
                    ("DEFAULT_PROTECTION_THRESHOLD" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1301 1352]))                  
                :type "class")
                nil [470 1355])
            ("KKVIndexConfig" type
               (:superclasses 
                  ( ("KVIndexConfig" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1403 1410])
                    ("KKVIndexConfig" function
                       (:constructor-flag t
                        :arguments 
                          ( ("indexName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1430 1459])
                            ("indexType" variable (:type ("IndexType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1460 1480]))                          
                        :type ("KKVIndexConfig" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1415 1565])
                    ("KKVIndexConfig" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1570 1591])
                    ("public" label nil (reparse-symbol classsubparts) [1592 1599])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1701 1716])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1756 1771])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1819 1834])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1887 1902])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1928 1943])
                    ("override" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1961 1976])
                    ("override" variable (:type "int") (reparse-symbol classsubparts) [2040 2049])
                    ("public" label nil (reparse-symbol classsubparts) [2050 2057])
                    ("SetPrefixFieldConfig" function
                       (:arguments 
                          ( ("fieldConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("FieldConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2088 2122]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2062 2193])
                    ("SetSuffixFieldConfig" function
                       (:arguments 
                          ( ("fieldConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("FieldConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2224 2258]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2198 2300])
                    ("GetPrefixFieldName" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2305 2382])
                    ("GetSuffixFieldName" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2387 2464])
                    ("SetPrefixFieldInfo" function
                       (:arguments 
                          ( ("fieldInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2493 2528]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2469 2561])
                    ("SetSuffixFieldInfo" function
                       (:arguments 
                          ( ("fieldInfo" variable
                               (:reference 1
                                :constant-flag t
                                :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2590 2625]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2566 2658])
                    ("SetIndexPreference" function
                       (:arguments 
                          ( ("indexPreference" variable
                               (:reference 1
                                :constant-flag t
                                :type ("KKVIndexPreference" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2688 2730]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2664 2774])
                    ("GetPrefixFieldInfo" function
                       (:constant-flag t
                        :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2780 2855])
                    ("GetSuffixFieldInfo" function
                       (:constant-flag t
                        :type ("KKVIndexFieldInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2860 2935])
                    ("GetPrefixFieldConfig" function
                       (:constant-flag t
                        :type ("FieldConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2941 3022])
                    ("GetSuffixFieldConfig" function
                       (:constant-flag t
                        :type ("FieldConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3027 3108])
                    ("GetIndexPreference" function
                       (:constant-flag t
                        :type ("KKVIndexPreference" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3114 3195])
                    ("GetIndexPreference" function (:type ("KKVIndexPreference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3200 3269])
                    ("NeedSuffixKeyTruncate" function (:type "bool") (reparse-symbol classsubparts) [3275 3348])
                    ("GetSuffixKeyTruncateLimits" function (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3353 3432])
                    ("GetSuffixKeySkipListThreshold" function (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3437 3525])
                    ("GetSuffixKeyProtectionThreshold" function (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3530 3622])
                    ("GetSuffixKeyTruncateParams" function
                       (:constant-flag t
                        :type ("SortParams" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3627 3714])
                    ("EnableSuffixKeyKeepSortSequence" function (:type "bool") (reparse-symbol classsubparts) [3720 3811])
                    ("SetSuffixKeyTruncateLimits" function
                       (:arguments 
                          ( ("countLimits" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3848 3869]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3816 3916])
                    ("SetSuffixKeyProtectionThreshold" function
                       (:arguments 
                          ( ("countLimits" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3958 3979]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3921 4034])
                    ("SetSuffixKeySkipListThreshold" function
                       (:arguments 
                          ( ("countLimits" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4074 4095]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4039 4148])
                    ("SetOptimizedStoreSKey" function
                       (:arguments 
                          ( ("optStoreSKey" variable (:type "bool") (reparse-symbol arg-sub-list) [4182 4200]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4155 4234])
                    ("OptimizedStoreSKey" function (:type "bool") (reparse-symbol classsubparts) [4239 4296])
                    ("GetPrefixHashFunctionType" function (:type ("HashFunctionType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4302 4456])
                    ("GetSuffixHashFunctionType" function (:type ("HashFunctionType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4461 4605])
                    ("private" label nil (reparse-symbol classsubparts) [4607 4615])
                    ("InitDefaultSortParams" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4620 4649])
                    ("InitDefaultSkipListThreshold" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4654 4690])
                    ("DisableUnsupportParam" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4695 4724])
                    ("CheckSortParams" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4729 4758])
                    ("private" label nil (reparse-symbol classsubparts) [4764 4772])
                    ("mPrefixFieldConfig" variable (:type ("FieldConfigPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4777 4811])
                    ("mSuffixFieldConfig" variable (:type ("FieldConfigPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4816 4850])
                    ("mPrefixInfo" variable (:type ("KKVIndexFieldInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4855 4885])
                    ("mSuffixInfo" variable (:type ("KKVIndexFieldInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4890 4920])
                    ("mIndexPreference" variable (:type ("KKVIndexPreference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4925 4961])
                    ("mOptStoreSKey" variable (:type "bool") (reparse-symbol classsubparts) [4966 4985])
                    ("public" label nil (reparse-symbol classsubparts) [4991 4998])
                    ("DEFAULT_SKEY_SKIPLIST_THRESHOLD" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "100"
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5003 5063])
                    ("DEFAULT_SKEY_TS_TRUNC_FIELD_NAME" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5068 5126])
                    ("private" label nil (reparse-symbol classsubparts) [5132 5140])
                    ("IE_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [5145 5162]))                  
                :type "class")
                nil [1357 5165])
            ("DEFINE_SHARED_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("KKVIndexConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5185 5200]))                  
                :type "int")
                nil [5167 5201])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5220 5227]))                  
                :type "int")
                nil [5203 5228]))          
      :file "kkv_index_config.h"
      :pointmax 5269
      :fsize 5268
      :lastmodtime '(23348 24529 897793 55000)
      :unmatched-syntax '((thing 1993 . 2039) (thing 1986 . 1993) (thing 1981 . 1985) (thing 1958 . 1960) (thing 1953 . 1958) (thing 1948 . 1952) (thing 1925 . 1927) (thing 1920 . 1925) (thing 1918 . 1919) (thing 1907 . 1918) (thing 1860 . 1886) (thing 1844 . 1860) (thing 1839 . 1843) (thing 1792 . 1818) (thing 1781 . 1792) (thing 1776 . 1780) (thing 1736 . 1755) (thing 1727 . 1736) (thing 1722 . 1726) (thing 1698 . 1700) (thing 1684 . 1698) (thing 1675 . 1683) (thing 1674 . 1675) (thing 1673 . 1674) (thing 1662 . 1673) (thing 1644 . 1657) (thing 1635 . 1643) (thing 1629 . 1634) (thing 1626 . 1628) (thing 1613 . 1626) (thing 1604 . 1612) (thing 616 . 662) (thing 609 . 616) (thing 604 . 608))
      :lexical-table 
        '(("__INDEXLIB_KKV_INDEX_CONFIG_H")
          )
)
    (semanticdb-table "index_partition_schema.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sstream" include (:system-flag t) nil [1 19])
            ("assert.h" include (:system-flag t) nil [20 39])
            ("indexlib/config/index_partition_schema.h" include nil nil [40 91])
            ("indexlib/config/configurator_define.h" include nil nil [92 140])
            ("indexlib/common/exception.h" include nil nil [141 179])
            ("indexlib/config/schema_configurator.h" include nil nil [180 228])
            ("indexlib/config/sort_param.h" include nil nil [229 268])
            ("indexlib/config/truncate_option_config.h" include nil nil [269 320])
            ("indexlib/config/configurator_define.h" include nil nil [321 369])
            ("indexlib/config/kv_index_config.h" include nil nil [370 414])
            ("indexlib/config/field_config_loader.h" include nil nil [415 463])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [465 485])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [486 516])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [517 553])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [554 579])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [598 605]))                  
                :type "int")
                nil [581 606])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [624 630]))                  
                :type "int")
                nil [607 631])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [652 659]))                  
                :type "int")
                nil [633 660])
            ("IE_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [674 681])
                    ("" variable (:type ("IndexPartitionSchema" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [682 703]))                  
                :type "int")
                nil [661 704])
            ("IndexPartitionSchema" function
               (:constructor-flag t
                :parent "IndexPartitionSchema"
                :arguments 
                  ( ("schemaName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [749 774]))                  
                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                nil [706 910])
            ("IndexPartitionSchema" function
               (:destructor-flag t
                :parent "IndexPartitionSchema"
                :type "void")
                nil [912 961])
            ("AddDictionaryConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("dictName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1034 1057])
                    ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1058 1080]))                  
                :type ("DictionaryConfigPtr" type (:type "class") nil nil))
                nil [963 1330])
            ("AddFieldConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1384 1408])
                    ("fieldType" variable (:type ("FieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1417 1437])
                    ("multiValue" variable (:type "bool") (reparse-symbol arg-sub-list) [1438 1454])
                    ("isVirtual" variable (:type "bool") (reparse-symbol arg-sub-list) [1455 1470])
                    ("isBinary" variable (:type "bool") (reparse-symbol arg-sub-list) [1471 1485]))                  
                :type ("FieldConfigPtr" type (:type "class") nil nil))
                nil [1332 2124])
            ("AddEnumFieldConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2186 2210])
                    ("fieldType" variable (:type ("FieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2219 2239])
                    ("validValues" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2240 2268])
                    ("multiValue" variable (:type "bool") (reparse-symbol arg-sub-list) [2269 2285]))                  
                :type ("EnumFieldConfigPtr" type (:type "class") nil nil))
                nil [2126 2737])
            ("Jsonize" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2774 2819]))                  
                :type "void")
                nil [2739 5563])
            ("AssertEqual" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5604 5638]))                  
                :type "void")
                nil [5565 7573])
            ("AssertCompatible" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7619 7653]))                  
                :type "void")
                nil [7575 7965])
            ("DoAssertCompatible" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8013 8047]))                  
                :type "void")
                nil [7967 9846])
            ("CheckIndexNameNotSummary" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9900 9934]))                  
                :type "void")
                nil [9848 10205])
            ("CheckSubSchema" function
               (:parent "IndexPartitionSchema"
                :type "void")
                nil [10208 13221])
            ("CheckFieldSchema" function
               (:parent "IndexPartitionSchema"
                :type "void")
                nil [13223 13786])
            ("Check" function
               (:parent "IndexPartitionSchema"
                :type "void")
                nil [13788 14602])
            ("Clone" function
               (:pointer 1
                :parent "IndexPartitionSchema"
                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                nil [14604 14980])
            ("CloneWithDefaultRegion" function
               (:pointer 1
                :parent "IndexPartitionSchema"
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15049 15069]))                  
                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                nil [14982 15464])
            ("CloneVirtualAttributes" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15525 15559]))                  
                :type "void")
                nil [15466 16137])
            ("AddVirtualAttributeConfigs" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("virtualAttrConfigs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AttributeConfigVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16202 16250])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16251 16265]))                  
                :type "bool")
                nil [16139 16403])
            ("SetDefaultTTL" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("defaultTTL" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16446 16465])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16466 16480]))                  
                :type "void")
                nil [16405 16605])
            ("GetDefaultTTL" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16651 16665]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [16607 16793])
            ("SetEnableTTL" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("enableTTL" variable (:type "bool") (reparse-symbol arg-sub-list) [16835 16850])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16851 16865]))                  
                :type "void")
                nil [16795 16988])
            ("TTLEnabled" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17028 17042]))                  
                :type "bool")
                nil [16990 17152])
            ("IsUsefulField" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17195 17219]))                  
                :type "bool")
                nil [17154 17487])
            ("SupportAutoUpdate" function
               (:parent "IndexPartitionSchema"
                :type "bool")
                nil [17489 17915])
            ("GetTableType" function
               (:parent "IndexPartitionSchema"
                :type ("TableType" type (:type "class") nil nil))
                nil [17917 17996])
            ("TableType2Str" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("tableType" variable (:type ("TableType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18041 18061]))                  
                :type ("string" type (:type "class") nil nil))
                nil [17998 18510])
            ("SetTableType" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18552 18570]))                  
                :type "void")
                nil [18512 19482])
            ("GetValueFromUserDefinedParam" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19549 19567])
                    ("value" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19568 19582]))                  
                :type "bool")
                nil [19484 20030])
            ("AddRegionSchema" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("regionSchema" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RegionSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20075 20111]))                  
                :type "void")
                nil [20032 20597])
            ("GetRegionId" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("regionName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20644 20669]))                  
                :type ("regionid_t" type (:type "class") nil nil))
                nil [20599 20855])
            ("GetRegionSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20918 20943]))                  
                :type ("RegionSchemaPtr" type (:type "class") nil nil))
                nil [20857 21148])
            ("GetRegionSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21211 21231]))                  
                :type ("RegionSchemaPtr" type (:type "class") nil nil))
                nil [21150 21399])
            ("GetFieldSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21460 21480]))                  
                :type ("FieldSchemaPtr" type (:type "class") nil nil))
                nil [21401 21641])
            ("GetIndexSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21702 21722]))                  
                :type ("IndexSchemaPtr" type (:type "class") nil nil))
                nil [21643 21909])
            ("GetAttributeSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21982 22002]))                  
                :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                nil [21915 22197])
            ("GetVirtualAttributeSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22273 22293]))                  
                :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                nil [22199 22495])
            ("GetSummarySchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22560 22580]))                  
                :type ("SummarySchemaPtr" type (:type "class") nil nil))
                nil [22497 22771])
            ("GetTruncateProfileSchema" function
               (:parent "IndexPartitionSchema"
                :constant-flag t
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22861 22881]))                  
                :type ("TruncateProfileSchemaPtr" type (:type "class") nil nil))
                nil [22773 23088])
            ("NeedStoreSummary" function
               (:parent "IndexPartitionSchema"
                :type "bool")
                nil [23090 23338])
            ("ADD_ITEM_IN_REGION_SCHEMA" variable (:constant-flag t) nil [23348 23373])
            ("AddIndexConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("indexConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("IndexConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24014 24048])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24049 24063]))                  
                :type "void")
                nil [23972 24130])
            ("AddAttributeConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24178 24202])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24203 24217]))                  
                :type "void")
                nil [24132 24286])
            ("AddVirtualAttributeConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("virtualAttrConfig" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AttributeConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24350 24394])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24395 24409]))                  
                :type "void")
                nil [24288 24493])
            ("SetTruncateProfileSchema" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("truncateProfileSchema" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TruncateProfileSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24556 24610])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24611 24625]))                  
                :type "void")
                nil [24495 24712])
            ("AddSummaryConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [24767 24791])
                    ("summaryGroupId" variable (:type ("summarygroupid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24792 24824])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24825 24839]))                  
                :type "void")
                nil [24714 25116])
            ("AddPackAttributeConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("attrName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25177 25200])
                    ("subAttrNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25201 25236])
                    ("compressTypeStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25245 25275])
                    ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25276 25290]))                  
                :type "void")
                nil [25118 25587])
            ("LoadValueConfig" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("id" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25632 25646]))                  
                :type "void")
                nil [25589 25763])
            ("ResetRegions" function
               (:parent "IndexPartitionSchema"
                :type "void")
                nil [25765 25863])
            ("LoadFieldSchema" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("any" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::legacy::Any" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25908 25938]))                  
                :type "void")
                nil [25865 25990])
            ("SetDefaultRegionId" function
               (:parent "IndexPartitionSchema"
                :arguments 
                  ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26038 26058]))                  
                :type "void")
                nil [25992 26367])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26386 26393]))                  
                :type "int")
                nil [26369 26394]))          
      :file "index_partition_schema.cpp"
      :pointmax 26395
      :fsize 26394
      :lastmodtime '(23348 24529 895793 54000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ADD_ITEM_IN_REGION_SCHEMA" (spp-arg-list ("Func" "funcParam" "id") 23373 . 23394) . 
              ((symbol "RegionSchemaPtr" 23401 . 23416) (symbol "region" 23417 . 23423) (punctuation "=" 23424 . 23425) (symbol "GetRegionSchema" 23426 . 23441) (semantic-list "(id)" 23441 . 23445) (punctuation ";" 23445 . 23446) (IF "if" 23458 . 23460) (semantic-list "(!region && id == DEFAULT_REGIONID)" 23461 . 23496) (semantic-list "{                                                  \\
        region.reset(new RegionSchema(this));          \\
        AddRegionSchema(region);                       \\
    }" 23515 . 23687) (IF "if" 23743 . 23745) (semantic-list "(region)" 23746 . 23754) (semantic-list "{                                                  \\
        region->Func(funcParam);                       \\
    }" 23800 . 23915)))
          )
)
    (semanticdb-table "index_partition_schema.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__INDEXLIB_INDEXPARTITIONSCHEMA_H" variable (:constant-flag t) nil [51 84])
            ("tr1/memory" include (:system-flag t) nil [86 107])
            ("indexlib/common/common.h" include nil nil [108 143])
            ("indexlib/indexlib.h" include nil nil [144 174])
            ("indexlib/common/log.h" include nil nil [175 207])
            ("indexlib/config/adaptive_dictionary_schema.h" include nil nil [208 263])
            ("indexlib/config/dictionary_schema.h" include nil nil [264 310])
            ("indexlib/config/region_schema.h" include nil nil [311 353])
            ("indexlib/config/kkv_index_config.h" include nil nil [354 399])
            ("indexlib/common/exception.h" include nil nil [400 438])
            ("autil/legacy/jsonizable.h" include nil nil [439 475])
            ("DECLARE_REFERENCE_CLASS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 509])
                    ("" variable (:type ("TruncateOptionConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [510 531]))                  
                :type "int")
                nil [478 532])
            ("DECLARE_REFERENCE_CLASS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [557 564])
                    ("" variable (:type ("IndexPartitionSchema" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [565 586]))                  
                :type "int")
                nil [533 587])
            ("DECLARE_REFERENCE_CLASS" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [612 618])
                    ("" variable (:type ("SchemaMaker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [619 631]))                  
                :type "int")
                nil [588 632])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [653 660]))                  
                :type "int")
                nil [634 661])
            ("IndexPartitionSchema" type
               (:superclasses 
                  ( ("autil::legacy::Jsonizable" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [727 734])
                    ("IndexPartitionSchema" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("schemaName" variable
                               (:reference 1
                                :constant-flag t
                                :default-value "\"noname\""
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [760 800]))                          
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [739 802])
                    ("IndexPartitionSchema" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [807 831])
                    ("public" label nil (reparse-symbol classsubparts) [833 840])
                    ("AddDictionaryConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("dictName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [885 913])
                            ("content" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [927 954]))                          
                        :type ("DictionaryConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [845 955])
                    ("AddFieldConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [991 1020])
                            ("fieldType" variable (:type ("FieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1056 1076])
                            ("multiValue" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1112 1135])
                            ("isVirtual" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1171 1193])
                            ("isBinary" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1229 1250]))                          
                        :type ("FieldConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [961 1252])
                    ("AddEnumFieldConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1300 1329])
                            ("fieldType" variable (:type ("FieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1343 1363])
                            ("validValues" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1364 1402])
                            ("multiValue" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1416 1439]))                          
                        :type ("EnumFieldConfigPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1262 1441])
                    ("AddRegionSchema" function
                       (:prototype-flag t
                        :arguments 
                          ( ("regionSchema" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RegionSchemaPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1468 1504]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1447 1505])
                    ("GetRegionCount" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1510 1572])
                    ("GetRegionSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1616 1646]))                          
                        :type ("RegionSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1577 1653])
                    ("GetRegionSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1697 1717]))                          
                        :type ("RegionSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1658 1724])
                    ("GetRegionId" function
                       (:prototype-flag t
                        :arguments 
                          ( ("regionName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1752 1782]))                          
                        :type ("regionid_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1729 1789])
                    ("SetSchemaName" function
                       (:arguments 
                          ( ("schemaName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1818 1848]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1799 1878])
                    ("GetSchemaName" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1883 1945])
                    ("GetTableType" function
                       (:prototype-flag t
                        :type ("TableType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1951 1982])
                    ("SetTableType" function
                       (:prototype-flag t
                        :arguments 
                          ( ("str" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2005 2028]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1987 2029])
                    ("TableType2Str" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("tableType" variable (:type ("TableType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2067 2087]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2034 2088])
                    ("GetUserDefinedParam" function
                       (:constant-flag t
                        :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2094 2191])
                    ("GetUserDefinedParam" function (:type ("autil::legacy::json::JsonMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2196 2281])
                    ("SetUserDefinedParam" function
                       (:arguments 
                          ( ("jsonMap" variable
                               (:reference 1
                                :constant-flag t
                                :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2311 2355]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2286 2392])
                    ("GetValueFromUserDefinedParam" function
                       (:prototype-flag t
                        :arguments 
                          ( ("key" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2431 2454])
                            ("value" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2455 2474]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2397 2481])
                    ("GetGlobalRegionIndexPreference" function
                       (:constant-flag t
                        :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2487 2606])
                    ("GetGlobalRegionIndexPreference" function (:type ("autil::legacy::json::JsonMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2611 2718])
                    ("SetGlobalRegionIndexPreference" function
                       (:arguments 
                          ( ("jsonMap" variable
                               (:reference 1
                                :constant-flag t
                                :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2759 2803]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2723 2851])
                    ("SetAdaptiveDictSchema" function
                       (:arguments 
                          ( ("adaptiveDictSchema" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AdaptiveDictionarySchemaPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2884 2938]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2857 2987])
                    ("GetAdaptiveDictSchema" function
                       (:constant-flag t
                        :type ("AdaptiveDictionarySchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2997 3091])
                    ("GetDictSchema" function
                       (:constant-flag t
                        :type ("DictionarySchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3096 3166])
                    ("GetFieldSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3213 3233]))                          
                        :type ("FieldSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3176 3240])
                    ("GetIndexSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3282 3302]))                          
                        :type ("IndexSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3245 3309])
                    ("GetAttributeSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3359 3379]))                          
                        :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3314 3386])
                    ("GetVirtualAttributeSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3443 3463]))                          
                        :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3391 3470])
                    ("GetSummarySchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3516 3536]))                          
                        :type ("SummarySchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3475 3543])
                    ("GetTruncateProfileSchema" function
                       (:prototype-flag t
                        :constant-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3605 3625]))                          
                        :type ("TruncateProfileSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3548 3632])
                    ("GetFieldSchema" function
                       (:constant-flag t
                        :type ("FieldSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3638 3730])
                    ("GetIndexSchema" function
                       (:constant-flag t
                        :type ("IndexSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3735 3828])
                    ("GetAttributeSchema" function
                       (:constant-flag t
                        :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3833 3938])
                    ("GetVirtualAttributeSchema" function
                       (:constant-flag t
                        :type ("AttributeSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3943 4062])
                    ("GetSummarySchema" function
                       (:constant-flag t
                        :type ("SummarySchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4067 4166])
                    ("GetTruncateProfileSchema" function
                       (:constant-flag t
                        :type ("TruncateProfileSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4171 4294])
                    ("GetSubIndexPartitionSchema" function
                       (:constant-flag t
                        :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4304 4410])
                    ("Jsonize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("json" variable
                               (:reference 1
                                :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4429 4474]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4416 4475])
                    ("AssertEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4497 4531]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4480 4538])
                    ("Clone" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4596 4632])
                    ("CloneWithDefaultRegion" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4705 4725]))                          
                        :type ("IndexPartitionSchema" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4660 4732])
                    ("CloneVirtualAttributes" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4770 4804]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4742 4805])
                    ("AddVirtualAttributeConfigs" function
                       (:prototype-flag t
                        :arguments 
                          ( ("virtualAttrConfigs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AttributeConfigVector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4842 4890])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4927 4959]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4810 4961])
                    ("AssertCompatible" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5327 5361]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5305 5368])
                    ("Check" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [5374 5393])
                    ("NeedStoreSummary" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [5561 5591])
                    ("IsUsefulField" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5616 5645]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5597 5652])
                    ("SetSubIndexPartitionSchema" function
                       (:arguments 
                          ( ("schema" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5690 5728]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5658 5771])
                    ("SetEnableTTL" function
                       (:prototype-flag t
                        :arguments 
                          ( ("enableTTL" variable (:type "bool") (reparse-symbol arg-sub-list) [5795 5810])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5811 5843]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5777 5845])
                    ("TTLEnabled" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5866 5898]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5850 5906])
                    ("SetDefaultTTL" function
                       (:prototype-flag t
                        :arguments 
                          ( ("defaultTTL" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5930 5949])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5950 5982]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5911 5984])
                    ("GetDefaultTTL" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6011 6043]))                          
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5989 6051])
                    ("SetAutoUpdatePreference" function
                       (:arguments 
                          ( ("autoUpdate" variable (:type "bool") (reparse-symbol arg-sub-list) [6086 6102]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6057 6146])
                    ("GetAutoUpdatePreference" function (:type "bool") (reparse-symbol classsubparts) [6152 6226])
                    ("SupportAutoUpdate" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [6232 6263])
                    ("LoadFieldSchema" function
                       (:prototype-flag t
                        :arguments 
                          ( ("any" variable
                               (:reference 1
                                :constant-flag t
                                :type ("autil::legacy::Any" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6294 6324]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6273 6325])
                    ("SetDefaultRegionId" function
                       (:prototype-flag t
                        :arguments 
                          ( ("regionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6355 6375]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6331 6376])
                    ("GetDefaultRegionId" function (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6381 6447])
                    ("public" label nil (reparse-symbol classsubparts) [6453 6460])
                    ("AddIndexConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6504 6538])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6539 6571]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6484 6573])
                    ("AddAttributeConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6602 6631])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6632 6664]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6578 6666])
                    ("AddPackAttributeConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("attrName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6704 6732])
                            ("subAttrNames" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6765 6810])
                            ("compressTypeStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6843 6878])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6911 6943]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6676 6945])
                    ("AddVirtualAttributeConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("virtualAttrConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("config::AttributeConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6982 7034])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7070 7102]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6951 7104])
                    ("AddSummaryConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7132 7161])
                            ("summaryGroupId" variable
                               (:default-value "DEFAULT_SUMMARYGROUPID"
                                :type ("summarygroupid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7188 7244])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7272 7304]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7110 7306])
                    ("SetTruncateProfileSchema" function
                       (:prototype-flag t
                        :arguments 
                          ( ("truncateProfileSchema" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TruncateProfileSchemaPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7341 7395])
                            ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7430 7462]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7311 7464])
                    ("LoadValueConfig" function
                       (:prototype-flag t
                        :arguments 
                          ( ("id" variable
                               (:default-value "DEFAULT_REGIONID"
                                :type ("regionid_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7490 7522]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7469 7524])
                    ("ResetRegions" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [7530 7550])
                    ("GetDefaultFieldSchema" function
                       (:constant-flag t
                        :type ("FieldSchemaPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7556 7648])
                    ("private" label nil (reparse-symbol classsubparts) [7650 7658])
                    ("DoAssertCompatible" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexPartitionSchema" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7687 7721]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7663 7728])
                    ("CheckFieldSchema" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [7733 7763])
                    ("CheckIndexNameNotSummary" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexConfig" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IndexConfigPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7802 7836]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7772 7843])
                    ("CheckTruncateSortParams" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [7848 7885])
                    ("CheckSubSchema" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [7890 7918])
                    ("private" label nil (reparse-symbol classsubparts) [7924 7932])
                    ("RegionIdMap" type
                       (:typedef ("std::unordered_map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("size_t" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [7937 7997])
                    ("RegionVector" type
                       (:typedef ("std::vector" type
                             (:template-specifier 
                                ( ("RegionSchemaPtr" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [8002 8052])
                    ("private" label nil (reparse-symbol classsubparts) [8058 8066])
                    ("mSchemaName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8071 8095])
                    ("mAdaptiveDictSchema" variable (:type ("AdaptiveDictionarySchemaPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8100 8148])
                    ("mDictSchema" variable (:type ("DictionarySchemaPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8153 8185])
                    ("mFieldSchema" variable (:type ("FieldSchemaPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8190 8218])
                    ("mRegionIdMap" variable (:type ("RegionIdMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8228 8253])
                    ("mRegionVector" variable (:type ("RegionVector" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8258 8285])
                    ("mSubIndexPartitionSchema" variable (:type ("IndexPartitionSchemaPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8291 8340])
                    ("mAutoUpdatePreference" variable (:type "bool") (reparse-symbol classsubparts) [8345 8372])
                    ("mTableType" variable (:type ("TableType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8377 8398])
                    ("mUserDefinedParam" variable (:type ("autil::legacy::json::JsonMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8403 8450])
                    ("mGlobalRegionIndexPreference" variable (:type ("autil::legacy::json::JsonMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8455 8513])
                    ("mDefaultRegionId" variable (:type ("regionid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8518 8546])
                    ("private" label nil (reparse-symbol classsubparts) [8552 8560])
                    ("CheckCompabilityTest" friend nil (reparse-symbol classsubparts) [8565 8598])
                    ("IndexPartitionSchemaTest" friend nil (reparse-symbol classsubparts) [8604 8641])
                    ("index" friend nil (reparse-symbol classsubparts) [8647 8665])
                    ("SchemaMaker" variable (:type "int") (reparse-symbol classsubparts) [8667 8679])
                    ("IE_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [8684 8701]))                  
                :type "class")
                nil [663 8704])
            ("DEFINE_SHARED_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("IndexPartitionSchema" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8723 8744]))                  
                :type "int")
                nil [8705 8745])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8763 8770]))                  
                :type "int")
                nil [8746 8771]))          
      :file "index_partition_schema.h"
      :pointmax 8816
      :fsize 8815
      :lastmodtime '(23348 24529 895793 54000)
      :unmatched-syntax '((thing 8666 . 8667) (thing 8665 . 8666) (thing 8641 . 8642) (thing 8598 . 8599))
      :lexical-table 
        '(("__INDEXLIB_INDEXPARTITIONSCHEMA_H")
          )
)
    (semanticdb-table "adaptive_dictionary_config.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("indexlib/config/adaptive_dictionary_config.h" include nil nil [1 56])
            ("indexlib/common/exception.h" include nil nil [57 95])
            ("indexlib/config/configurator_define.h" include nil nil [96 144])
            ("indexlib/config/config_define.h" include nil nil [145 187])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [189 209])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [210 240])
            ("DOC_FREQUENCY_DICT_TYPE" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "string(\"DOC_FREQUENCY\")"
                :type ("string" type (:type "class") nil nil))
                nil [243 313])
            ("PERCENT_DICT_TYPE" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "string(\"PERCENT\")"
                :type ("string" type (:type "class") nil nil))
                nil [314 372])
            ("INDEX_SIZE_DICT_TYPE" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "string(\"INDEX_SIZE\")"
                :type ("string" type (:type "class") nil nil))
                nil [373 437])
            ("UNKOWN_DICT_TYPE" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "string(\"UNKOWN_DICT_TYPE\")"
                :type ("string" type (:type "class") nil nil))
                nil [438 504])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [523 530]))                  
                :type "int")
                nil [506 531])
            ("IE_NAMESPACE_BEGIN" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [552 559]))                  
                :type "int")
                nil [533 560])
            ("IE_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [574 581])
                    ("" variable (:type ("AdaptiveDictionaryConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [582 607]))                  
                :type "int")
                nil [561 608])
            ("AdaptiveDictionaryConfig" function
               (:constructor-flag t
                :parent "AdaptiveDictionaryConfig"
                :type ("AdaptiveDictionaryConfig" type (:type "class") nil nil))
                nil [611 712])
            ("AdaptiveDictionaryConfig" function
               (:constructor-flag t
                :parent "AdaptiveDictionaryConfig"
                :arguments 
                  ( ("ruleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [774 802])
                    ("dictType" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [812 840])
                    ("threshold" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [849 867]))                  
                :type ("AdaptiveDictionaryConfig" type (:type "class") nil nil))
                nil [714 989])
            ("AdaptiveDictionaryConfig" function
               (:destructor-flag t
                :parent "AdaptiveDictionaryConfig"
                :type "void")
                nil [991 1049])
            ("FromTypeString" function
               (:parent "AdaptiveDictionaryConfig"
                :arguments 
                  ( ("typeStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1136 1158]))                  
                :type ("AdaptiveDictionaryConfig::DictType" type (:type "class") nil nil))
                nil [1051 1634])
            ("ToTypeString" function
               (:parent "AdaptiveDictionaryConfig"
                :arguments 
                  ( ("type" variable (:type ("DictType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1682 1696]))                  
                :type ("string" type (:type "class") nil nil))
                nil [1636 2099])
            ("Jsonize" function
               (:parent "AdaptiveDictionaryConfig"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2140 2170]))                  
                :type "void")
                nil [2101 2723])
            ("AssertEqual" function
               (:parent "AdaptiveDictionaryConfig"
                :arguments 
                  ( ("other" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AdaptiveDictionaryConfig" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2777 2815]))                  
                :type "void")
                nil [2725 3192])
            ("CheckThreshold" function
               (:parent "AdaptiveDictionaryConfig"
                :type "void")
                nil [3194 3744])
            ("IE_NAMESPACE_END" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3763 3770]))                  
                :type "int")
                nil [3746 3771]))          
      :file "adaptive_dictionary_config.cpp"
      :pointmax 3773
      :fsize 3772
      :lastmodtime '(23348 24529 890793 53000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ops!basic_ops_compile!indexlib!indexlib!config!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
