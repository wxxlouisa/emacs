;; Object framework/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "framework/"
  :tables
  (list
    (semanticdb-table "tensor.proto"
      :major-mode 'java-mode
      :tags 
        '( ("tensorflow" package nil nil [21 40]))          
      :file "tensor.proto"
      :pointmax 2699
      :fsize 2698
      :lastmodtime '(22794 54012 398741 687000)
      :unmatched-syntax '((thing 417 . 428) (thing 409 . 416) (thing 325 . 364) (thing 318 . 324) (thing 270 . 316) (thing 263 . 269) (thing 212 . 261) (thing 205 . 211) (thing 176 . 202) (thing 174 . 175) (thing 161 . 173) (thing 154 . 160) (thing 148 . 152) (thing 146 . 147) (thing 126 . 145) (thing 119 . 125) (thing 103 . 117) (thing 101 . 102) (thing 80 . 100) (thing 73 . 79) (thing 67 . 71) (thing 65 . 66) (thing 48 . 64) (thing 41 . 47) (thing 10 . 18) (thing 8 . 9) (thing 1 . 7) (thing 429 . 2697)))
    (semanticdb-table "tensor.h"
      :major-mode 'c++-mode
      :tags 
        '( ("TENSORFLOW_CORE_FRAMEWORK_TENSOR_H_" variable (:constant-flag t) nil [723 758])
            ("third_party/eigen3/unsupported/Eigen/CXX11/Tensor" include nil nil [760 820])
            ("tensorflow/core/framework/allocation_description.pb.h" include nil nil [821 885])
            ("tensorflow/core/framework/allocator.h" include nil nil [886 934])
            ("tensorflow/core/framework/tensor.pb.h" include nil nil [935 983])
            ("tensorflow/core/framework/tensor_description.pb.h" include nil nil [984 1044])
            ("tensorflow/core/framework/tensor_shape.h" include nil nil [1045 1096])
            ("tensorflow/core/framework/tensor_types.h" include nil nil [1097 1148])
            ("tensorflow/core/framework/types.h" include nil nil [1149 1193])
            ("tensorflow/core/framework/types.pb.h" include nil nil [1194 1241])
            ("tensorflow/core/lib/core/refcount.h" include nil nil [1242 1288])
            ("tensorflow/core/lib/core/status.h" include nil nil [1289 1333])
            ("tensorflow/core/lib/core/stringpiece.h" include nil nil [1334 1383])
            ("tensorflow/core/lib/gtl/inlined_vector.h" include nil nil [1384 1435])
            ("tensorflow/core/platform/logging.h" include nil nil [1436 1481])
            ("tensorflow/core/platform/macros.h" include nil nil [1482 1526])
            ("tensorflow/core/platform/types.h" include nil nil [1527 1570])
            ("tensorflow" type
               (:members 
                  ( ("TensorBuffer" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1596 1615])
                    ("TensorCApi" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1641 1658])
                    ("Tensor" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1743 1750])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2291 2300])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2767 2781])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2782 2807]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2760 2808])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:pointer 1
                                        :type ("Allocator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3328 3341])
                                    ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3342 3356])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3357 3382]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3321 3383])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:pointer 1
                                        :type ("Allocator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4042 4055])
                                    ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4056 4070])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4071 4096])
                                    ("allocation_attr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AllocationAttributes" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4106 4150]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4035 4151])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4394 4408]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4387 4409])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4444 4464]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4437 4465])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4654 4662])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4663 4669]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4647 4670])
                            ("Tensor" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [4674 4684])
                            ("dtype" function (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4717 4770])
                            ("shape" function
                               (:constant-flag t
                                :type ("TensorShape" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4813 4864])
                            ("dims" function (:type "int") (reparse-symbol classsubparts) [5039 5082])
                            ("dim_size" function
                               (:arguments 
                                  ( ("d" variable (:type "int") (reparse-symbol arg-sub-list) [5150 5156]))                                  
                                :type ("int64" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5135 5194])
                            ("NumElements" function (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5247 5307])
                            ("IsSameSize" function
                               (:arguments 
                                  ( ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5327 5343]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5311 5397])
                            ("SharesBufferWith" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5496 5512]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [5474 5519])
                            ("IsInitialized" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [5737 5764])
                            ("TotalBytes" function
                               (:prototype-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5825 5851])
                            ("AllocatedBytes" function
                               (:prototype-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5915 5945])
                            ("IsAligned" function (:type "bool") (reparse-symbol classsubparts) [5996 6188])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6280 6300]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6262 6368])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6446 6454])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6455 6461]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6428 6462])
                            ("Slice" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dim0_start" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7564 7581])
                                    ("dim0_limit" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7582 7599]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7551 7606])
                            ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [7815 7834])
                            ("TF_MUST_USE_RESULT" variable (:type "int") (reparse-symbol classsubparts) [7892 7911])
                            ("AsProtoField" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("TensorProto" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8182 8201]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8164 8208])
                            ("AsProtoTensorContent" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("TensorProto" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8237 8256]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8211 8263])
                            ("vec" function (:type ("Vec" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9205 9247])
                            ("matrix" function (:type ("Matrix" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9295 9343])
                            ("tensor" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9412 9428])
                            ("bit_casted_tensor" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9767 9794])
                            ("flat" function (:type ("Flat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11004 11063])
                            ("unaligned_flat" function (:type ("UnalignedFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11111 11199])
                            ("flat_inner_dims" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11547 11572])
                            ("flat_outer_dims" function
                               (:prototype-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11921 11946])
                            ("shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [12029 12062]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12015 12063])
                            ("bit_casted_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [12435 12468]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12403 12469])
                            ("unaligned_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [12578 12611]))                                  
                                :type ("UnalignedTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12538 12612])
                            ("scalar" function
                               (:prototype-flag t
                                :type ("Scalar" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12899 12915])
                            ("vec" function (:type ("ConstVec" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13010 13063])
                            ("matrix" function (:type ("ConstMatrix" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13111 13170])
                            ("tensor" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13239 13266])
                            ("bit_casted_tensor" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13605 13643])
                            ("flat" function (:type ("ConstFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13691 13761])
                            ("unaligned_flat" function (:type ("UnalignedConstFlat" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13809 13908])
                            ("shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14003 14036]))                                  
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13977 14043])
                            ("bit_casted_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14420 14453]))                                  
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14383 14460])
                            ("unaligned_shaped" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [14574 14607]))                                  
                                :type ("UnalignedConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14529 14614])
                            ("scalar" function
                               (:prototype-flag t
                                :type ("ConstScalar" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14662 14689])
                            ("flat_inner_dims" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14762 14798])
                            ("flat_outer_dims" function
                               (:prototype-flag t
                                :type ("ConstTensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14871 14907])
                            ("SummarizeValue" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("max_entries" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15003 15021]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14981 15028])
                            ("DebugString" function
                               (:prototype-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15101 15128])
                            ("FillDescription" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("description" variable
                                       (:pointer 1
                                        :type ("TensorDescription" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15279 15310]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [15258 15317])
                            ("tensor_data" function
                               (:prototype-flag t
                                :type ("StringPiece" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15858 15890])
                            ("UnsafeCopyFromInternal" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16086 16100])
                                    ("dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16101 16116])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16147 16166]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16058 16167])
                            ("private" label nil (reparse-symbol classsubparts) [16170 16178])
                            ("RefCountIsOne" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [16276 16303])
                            ("CheckType" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expected_dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16321 16345]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16306 16352])
                            ("CheckTypeAndIsAligned" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expected_dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16382 16406]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16355 16413])
                            ("CheckIsAlignedAndSingleElement" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [16416 16460])
                            ("set_dtype" function
                               (:arguments 
                                  ( ("t" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16478 16489]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [16463 16518])
                            ("FillDimsAndValidateCompatibleShape" function
                               (:template 
                                  ( ("size_t" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [16594 16627])
                                    ("dims" variable
                                       (:pointer 1
                                        :type ("Eigen::array" type
                                             (:template-specifier 
                                                ( ("Eigen::DenseIndex" type nil nil nil)
                                                  ("NDIMS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [16634 16679]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [16521 16686])
                            ("ComputeFlatInnerDims" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("num_out_dims" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16848 16867]))                                  
                                :type ("gtl::InlinedVector" type
                                     (:template-specifier 
                                        ( ("int64" type nil nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [16798 16874])
                            ("ComputeFlatOuterDims" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("num_out_dims" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16927 16946]))                                  
                                :type ("gtl::InlinedVector" type
                                     (:template-specifier 
                                        ( ("int64" type nil nil nil)
                                          ("4"))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [16877 16953])
                            ("shape_" variable (:type ("TensorShape" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16957 16976])
                            ("buf_" variable
                               (:pointer 1
                                :type ("TensorBuffer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16979 16998])
                            ("DMAHelper" friend nil (reparse-symbol classsubparts) [17002 17024])
                            ("TensorCApi" friend nil (reparse-symbol classsubparts) [17028 17051])
                            ("TensorReference" friend nil (reparse-symbol classsubparts) [17055 17083])
                            ("VariableOp" friend nil (reparse-symbol classsubparts) [17115 17138])
                            ("AutoReloadVariableOp" friend nil (reparse-symbol classsubparts) [17180 17213])
                            ("TensorTestHelper" friend nil (reparse-symbol classsubparts) [17245 17274])
                            ("CreateVariableOp" type
                               (:template 
                                  ( ("Device" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [17310 17381])
                            ("OpKernelContext" friend nil (reparse-symbol classsubparts) [17384 17412])
                            ("Tensor" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17582 17596])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17597 17622])
                                    ("buf" variable
                                       (:pointer 1
                                        :type ("TensorBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17623 17641]))                                  
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17575 17642])
                            ("CanUseDMA" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [17646 17669])
                            ("set_shape" function
                               (:arguments 
                                  ( ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17863 17888]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17848 17960])
                            ("CopyFromInternal" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17986 18006])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18007 18032]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17964 18033])
                            ("base" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :pointer 1
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [18037 18077])
                            ("FillDimsAndValidateCompatibleShape" function
                               (:template 
                                  ( ("size_t" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("dims" variable
                                       (:pointer 1
                                        :type ("Eigen::array" type
                                             (:template-specifier 
                                                ( ("Eigen::DenseIndex" type nil nil nil)
                                                  ("NDIMS" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [18154 18199])
                                    ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                         (:template-specifier 
                                            ( ("int64" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [18206 18239]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [18081 18246]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1727 18249])
                    ("TensorBuffer" type
                       (:superclasses 
                          ( ("core::RefCounted" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [18405 18412])
                            ("data" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [18501 18532])
                            ("size" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18535 18567])
                            ("root_buffer" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :type ("TensorBuffer" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18693 18733])
                            ("FillAllocationDescription" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("proto" variable
                                       (:pointer 1
                                        :type ("AllocationDescription" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18839 18868]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [18793 18879])
                            ("base" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :pointer 1)
                                (reparse-symbol classsubparts) [18883 18969]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [18357 18972])
                    ("base" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :parent "Tensor"
                        :pointer 1)
                        (reparse-symbol namespacesubparts) [18974 19077])
                    ("tensor" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [19142 19348])
                    ("tensor" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [19413 19646])
                    ("bit_casted_tensor" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [19711 19905])
                    ("bit_casted_tensor" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [19970 20191])
                    ("FillDimsAndValidateCompatibleShape" function
                       (:template 
                          ( ("size_t" type nil nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [20270 20303])
                            ("dims" variable
                               (:pointer 1
                                :type ("Eigen::array" type
                                     (:template-specifier 
                                        ( ("Eigen::DenseIndex" type nil nil nil)
                                          ("NDIMS" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [20308 20353]))                          
                        :parent "Tensor")
                        (reparse-symbol namespacesubparts) [20193 20587])
                    ("shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [20679 20712]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [20652 20936])
                    ("bit_casted_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [21039 21072]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [21001 21273])
                    ("unaligned_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [21384 21417]))                          
                        :type ("UnalignedTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [21338 21638])
                    ("FillDimsAndValidateCompatibleShape" function
                       (:template 
                          ( ("size_t" type nil nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("dims" variable
                               (:pointer 1
                                :type ("Eigen::array" type
                                     (:template-specifier 
                                        ( ("Eigen::DenseIndex" type nil nil nil)
                                          ("NDIMS" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [21717 21762])
                            ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [21767 21800]))                          
                        :parent "Tensor")
                        (reparse-symbol namespacesubparts) [21640 22034])
                    ("shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [22131 22164]))                          
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22099 22392])
                    ("bit_casted_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [22500 22533]))                          
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22457 22738])
                    ("unaligned_shaped" function
                       (:parent "Tensor"
                        :arguments 
                          ( ("new_sizes" variable (:type ("gtl::ArraySlice" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [22854 22887]))                          
                        :type ("UnalignedConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [22803 23112])
                    ("scalar" function
                       (:parent "Tensor"
                        :type ("Scalar" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23156 23267])
                    ("scalar" function
                       (:parent "Tensor"
                        :type ("ConstScalar" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23311 23438])
                    ("flat_inner_dims" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23503 23595])
                    ("flat_outer_dims" function
                       (:parent "Tensor"
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23660 23752])
                    ("flat_inner_dims" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23817 23920])
                    ("flat_outer_dims" function
                       (:parent "Tensor"
                        :type ("ConstTensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [23985 24088])
                    ("Tensor" function
                       (:constructor-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24112 24132]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24090 24207])
                    ("Tensor" function
                       (:constructor-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24231 24239])
                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24240 24246]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24209 24331])
                    ("=" function
                       (:operator-flag t
                        :parent "Tensor"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Tensor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24366 24374])
                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24375 24381]))                          
                        :type ("Tensor" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24333 24619]))                  
                :type "namespace")
                nil [1572 24643]))          
      :file "tensor.h"
      :pointmax 24717
      :fsize 24716
      :lastmodtime '(22794 54962 14412 504000)
      :unmatched-syntax '((thing 7851 . 7891) (thing 7842 . 7851) (thing 7837 . 7841) (thing 7788 . 7814) (thing 7779 . 7788) (thing 7774 . 7778) (thing 6790 . 6915) (thing 6771 . 6789) (thing 6707 . 6770) (thing 6699 . 6707) (thing 6694 . 6698) (thing 6453 . 6454) (thing 4661 . 4662) (thing 4378 . 4386) (thing 9161 . 9169) (thing 9170 . 9171) (thing 9171 . 9179) (thing 9180 . 9181) (thing 9181 . 9182) (thing 9185 . 9193) (thing 9194 . 9200) (thing 9200 . 9201) (thing 9201 . 9202) (thing 9202 . 9203) (thing 9203 . 9204) (thing 9204 . 9205) (thing 9251 . 9259) (thing 9260 . 9261) (thing 9261 . 9269) (thing 9270 . 9271) (thing 9271 . 9272) (thing 9275 . 9283) (thing 9284 . 9290) (thing 9290 . 9291) (thing 9291 . 9292) (thing 9292 . 9293) (thing 9293 . 9294) (thing 9294 . 9295) (thing 9347 . 9355) (thing 9356 . 9357) (thing 9357 . 9365) (thing 9366 . 9367) (thing 9367 . 9368) (thing 9369 . 9375) (thing 9376 . 9381) (thing 9381 . 9382) (thing 9385 . 9393) (thing 9394 . 9400) (thing 9400 . 9401) (thing 9401 . 9402) (thing 9402 . 9403) (thing 9404 . 9409) (thing 9409 . 9410) (thing 9410 . 9411) (thing 9411 . 9412) (thing 9702 . 9710) (thing 9711 . 9712) (thing 9712 . 9720) (thing 9721 . 9722) (thing 9722 . 9723) (thing 9724 . 9730) (thing 9731 . 9736) (thing 9736 . 9737) (thing 9740 . 9748) (thing 9749 . 9755) (thing 9755 . 9756) (thing 9756 . 9757) (thing 9757 . 9758) (thing 9759 . 9764) (thing 9764 . 9765) (thing 9765 . 9766) (thing 9766 . 9767) (thing 10960 . 10968) (thing 10969 . 10970) (thing 10970 . 10978) (thing 10979 . 10980) (thing 10980 . 10981) (thing 10984 . 10992) (thing 10993 . 10999) (thing 10999 . 11000) (thing 11000 . 11001) (thing 11001 . 11002) (thing 11002 . 11003) (thing 11003 . 11004) (thing 11067 . 11075) (thing 11076 . 11077) (thing 11077 . 11085) (thing 11086 . 11087) (thing 11087 . 11088) (thing 11091 . 11099) (thing 11100 . 11106) (thing 11106 . 11107) (thing 11107 . 11108) (thing 11108 . 11109) (thing 11109 . 11110) (thing 11110 . 11111) (thing 11478 . 11486) (thing 11487 . 11488) (thing 11488 . 11496) (thing 11497 . 11498) (thing 11498 . 11499) (thing 11500 . 11506) (thing 11507 . 11512) (thing 11513 . 11514) (thing 11515 . 11516) (thing 11516 . 11517) (thing 11520 . 11528) (thing 11529 . 11535) (thing 11535 . 11536) (thing 11536 . 11537) (thing 11537 . 11538) (thing 11539 . 11544) (thing 11544 . 11545) (thing 11545 . 11546) (thing 11546 . 11547) (thing 11852 . 11860) (thing 11861 . 11862) (thing 11862 . 11870) (thing 11871 . 11872) (thing 11872 . 11873) (thing 11874 . 11880) (thing 11881 . 11886) (thing 11887 . 11888) (thing 11889 . 11890) (thing 11890 . 11891) (thing 11894 . 11902) (thing 11903 . 11909) (thing 11909 . 11910) (thing 11910 . 11911) (thing 11911 . 11912) (thing 11913 . 11918) (thing 11918 . 11919) (thing 11919 . 11920) (thing 11920 . 11921) (thing 11950 . 11958) (thing 11959 . 11960) (thing 11960 . 11968) (thing 11969 . 11970) (thing 11970 . 11971) (thing 11972 . 11978) (thing 11979 . 11984) (thing 11984 . 11985) (thing 11988 . 11996) (thing 11997 . 12003) (thing 12003 . 12004) (thing 12004 . 12005) (thing 12005 . 12006) (thing 12007 . 12012) (thing 12012 . 12013) (thing 12013 . 12014) (thing 12014 . 12015) (thing 12338 . 12346) (thing 12347 . 12348) (thing 12348 . 12356) (thing 12357 . 12358) (thing 12358 . 12359) (thing 12360 . 12366) (thing 12367 . 12372) (thing 12372 . 12373) (thing 12376 . 12384) (thing 12385 . 12391) (thing 12391 . 12392) (thing 12392 . 12393) (thing 12393 . 12394) (thing 12395 . 12400) (thing 12400 . 12401) (thing 12401 . 12402) (thing 12402 . 12403) (thing 12473 . 12481) (thing 12482 . 12483) (thing 12483 . 12491) (thing 12492 . 12493) (thing 12493 . 12494) (thing 12495 . 12501) (thing 12502 . 12507) (thing 12507 . 12508) (thing 12511 . 12519) (thing 12520 . 12526) (thing 12526 . 12527) (thing 12527 . 12528) (thing 12528 . 12529) (thing 12530 . 12535) (thing 12535 . 12536) (thing 12536 . 12537) (thing 12537 . 12538) (thing 12855 . 12863) (thing 12864 . 12865) (thing 12865 . 12873) (thing 12874 . 12875) (thing 12875 . 12876) (thing 12879 . 12887) (thing 12888 . 12894) (thing 12894 . 12895) (thing 12895 . 12896) (thing 12896 . 12897) (thing 12897 . 12898) (thing 12898 . 12899) (thing 12966 . 12974) (thing 12975 . 12976) (thing 12976 . 12984) (thing 12985 . 12986) (thing 12986 . 12987) (thing 12990 . 12998) (thing 12999 . 13005) (thing 13005 . 13006) (thing 13006 . 13007) (thing 13007 . 13008) (thing 13008 . 13009) (thing 13009 . 13010) (thing 13067 . 13075) (thing 13076 . 13077) (thing 13077 . 13085) (thing 13086 . 13087) (thing 13087 . 13088) (thing 13091 . 13099) (thing 13100 . 13106) (thing 13106 . 13107) (thing 13107 . 13108) (thing 13108 . 13109) (thing 13109 . 13110) (thing 13110 . 13111) (thing 13174 . 13182) (thing 13183 . 13184) (thing 13184 . 13192) (thing 13193 . 13194) (thing 13194 . 13195) (thing 13196 . 13202) (thing 13203 . 13208) (thing 13208 . 13209) (thing 13212 . 13220) (thing 13221 . 13227) (thing 13227 . 13228) (thing 13228 . 13229) (thing 13229 . 13230) (thing 13231 . 13236) (thing 13236 . 13237) (thing 13237 . 13238) (thing 13238 . 13239) (thing 13540 . 13548) (thing 13549 . 13550) (thing 13550 . 13558) (thing 13559 . 13560) (thing 13560 . 13561) (thing 13562 . 13568) (thing 13569 . 13574) (thing 13574 . 13575) (thing 13578 . 13586) (thing 13587 . 13593) (thing 13593 . 13594) (thing 13594 . 13595) (thing 13595 . 13596) (thing 13597 . 13602) (thing 13602 . 13603) (thing 13603 . 13604) (thing 13604 . 13605) (thing 13647 . 13655) (thing 13656 . 13657) (thing 13657 . 13665) (thing 13666 . 13667) (thing 13667 . 13668) (thing 13671 . 13679) (thing 13680 . 13686) (thing 13686 . 13687) (thing 13687 . 13688) (thing 13688 . 13689) (thing 13689 . 13690) (thing 13690 . 13691) (thing 13765 . 13773) (thing 13774 . 13775) (thing 13775 . 13783) (thing 13784 . 13785) (thing 13785 . 13786) (thing 13789 . 13797) (thing 13798 . 13804) (thing 13804 . 13805) (thing 13805 . 13806) (thing 13806 . 13807) (thing 13807 . 13808) (thing 13808 . 13809) (thing 13912 . 13920) (thing 13921 . 13922) (thing 13922 . 13930) (thing 13931 . 13932) (thing 13932 . 13933) (thing 13934 . 13940) (thing 13941 . 13946) (thing 13946 . 13947) (thing 13950 . 13958) (thing 13959 . 13965) (thing 13965 . 13966) (thing 13966 . 13967) (thing 13967 . 13968) (thing 13969 . 13974) (thing 13974 . 13975) (thing 13975 . 13976) (thing 13976 . 13977) (thing 14318 . 14326) (thing 14327 . 14328) (thing 14328 . 14336) (thing 14337 . 14338) (thing 14338 . 14339) (thing 14340 . 14346) (thing 14347 . 14352) (thing 14352 . 14353) (thing 14356 . 14364) (thing 14365 . 14371) (thing 14371 . 14372) (thing 14372 . 14373) (thing 14373 . 14374) (thing 14375 . 14380) (thing 14380 . 14381) (thing 14381 . 14382) (thing 14382 . 14383) (thing 14464 . 14472) (thing 14473 . 14474) (thing 14474 . 14482) (thing 14483 . 14484) (thing 14484 . 14485) (thing 14486 . 14492) (thing 14493 . 14498) (thing 14498 . 14499) (thing 14502 . 14510) (thing 14511 . 14517) (thing 14517 . 14518) (thing 14518 . 14519) (thing 14519 . 14520) (thing 14521 . 14526) (thing 14526 . 14527) (thing 14527 . 14528) (thing 14528 . 14529) (thing 14618 . 14626) (thing 14627 . 14628) (thing 14628 . 14636) (thing 14637 . 14638) (thing 14638 . 14639) (thing 14642 . 14650) (thing 14651 . 14657) (thing 14657 . 14658) (thing 14658 . 14659) (thing 14659 . 14660) (thing 14660 . 14661) (thing 14661 . 14662) (thing 14693 . 14701) (thing 14702 . 14703) (thing 14703 . 14711) (thing 14712 . 14713) (thing 14713 . 14714) (thing 14715 . 14721) (thing 14722 . 14727) (thing 14728 . 14729) (thing 14730 . 14731) (thing 14731 . 14732) (thing 14735 . 14743) (thing 14744 . 14750) (thing 14750 . 14751) (thing 14751 . 14752) (thing 14752 . 14753) (thing 14754 . 14759) (thing 14759 . 14760) (thing 14760 . 14761) (thing 14761 . 14762) (thing 14802 . 14810) (thing 14811 . 14812) (thing 14812 . 14820) (thing 14821 . 14822) (thing 14822 . 14823) (thing 14824 . 14830) (thing 14831 . 14836) (thing 14837 . 14838) (thing 14839 . 14840) (thing 14840 . 14841) (thing 14844 . 14852) (thing 14853 . 14859) (thing 14859 . 14860) (thing 14860 . 14861) (thing 14861 . 14862) (thing 14863 . 14868) (thing 14868 . 14869) (thing 14869 . 14870) (thing 14870 . 14871) (thing 17024 . 17025) (thing 17051 . 17052) (thing 17083 . 17084) (thing 17138 . 17139) (thing 17213 . 17214) (thing 17274 . 17275) (thing 17412 . 17413) (thing 18415 . 18416) (thing 18416 . 18428) (thing 18428 . 18430) (thing 18431 . 18439) (thing 18440 . 18442) (thing 19079 . 19087) (thing 19088 . 19089) (thing 19089 . 19097) (thing 19098 . 19099) (thing 19099 . 19100) (thing 19101 . 19107) (thing 19108 . 19113) (thing 19113 . 19114) (thing 19115 . 19123) (thing 19124 . 19130) (thing 19130 . 19131) (thing 19131 . 19132) (thing 19132 . 19133) (thing 19134 . 19139) (thing 19139 . 19140) (thing 19140 . 19141) (thing 19141 . 19142) (thing 19350 . 19358) (thing 19359 . 19360) (thing 19360 . 19368) (thing 19369 . 19370) (thing 19370 . 19371) (thing 19372 . 19378) (thing 19379 . 19384) (thing 19384 . 19385) (thing 19386 . 19394) (thing 19395 . 19401) (thing 19401 . 19402) (thing 19402 . 19403) (thing 19403 . 19404) (thing 19405 . 19410) (thing 19410 . 19411) (thing 19411 . 19412) (thing 19412 . 19413) (thing 19648 . 19656) (thing 19657 . 19658) (thing 19658 . 19666) (thing 19667 . 19668) (thing 19668 . 19669) (thing 19670 . 19676) (thing 19677 . 19682) (thing 19682 . 19683) (thing 19684 . 19692) (thing 19693 . 19699) (thing 19699 . 19700) (thing 19700 . 19701) (thing 19701 . 19702) (thing 19703 . 19708) (thing 19708 . 19709) (thing 19709 . 19710) (thing 19710 . 19711) (thing 19907 . 19915) (thing 19916 . 19917) (thing 19917 . 19925) (thing 19926 . 19927) (thing 19927 . 19928) (thing 19929 . 19935) (thing 19936 . 19941) (thing 19941 . 19942) (thing 19943 . 19951) (thing 19952 . 19958) (thing 19958 . 19959) (thing 19959 . 19960) (thing 19960 . 19961) (thing 19962 . 19967) (thing 19967 . 19968) (thing 19968 . 19969) (thing 19969 . 19970) (thing 20589 . 20597) (thing 20598 . 20599) (thing 20599 . 20607) (thing 20608 . 20609) (thing 20609 . 20610) (thing 20611 . 20617) (thing 20618 . 20623) (thing 20623 . 20624) (thing 20625 . 20633) (thing 20634 . 20640) (thing 20640 . 20641) (thing 20641 . 20642) (thing 20642 . 20643) (thing 20644 . 20649) (thing 20649 . 20650) (thing 20650 . 20651) (thing 20651 . 20652) (thing 20938 . 20946) (thing 20947 . 20948) (thing 20948 . 20956) (thing 20957 . 20958) (thing 20958 . 20959) (thing 20960 . 20966) (thing 20967 . 20972) (thing 20972 . 20973) (thing 20974 . 20982) (thing 20983 . 20989) (thing 20989 . 20990) (thing 20990 . 20991) (thing 20991 . 20992) (thing 20993 . 20998) (thing 20998 . 20999) (thing 20999 . 21000) (thing 21000 . 21001) (thing 21275 . 21283) (thing 21284 . 21285) (thing 21285 . 21293) (thing 21294 . 21295) (thing 21295 . 21296) (thing 21297 . 21303) (thing 21304 . 21309) (thing 21309 . 21310) (thing 21311 . 21319) (thing 21320 . 21326) (thing 21326 . 21327) (thing 21327 . 21328) (thing 21328 . 21329) (thing 21330 . 21335) (thing 21335 . 21336) (thing 21336 . 21337) (thing 21337 . 21338) (thing 22036 . 22044) (thing 22045 . 22046) (thing 22046 . 22054) (thing 22055 . 22056) (thing 22056 . 22057) (thing 22058 . 22064) (thing 22065 . 22070) (thing 22070 . 22071) (thing 22072 . 22080) (thing 22081 . 22087) (thing 22087 . 22088) (thing 22088 . 22089) (thing 22089 . 22090) (thing 22091 . 22096) (thing 22096 . 22097) (thing 22097 . 22098) (thing 22098 . 22099) (thing 22394 . 22402) (thing 22403 . 22404) (thing 22404 . 22412) (thing 22413 . 22414) (thing 22414 . 22415) (thing 22416 . 22422) (thing 22423 . 22428) (thing 22428 . 22429) (thing 22430 . 22438) (thing 22439 . 22445) (thing 22445 . 22446) (thing 22446 . 22447) (thing 22447 . 22448) (thing 22449 . 22454) (thing 22454 . 22455) (thing 22455 . 22456) (thing 22456 . 22457) (thing 22740 . 22748) (thing 22749 . 22750) (thing 22750 . 22758) (thing 22759 . 22760) (thing 22760 . 22761) (thing 22762 . 22768) (thing 22769 . 22774) (thing 22774 . 22775) (thing 22776 . 22784) (thing 22785 . 22791) (thing 22791 . 22792) (thing 22792 . 22793) (thing 22793 . 22794) (thing 22795 . 22800) (thing 22800 . 22801) (thing 22801 . 22802) (thing 22802 . 22803) (thing 23114 . 23122) (thing 23123 . 23124) (thing 23124 . 23132) (thing 23133 . 23134) (thing 23134 . 23135) (thing 23136 . 23144) (thing 23145 . 23151) (thing 23151 . 23152) (thing 23152 . 23153) (thing 23153 . 23154) (thing 23154 . 23155) (thing 23155 . 23156) (thing 23269 . 23277) (thing 23278 . 23279) (thing 23279 . 23287) (thing 23288 . 23289) (thing 23289 . 23290) (thing 23291 . 23299) (thing 23300 . 23306) (thing 23306 . 23307) (thing 23307 . 23308) (thing 23308 . 23309) (thing 23309 . 23310) (thing 23310 . 23311) (thing 23440 . 23448) (thing 23449 . 23450) (thing 23450 . 23458) (thing 23459 . 23460) (thing 23460 . 23461) (thing 23462 . 23468) (thing 23469 . 23474) (thing 23474 . 23475) (thing 23476 . 23484) (thing 23485 . 23491) (thing 23491 . 23492) (thing 23492 . 23493) (thing 23493 . 23494) (thing 23495 . 23500) (thing 23500 . 23501) (thing 23501 . 23502) (thing 23502 . 23503) (thing 23597 . 23605) (thing 23606 . 23607) (thing 23607 . 23615) (thing 23616 . 23617) (thing 23617 . 23618) (thing 23619 . 23625) (thing 23626 . 23631) (thing 23631 . 23632) (thing 23633 . 23641) (thing 23642 . 23648) (thing 23648 . 23649) (thing 23649 . 23650) (thing 23650 . 23651) (thing 23652 . 23657) (thing 23657 . 23658) (thing 23658 . 23659) (thing 23659 . 23660) (thing 23754 . 23762) (thing 23763 . 23764) (thing 23764 . 23772) (thing 23773 . 23774) (thing 23774 . 23775) (thing 23776 . 23782) (thing 23783 . 23788) (thing 23788 . 23789) (thing 23790 . 23798) (thing 23799 . 23805) (thing 23805 . 23806) (thing 23806 . 23807) (thing 23807 . 23808) (thing 23809 . 23814) (thing 23814 . 23815) (thing 23815 . 23816) (thing 23816 . 23817) (thing 23922 . 23930) (thing 23931 . 23932) (thing 23932 . 23940) (thing 23941 . 23942) (thing 23942 . 23943) (thing 23944 . 23950) (thing 23951 . 23956) (thing 23956 . 23957) (thing 23958 . 23966) (thing 23967 . 23973) (thing 23973 . 23974) (thing 23974 . 23975) (thing 23975 . 23976) (thing 23977 . 23982) (thing 23982 . 23983) (thing 23983 . 23984) (thing 23984 . 23985) (thing 24238 . 24239) (thing 24373 . 24374))
      :lexical-table 
        '(("TENSORFLOW_CORE_FRAMEWORK_TENSOR_H_")
          )
)
    (semanticdb-table "allocator.h"
      :file "allocator.h"
      :fsize 12017
      :lastmodtime '(22794 54962 9412 507000))
    (semanticdb-table "tensor_shape.h"
      :file "tensor_shape.h"
      :fsize 13173
      :lastmodtime '(22794 54962 15412 503000))
    (semanticdb-table "tensor_types.h"
      :file "tensor_types.h"
      :fsize 4878
      :lastmodtime '(22794 54012 401741 687000))
    (semanticdb-table "types.h"
      :file "types.h"
      :fsize 7722
      :lastmodtime '(22794 54012 402741 688000)))
  :file "!ssd!sdd!git!local!tensorflow!tensorflow!core!framework!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
