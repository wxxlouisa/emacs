;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SplitMatchDocOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("suez/turing/ops/MatchDocsVariant.h" include nil nil [19 64])
            ("tensorflow/core/kernels/ops_testutil.h" include (:system-flag t) nil [65 114])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [115 164])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [165 220])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [221 267])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [269 296])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("SplitMatchDocOpTest" type
                               (:superclasses 
                                  ( ("OpsTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [385 395])
                                    ("makeOp" function (:type "void") (reparse-symbol classsubparts) [400 655])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("ids" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("int" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [692 720]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [661 1146])
                                    ("checkOutput" function
                                       (:arguments 
                                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [1169 1175])
                                            ("ids" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("int" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1176 1204]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1152 1759])
                                    ("protected" label nil (reparse-symbol classsubparts) [1760 1770])
                                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1775 1803]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [336 1806])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SplitMatchDocOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1815 1835])
                                    ("" variable (:type ("testCompute" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1836 1848]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1808 2177]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [316 2180]))                  
                :type "namespace")
                nil [298 2183]))          
      :file "SplitMatchDocOpTest.cpp"
      :pointmax 2184
      :fsize 2185
      :lastmodtime '(23301 209 984590 974000)
      :unmatched-syntax nil)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("env" code nil nil [57 106])
            ("env" code nil nil [108 277]))          
      :file "SConscript"
      :pointmax 278
      :fsize 277
      :lastmodtime '(23309 1128 523768 265000)
      :unmatched-syntax nil)
    (semanticdb-table "KkvScanOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("suez/turing/ops/MatchDocsVariant.h" include nil nil [19 64])
            ("tensorflow/core/kernels/ops_testutil.h" include (:system-flag t) nil [65 114])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [115 164])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [165 220])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [221 267])
            ("suez/turing/ops/test/OpTestBase.h" include nil nil [268 312])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [314 341])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("KkvScanOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [422 429])
                                    ("protected" label nil (reparse-symbol classsubparts) [526 536])
                                    ("prepareDefaultOp" function
                                       (:arguments 
                                          ( ("extendFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [563 598])
                                            ("tableName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\"kkvTable\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [625 661])
                                            ("triggerId" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\"trigger_id\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [689 727])
                                            ("totalSeekCount" variable
                                               (:default-value "-1"
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [755 778])
                                            ("perKeyCount" variable
                                               (:default-value "-1"
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [780 800]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [541 1581])
                                    ("prepareKkvTableData" function
                                       (:arguments 
                                          ( ("tableName" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1612 1630])
                                            ("fields" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1631 1646])
                                            ("pkeyField" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1676 1694])
                                            ("skeyField" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1695 1713])
                                            ("attributes" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1743 1762])
                                            ("docs" variable
                                               (:reference 1
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1763 1776])
                                            ("ttl" variable
                                               (:reference 1
                                                :type ("int64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1777 1790]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1587 2686])
                                    ("multiCharConvert" function
                                       (:arguments 
                                          ( ("values" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2734 2763]))                                          
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("autil::MultiChar" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2692 3085])
                                    ("perpareDefaultInput" function
                                       (:arguments 
                                          ( ("ids" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("int32_t" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3116 3143])
                                            ("kvPair" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("map" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil)
                                                          ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3144 3178]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3091 4029])
                                    ("checkDefaultOutput" function
                                       (:arguments 
                                          ( ("extendFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4059 4094])
                                            ("results" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("int" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4123 4150]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [4035 5994])
                                    ("public" label nil (reparse-symbol classsubparts) [5996 6003])
                                    ("_trigger" variable
                                       (:default-value "{0, 0, 1, 1, 1, 2}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("int64_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6008 6054])
                                    ("_skey" variable
                                       (:default-value "{0, 1, 0, 1, 2, 0}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("int64_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6059 6102])
                                    ("_attr2" variable
                                       (:default-value "{1, 2, 3, 4, 5, 6}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("uint32_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6107 6152])
                                    ("_name" variable
                                       (:default-value "{\"str1\", \"str2\", \"str3\", \"str4\", \"str5\", \"str6\"}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6157 6229])
                                    ("_value" variable
                                       (:default-value "{{\"111\", \"aaa\"},
                                     {\"222\", \"bbb\"},
                                     {\"333\", \"ccc\"},
                                     {\"444\", \"ddd\"},
                                     {\"555\", \"eee\"},
                                     {\"666\", \"fff\"}}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("vector" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6234 6548])
                                    ("_value2" variable
                                       (:default-value "{{111, 111, 111},
                                        {222, 222, 222},
                                        {333, 333, 333},
                                        {444, 444, 444},
                                        {555, 555, 555},
                                        {666, 666, 666}}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("vector" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [6553 6891]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [380 6894])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6903 6917])
                                    ("" variable (:type ("testDefaultNormal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6918 6936]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6896 7253])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7262 7276])
                                    ("" variable (:type ("testDefaultSomeTriggerHit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7277 7303]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7255 7611])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7620 7634])
                                    ("" variable (:type ("testDefaultNoTriggerHit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7635 7659]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7613 7963])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7972 7986])
                                    ("" variable (:type ("testDefaultNormalWithoutSomeExtend" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7987 8022]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7965 8319])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8328 8342])
                                    ("" variable (:type ("testDefaultNormalWithNotExistExtend" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8343 8379]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8321 8709])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8718 8732])
                                    ("" variable (:type ("testDefaultNormalPerKeySeekLimit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8733 8766]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8711 9122])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9131 9145])
                                    ("" variable (:type ("testDefaultNormalTotalSeekLimit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9146 9178]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9124 9529])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9538 9552])
                                    ("" variable (:type ("testDefaultNormalSeekLimit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9553 9580]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9531 9933])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9942 9956])
                                    ("" variable (:type ("testFromQueryWithTableName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9957 9984]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9935 10358])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10367 10381])
                                    ("" variable (:type ("testFromQueryWithTotalSeekCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10382 10414]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [10360 10821])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10830 10844])
                                    ("" variable (:type ("testFromQueryWithPerKeySeekCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10845 10878]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [10823 11286])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("KkvScanOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11295 11309])
                                    ("" variable (:type ("testFromQueryWithSeekCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11310 11337]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11288 11781]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [360 11785]))                  
                :type "namespace")
                nil [343 11787]))          
      :file "KkvScanOpTest.cpp"
      :pointmax 11788
      :fsize 11787
      :lastmodtime '(23307 32211 611240 636000)
      :unmatched-syntax '((thing 456 . 524) (thing 447 . 455) (thing 444 . 446) (thing 439 . 444) (thing 434 . 438)))
    (semanticdb-table "OpTestBase.h"
      :file "OpTestBase.h"
      :fsize 11988
      :lastmodtime '(23307 64761 869421 987000)))
  :file "!ssd!sdd!git!ops!basic_ops_compile!suez!suez!turing!ops!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
