;; Object proto/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "proto/"
  :tables
  (list
    (semanticdb-table "Search.proto"
      :major-mode 'java-mode
      :tags 
        '( ("isearch.proto" package nil nil [79 101]))          
      :file "Search.proto"
      :pointmax 1278
      :fsize 1277
      :lastmodtime '(22856 52179 703935 48000)
      :unmatched-syntax '((thing 1001 . 1277) (thing 987 . 1000) (thing 979 . 986) (thing 810 . 977) (thing 795 . 809) (thing 787 . 794) (thing 457 . 785) (thing 443 . 456) (thing 435 . 442) (thing 329 . 433) (thing 321 . 328) (thing 313 . 320) (thing 196 . 311) (thing 182 . 195) (thing 174 . 181) (thing 167 . 171) (thing 165 . 166) (thing 145 . 164) (thing 138 . 144) (thing 132 . 136) (thing 130 . 131) (thing 110 . 129) (thing 103 . 109) (thing 50 . 77) (thing 43 . 49) (thing 8 . 41)))
    (semanticdb-table "QrsService.proto"
      :major-mode 'java-mode
      :tags 
        '( ("isearch.proto" package nil nil [79 101]))          
      :file "QrsService.proto"
      :pointmax 906
      :fsize 1000
      :lastmodtime '(22856 52179 703935 48000)
      :unmatched-syntax '((thing 628 . 638) (thing 620 . 627) (thing 425 . 618) (thing 413 . 424) (thing 405 . 412) (thing 193 . 403) (thing 182 . 192) (thing 174 . 181) (thing 167 . 171) (thing 165 . 166) (thing 145 . 164) (thing 138 . 144) (thing 132 . 136) (thing 130 . 131) (thing 110 . 129) (thing 103 . 109) (thing 50 . 77) (thing 43 . 49) (thing 8 . 41) (thing 639 . 904)))
    (semanticdb-table "BasicDefs.proto"
      :major-mode 'java-mode
      :tags 
        '( ("isearch.proto" package nil nil [1 23]))          
      :file "BasicDefs.proto"
      :pointmax 1090
      :fsize 1089
      :lastmodtime '(22507 7237 31666 536000)
      :unmatched-syntax '((thing 772 . 779) (thing 772 . 779) (thing 767 . 770) (thing 767 . 770) (thing 754 . 766) (thing 754 . 766) (thing 746 . 753) (thing 746 . 753) (thing 550 . 744) (thing 550 . 744) (thing 532 . 549) (thing 532 . 549) (thing 524 . 531) (thing 524 . 531) (thing 329 . 522) (thing 329 . 522) (thing 317 . 328) (thing 317 . 328) (thing 309 . 316) (thing 309 . 316) (thing 251 . 307) (thing 251 . 307) (thing 239 . 250) (thing 239 . 250) (thing 234 . 238) (thing 234 . 238) (thing 124 . 232) (thing 124 . 232) (thing 115 . 123) (thing 115 . 123) (thing 110 . 114) (thing 110 . 114) (thing 53 . 108) (thing 53 . 108) (thing 47 . 52) (thing 47 . 52) (thing 39 . 46) (thing 39 . 46) (thing 780 . 798) (thing 780 . 798) (thing 799 . 835) (thing 799 . 835) (thing 837 . 844) (thing 837 . 844) (thing 845 . 864) (thing 845 . 864) (thing 865 . 904) (thing 865 . 904) (thing 906 . 910) (thing 906 . 910) (thing 911 . 923) (thing 911 . 923) (thing 924 . 1030) (thing 924 . 1030) (thing 1032 . 1036) (thing 1032 . 1036) (thing 1037 . 1047) (thing 1037 . 1047) (thing 1048 . 1088) (thing 1048 . 1088)))
    (semanticdb-table "MessageValidator.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/proto/MessageValidator.h" include (:system-flag t) nil [1 40])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60 66]))                  
                :type "int")
                nil [42 67])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89 95]))                  
                :type "int")
                nil [69 96])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111 117])
                    ("" variable (:type ("MessageValidator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [118 135]))                  
                :type "int")
                nil [97 136])
            ("MessageValidator" function
               (:constructor-flag t
                :parent "MessageValidator"
                :type ("MessageValidator" type (:type "class") nil nil))
                nil [138 179])
            ("MessageValidator" function
               (:destructor-flag t
                :parent "MessageValidator"
                :type "void")
                nil [181 223])
            ("CHECK_ITEM" variable (:constant-flag t) nil [233 243])
            ("CHECK_MSG" variable (:constant-flag t) nil [440 449])
            ("CHECK_REPEATED_MSG" variable (:constant-flag t) nil [647 665])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1078 1095]))                  
                :type "bool")
                nil [1046 1158])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("PartitionID" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1192 1215]))                  
                :type "bool")
                nil [1160 1374])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RPCStatusResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1408 1437]))                  
                :type "bool")
                nil [1376 1482])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Clauses" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1516 1535]))                  
                :type "bool")
                nil [1484 1588])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("QrsRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1622 1644]))                  
                :type "bool")
                nil [1590 1696])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SearchRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1730 1755]))                  
                :type "bool")
                nil [1698 2069])
            ("validate" function
               (:parent "MessageValidator"
                :arguments 
                  ( ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("SearchResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2103 2129]))                  
                :type "bool")
                nil [2071 2182])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2202 2208]))                  
                :type "int")
                nil [2184 2209]))          
      :file "MessageValidator.cpp"
      :pointmax 2210
      :fsize 2209
      :lastmodtime '(22507 7237 32666 535000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CHECK_MSG" (spp-arg-list ("item") 449 . 455) . 
              ((symbol "CHECK_ITEM" 486 . 496) (semantic-list "(item)" 496 . 502) (punctuation ";" 502 . 503) (IF "if" 536 . 538) (semantic-list "(!validate(&(msg->item())))" 539 . 566) (semantic-list "{            \\
        return false;                           \\
    }" 567 . 637)))
          ("CHECK_REPEATED_MSG" (spp-arg-list ("item") 665 . 671) . 
              ((INT "int" 693 . 696) (spp-symbol-merge ((symbol "item" 697 . 701) (symbol "Size" 703 . 707)) 697 . 707) (punctuation "=" 708 . 709) (symbol "msg" 710 . 713) (punctuation "-" 713 . 714) (punctuation ">" 714 . 715) (spp-symbol-merge ((symbol "item" 715 . 719) (symbol "_size" 721 . 726)) 715 . 726) (semantic-list "()" 726 . 728) (punctuation ";" 728 . 729) (IF "if" 743 . 745) (semantic-list "(item##Size)" 746 . 758) (semantic-list "{                           \\
        for (int i = 0; i < item##Size; ++i) {  \\
            if (!validate(&msg->item(i))) {     \\
                return false;                   \\
            }                                   \\
        }                                       \\
    }" 759 . 1044)))
          ("CHECK_ITEM" (spp-arg-list ("item") 243 . 249) . 
              ((IF "if" 279 . 281) (semantic-list "(!msg->has_##item())" 282 . 302) (semantic-list "{                   \\
        HA3_LOG(WARN, \"Miss field \" #item);     \\
        return false;                           \\
    }" 303 . 430)))
          )
))
  :file "!ssd!sdd!git!ha3_suez!online!ha3!ha3!proto!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
