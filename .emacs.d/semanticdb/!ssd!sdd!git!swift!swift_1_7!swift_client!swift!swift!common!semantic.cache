;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "FieldGroupReader.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/common/FieldGroupReader.h" include nil nil [1 43])
            ("tr1/functional" include (:system-flag t) nil [44 69])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [71 93])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [94 114])
            ("std::tr1" using (:type ("std::tr1" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [115 140])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163 170]))                  
                :type "int")
                nil [141 171])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [188 195])
                    ("" variable (:type ("FieldGroupReader" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [196 213]))                  
                :type "int")
                nil [172 214])
            ("FieldGroupReader" function
               (:constructor-flag t
                :parent "FieldGroupReader"
                :type ("FieldGroupReader" type (:type "class") nil nil))
                nil [216 272])
            ("FieldGroupReader" function
               (:destructor-flag t
                :parent "FieldGroupReader"
                :type "void")
                nil [274 316])
            ("reset" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("dataStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [347 369]))                  
                :type "void")
                nil [318 417])
            ("reset" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("dataStr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [448 468])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [469 484]))                  
                :type "void")
                nil [419 615])
            ("fromProductionString" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [661 680]))                  
                :type "bool")
                nil [617 744])
            ("fromProductionString" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("dataStr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [790 810])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [811 826]))                  
                :type "bool")
                nil [746 1246])
            ("fromConsumptionString" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1293 1317]))                  
                :type "bool")
                nil [1248 1382])
            ("fromConsumptionString" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("dataStr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1429 1449])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1450 1465]))                  
                :type "bool")
                nil [1384 1921])
            ("getField" function
               (:pointer 1
                :parent "FieldGroupReader"
                :constant-flag t
                :arguments 
                  ( ("fieldName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1963 1992]))                  
                :type ("Field" type (:type "class") nil nil))
                nil [1923 2939])
            ("readLength" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2975 2991]))                  
                :type "bool")
                nil [2941 3684])
            ("readBytes" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("len" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3719 3732])
                    ("cs" variable
                       (:reference 1
                        :type ("ConstString" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3733 3749]))                  
                :type "bool")
                nil [3686 3905])
            ("readBool" function
               (:parent "FieldGroupReader"
                :arguments 
                  ( ("updated" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [3939 3953]))                  
                :type "bool")
                nil [3907 4163])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4186 4193]))                  
                :type "int")
                nil [4166 4194]))          
      :file "FieldGroupReader.cpp"
      :pointmax 4196
      :fsize 4195
      :lastmodtime '(23015 5937 946648 242000)
      :unmatched-syntax nil)
    (semanticdb-table "FieldGroupReader.h"
      :file "FieldGroupReader.h"
      :fsize 1805
      :lastmodtime '(23015 5937 946648 242000))
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_LOG_H" variable (:constant-flag t) nil [29 40])
            ("iostream" include (:system-flag t) nil [42 61])
            ("alog/Logger.h" include nil nil [63 87])
            ("alog/Configurator.h" include nil nil [88 118])
            ("iostream" include (:system-flag t) nil [119 138])
            ("SWIFT_ROOT_LOG_CONFIG" variable (:constant-flag t) nil [147 168])
            ("SWIFT_LOG_CONFIG" variable (:constant-flag t) nil [221 237])
            ("SWIFT_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [764 792])
            ("SWIFT_ROOT_LOG_SETLEVEL" variable (:constant-flag t) nil [1445 1468])
            ("SWIFT_LOG_DECLARE" variable (:constant-flag t) nil [1588 1605])
            ("SWIFT_LOG_SETUP" variable (:constant-flag t) nil [1647 1662])
            ("SWIFT_LOG_SETUP_TEMPLATE" variable (:constant-flag t) nil [1757 1781])
            ("SWIFT_LOG_SETUP_TEMPLATE2" variable (:constant-flag t) nil [1941 1966])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" variable (:constant-flag t) nil [2152 2190])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" variable (:constant-flag t) nil [2359 2398])
            ("SWIFT_LOG" variable (:constant-flag t) nil [2608 2617])
            ("SWIFT_LOG_DECLARE_WITH_NAME" variable (:constant-flag t) nil [2710 2737])
            ("SWIFT_LOG_SETUP_WITH_NAME" variable (:constant-flag t) nil [2778 2803])
            ("SWIFT_LOG_WITH_NAME" variable (:constant-flag t) nil [2903 2922])
            ("SWIFT_LOG_FSLIB_ERROR" variable (:constant-flag t) nil [3017 3038])
            ("SWIFT_DECLARE_AND_SETUP_LOGGER" variable (:constant-flag t) nil [3316 3346])
            ("SWIFT_LOG_SHUTDOWN" variable (:constant-flag t) nil [3433 3451])
            ("SWIFT_LOG_FLUSH" variable (:constant-flag t) nil [3487 3502])
            ("SWIFT_INTERVAL_LOG_COUNT" variable (:constant-flag t) nil [3539 3563])
            ("SWIFT_INTERVAL_LOG_TIME" variable (:constant-flag t) nil [4151 4174]))          
      :file "Log.h"
      :pointmax 4780
      :fsize 4779
      :lastmodtime '(23015 5937 947648 242000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_LOG_H")
          ("SWIFT_LOG_SHUTDOWN" (spp-arg-list nil 3451 . 3453) . 
              ((symbol "alog" 3454 . 3458) (punctuation ":" 3458 . 3459) (punctuation ":" 3459 . 3460) (symbol "Logger" 3460 . 3466) (punctuation ":" 3466 . 3467) (punctuation ":" 3467 . 3468) (symbol "shutdown" 3468 . 3476) (semantic-list "()" 3476 . 3478)))
          ("SWIFT_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 792 . 801) . 
              ((DO "do" 802 . 804) (semantic-list "{                      \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"configure logger use [\"                       \\
                      << content<< \"] failed\"                           \\
                      << std::endl;                                     \\
            SWIFT_ROOT_LOG_CONFIG();                                    \\
        }                                                               \\
    }" 805 . 1427) (WHILE "while" 1427 . 1432) (semantic-list "(0)" 1432 . 1435)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" (spp-arg-list ("n" "c" "typename" "T") 2190 . 2208) . 
              ((TEMPLATE "template" 2209 . 2217) (punctuation "<" 2218 . 2219) (TYPENAME "typename" 2219 . 2227) (symbol "T" 2228 . 2229) (punctuation ">" 2229 . 2230) (symbol "alog" 2237 . 2241) (punctuation ":" 2241 . 2242) (punctuation ":" 2242 . 2243) (symbol "Logger" 2243 . 2249) (punctuation "*" 2250 . 2251) (symbol "c" 2251 . 2252) (punctuation "<" 2252 . 2253) (symbol "T" 2253 . 2254) (punctuation ">" 2254 . 2255) (punctuation ":" 2255 . 2256) (punctuation ":" 2256 . 2257) (symbol "_logger" 2257 . 2264) (punctuation "=" 2303 . 2304) (symbol "alog" 2305 . 2309) (punctuation ":" 2309 . 2310) (punctuation ":" 2310 . 2311) (symbol "Logger" 2311 . 2317) (punctuation ":" 2317 . 2318) (punctuation ":" 2318 . 2319) (symbol "getLogger" 2319 . 2328) (semantic-list "(\"swift.\" #n \".\"  #c)" 2328 . 2349)))
          ("SWIFT_INTERVAL_LOG_TIME" (spp-arg-list ("logInterval" "level" "format" "args...") 4174 . 4211) . 
              ((DO "do" 4225 . 4227) (semantic-list "{                                                                \\
        static int64_t logTimestamp;                                    \\
        int64_t now = autil::TimeUtility::currentTimeInSeconds();       \\
        if (now - logTimestamp > logInterval) {                         \\
            SWIFT_LOG(level, format, ##args);                              \\
            logTimestamp = now;                                         \\
        }                                                               \\
    }" 4228 . 4747) (WHILE "while" 4748 . 4753) (semantic-list "(0)" 4754 . 4757)))
          ("SWIFT_ROOT_LOG_CONFIG" (spp-arg-list nil 168 . 170) . 
              ((symbol "alog" 171 . 175) (punctuation ":" 175 . 176) (punctuation ":" 176 . 177) (symbol "Configurator" 177 . 189) (punctuation ":" 189 . 190) (punctuation ":" 190 . 191) (symbol "configureRootLogger" 191 . 210) (semantic-list "()" 210 . 212)))
          ("SWIFT_LOG_SETUP_TEMPLATE" (spp-arg-list ("n" "c" "T") 1781 . 1789) . 
              ((TEMPLATE "template" 1790 . 1798) (punctuation "<" 1799 . 1800) (TYPENAME "typename" 1800 . 1808) (symbol "T" 1809 . 1810) (punctuation ">" 1810 . 1811) (symbol "alog" 1819 . 1823) (punctuation ":" 1823 . 1824) (punctuation ":" 1824 . 1825) (symbol "Logger" 1825 . 1831) (punctuation "*" 1832 . 1833) (symbol "c" 1833 . 1834) (punctuation "<" 1834 . 1835) (symbol "T" 1835 . 1836) (punctuation ">" 1836 . 1837) (punctuation ":" 1837 . 1838) (punctuation ":" 1838 . 1839) (symbol "_logger" 1839 . 1846) (punctuation "=" 1885 . 1886) (symbol "alog" 1887 . 1891) (punctuation ":" 1891 . 1892) (punctuation ":" 1892 . 1893) (symbol "Logger" 1893 . 1899) (punctuation ":" 1899 . 1900) (punctuation ":" 1900 . 1901) (symbol "getLogger" 1901 . 1910) (semantic-list "(\"swift.\" #n \".\"  #c)" 1910 . 1931)))
          ("SWIFT_DECLARE_AND_SETUP_LOGGER" (spp-arg-list ("n") 3346 . 3349) . 
              ((STATIC "static" 3350 . 3356) (symbol "alog" 3357 . 3361) (punctuation ":" 3361 . 3362) (punctuation ":" 3362 . 3363) (symbol "Logger" 3363 . 3369) (punctuation "*" 3370 . 3371) (symbol "_logger" 3371 . 3378) (punctuation "=" 3386 . 3387) (symbol "alog" 3388 . 3392) (punctuation ":" 3392 . 3393) (punctuation ":" 3393 . 3394) (symbol "Logger" 3394 . 3400) (punctuation ":" 3400 . 3401) (punctuation ":" 3401 . 3402) (symbol "getLogger" 3402 . 3411) (semantic-list "(\"swift.\" #n)" 3411 . 3424)))
          ("SWIFT_LOG_SETUP_TEMPLATE2" (spp-arg-list ("n" "c" "T1" "T2") 1966 . 1979) . 
              ((TEMPLATE "template" 1980 . 1988) (punctuation "<" 1989 . 1990) (TYPENAME "typename" 1990 . 1998) (symbol "T1" 1999 . 2001) (punctuation "," 2001 . 2002) (TYPENAME "typename" 2003 . 2011) (symbol "T2" 2012 . 2014) (punctuation ">" 2014 . 2015) (symbol "alog" 2022 . 2026) (punctuation ":" 2026 . 2027) (punctuation ":" 2027 . 2028) (symbol "Logger" 2028 . 2034) (punctuation "*" 2035 . 2036) (symbol "c" 2036 . 2037) (punctuation "<" 2037 . 2038) (symbol "T1" 2038 . 2040) (punctuation "," 2040 . 2041) (symbol "T2" 2042 . 2044) (punctuation ">" 2044 . 2045) (punctuation ":" 2045 . 2046) (punctuation ":" 2046 . 2047) (symbol "_logger" 2047 . 2054) (punctuation "=" 2096 . 2097) (symbol "alog" 2098 . 2102) (punctuation ":" 2102 . 2103) (punctuation ":" 2103 . 2104) (symbol "Logger" 2104 . 2110) (punctuation ":" 2110 . 2111) (punctuation ":" 2111 . 2112) (symbol "getLogger" 2112 . 2121) (semantic-list "(\"swift.\" #n \".\"  #c)" 2121 . 2142)))
          ("SWIFT_INTERVAL_LOG_COUNT" (spp-arg-list ("logInterval" "level" "format" "args...") 3563 . 3600) . 
              ((DO "do" 3609 . 3611) (semantic-list "{                                                                \\
        static int logCounter;                                          \\
        if (0 == logCounter) {                                          \\
            SWIFT_LOG(level, format, ##args);                              \\
            logCounter = logInterval;                                   \\
        }                                                               \\
        logCounter--;                                                   \\
    }" 3612 . 4131) (WHILE "while" 4132 . 4137) (semantic-list "(0)" 4138 . 4141)))
          ("SWIFT_LOG_DECLARE" (spp-arg-list nil 1605 . 1607) . 
              ((STATIC "static" 1608 . 1614) (symbol "alog" 1615 . 1619) (punctuation ":" 1619 . 1620) (punctuation ":" 1620 . 1621) (symbol "Logger" 1621 . 1627) (punctuation "*" 1628 . 1629) (symbol "_logger" 1629 . 1636)))
          ("SWIFT_LOG" (spp-arg-list ("level" "format" "args...") 2617 . 2641) . ((symbol "ALOG_LOG" 2642 . 2650) (semantic-list "(_logger, alog::LOG_LEVEL_##level, format, ##args)" 2650 . 2700)))
          ("SWIFT_LOG_WITH_NAME" (spp-arg-list ("name" "level" "format" "args...") 2922 . 2952) . ((symbol "ALOG_LOG" 2953 . 2961) (semantic-list "(name, alog::LOG_LEVEL_##level, format, ##args)" 2961 . 3008)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" (spp-arg-list ("n" "c" "typename1" "T1" "typename2" "T2") 2398 . 2433) . 
              ((TEMPLATE "template" 2434 . 2442) (punctuation "<" 2443 . 2444) (symbol "typename1" 2444 . 2453) (symbol "T1" 2454 . 2456) (punctuation "," 2456 . 2457) (symbol "typename2" 2458 . 2467) (symbol "T2" 2468 . 2470) (punctuation ">" 2470 . 2471) (symbol "alog" 2478 . 2482) (punctuation ":" 2482 . 2483) (punctuation ":" 2483 . 2484) (symbol "Logger" 2484 . 2490) (punctuation "*" 2491 . 2492) (symbol "c" 2492 . 2493) (punctuation "<" 2493 . 2494) (symbol "T1" 2494 . 2496) (punctuation "," 2496 . 2497) (symbol "T2" 2498 . 2500) (punctuation ">" 2500 . 2501) (punctuation ":" 2501 . 2502) (punctuation ":" 2502 . 2503) (symbol "_logger" 2503 . 2510) (punctuation "=" 2552 . 2553) (symbol "alog" 2554 . 2558) (punctuation ":" 2558 . 2559) (punctuation ":" 2559 . 2560) (symbol "Logger" 2560 . 2566) (punctuation ":" 2566 . 2567) (punctuation ":" 2567 . 2568) (symbol "getLogger" 2568 . 2577) (semantic-list "(\"swift.\" #n \".\"  #c)" 2577 . 2598)))
          ("SWIFT_LOG_DECLARE_WITH_NAME" (spp-arg-list ("name") 2737 . 2743) . 
              ((STATIC "static" 2744 . 2750) (symbol "alog" 2751 . 2755) (punctuation ":" 2755 . 2756) (punctuation ":" 2756 . 2757) (symbol "Logger" 2757 . 2763) (punctuation "*" 2764 . 2765) (symbol "name" 2765 . 2769)))
          ("SWIFT_LOG_CONFIG" (spp-arg-list ("filename") 237 . 247) . 
              ((DO "do" 248 . 250) (semantic-list "{                         \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"Error!!! Failed to configure logger\"  \\
                      << e.what() << std::endl;                 \\
            exit(-1);                                           \\
        }                                                       \\
    }" 251 . 746) (WHILE "while" 746 . 751) (semantic-list "(0)" 751 . 754)))
          ("SWIFT_ROOT_LOG_SETLEVEL" (spp-arg-list ("level") 1468 . 1475) . 
              ((symbol "alog" 1515 . 1519) (punctuation ":" 1519 . 1520) (punctuation ":" 1520 . 1521) (symbol "Logger" 1521 . 1527) (punctuation ":" 1527 . 1528) (punctuation ":" 1528 . 1529) (symbol "getRootLogger" 1529 . 1542) (semantic-list "()" 1542 . 1544) (punctuation "-" 1544 . 1545) (punctuation ">" 1545 . 1546) (symbol "setLevel" 1546 . 1554) (semantic-list "(alog::LOG_LEVEL_##level)" 1554 . 1579)))
          ("SWIFT_LOG_SETUP" (spp-arg-list ("n" "c") 1662 . 1667) . 
              ((symbol "alog" 1668 . 1672) (punctuation ":" 1672 . 1673) (punctuation ":" 1673 . 1674) (symbol "Logger" 1674 . 1680) (punctuation "*" 1681 . 1682) (symbol "c" 1682 . 1683) (punctuation ":" 1683 . 1684) (punctuation ":" 1684 . 1685) (symbol "_logger" 1685 . 1692) (punctuation "=" 1701 . 1702) (symbol "alog" 1703 . 1707) (punctuation ":" 1707 . 1708) (punctuation ":" 1708 . 1709) (symbol "Logger" 1709 . 1715) (punctuation ":" 1715 . 1716) (punctuation ":" 1716 . 1717) (symbol "getLogger" 1717 . 1726) (semantic-list "(\"swift.\" #n \".\"  #c)" 1726 . 1747)))
          ("SWIFT_LOG_SETUP_WITH_NAME" (spp-arg-list ("name" "n" "c") 2803 . 2815) . 
              ((symbol "alog" 2816 . 2820) (punctuation ":" 2820 . 2821) (punctuation ":" 2821 . 2822) (symbol "Logger" 2822 . 2828) (punctuation "*" 2829 . 2830) (symbol "c" 2830 . 2831) (punctuation ":" 2831 . 2832) (punctuation ":" 2832 . 2833) (symbol "name" 2833 . 2837) (punctuation "=" 2848 . 2849) (symbol "alog" 2850 . 2854) (punctuation ":" 2854 . 2855) (punctuation ":" 2855 . 2856) (symbol "Logger" 2856 . 2862) (punctuation ":" 2862 . 2863) (punctuation ":" 2863 . 2864) (symbol "getLogger" 2864 . 2873) (semantic-list "(\"swift.\" #n \".\"  #c)" 2873 . 2894)))
          ("SWIFT_LOG_FSLIB_ERROR" (spp-arg-list ("ec" "level") 3038 . 3049) . 
              ((DO "do" 3054 . 3056) (semantic-list "{                       \\
        SWIFT_LOG(level, \"fslib errorcode [%d], errormsg [%s]\",         \\
                  ec, fslib::fs::FileSystem::getErrorString(ec).c_str()); \\
    }" 3057 . 3238) (WHILE "while" 3239 . 3244) (semantic-list "(0)" 3245 . 3248)))
          ("SWIFT_LOG_FLUSH" (spp-arg-list nil 3502 . 3504) . 
              ((symbol "alog" 3505 . 3509) (punctuation ":" 3509 . 3510) (punctuation ":" 3510 . 3511) (symbol "Logger" 3511 . 3517) (punctuation ":" 3517 . 3518) (punctuation ":" 3518 . 3519) (symbol "flushAll" 3519 . 3527) (semantic-list "()" 3527 . 3529)))
          )
))
  :file "!ssd!sdd!git!swift!swift_1_7!swift_client!swift!swift!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
