;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "Ha3QueryResourcePrepareOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/common.h" include nil nil [1 24])
            ("ha3/isearch.h" include nil nil [25 49])
            ("ha3/util/Log.h" include nil nil [50 75])
            ("tensorflow/core/framework/op_kernel.h" include (:system-flag t) nil [76 124])
            ("ha3/turing/variant/Ha3RequestVariant.h" include nil nil [125 174])
            ("ha3/turing/ops/SearcherQueryResource.h" include nil nil [175 224])
            ("basic_ops/variant/KvPairVariant.h" include nil nil [225 269])
            ("basic_ops/util/OpUtil.h" include nil nil [270 304])
            ("ha3/turing/ops/SearcherSessionResource.h" include (:system-flag t) nil [305 356])
            ("ha3/search/Ha3ProviderCreator.h" include (:system-flag t) nil [357 399])
            ("suez/turing/common/SharedObjectMap.h" include nil nil [400 447])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [449 476])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [477 506])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [507 527])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [547 554]))                  
                :type "int")
                nil [529 555])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [577 584]))                  
                :type "int")
                nil [557 585])
            ("Ha3QueryResourcePrepareOp" type
               (:superclasses 
                  ( ("tensorflow::OpKernel" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [651 658])
                    ("Ha3QueryResourcePrepareOp" function
                       (:constructor-flag t
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("tensorflow::OpKernelConstruction" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [698 736]))                          
                        :type ("Ha3QueryResourcePrepareOp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [672 784])
                    ("public" label nil (reparse-symbol classsubparts) [785 792])
                    ("private" label nil (reparse-symbol classsubparts) [3176 3184])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [3189 3207]))                  
                :type "class")
                nil [587 3210])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3227 3234])
                    ("" variable (:type ("Ha3QueryResourcePrepareOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3235 3261]))                  
                :type "int")
                nil [3213 3262])
            ("REGISTER_KERNEL_BUILDER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3288 3321])
                    ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3347 3365])
                    ("" variable (:type ("Ha3QueryResourcePrepareOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3391 3417]))                  
                :type "int")
                nil [3264 3418])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3438 3445]))                  
                :type "int")
                nil [3420 3446]))          
      :file "Ha3QueryResourcePrepareOp.cpp"
      :pointmax 3447
      :fsize 3286
      :lastmodtime '(23423 31259 857401 321000)
      :unmatched-syntax '((thing 853 . 3175) (thing 844 . 852) (thing 809 . 843) (thing 802 . 809) (thing 797 . 801) (thing 663 . 671) (thing 3292 . 3321) (thing 3346 . 3347) (thing 3353 . 3365)))
    (semanticdb-table "Ha3ResultMergeOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/turing/ops/Ha3ResultMergeOp.h" include (:system-flag t) nil [1 45])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [47 67])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [68 95])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [96 125])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [126 158])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("rank" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178 183]))                  
                :type "int")
                nil [160 184])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [203 209]))                  
                :type "int")
                nil [185 210])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [229 236]))                  
                :type "int")
                nil [211 237])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [256 263]))                  
                :type "int")
                nil [238 264])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [283 290]))                  
                :type "int")
                nil [265 291])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [312 319]))                  
                :type "int")
                nil [292 320])
            ("Compute" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("ctx" variable
                       (:pointer 1
                        :type ("tensorflow::OpKernelContext" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [353 386]))                  
                :type "void")
                nil [322 1880])
            ("mergeResults" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1918 1939])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1958 1996])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2015 2038]))                  
                :type "void")
                nil [1882 2918])
            ("mergeErrors" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2959 2980])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2998 3036]))                  
                :type "void")
                nil [2924 3319])
            ("mergeTracer" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3360 3383])
                    ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3401 3422])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3440 3478]))                  
                :type "void")
                nil [3325 3935])
            ("createAggFunResultMerger" function
               (:pointer 1
                :parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("funNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4013 4044])
                    ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4053 4104]))                  
                :type ("AggFunResultMerger" type (:type "class") nil nil))
                nil [3941 4693])
            ("mergeOneAggregateResult" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4773 4806])
                    ("aggOffset" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4807 4824])
                    ("groupExprStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4825 4852]))                  
                :type ("AggregateResultPtr" type (:type "class") nil nil))
                nil [4703 7078])
            ("checkAggResults" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("aggClause" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AggregateClause" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7127 7160])
                    ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7182 7215]))                  
                :type "bool")
                nil [7088 7648])
            ("checkAggResult" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("resultPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7688 7715])
                    ("expectSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7736 7754]))                  
                :type "bool")
                nil [7650 8074])
            ("mergeAggResults" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8119 8140])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8162 8200])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8222 8245]))                  
                :type "void")
                nil [8080 9451])
            ("mergeCoveredRanges" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9499 9520])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9545 9583]))                  
                :type "void")
                nil [9457 11151])
            ("mergeGlobalVariables" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11201 11222])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11249 11287]))                  
                :type "void")
                nil [11157 11485])
            ("findFirstNoneEmptyResult" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11544 11577])
                    ("allMatchDocsSize" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11613 11640]))                  
                :type ("ResultPtr" type (:type "class") nil nil))
                nil [11491 12105])
            ("doMergeMatchDocsMeta" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12201 12239])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [12248 12261])
                    ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12262 12306])
                    ("matchDocVect" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12315 12360]))                  
                :type ("Ha3ResultMergeOp::MergeMatchDocResultMeta" type (:type "class") nil nil))
                nil [12111 13309])
            ("mergeMatchDocs" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13353 13374])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [13395 13433])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13454 13477])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [13498 13511]))                  
                :type "void")
                nil [13315 14836])
            ("mergePhaseOneSearchInfos" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14890 14911])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14942 14980]))                  
                :type "void")
                nil [14842 15660])
            ("mergeHits" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15699 15720])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [15736 15774])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [15790 15803]))                  
                :type "void")
                nil [15666 16572])
            ("mergePhaseTwoSearchInfos" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16627 16648])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16679 16717]))                  
                :type "void")
                nil [16579 17250])
            ("judgeHasMatchDoc" function
               (:parent "Ha3ResultMergeOp"
                :arguments 
                  ( ("outputResult" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17292 17322]))                  
                :type "bool")
                nil [17252 17464])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17480 17487])
                    ("" variable (:type ("Ha3ResultMergeOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17488 17505]))                  
                :type "int")
                nil [17466 17506])
            ("REGISTER_KERNEL_BUILDER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17532 17556])
                    ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17582 17600])
                    ("" variable (:type ("Ha3ResultMergeOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17626 17643]))                  
                :type "int")
                nil [17508 17644])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17664 17671]))                  
                :type "int")
                nil [17646 17672]))          
      :file "Ha3ResultMergeOp.cpp"
      :pointmax 17673
      :fsize 17672
      :lastmodtime '(23410 42948 397654 589000)
      :unmatched-syntax '((thing 17536 . 17556) (thing 17581 . 17582) (thing 17588 . 17600)))

    (semanticdb-table "SearcherQueryResource.h"
      :file "SearcherQueryResource.h"
      :fsize 1404
      :lastmodtime '(23422 25318 239641 713000))


    (semanticdb-table "OpDefs.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/op.h" include nil nil [1 42])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [43 97])
            ("tensorflow/core/framework/common_shape_fns.h" include nil nil [98 153])
            ("tensorflow/core/lib/core/errors.h" include nil nil [154 198])
            ("ha3/common.h" include (:system-flag t) nil [199 222])
            ("ha3/isearch.h" include (:system-flag t) nil [223 247])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [249 276])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [298 305]))                  
                :type "int")
                nil [278 306])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [362 391])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [452 481])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [542 571])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [666 698])
            ("Attr" function
               (:prototype-flag t
                :type "int")
                nil [884 930])
            ("Attr" function
               (:prototype-flag t
                :type "int")
                nil [1127 1173])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [1429 1457])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [1522 1556])
            ("Attr" function
               (:prototype-flag t
                :type "int")
                nil [1821 1867])
            ("Attr" function
               (:prototype-flag t
                :type "int")
                nil [2190 2220])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [2418 2447])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [2613 2646])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [2743 2776])
            ("Input" function
               (:prototype-flag t
                :type "int")
                nil [2815 2844])
            ("Input" function
               (:prototype-flag t
                :type "int")
                nil [2880 2909])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3008 3041])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3110 3143])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3242 3275])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3374 3404])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3505 3541])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3628 3665])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3737 3771])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3848 3887])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [3960 3995])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4092 4121])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4243 4273])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4410 4435])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4600 4636])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4757 4793])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4889 4921])
            ("Output" function
               (:prototype-flag t
                :type "int")
                nil [4992 5029])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5049 5056]))                  
                :type "int")
                nil [5031 5057]))          
      :file "OpDefs.cpp"
      :pointmax 5058
      :fsize 3959
      :lastmodtime '(23423 28679 562324 341000)
      :unmatched-syntax '((thing 3512 . 3539) (thing 3504 . 3505) (thing 3484 . 3503) (thing 3485 . 3502) (thing 3478 . 3484) (thing 3477 . 3478) (thing 3453 . 3476) (thing 3454 . 3475) (thing 3448 . 3453) (thing 3447 . 3448) (thing 3417 . 3446) (thing 3418 . 3445) (thing 3406 . 3417) (thing 3381 . 3402) (thing 3373 . 3374) (thing 3350 . 3372) (thing 3351 . 3371) (thing 3345 . 3350) (thing 3344 . 3345) (thing 3320 . 3343) (thing 3321 . 3342) (thing 3315 . 3320) (thing 3314 . 3315) (thing 3288 . 3313) (thing 3289 . 3312) (thing 3277 . 3288) (thing 3249 . 3273) (thing 3241 . 3242) (thing 3218 . 3240) (thing 3219 . 3239) (thing 3213 . 3218) (thing 3212 . 3213) (thing 3212 . 3213) (thing 3188 . 3211) (thing 3188 . 3211) (thing 3189 . 3210) (thing 3189 . 3210) (thing 3183 . 3188) (thing 3183 . 3188) (thing 3182 . 3183) (thing 3182 . 3183) (thing 3156 . 3181) (thing 3156 . 3181) (thing 3157 . 3180) (thing 3157 . 3180) (thing 3145 . 3156) (thing 3145 . 3156) (thing 3117 . 3141) (thing 3117 . 3141) (thing 3109 . 3110) (thing 3109 . 3110) (thing 3086 . 3108) (thing 3086 . 3108) (thing 3087 . 3107) (thing 3087 . 3107) (thing 3081 . 3086) (thing 3081 . 3086) (thing 3080 . 3081) (thing 3080 . 3081) (thing 3054 . 3079) (thing 3054 . 3079) (thing 3055 . 3078) (thing 3055 . 3078) (thing 3043 . 3054) (thing 3043 . 3054) (thing 3015 . 3039) (thing 3015 . 3039) (thing 3007 . 3008) (thing 3007 . 3008) (thing 2984 . 3006) (thing 2984 . 3006) (thing 2985 . 3005) (thing 2985 . 3005) (thing 2979 . 2984) (thing 2979 . 2984) (thing 2978 . 2979) (thing 2978 . 2979) (thing 2954 . 2977) (thing 2954 . 2977) (thing 2955 . 2976) (thing 2955 . 2976) (thing 2949 . 2954) (thing 2949 . 2954) (thing 2948 . 2949) (thing 2948 . 2949) (thing 2922 . 2947) (thing 2922 . 2947) (thing 2923 . 2946) (thing 2923 . 2946) (thing 2911 . 2922) (thing 2911 . 2922) (thing 2886 . 2907) (thing 2886 . 2907) (thing 2879 . 2880) (thing 2879 . 2880) (thing 2857 . 2878) (thing 2857 . 2878) (thing 2858 . 2877) (thing 2858 . 2877) (thing 2846 . 2857) (thing 2846 . 2857) (thing 2821 . 2842) (thing 2821 . 2842) (thing 2814 . 2815) (thing 2814 . 2815) (thing 2789 . 2813) (thing 2789 . 2813) (thing 2790 . 2812) (thing 2790 . 2812) (thing 2778 . 2789) (thing 2778 . 2789) (thing 2750 . 2774) (thing 2750 . 2774) (thing 2742 . 2743) (thing 2742 . 2743) (thing 2719 . 2741) (thing 2719 . 2741) (thing 2720 . 2740) (thing 2720 . 2740) (thing 2714 . 2719) (thing 2714 . 2719) (thing 2713 . 2714) (thing 2713 . 2714) (thing 2689 . 2712) (thing 2689 . 2712) (thing 2690 . 2711) (thing 2690 . 2711) (thing 2684 . 2689) (thing 2684 . 2689) (thing 2683 . 2684) (thing 2683 . 2684) (thing 2659 . 2682) (thing 2659 . 2682) (thing 2660 . 2681) (thing 2660 . 2681) (thing 2648 . 2659) (thing 2648 . 2659) (thing 2620 . 2644) (thing 2620 . 2644) (thing 2612 . 2613) (thing 2612 . 2613) (thing 2584 . 2611) (thing 2584 . 2611) (thing 2585 . 2610) (thing 2585 . 2610) (thing 2579 . 2584) (thing 2579 . 2584) (thing 2578 . 2579) (thing 2578 . 2579) (thing 2551 . 2577) (thing 2551 . 2577) (thing 2552 . 2576) (thing 2552 . 2576) (thing 2546 . 2551) (thing 2546 . 2551) (thing 2545 . 2546) (thing 2545 . 2546) (thing 2522 . 2544) (thing 2522 . 2544) (thing 2523 . 2543) (thing 2523 . 2543) (thing 2517 . 2522) (thing 2517 . 2522) (thing 2516 . 2517) (thing 2516 . 2517) (thing 2493 . 2515) (thing 2493 . 2515) (thing 2494 . 2514) (thing 2494 . 2514) (thing 2488 . 2493) (thing 2488 . 2493) (thing 2487 . 2488) (thing 2487 . 2488) (thing 2460 . 2486) (thing 2460 . 2486) (thing 2461 . 2485) (thing 2461 . 2485) (thing 2449 . 2460) (thing 2449 . 2460) (thing 2425 . 2445) (thing 2425 . 2445) (thing 2417 . 2418) (thing 2417 . 2418) (thing 2390 . 2416) (thing 2390 . 2416) (thing 2391 . 2415) (thing 2391 . 2415) (thing 2385 . 2390) (thing 2385 . 2390) (thing 2384 . 2385) (thing 2384 . 2385) (thing 2356 . 2383) (thing 2356 . 2383) (thing 2357 . 2382) (thing 2357 . 2382) (thing 2351 . 2356) (thing 2351 . 2356) (thing 2350 . 2351) (thing 2350 . 2351) (thing 2323 . 2349) (thing 2323 . 2349) (thing 2324 . 2348) (thing 2324 . 2348) (thing 2318 . 2323) (thing 2318 . 2323) (thing 2317 . 2318) (thing 2317 . 2318) (thing 2294 . 2316) (thing 2294 . 2316) (thing 2295 . 2315) (thing 2295 . 2315) (thing 2289 . 2294) (thing 2289 . 2294) (thing 2288 . 2289) (thing 2288 . 2289) (thing 2264 . 2287) (thing 2264 . 2287) (thing 2265 . 2286) (thing 2265 . 2286) (thing 2259 . 2264) (thing 2259 . 2264) (thing 2258 . 2259) (thing 2258 . 2259) (thing 2233 . 2257) (thing 2233 . 2257) (thing 2234 . 2256) (thing 2234 . 2256) (thing 2222 . 2233) (thing 2222 . 2233) (thing 2195 . 2218) (thing 2195 . 2218) (thing 2189 . 2190) (thing 2189 . 2190) (thing 2157 . 2188) (thing 2157 . 2188) (thing 2158 . 2187) (thing 2158 . 2187) (thing 2151 . 2157) (thing 2151 . 2157) (thing 2150 . 2151) (thing 2150 . 2151) (thing 2119 . 2149) (thing 2119 . 2149) (thing 2120 . 2148) (thing 2120 . 2148) (thing 2113 . 2119) (thing 2113 . 2119) (thing 2112 . 2113) (thing 2112 . 2113) (thing 2085 . 2111) (thing 2085 . 2111) (thing 2086 . 2110) (thing 2086 . 2110) (thing 2079 . 2085) (thing 2079 . 2085) (thing 2078 . 2079) (thing 2078 . 2079) (thing 2056 . 2077) (thing 2056 . 2077) (thing 2057 . 2076) (thing 2057 . 2076) (thing 2051 . 2056) (thing 2051 . 2056) (thing 2050 . 2051) (thing 2050 . 2051) (thing 2022 . 2049) (thing 2022 . 2049) (thing 2023 . 2048) (thing 2023 . 2048) (thing 2017 . 2022) (thing 2017 . 2022) (thing 2016 . 2017) (thing 2016 . 2017) (thing 1989 . 2015) (thing 1989 . 2015) (thing 1990 . 2014) (thing 1990 . 2014) (thing 1984 . 1989) (thing 1984 . 1989) (thing 1983 . 1984) (thing 1983 . 1984) (thing 1961 . 1982) (thing 1961 . 1982) (thing 1962 . 1981) (thing 1962 . 1981) (thing 1956 . 1961) (thing 1956 . 1961) (thing 1955 . 1956) (thing 1955 . 1956) (thing 1932 . 1954) (thing 1932 . 1954) (thing 1933 . 1953) (thing 1933 . 1953) (thing 1927 . 1932) (thing 1927 . 1932) (thing 1926 . 1927) (thing 1926 . 1927) (thing 1902 . 1925) (thing 1902 . 1925) (thing 1903 . 1924) (thing 1903 . 1924) (thing 1897 . 1902) (thing 1897 . 1902) (thing 1896 . 1897) (thing 1896 . 1897) (thing 1880 . 1895) (thing 1880 . 1895) (thing 1881 . 1894) (thing 1881 . 1894) (thing 1869 . 1880) (thing 1869 . 1880) (thing 1826 . 1865) (thing 1826 . 1865) (thing 1820 . 1821) (thing 1820 . 1821) (thing 1791 . 1819) (thing 1791 . 1819) (thing 1792 . 1818) (thing 1792 . 1818) (thing 1785 . 1791) (thing 1785 . 1791) (thing 1784 . 1785) (thing 1784 . 1785) (thing 1757 . 1783) (thing 1757 . 1783) (thing 1758 . 1782) (thing 1758 . 1782) (thing 1751 . 1757) (thing 1751 . 1757) (thing 1750 . 1751) (thing 1750 . 1751) (thing 1722 . 1749) (thing 1722 . 1749) (thing 1723 . 1748) (thing 1723 . 1748) (thing 1716 . 1722) (thing 1716 . 1722) (thing 1715 . 1716) (thing 1715 . 1716) (thing 1688 . 1714) (thing 1688 . 1714) (thing 1689 . 1713) (thing 1689 . 1713) (thing 1682 . 1688) (thing 1682 . 1688) (thing 1681 . 1682) (thing 1681 . 1682) (thing 1654 . 1680) (thing 1654 . 1680) (thing 1655 . 1679) (thing 1655 . 1679) (thing 1648 . 1654) (thing 1648 . 1654) (thing 1647 . 1648) (thing 1647 . 1648) (thing 1620 . 1646) (thing 1620 . 1646) (thing 1621 . 1645) (thing 1621 . 1645) (thing 1614 . 1620) (thing 1614 . 1620) (thing 1613 . 1614) (thing 1613 . 1614) (thing 1589 . 1612) (thing 1589 . 1612) (thing 1590 . 1611) (thing 1590 . 1611) (thing 1584 . 1589) (thing 1584 . 1589) (thing 1583 . 1584) (thing 1583 . 1584) (thing 1569 . 1582) (thing 1569 . 1582) (thing 1570 . 1581) (thing 1570 . 1581) (thing 1558 . 1569) (thing 1558 . 1569) (thing 1529 . 1554) (thing 1529 . 1554) (thing 1529 . 1554) (thing 1521 . 1522) (thing 1521 . 1522) (thing 1521 . 1522) (thing 1497 . 1520) (thing 1497 . 1520) (thing 1497 . 1520) (thing 1498 . 1519) (thing 1498 . 1519) (thing 1498 . 1519) (thing 1492 . 1497) (thing 1492 . 1497) (thing 1492 . 1497) (thing 1491 . 1492) (thing 1491 . 1492) (thing 1491 . 1492) (thing 1470 . 1490) (thing 1470 . 1490) (thing 1470 . 1490) (thing 1471 . 1489) (thing 1471 . 1489) (thing 1471 . 1489) (thing 1459 . 1470) (thing 1459 . 1470) (thing 1459 . 1470) (thing 1436 . 1455) (thing 1436 . 1455) (thing 1436 . 1455) (thing 1428 . 1429) (thing 1428 . 1429) (thing 1428 . 1429) (thing 1401 . 1427) (thing 1401 . 1427) (thing 1401 . 1427) (thing 1402 . 1426) (thing 1402 . 1426) (thing 1402 . 1426) (thing 1395 . 1401) (thing 1395 . 1401) (thing 1395 . 1401) (thing 1394 . 1395) (thing 1394 . 1395) (thing 1394 . 1395) (thing 1366 . 1393) (thing 1366 . 1393) (thing 1366 . 1393) (thing 1367 . 1392) (thing 1367 . 1392) (thing 1367 . 1392) (thing 1360 . 1366) (thing 1360 . 1366) (thing 1360 . 1366) (thing 1359 . 1360) (thing 1359 . 1360) (thing 1359 . 1360) (thing 1332 . 1358) (thing 1332 . 1358) (thing 1332 . 1358) (thing 1333 . 1357) (thing 1333 . 1357) (thing 1333 . 1357) (thing 1326 . 1332) (thing 1326 . 1332) (thing 1326 . 1332) (thing 1325 . 1326) (thing 1325 . 1326) (thing 1325 . 1326) (thing 1303 . 1324) (thing 1303 . 1324) (thing 1303 . 1324) (thing 1304 . 1323) (thing 1304 . 1323) (thing 1304 . 1323) (thing 1297 . 1303) (thing 1297 . 1303) (thing 1297 . 1303) (thing 1296 . 1297) (thing 1296 . 1297) (thing 1296 . 1297) (thing 1273 . 1295) (thing 1273 . 1295) (thing 1273 . 1295) (thing 1274 . 1294) (thing 1274 . 1294) (thing 1274 . 1294) (thing 1267 . 1273) (thing 1267 . 1273) (thing 1267 . 1273) (thing 1266 . 1267) (thing 1266 . 1267) (thing 1266 . 1267) (thing 1243 . 1265) (thing 1243 . 1265) (thing 1243 . 1265) (thing 1244 . 1264) (thing 1244 . 1264) (thing 1244 . 1264) (thing 1238 . 1243) (thing 1238 . 1243) (thing 1238 . 1243) (thing 1237 . 1238) (thing 1237 . 1238) (thing 1237 . 1238) (thing 1213 . 1236) (thing 1213 . 1236) (thing 1213 . 1236) (thing 1214 . 1235) (thing 1214 . 1235) (thing 1214 . 1235) (thing 1208 . 1213) (thing 1208 . 1213) (thing 1208 . 1213) (thing 1207 . 1208) (thing 1207 . 1208) (thing 1207 . 1208) (thing 1186 . 1206) (thing 1186 . 1206) (thing 1186 . 1206) (thing 1187 . 1205) (thing 1187 . 1205) (thing 1187 . 1205) (thing 1175 . 1186) (thing 1175 . 1186) (thing 1175 . 1186) (thing 1132 . 1171) (thing 1132 . 1171) (thing 1132 . 1171) (thing 1126 . 1127) (thing 1126 . 1127) (thing 1126 . 1127) (thing 1093 . 1125) (thing 1093 . 1125) (thing 1093 . 1125) (thing 1094 . 1124) (thing 1094 . 1124) (thing 1094 . 1124) (thing 1087 . 1093) (thing 1087 . 1093) (thing 1087 . 1093) (thing 1086 . 1087) (thing 1086 . 1087) (thing 1086 . 1087) (thing 1052 . 1085) (thing 1052 . 1085) (thing 1052 . 1085) (thing 1053 . 1084) (thing 1053 . 1084) (thing 1053 . 1084) (thing 1046 . 1052) (thing 1046 . 1052) (thing 1046 . 1052) (thing 1045 . 1046) (thing 1045 . 1046) (thing 1045 . 1046) (thing 1008 . 1044) (thing 1008 . 1044) (thing 1008 . 1044) (thing 1009 . 1043) (thing 1009 . 1043) (thing 1009 . 1043) (thing 1002 . 1008) (thing 1002 . 1008) (thing 1002 . 1008) (thing 1001 . 1002) (thing 1001 . 1002) (thing 1001 . 1002) (thing 978 . 1000) (thing 978 . 1000) (thing 978 . 1000) (thing 979 . 999) (thing 979 . 999) (thing 979 . 999) (thing 973 . 978) (thing 973 . 978) (thing 973 . 978) (thing 972 . 973) (thing 972 . 973) (thing 972 . 973) (thing 943 . 971) (thing 943 . 971) (thing 943 . 971) (thing 944 . 970) (thing 944 . 970) (thing 944 . 970) (thing 932 . 943) (thing 932 . 943) (thing 932 . 943) (thing 889 . 928) (thing 889 . 928) (thing 889 . 928) (thing 883 . 884) (thing 883 . 884) (thing 883 . 884) (thing 843 . 882) (thing 843 . 882) (thing 843 . 882) (thing 844 . 881) (thing 844 . 881) (thing 844 . 881) (thing 837 . 843) (thing 837 . 843) (thing 837 . 843) (thing 836 . 837) (thing 836 . 837) (thing 836 . 837) (thing 799 . 835) (thing 799 . 835) (thing 799 . 835) (thing 800 . 834) (thing 800 . 834) (thing 800 . 834) (thing 793 . 799) (thing 793 . 799) (thing 793 . 799) (thing 792 . 793) (thing 792 . 793) (thing 792 . 793) (thing 768 . 791) (thing 768 . 791) (thing 768 . 791) (thing 769 . 790) (thing 769 . 790) (thing 769 . 790) (thing 763 . 768) (thing 763 . 768) (thing 763 . 768) (thing 762 . 763) (thing 762 . 763) (thing 762 . 763) (thing 738 . 761) (thing 738 . 761) (thing 738 . 761) (thing 739 . 760) (thing 739 . 760) (thing 739 . 760) (thing 733 . 738) (thing 733 . 738) (thing 733 . 738) (thing 732 . 733) (thing 732 . 733) (thing 732 . 733) (thing 711 . 731) (thing 711 . 731) (thing 711 . 731) (thing 712 . 730) (thing 712 . 730) (thing 712 . 730) (thing 700 . 711) (thing 700 . 711) (thing 700 . 711) (thing 673 . 696) (thing 673 . 696) (thing 673 . 696) (thing 665 . 666) (thing 665 . 666) (thing 665 . 666) (thing 642 . 664) (thing 642 . 664) (thing 642 . 664) (thing 643 . 663) (thing 643 . 663) (thing 643 . 663) (thing 637 . 642) (thing 637 . 642) (thing 637 . 642) (thing 636 . 637) (thing 636 . 637) (thing 636 . 637) (thing 612 . 635) (thing 612 . 635) (thing 612 . 635) (thing 613 . 634) (thing 613 . 634) (thing 613 . 634) (thing 607 . 612) (thing 607 . 612) (thing 607 . 612) (thing 606 . 607) (thing 606 . 607) (thing 606 . 607) (thing 584 . 605) (thing 584 . 605) (thing 584 . 605) (thing 585 . 604) (thing 585 . 604) (thing 585 . 604) (thing 573 . 584) (thing 573 . 584) (thing 573 . 584) (thing 549 . 569) (thing 549 . 569) (thing 549 . 569) (thing 541 . 542) (thing 541 . 542) (thing 541 . 542) (thing 517 . 540) (thing 517 . 540) (thing 517 . 540) (thing 518 . 539) (thing 518 . 539) (thing 518 . 539) (thing 512 . 517) (thing 512 . 517) (thing 512 . 517) (thing 511 . 512) (thing 511 . 512) (thing 511 . 512) (thing 494 . 510) (thing 494 . 510) (thing 494 . 510) (thing 495 . 509) (thing 495 . 509) (thing 495 . 509) (thing 483 . 494) (thing 483 . 494) (thing 483 . 494) (thing 459 . 479) (thing 459 . 479) (thing 459 . 479) (thing 451 . 452) (thing 451 . 452) (thing 451 . 452) (thing 427 . 450) (thing 427 . 450) (thing 427 . 450) (thing 428 . 449) (thing 428 . 449) (thing 428 . 449) (thing 422 . 427) (thing 422 . 427) (thing 422 . 427) (thing 421 . 422) (thing 421 . 422) (thing 421 . 422) (thing 404 . 420) (thing 404 . 420) (thing 404 . 420) (thing 405 . 419) (thing 405 . 419) (thing 405 . 419) (thing 393 . 404) (thing 393 . 404) (thing 393 . 404) (thing 369 . 389) (thing 369 . 389) (thing 369 . 389) (thing 361 . 362) (thing 361 . 362) (thing 361 . 362) (thing 341 . 360) (thing 341 . 360) (thing 341 . 360) (thing 342 . 359) (thing 342 . 359) (thing 342 . 359) (thing 336 . 341) (thing 336 . 341) (thing 336 . 341) (thing 335 . 336) (thing 335 . 336) (thing 335 . 336) (thing 319 . 334) (thing 319 . 334) (thing 319 . 334) (thing 320 . 333) (thing 320 . 333) (thing 320 . 333) (thing 308 . 319) (thing 308 . 319) (thing 308 . 319) (thing 3997 . 4008) (thing 4008 . 4028) (thing 4009 . 4027) (thing 4029 . 4030) (thing 4030 . 4035) (thing 4035 . 4058) (thing 4036 . 4057) (thing 4091 . 4092) (thing 4099 . 4119) (thing 4123 . 4134) (thing 4134 . 4150) (thing 4135 . 4149) (thing 4151 . 4152) (thing 4152 . 4157) (thing 4157 . 4186) (thing 4158 . 4185) (thing 4187 . 4188) (thing 4188 . 4193) (thing 4193 . 4212) (thing 4194 . 4211) (thing 4213 . 4214) (thing 4214 . 4219) (thing 4219 . 4241) (thing 4220 . 4240) (thing 4242 . 4243) (thing 4250 . 4271) (thing 4275 . 4286) (thing 4286 . 4296) (thing 4287 . 4295) (thing 4297 . 4298) (thing 4298 . 4303) (thing 4303 . 4326) (thing 4304 . 4325) (thing 4327 . 4328) (thing 4328 . 4333) (thing 4333 . 4352) (thing 4334 . 4351) (thing 4353 . 4354) (thing 4354 . 4360) (thing 4360 . 4382) (thing 4361 . 4381) (thing 4383 . 4384) (thing 4384 . 4390) (thing 4390 . 4408) (thing 4391 . 4407) (thing 4409 . 4410) (thing 4417 . 4433) (thing 4437 . 4448) (thing 4448 . 4464) (thing 4449 . 4463) (thing 4465 . 4466) (thing 4466 . 4471) (thing 4471 . 4500) (thing 4472 . 4499) (thing 4501 . 4502) (thing 4502 . 4507) (thing 4507 . 4535) (thing 4508 . 4534) (thing 4536 . 4537) (thing 4537 . 4542) (thing 4542 . 4560) (thing 4543 . 4559) (thing 4561 . 4562) (thing 4562 . 4568) (thing 4568 . 4598) (thing 4569 . 4597) (thing 4599 . 4600) (thing 4607 . 4634) (thing 4638 . 4649) (thing 4649 . 4663) (thing 4650 . 4662) (thing 4664 . 4665) (thing 4665 . 4669) (thing 4669 . 4684) (thing 4670 . 4683) (thing 4685 . 4686) (thing 4686 . 4691) (thing 4691 . 4720) (thing 4692 . 4719) (thing 4721 . 4722) (thing 4722 . 4727) (thing 4727 . 4755) (thing 4728 . 4754) (thing 4756 . 4757) (thing 4764 . 4791) (thing 4795 . 4806) (thing 4806 . 4827) (thing 4807 . 4826) (thing 4828 . 4829) (thing 4829 . 4834) (thing 4834 . 4858) (thing 4835 . 4857) (thing 4859 . 4860) (thing 4860 . 4865) (thing 4865 . 4887) (thing 4866 . 4886) (thing 4888 . 4889) (thing 4896 . 4919) (thing 4923 . 4934) (thing 4934 . 4954) (thing 4935 . 4953) (thing 4955 . 4956) (thing 4956 . 4961) (thing 4961 . 4990) (thing 4962 . 4989) (thing 4991 . 4992) (thing 4999 . 5027))))
  :file "!ssd!sdd!git!turing_ha3_compile!source_code!ha3!build!debug64!ha3!turing!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
