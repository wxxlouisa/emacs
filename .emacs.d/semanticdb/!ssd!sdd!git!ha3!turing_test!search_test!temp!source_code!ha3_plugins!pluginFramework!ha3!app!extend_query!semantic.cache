;; Object extend_query/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "extend_query/"
  :tables
  (list
    (semanticdb-table "ExtendQueryProcessor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ExtendQueryProcessor.h" include nil nil [1 34])
            ("autil/StringTokenizer.h" include (:system-flag t) nil [35 69])
            ("autil/StringUtil.h" include (:system-flag t) nil [70 99])
            ("util/ConstUtil.h" include (:system-flag t) nil [100 127])
            ("ha3/qrs/QueryFlatten.h" include (:system-flag t) nil [128 161])
            ("ha3/queryparser/QueryParser.h" include (:system-flag t) nil [162 202])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [204 224])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [225 247])
            ("isearch" using (:type ("isearch" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [248 272])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [291 295]))                  
                :type "int")
                nil [273 296])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [315 320]))                  
                :type "int")
                nil [297 321])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [340 347]))                  
                :type "int")
                nil [322 348])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("queryparser" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [367 379]))                  
                :type "int")
                nil [349 380])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("extend_query" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [402 415]))                  
                :type "int")
                nil [381 416])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [432 436])
                    ("" variable (:type ("ExtendQueryProcessor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [437 458]))                  
                :type "int")
                nil [417 459])
            ("ExtendQueryProcessor::SWITCH_FLAG" variable
               (:default-value "\"ignore_original_query\""
                :type ("string" type (:type "class") nil nil))
                nil [461 528])
            ("ExtendQueryProcessor::EXTEND_QUERYS_FIELD" variable
               (:default-value "\"ExtendQuerys\""
                :type ("string" type (:type "class") nil nil))
                nil [529 595])
            ("ExtendQueryProcessor::EXTEND_QUERYS_SEP1" variable
               (:default-value "';'"
                :type "char")
                nil [596 648])
            ("ExtendQueryProcessor::EXTEND_QUERYS_SEP2" variable
               (:default-value "'#'"
                :type "char")
                nil [649 701])
            ("ExtendQueryProcessor::EXTEND_QUERYS_SEP3" variable
               (:default-value "'|'"
                :type "char")
                nil [702 754])
            ("init" function
               (:parent "ExtendQueryProcessor"
                :arguments 
                  ( ("kvMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyValueMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [788 813])
                    ("resourceReader" variable
                       (:pointer 1
                        :type ("config::ResourceReader" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [846 885]))                  
                :type "bool")
                nil [756 1067])
            ("process" function
               (:parent "ExtendQueryProcessor"
                :arguments 
                  ( ("requestPtr" variable
                       (:reference 1
                        :type ("common::RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1104 1135])
                    ("resultPtr" variable
                       (:reference 1
                        :type ("common::ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1171 1200]))                  
                :type "void")
                nil [1069 3644])
            ("clone" function
               (:parent "ExtendQueryProcessor"
                :type ("QrsProcessorPtr" type (:type "class") nil nil))
                nil [3646 3756])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("extend_query" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3777 3790]))                  
                :type "int")
                nil [3758 3791]))          
      :file "ExtendQueryProcessor.cpp"
      :pointmax 3792
      :fsize 3791
      :lastmodtime '(23236 41664 537723 369000)
      :unmatched-syntax nil)
    (semanticdb-table "ExtendQueryProcessor.h"
      :file "ExtendQueryProcessor.h"
      :fsize 1146
      :lastmodtime '(23235 18478 168841 490000)))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!ha3_plugins!pluginFramework!ha3!app!extend_query!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
