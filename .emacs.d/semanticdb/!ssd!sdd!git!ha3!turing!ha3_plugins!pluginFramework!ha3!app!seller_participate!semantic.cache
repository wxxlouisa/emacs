;; Object seller_participate/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "seller_participate/"
  :tables
  (list
    (semanticdb-table "RenQunMatch.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("RenQunMatch.h" include nil nil [1 25])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("seller_participate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48 67]))                  
                :type "int")
                nil [27 68])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [89 96]))                  
                :type "int")
                nil [71 97])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [116 123]))                  
                :type "int")
                nil [98 124])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("func_expression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [143 159]))                  
                :type "int")
                nil [125 160])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179 186]))                  
                :type "int")
                nil [161 187])
            ("USE_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("plugin_framework" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [207 224]))                  
                :type "int")
                nil [188 225])
            ("isearch" using (:type ("isearch" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [226 250])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("seller_participate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [268 287])
                    ("" variable (:type ("RenQunMatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [288 300]))                  
                :type "int")
                nil [253 301])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("seller_participate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [317 336])
                    ("" variable (:type ("RenQunMatchCreatorImpl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [337 360]))                  
                :type "int")
                nil [302 361])
            ("RQ_INFO_SIZE" variable (:constant-flag t) nil [410 422])
            ("OFFSET_SIZE" variable (:constant-flag t) nil [441 452])
            ("RQ_NUMBER_OFFSET" variable (:constant-flag t) nil [471 487])
            ("beginRequest" function
               (:parent "RenQunMatch"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [526 549])
                    ("dataProvider" variable
                       (:pointer 1
                        :type ("DataProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [558 585]))                  
                :type "bool")
                nil [495 1620])
            ("evaluate" function
               (:parent "RenQunMatch"
                :arguments 
                  ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1652 1680]))                  
                :type ("uint8_t" type (:type "class") nil nil))
                nil [1622 3158])
            ("init" function
               (:parent "RenQunMatchCreatorImpl"
                :arguments 
                  ( ("funcParameter" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyValueMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3194 3227])
                    ("resourceReader" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResourceReaderPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3236 3276]))                  
                :type "bool")
                nil [3160 3852])
            ("createFunction" function
               (:pointer 1
                :parent "RenQunMatchCreatorImpl"
                :arguments 
                  ( ("funcSubExprVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("FunctionSubExprVec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3921 3962]))                  
                :type ("FunctionInterface" type (:type "class") nil nil))
                nil [3854 4042])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("seller_participate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4063 4082]))                  
                :type "int")
                nil [4044 4083]))          
      :file "RenQunMatch.cpp"
      :pointmax 4084
      :fsize 4091
      :lastmodtime '(23220 25686 311398 814000)
      :unmatched-syntax nil
      :lexical-table 
        '(("RQ_INFO_SIZE" . ((number "12" 430 . 432)))
          ("RQ_NUMBER_OFFSET" . ((number "8" 491 . 492)))
          ("OFFSET_SIZE" . ((number "2" 461 . 462)))
          )
)
    (semanticdb-table "RenQunMatch.h"
      :file "RenQunMatch.h"
      :fsize 2265
      :lastmodtime '(23218 5760 974910 211000)))
  :file "!ssd!sdd!git!ha3!turing!ha3_plugins!pluginFramework!ha3!app!seller_participate!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
