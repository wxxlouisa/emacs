;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "Json2FormatOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [19 66])
            ("autil/MultiValueType.h" include (:system-flag t) nil [67 100])
            ("autil/MultiValueCreator.h" include (:system-flag t) nil [101 137])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [138 187])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [188 243])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [244 290])
            ("autil/legacy/rapidjson/document.h" include (:system-flag t) nil [291 335])
            ("autil/legacy/rapidjson/stringbuffer.h" include (:system-flag t) nil [336 384])
            ("autil/legacy/rapidjson/prettywriter.h" include (:system-flag t) nil [385 433])
            ("basic_ops/ops/test/OpTestBase.h" include nil nil [434 476])
            ("suez/turing/common/KvTracerMacro.h" include nil nil [477 522])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [524 544])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [545 567])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [568 593])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [594 621])
            ("autil_rapidjson" using (:type ("autil_rapidjson" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [622 654])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("Json2FormatOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [740 750])
                                    ("makeOp" function
                                       (:arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [767 802]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [755 1252])
                                    ("TestData" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("id" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1310 1315])
                                            ("ids" variable (:type ("vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [1324 1338]))                                          )
                                        (reparse-symbol classsubparts) [1258 1345])
                                    ("fakeMatchDocs" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1408 1441]))                                          )
                                        (reparse-symbol classsubparts) [1351 2065])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2102 2140]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2071 2889])
                                    ("UserType" type
                                       (:members 
                                          ( ("x" variable (:type "int") (reparse-symbol classsubparts) [2921 2927])
                                            ("serialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2952 2978]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2937 2987])
                                            ("deserialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3014 3040]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2997 3049]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [2895 3056])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3093 3133]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3062 3575])
                                    ("runCase" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3620 3655])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3656 3689])
                                            ("expectedStr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3707 3733])
                                            ("prettyWrite" variable
                                               (:default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [3734 3757]))                                          )
                                        (reparse-symbol classsubparts) [3581 4763])
                                    ("runException" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4813 4848])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4849 4882]))                                          )
                                        (reparse-symbol classsubparts) [4769 5310])
                                    ("protected" label nil (reparse-symbol classsubparts) [5312 5322])
                                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5327 5355]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [694 5358])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5857 5875])
                                    ("" variable (:type ("testEmptyAttrInt32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5876 5895]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5850 6085])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6094 6112])
                                    ("" variable (:type ("testEmptyAttrInt64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6113 6132]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6087 6322])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6835 6853])
                                    ("" variable (:type ("testEmptyAttrFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6854 6873]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6828 7053])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7062 7080])
                                    ("" variable (:type ("testEmptyAttrDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7081 7101]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7055 7287])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7801 7819])
                                    ("" variable (:type ("testEmptyAttrString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7820 7840]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7794 8039])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8048 8066])
                                    ("" variable (:type ("testOneAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8067 8082]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8041 8549])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8558 8576])
                                    ("" variable (:type ("testOneAttrIntWithAlias" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8577 8601]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8551 9734])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9743 9761])
                                    ("" variable (:type ("testWithAliasAll" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9762 9779]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9736 11009])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11019 11037])
                                    ("" variable (:type ("testTwoAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11038 11053]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11012 11710])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11719 11737])
                                    ("" variable (:type ("testAttrNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11738 11755]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11712 11979])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11988 12006])
                                    ("" variable (:type ("testAttrNotBuildinType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12007 12030]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11981 12190])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12199 12217])
                                    ("" variable (:type ("testTracerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12218 12235]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [12192 13688])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("Json2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13697 13715])
                                    ("" variable (:type ("testTracerFormatJsonTrace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13716 13742]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [13690 15460]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [674 15463]))                  
                :type "namespace")
                nil [656 15486]))          
      :file "Json2FormatOpTest.cpp"
      :pointmax 15506
      :fsize 15505
      :lastmodtime '(23383 58324 32591 192000)
      :unmatched-syntax '((thing 5360 . 5366) (thing 5367 . 5372) (thing 5373 . 5379) (thing 5380 . 5394) (thing 5395 . 5396) (thing 5397 . 5398) (thing 5398 . 5407) (thing 5407 . 5417) (thing 5417 . 5428) (thing 5428 . 5441) (thing 5441 . 5445) (thing 5445 . 5449) (thing 5449 . 5457) (thing 5457 . 5468) (thing 5468 . 5482) (thing 5482 . 5493) (thing 5493 . 5511) (thing 5511 . 5513) (thing 5513 . 5529) (thing 5529 . 5532) (thing 5532 . 5554) (thing 5554 . 5566) (thing 5566 . 5847) (thing 5847 . 5848) (thing 6324 . 6330) (thing 6331 . 6336) (thing 6337 . 6343) (thing 6344 . 6360) (thing 6361 . 6362) (thing 6363 . 6364) (thing 6364 . 6373) (thing 6373 . 6383) (thing 6383 . 6394) (thing 6394 . 6407) (thing 6407 . 6411) (thing 6411 . 6415) (thing 6415 . 6423) (thing 6423 . 6434) (thing 6434 . 6448) (thing 6448 . 6459) (thing 6459 . 6477) (thing 6477 . 6479) (thing 6479 . 6495) (thing 6495 . 6498) (thing 6498 . 6520) (thing 6520 . 6532) (thing 6532 . 6825) (thing 6825 . 6826) (thing 7289 . 7295) (thing 7296 . 7301) (thing 7302 . 7308) (thing 7309 . 7326) (thing 7327 . 7328) (thing 7329 . 7330) (thing 7330 . 7339) (thing 7339 . 7349) (thing 7349 . 7360) (thing 7360 . 7373) (thing 7373 . 7377) (thing 7377 . 7381) (thing 7381 . 7389) (thing 7389 . 7400) (thing 7400 . 7414) (thing 7414 . 7425) (thing 7425 . 7443) (thing 7443 . 7445) (thing 7445 . 7461) (thing 7461 . 7464) (thing 7464 . 7486) (thing 7486 . 7498) (thing 7498 . 7534) (thing 7534 . 7535) (thing 7535 . 7577) (thing 7577 . 7578) (thing 7578 . 7602) (thing 7602 . 7603) (thing 7603 . 7669) (thing 7669 . 7670) (thing 7670 . 7712) (thing 7712 . 7713) (thing 7713 . 7737) (thing 7737 . 7738) (thing 7738 . 7791) (thing 7791 . 7792)))
    (semanticdb-table "SearcherJson2FormatOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [19 66])
            ("autil/MultiValueType.h" include (:system-flag t) nil [67 100])
            ("autil/MultiValueCreator.h" include (:system-flag t) nil [101 137])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [138 187])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [188 243])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [244 290])
            ("autil/legacy/rapidjson/document.h" include (:system-flag t) nil [291 335])
            ("autil/legacy/rapidjson/stringbuffer.h" include (:system-flag t) nil [336 384])
            ("autil/legacy/rapidjson/prettywriter.h" include (:system-flag t) nil [385 433])
            ("basic_ops/ops/test/OpTestBase.h" include nil nil [434 476])
            ("suez/turing/common/KvTracerMacro.h" include nil nil [477 522])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [524 544])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [545 567])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [568 593])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [594 621])
            ("autil_rapidjson" using (:type ("autil_rapidjson" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [622 654])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("SearcherJson2FormatOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [748 758])
                                    ("makeOp" function
                                       (:arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [775 810]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [763 1090])
                                    ("TestData" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("id" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1148 1153])
                                            ("ids" variable (:type ("vector" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [1162 1176]))                                          )
                                        (reparse-symbol classsubparts) [1096 1183])
                                    ("fakeMatchDocs" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1246 1279]))                                          )
                                        (reparse-symbol classsubparts) [1189 1903])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1940 1978]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1909 2727])
                                    ("UserType" type
                                       (:members 
                                          ( ("x" variable (:type "int") (reparse-symbol classsubparts) [2759 2765])
                                            ("serialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2790 2816]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2775 2825])
                                            ("deserialize" function
                                               (:arguments 
                                                  ( ("buffer" variable
                                                       (:reference 1
                                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2852 2878]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2835 2887]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [2733 2894])
                                    ("fakeMatchDocs" function
                                       (:arguments 
                                          ( ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2931 2971]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2900 3413])
                                    ("runCase" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3458 3493])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3494 3527])
                                            ("expectedStr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3545 3571]))                                          )
                                        (reparse-symbol classsubparts) [3419 3983])
                                    ("runException" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("outputFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4033 4068])
                                            ("datas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("TestData" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4069 4102]))                                          )
                                        (reparse-symbol classsubparts) [3989 4355])
                                    ("protected" label nil (reparse-symbol classsubparts) [4357 4367])
                                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4372 4400]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [694 4403])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4617 4643])
                                    ("" variable (:type ("testEmptyAttrInt32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4644 4663]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4610 4853])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4862 4888])
                                    ("" variable (:type ("testEmptyAttrInt64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4889 4908]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4855 5098])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5314 5340])
                                    ("" variable (:type ("testEmptyAttrFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5341 5360]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5307 5540])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5549 5575])
                                    ("" variable (:type ("testEmptyAttrDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5576 5596]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5542 5782])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5999 6025])
                                    ("" variable (:type ("testEmptyAttrString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6026 6046]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5992 6245])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6254 6280])
                                    ("" variable (:type ("testOneAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6281 6296]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6247 6609])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6618 6644])
                                    ("" variable (:type ("testTwoAttrInt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6645 6660]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6611 7032])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7041 7067])
                                    ("" variable (:type ("testAttrNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7068 7085]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7034 7309])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7318 7344])
                                    ("" variable (:type ("testAttrNotBuildinType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7345 7368]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7311 7528])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7537 7563])
                                    ("" variable (:type ("testTracerFormat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7564 7581]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7530 8523])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("SearcherJson2FormatOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8532 8558])
                                    ("" variable (:type ("testTracerFormatJsonTrace" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8559 8585]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8525 9818]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [674 9821]))                  
                :type "namespace")
                nil [656 9844]))          
      :file "SearcherJson2FormatOpTest.cpp"
      :pointmax 9864
      :fsize 9863
      :lastmodtime '(23383 58404 609521 66000)
      :unmatched-syntax '((thing 4405 . 4411) (thing 4412 . 4417) (thing 4418 . 4424) (thing 4425 . 4439) (thing 4440 . 4441) (thing 4442 . 4443) (thing 4443 . 4452) (thing 4452 . 4456) (thing 4456 . 4484) (thing 4484 . 4486) (thing 4486 . 4490) (thing 4490 . 4491) (thing 4491 . 4507) (thing 4507 . 4510) (thing 4510 . 4514) (thing 4514 . 4515) (thing 4516 . 4517) (thing 4517 . 4553) (thing 4553 . 4555) (thing 4555 . 4559) (thing 4559 . 4560) (thing 4560 . 4576) (thing 4576 . 4579) (thing 4579 . 4583) (thing 4583 . 4584) (thing 4585 . 4586) (thing 4586 . 4607) (thing 4607 . 4608) (thing 5100 . 5106) (thing 5107 . 5112) (thing 5113 . 5119) (thing 5120 . 5136) (thing 5137 . 5138) (thing 5139 . 5140) (thing 5140 . 5149) (thing 5149 . 5153) (thing 5153 . 5181) (thing 5181 . 5183) (thing 5183 . 5187) (thing 5187 . 5188) (thing 5188 . 5204) (thing 5204 . 5207) (thing 5207 . 5211) (thing 5211 . 5212) (thing 5213 . 5214) (thing 5214 . 5250) (thing 5250 . 5252) (thing 5252 . 5256) (thing 5256 . 5257) (thing 5257 . 5273) (thing 5273 . 5276) (thing 5276 . 5280) (thing 5280 . 5281) (thing 5282 . 5283) (thing 5283 . 5304) (thing 5304 . 5305) (thing 5784 . 5790) (thing 5791 . 5796) (thing 5797 . 5803) (thing 5804 . 5821) (thing 5822 . 5823) (thing 5824 . 5825) (thing 5825 . 5834) (thing 5834 . 5838) (thing 5838 . 5866) (thing 5866 . 5868) (thing 5868 . 5872) (thing 5872 . 5873) (thing 5873 . 5889) (thing 5889 . 5892) (thing 5892 . 5896) (thing 5896 . 5897) (thing 5898 . 5899) (thing 5899 . 5935) (thing 5935 . 5937) (thing 5937 . 5941) (thing 5941 . 5942) (thing 5942 . 5958) (thing 5958 . 5961) (thing 5961 . 5965) (thing 5965 . 5966) (thing 5967 . 5968) (thing 5968 . 5989) (thing 5989 . 5990))))
  :file "!ssd!sdd!git!turing_ha3_compile!basic_ops!build!release64!basic_ops!ops!basic!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
