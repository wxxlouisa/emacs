;; Object protocol/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "protocol/"
  :tables
  (list
    (semanticdb-table "Transport.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [299 322]))          
      :file "Transport.proto"
      :pointmax 1853
      :fsize 1852
      :lastmodtime '(23963 42868 955757 944000)
      :unmatched-syntax '((thing 344 . 1852) (thing 332 . 343) (thing 324 . 331) (thing 261 . 296) (thing 260 . 261) (thing 248 . 260) (thing 241 . 247) (thing 235 . 239) (thing 233 . 234) (thing 211 . 232) (thing 204 . 210) (thing 198 . 202) (thing 196 . 197) (thing 176 . 195) (thing 169 . 175) (thing 163 . 167) (thing 161 . 162) (thing 141 . 160) (thing 134 . 140) (thing 103 . 132) (thing 96 . 102) (thing 50 . 94) (thing 43 . 49) (thing 8 . 41)))
    (semanticdb-table "BrokerRequestResponse.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [180 203]))          
      :file "BrokerRequestResponse.proto"
      :pointmax 2688
      :fsize 2687
      :lastmodtime '(23963 42868 954757 981000)
      :unmatched-syntax '((thing 695 . 1401) (thing 679 . 694) (thing 671 . 678) (thing 286 . 669) (thing 268 . 285) (thing 260 . 267) (thing 225 . 258) (thing 211 . 224) (thing 206 . 210) (thing 142 . 177) (thing 141 . 142) (thing 129 . 141) (thing 122 . 128) (thing 85 . 120) (thing 78 . 84) (thing 46 . 76) (thing 39 . 45) (thing 8 . 37) (thing 1403 . 1410) (thing 1411 . 1429) (thing 1430 . 2126) (thing 2128 . 2135) (thing 2136 . 2152) (thing 2153 . 2379) (thing 2381 . 2388) (thing 2389 . 2406) (thing 2407 . 2687)))
    (semanticdb-table "SwiftMessage.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [1 24]))          
      :file "SwiftMessage.proto"
      :pointmax 1148
      :fsize 1147
      :lastmodtime '(23963 42868 955757 944000)
      :unmatched-syntax '((thing 1094 . 1147) (thing 1074 . 1093) (thing 1066 . 1073) (thing 779 . 1064) (thing 762 . 778) (thing 754 . 761) (thing 718 . 752) (thing 709 . 717) (thing 701 . 708) (thing 396 . 699) (thing 388 . 395) (thing 380 . 387) (thing 98 . 378) (thing 91 . 97) (thing 83 . 90) (thing 45 . 80) (thing 44 . 45) (thing 32 . 44) (thing 25 . 31)))
    (semanticdb-table "ErrCode.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [1 24]))          
      :file "ErrCode.proto"
      :pointmax 4197
      :fsize 4196
      :lastmodtime '(23964 10214 591061 658000)
      :unmatched-syntax '((thing 329 . 338) (thing 329 . 338) (thing 329 . 338) (thing 324 . 328) (thing 324 . 328) (thing 324 . 328) (thing 45 . 80) (thing 45 . 80) (thing 45 . 80) (thing 44 . 45) (thing 44 . 45) (thing 44 . 45) (thing 32 . 44) (thing 32 . 44) (thing 32 . 44) (thing 25 . 31) (thing 25 . 31) (thing 25 . 31) (thing 339 . 3954) (thing 339 . 3982) (thing 339 . 3982) (thing 3956 . 3963) (thing 3964 . 3973) (thing 3974 . 4068) (thing 3984 . 3991) (thing 3984 . 3991) (thing 3992 . 4001) (thing 3992 . 4001) (thing 4002 . 4096) (thing 4002 . 4096) (thing 4070 . 4074) (thing 4075 . 4085) (thing 4086 . 4168) (thing 4098 . 4102) (thing 4098 . 4102) (thing 4103 . 4113) (thing 4103 . 4113) (thing 4114 . 4196) (thing 4114 . 4196)))
    (semanticdb-table "AdminRequestResponse.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [119 142]))          
      :file "AdminRequestResponse.proto"
      :pointmax 6020
      :fsize 6019
      :lastmodtime '(23967 4713 104028 256000)
      :unmatched-syntax '((thing 2483 . 2503) (thing 2483 . 2503) (thing 2480 . 2500) (thing 2475 . 2482) (thing 2475 . 2482) (thing 2472 . 2479) (thing 2401 . 2473) (thing 2401 . 2473) (thing 2398 . 2470) (thing 2447 . 2467) (thing 2447 . 2467) (thing 2439 . 2446) (thing 2439 . 2446) (thing 2365 . 2437) (thing 2365 . 2437) (thing 2383 . 2400) (thing 2383 . 2400) (thing 2380 . 2397) (thing 2375 . 2382) (thing 2375 . 2382) (thing 2372 . 2379) (thing 2291 . 2373) (thing 2291 . 2373) (thing 2288 . 2370) (thing 2347 . 2364) (thing 2347 . 2364) (thing 2339 . 2346) (thing 2339 . 2346) (thing 2255 . 2337) (thing 2255 . 2337) (thing 2270 . 2290) (thing 2270 . 2290) (thing 2267 . 2287) (thing 2262 . 2269) (thing 2262 . 2269) (thing 2259 . 2266) (thing 2181 . 2260) (thing 2181 . 2260) (thing 2178 . 2257) (thing 2234 . 2254) (thing 2234 . 2254) (thing 2226 . 2233) (thing 2226 . 2233) (thing 2145 . 2224) (thing 2145 . 2224) (thing 2163 . 2180) (thing 2163 . 2180) (thing 2160 . 2177) (thing 2155 . 2162) (thing 2155 . 2162) (thing 2152 . 2159) (thing 2115 . 2153) (thing 2115 . 2153) (thing 2112 . 2150) (thing 2127 . 2144) (thing 2127 . 2144) (thing 2119 . 2126) (thing 2119 . 2126) (thing 2079 . 2117) (thing 2079 . 2117) (thing 2098 . 2114) (thing 2098 . 2114) (thing 2095 . 2111) (thing 2090 . 2097) (thing 2090 . 2097) (thing 2087 . 2094) (thing 1947 . 2088) (thing 1947 . 2088) (thing 1944 . 2085) (thing 2062 . 2078) (thing 2062 . 2078) (thing 2054 . 2061) (thing 2054 . 2061) (thing 1911 . 2052) (thing 1911 . 2052) (thing 1931 . 1946) (thing 1931 . 1946) (thing 1928 . 1943) (thing 1923 . 1930) (thing 1923 . 1930) (thing 1920 . 1927) (thing 1880 . 1921) (thing 1880 . 1921) (thing 1877 . 1918) (thing 1895 . 1910) (thing 1895 . 1910) (thing 1887 . 1894) (thing 1887 . 1894) (thing 1844 . 1885) (thing 1844 . 1885) (thing 1858 . 1879) (thing 1858 . 1879) (thing 1855 . 1876) (thing 1850 . 1857) (thing 1850 . 1857) (thing 1847 . 1854) (thing 1774 . 1848) (thing 1774 . 1848) (thing 1774 . 1845) (thing 1822 . 1843) (thing 1822 . 1843) (thing 1814 . 1821) (thing 1814 . 1821) (thing 1774 . 1812) (thing 1774 . 1812) (thing 1753 . 1773) (thing 1753 . 1773) (thing 1753 . 1773) (thing 1753 . 1773) (thing 1753 . 1773) (thing 1745 . 1752) (thing 1745 . 1752) (thing 1745 . 1752) (thing 1745 . 1752) (thing 1745 . 1752) (thing 1702 . 1743) (thing 1702 . 1743) (thing 1702 . 1743) (thing 1702 . 1743) (thing 1702 . 1743) (thing 1680 . 1701) (thing 1680 . 1701) (thing 1680 . 1701) (thing 1680 . 1701) (thing 1680 . 1701) (thing 1672 . 1679) (thing 1672 . 1679) (thing 1672 . 1679) (thing 1672 . 1679) (thing 1672 . 1679) (thing 257 . 1670) (thing 257 . 1670) (thing 257 . 1670) (thing 257 . 1670) (thing 257 . 1670) (thing 236 . 256) (thing 236 . 256) (thing 236 . 256) (thing 236 . 256) (thing 236 . 256) (thing 228 . 235) (thing 228 . 235) (thing 228 . 235) (thing 228 . 235) (thing 228 . 235) (thing 223 . 226) (thing 223 . 226) (thing 223 . 226) (thing 223 . 226) (thing 223 . 226) (thing 210 . 222) (thing 210 . 222) (thing 210 . 222) (thing 210 . 222) (thing 210 . 222) (thing 202 . 209) (thing 202 . 209) (thing 202 . 209) (thing 202 . 209) (thing 202 . 209) (thing 163 . 198) (thing 163 . 198) (thing 163 . 198) (thing 163 . 198) (thing 163 . 198) (thing 162 . 163) (thing 162 . 163) (thing 162 . 163) (thing 162 . 163) (thing 162 . 163) (thing 150 . 162) (thing 150 . 162) (thing 150 . 162) (thing 150 . 162) (thing 150 . 162) (thing 143 . 149) (thing 143 . 149) (thing 143 . 149) (thing 143 . 149) (thing 143 . 149) (thing 87 . 117) (thing 87 . 117) (thing 87 . 117) (thing 87 . 117) (thing 87 . 117) (thing 80 . 86) (thing 80 . 86) (thing 80 . 86) (thing 80 . 86) (thing 80 . 86) (thing 46 . 78) (thing 46 . 78) (thing 46 . 78) (thing 46 . 78) (thing 46 . 78) (thing 39 . 45) (thing 39 . 45) (thing 39 . 45) (thing 39 . 45) (thing 39 . 45) (thing 8 . 37) (thing 8 . 37) (thing 8 . 37) (thing 8 . 37) (thing 8 . 37) (thing 2468 . 2544) (thing 2468 . 2544) (thing 2501 . 2577) (thing 2504 . 2580) (thing 2504 . 2580) (thing 2546 . 2553) (thing 2546 . 2553) (thing 2554 . 2575) (thing 2554 . 2575) (thing 2576 . 2664) (thing 2576 . 2664) (thing 2579 . 2586) (thing 2582 . 2589) (thing 2582 . 2589) (thing 2587 . 2608) (thing 2590 . 2611) (thing 2590 . 2611) (thing 2609 . 2697) (thing 2612 . 2700) (thing 2612 . 2700) (thing 2666 . 2673) (thing 2666 . 2673) (thing 2674 . 2696) (thing 2674 . 2696) (thing 2697 . 2922) (thing 2697 . 2922) (thing 2699 . 2706) (thing 2702 . 2709) (thing 2702 . 2709) (thing 2707 . 2729) (thing 2710 . 2732) (thing 2710 . 2732) (thing 2730 . 2955) (thing 2733 . 2958) (thing 2733 . 2958) (thing 2924 . 2928) (thing 2924 . 2928) (thing 2929 . 2939) (thing 2929 . 2939) (thing 2940 . 3048) (thing 2940 . 3048) (thing 2957 . 2961) (thing 2960 . 2964) (thing 2960 . 2964) (thing 2962 . 2972) (thing 2965 . 2975) (thing 2965 . 2975) (thing 2973 . 3081) (thing 2976 . 3084) (thing 2976 . 3084) (thing 3050 . 3057) (thing 3050 . 3057) (thing 3058 . 3076) (thing 3058 . 3076) (thing 3077 . 3148) (thing 3077 . 3148) (thing 3083 . 3090) (thing 3086 . 3093) (thing 3086 . 3093) (thing 3091 . 3109) (thing 3094 . 3112) (thing 3094 . 3112) (thing 3110 . 3181) (thing 3113 . 3184) (thing 3113 . 3184) (thing 3150 . 3157) (thing 3150 . 3157) (thing 3158 . 3170) (thing 3158 . 3170) (thing 3171 . 3279) (thing 3171 . 3279) (thing 3183 . 3190) (thing 3186 . 3193) (thing 3186 . 3193) (thing 3191 . 3203) (thing 3194 . 3206) (thing 3194 . 3206) (thing 3204 . 3312) (thing 3207 . 3315) (thing 3207 . 3315) (thing 3281 . 3288) (thing 3281 . 3288) (thing 3289 . 3308) (thing 3289 . 3308) (thing 3309 . 3394) (thing 3309 . 3394) (thing 3314 . 3321) (thing 3317 . 3324) (thing 3317 . 3324) (thing 3322 . 3341) (thing 3325 . 3344) (thing 3325 . 3344) (thing 3342 . 3427) (thing 3345 . 3430) (thing 3345 . 3430) (thing 3396 . 3400) (thing 3396 . 3400) (thing 3401 . 3415) (thing 3401 . 3415) (thing 3415 . 3487) (thing 3415 . 3487) (thing 3429 . 3433) (thing 3432 . 3436) (thing 3432 . 3436) (thing 3434 . 3448) (thing 3437 . 3451) (thing 3437 . 3451) (thing 3448 . 3520) (thing 3451 . 3523) (thing 3451 . 3523) (thing 3489 . 3496) (thing 3489 . 3496) (thing 3497 . 3509) (thing 3497 . 3509) (thing 3510 . 3815) (thing 3510 . 3815) (thing 3522 . 3529) (thing 3525 . 3532) (thing 3525 . 3532) (thing 3530 . 3542) (thing 3533 . 3545) (thing 3533 . 3545) (thing 3543 . 3848) (thing 3546 . 3851) (thing 3546 . 3851) (thing 3817 . 3824) (thing 3817 . 3824) (thing 3825 . 3845) (thing 3825 . 3845) (thing 3846 . 3926) (thing 3846 . 3926) (thing 3850 . 3857) (thing 3853 . 3860) (thing 3853 . 3860) (thing 3858 . 3878) (thing 3861 . 3881) (thing 3861 . 3881) (thing 3879 . 3959) (thing 3882 . 3962) (thing 3882 . 3962) (thing 3928 . 3935) (thing 3928 . 3935) (thing 3936 . 3950) (thing 3936 . 3950) (thing 3951 . 4096) (thing 3951 . 4096) (thing 3961 . 3968) (thing 3964 . 3971) (thing 3964 . 3971) (thing 3969 . 3983) (thing 3972 . 3986) (thing 3972 . 3986) (thing 3984 . 4129) (thing 3987 . 4132) (thing 3987 . 4132) (thing 4098 . 4105) (thing 4098 . 4105) (thing 4106 . 4128) (thing 4106 . 4128) (thing 4129 . 4210) (thing 4129 . 4210) (thing 4131 . 4138) (thing 4134 . 4141) (thing 4134 . 4141) (thing 4139 . 4161) (thing 4142 . 4164) (thing 4142 . 4164) (thing 4162 . 4243) (thing 4165 . 4246) (thing 4165 . 4246) (thing 4212 . 4219) (thing 4212 . 4219) (thing 4220 . 4231) (thing 4220 . 4231) (thing 4232 . 4406) (thing 4232 . 4406) (thing 4245 . 4252) (thing 4248 . 4255) (thing 4248 . 4255) (thing 4253 . 4264) (thing 4256 . 4267) (thing 4256 . 4267) (thing 4265 . 4439) (thing 4268 . 4442) (thing 4268 . 4442) (thing 4408 . 4415) (thing 4408 . 4415) (thing 4416 . 4435) (thing 4416 . 4435) (thing 4436 . 4514) (thing 4436 . 4514) (thing 4441 . 4448) (thing 4444 . 4451) (thing 4444 . 4451) (thing 4449 . 4468) (thing 4452 . 4471) (thing 4452 . 4471) (thing 4469 . 4547) (thing 4472 . 4550) (thing 4472 . 4550) (thing 4516 . 4523) (thing 4516 . 4523) (thing 4524 . 4536) (thing 4524 . 4536) (thing 4537 . 4664) (thing 4537 . 4664) (thing 4549 . 4556) (thing 4552 . 4559) (thing 4552 . 4559) (thing 4557 . 4569) (thing 4560 . 4572) (thing 4560 . 4572) (thing 4570 . 4697) (thing 4573 . 4700) (thing 4573 . 4700) (thing 4825 . 4832) (thing 4825 . 4832) (thing 4833 . 4858) (thing 4833 . 4858) (thing 4858 . 4865) (thing 4859 . 4898) (thing 4859 . 4898) (thing 4861 . 4868) (thing 4861 . 4868) (thing 4866 . 4891) (thing 4869 . 4894) (thing 4869 . 4894) (thing 4892 . 4931) (thing 4895 . 4934) (thing 4895 . 4934) (thing 4900 . 4907) (thing 4900 . 4907) (thing 4908 . 4934) (thing 4908 . 4934) (thing 4933 . 4940) (thing 4935 . 4976) (thing 4935 . 4976) (thing 4936 . 4943) (thing 4936 . 4943) (thing 4941 . 4967) (thing 4944 . 4970) (thing 4944 . 4970) (thing 4968 . 5009) (thing 4971 . 5012) (thing 4971 . 5012) (thing 4978 . 4985) (thing 4978 . 4985) (thing 4986 . 5013) (thing 4986 . 5013) (thing 5011 . 5018) (thing 5014 . 5017) (thing 5014 . 5017) (thing 5014 . 5021) (thing 5014 . 5021) (thing 5019 . 5026) (thing 5019 . 5026) (thing 5019 . 5046) (thing 5022 . 5049) (thing 5022 . 5049) (thing 5027 . 5055) (thing 5027 . 5055) (thing 5047 . 5050) (thing 5050 . 5053) (thing 5050 . 5053) (thing 5052 . 5059) (thing 5055 . 5062) (thing 5055 . 5062) (thing 5056 . 5097) (thing 5056 . 5097) (thing 5060 . 5088) (thing 5063 . 5091) (thing 5063 . 5091) (thing 5089 . 5130) (thing 5092 . 5133) (thing 5092 . 5133) (thing 5099 . 5106) (thing 5099 . 5106) (thing 5107 . 5124) (thing 5107 . 5124) (thing 5125 . 5129) (thing 5125 . 5129) (thing 5130 . 5137) (thing 5130 . 5137) (thing 5132 . 5139) (thing 5135 . 5142) (thing 5135 . 5142) (thing 5138 . 5156) (thing 5138 . 5156) (thing 5140 . 5157) (thing 5143 . 5160) (thing 5143 . 5160) (thing 5157 . 5238) (thing 5157 . 5238) (thing 5158 . 5162) (thing 5161 . 5165) (thing 5161 . 5165) (thing 5163 . 5170) (thing 5166 . 5173) (thing 5166 . 5173) (thing 5171 . 5189) (thing 5174 . 5192) (thing 5174 . 5192) (thing 5190 . 5271) (thing 5193 . 5274) (thing 5193 . 5274) (thing 5257 . 5264) (thing 5257 . 5264) (thing 5265 . 5275) (thing 5265 . 5275) (thing 5276 . 5329) (thing 5276 . 5329) (thing 5290 . 5297) (thing 5293 . 5300) (thing 5293 . 5300) (thing 5298 . 5308) (thing 5301 . 5311) (thing 5301 . 5311) (thing 5309 . 5362) (thing 5312 . 5365) (thing 5312 . 5365) (thing 5331 . 5338) (thing 5331 . 5338) (thing 5339 . 5357) (thing 5339 . 5357) (thing 5358 . 5443) (thing 5358 . 5443) (thing 5364 . 5371) (thing 5367 . 5374) (thing 5367 . 5374) (thing 5372 . 5390) (thing 5375 . 5393) (thing 5375 . 5393) (thing 5391 . 5476) (thing 5394 . 5479) (thing 5394 . 5479) (thing 5445 . 5452) (thing 5445 . 5452) (thing 5453 . 5472) (thing 5453 . 5472) (thing 5473 . 5533) (thing 5473 . 5533) (thing 5478 . 5485) (thing 5481 . 5488) (thing 5481 . 5488) (thing 5486 . 5505) (thing 5489 . 5508) (thing 5489 . 5508) (thing 5506 . 5566) (thing 5509 . 5569) (thing 5509 . 5569) (thing 5535 . 5542) (thing 5535 . 5542) (thing 5543 . 5560) (thing 5543 . 5560) (thing 5561 . 5650) (thing 5561 . 5650) (thing 5568 . 5575) (thing 5571 . 5578) (thing 5571 . 5578) (thing 5576 . 5593) (thing 5579 . 5596) (thing 5579 . 5596) (thing 5594 . 5683) (thing 5597 . 5686) (thing 5597 . 5686) (thing 5652 . 5659) (thing 5652 . 5659) (thing 5660 . 5684) (thing 5660 . 5684) (thing 5685 . 5772) (thing 5685 . 5772) (thing 5685 . 5692) (thing 5688 . 5695) (thing 5688 . 5695) (thing 5693 . 5717) (thing 5696 . 5720) (thing 5696 . 5720) (thing 5718 . 5805) (thing 5721 . 5808) (thing 5721 . 5808) (thing 5774 . 5781) (thing 5774 . 5781) (thing 5782 . 5807) (thing 5782 . 5807) (thing 5807 . 5814) (thing 5808 . 5848) (thing 5808 . 5848) (thing 5810 . 5817) (thing 5810 . 5817) (thing 5815 . 5840) (thing 5818 . 5843) (thing 5818 . 5843) (thing 5841 . 5881) (thing 5844 . 5884) (thing 5844 . 5884) (thing 5850 . 5857) (thing 5850 . 5857) (thing 5858 . 5875) (thing 5858 . 5875) (thing 5876 . 5914) (thing 5876 . 5914) (thing 5883 . 5890) (thing 5886 . 5893) (thing 5886 . 5893) (thing 5891 . 5908) (thing 5894 . 5911) (thing 5894 . 5911) (thing 5909 . 5947) (thing 5912 . 5950) (thing 5912 . 5950) (thing 5916 . 5923) (thing 5916 . 5923) (thing 5924 . 5942) (thing 5924 . 5942) (thing 5943 . 5983) (thing 5943 . 5983) (thing 5949 . 5956) (thing 5952 . 5959) (thing 5952 . 5959) (thing 5957 . 5975) (thing 5960 . 5978) (thing 5960 . 5978) (thing 5976 . 6016) (thing 5979 . 6019) (thing 5979 . 6019)))
    (semanticdb-table "MessageComparator.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_MESSAGECOMPARATOR_H" variable (:constant-flag t) nil [43 68])
            ("swift/common/Common.h" include nil nil [70 102])
            ("swift/common/Log.h" include nil nil [103 132])
            ("swift/protocol/Heartbeat.pb.h" include nil nil [133 173])
            ("swift/protocol/Transport.pb.h" include nil nil [174 214])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [238 247]))                  
                :type "int")
                nil [216 248])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [266 291])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [291 316]))                  
                :type "bool")
                nil [250 317])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [334 359])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [359 384]))                  
                :type "bool")
                nil [318 385])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [402 424])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [425 447]))                  
                :type "bool")
                nil [386 448])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [465 487])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [488 510]))                  
                :type "bool")
                nil [449 511])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [529 549])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [550 570]))                  
                :type "bool")
                nil [513 571])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [588 608])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [609 629]))                  
                :type "bool")
                nil [572 630])
            ("<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [646 666])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [667 687]))                  
                :type "bool")
                nil [631 688])
            (">" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [704 724])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TaskInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [725 745]))                  
                :type "bool")
                nil [689 746])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [764 787])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [787 810]))                  
                :type "bool")
                nil [748 811])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [828 851])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [851 874]))                  
                :type "bool")
                nil [812 875])
            ("<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [891 914])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [914 937]))                  
                :type "bool")
                nil [876 938])
            (">" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [954 977])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PartitionId" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [977 1000]))                  
                :type "bool")
                nil [939 1001])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Message" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1019 1038])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Message" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1039 1058]))                  
                :type "bool")
                nil [1003 1059])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LeaderInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1076 1098])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("LeaderInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1099 1121]))                  
                :type "bool")
                nil [1060 1122])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AdminInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1139 1160])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AdminInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1161 1182]))                  
                :type "bool")
                nil [1123 1183])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RoleVersionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1201 1229])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RoleVersionInfos" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1230 1258]))                  
                :type "bool")
                nil [1185 1259])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RoleVersionInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1276 1303])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RoleVersionInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1304 1331]))                  
                :type "bool")
                nil [1260 1332])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("lhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokerVersionInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1349 1378])
                    ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokerVersionInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1379 1408]))                  
                :type "bool")
                nil [1333 1409])
            ("<<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("os" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1436 1453])
                    ("msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("HeartbeatInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1454 1479]))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1411 1480])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1502 1511]))                  
                :type "int")
                nil [1482 1512]))          
      :file "MessageComparator.h"
      :pointmax 1549
      :fsize 1548
      :lastmodtime '(23963 42868 955757 944000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_MESSAGECOMPARATOR_H")
          )
)
    (semanticdb-table "Heartbeat.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [79 102]))          
      :file "Heartbeat.proto"
      :pointmax 884
      :fsize 883
      :lastmodtime '(23963 42868 955757 944000)
      :unmatched-syntax '((thing 833 . 883) (thing 816 . 832) (thing 808 . 815) (thing 721 . 806) (thing 705 . 720) (thing 697 . 704) (thing 385 . 695) (thing 371 . 384) (thing 363 . 370) (thing 180 . 360) (thing 169 . 179) (thing 161 . 168) (thing 123 . 158) (thing 122 . 123) (thing 110 . 122) (thing 103 . 109) (thing 46 . 76) (thing 39 . 45) (thing 8 . 37)))
    (semanticdb-table "Common.proto"
      :major-mode 'java-mode
      :tags 
        '( ("swift.protocol" package nil nil [1 24]))          
      :file "Common.proto"
      :pointmax 4738
      :fsize 4737
      :lastmodtime '(23963 42868 954757 981000)
      :unmatched-syntax '((thing 2794 . 2801) (thing 2691 . 2792) (thing 2682 . 2690) (thing 2677 . 2681) (thing 1541 . 2675) (thing 1531 . 1540) (thing 1523 . 1530) (thing 1332 . 1521) (thing 1321 . 1332) (thing 1316 . 1320) (thing 1189 . 1314) (thing 1180 . 1189) (thing 1175 . 1179) (thing 980 . 1173) (thing 966 . 979) (thing 958 . 965) (thing 784 . 956) (thing 768 . 783) (thing 763 . 767) (thing 619 . 761) (thing 609 . 618) (thing 604 . 608) (thing 395 . 602) (thing 377 . 394) (thing 369 . 376) (thing 328 . 367) (thing 317 . 327) (thing 312 . 316) (thing 166 . 310) (thing 148 . 165) (thing 140 . 147) (thing 102 . 138) (thing 91 . 101) (thing 83 . 90) (thing 45 . 80) (thing 44 . 45) (thing 32 . 44) (thing 25 . 31) (thing 2802 . 2813) (thing 2814 . 3117) (thing 3119 . 3126) (thing 3127 . 3135) (thing 3136 . 3803) (thing 3805 . 3812) (thing 3813 . 3825) (thing 3826 . 3939) (thing 3940 . 3947) (thing 3948 . 3957) (thing 3958 . 4058) (thing 4060 . 4067) (thing 4068 . 4078) (thing 4079 . 4259) (thing 4261 . 4268) (thing 4269 . 4286) (thing 4287 . 4331) (thing 4333 . 4340) (thing 4341 . 4362) (thing 4363 . 4667) (thing 4669 . 4676) (thing 4677 . 4699) (thing 4700 . 4737)))
    (semanticdb-table "MessageCompressor.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/protocol/MessageCompressor.h" include nil nil [1 46])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [47 67])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [90 99]))                  
                :type "int")
                nil [68 100])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [117 126])
                    ("" variable (:type ("MessageCompressor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [127 145]))                  
                :type "int")
                nil [101 146])
            ("MessageCompressor" function
               (:constructor-flag t
                :parent "MessageCompressor"
                :type ("MessageCompressor" type (:type "class") nil nil))
                nil [148 191])
            ("MessageCompressor" function
               (:destructor-flag t
                :parent "MessageCompressor"
                :type "void")
                nil [193 237])
            ("compressProductionMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [299 326])
                    ("compressThresholdInBytes" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [327 361]))                  
                :type "void")
                nil [240 496])
            ("compressProductionMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [557 584])
                    ("compressThresholdInBytes" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [585 619])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [620 633]))                  
                :type "void")
                nil [498 751])
            ("decompressProductionMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [810 837]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [753 948])
            ("decompressProductionMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1006 1033])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [1043 1056]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [949 1150])
            ("compressResponseMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1200 1226]))                  
                :type "void")
                nil [1152 1324])
            ("compressResponseMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1374 1400])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [1410 1423]))                  
                :type "void")
                nil [1326 1504])
            ("decompressResponseMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1561 1587])
                    ("decompMerge" variable (:type "bool") (reparse-symbol arg-sub-list) [1643 1660]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [1506 1789])
            ("decompressResponseMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1846 1872])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [1882 1895])
                    ("decompMerge" variable (:type "bool") (reparse-symbol arg-sub-list) [1896 1913]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [1791 2025])
            ("compressMessageResponse" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2075 2101]))                  
                :type "void")
                nil [2027 2189])
            ("compressMessageResponse" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2240 2266])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [2267 2280]))                  
                :type "void")
                nil [2191 2351])
            ("decompressMessageResponse" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2408 2434]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [2353 2531])
            ("decompressMessageResponse" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("response" variable
                       (:pointer 1
                        :type ("MessageResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2597 2623])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [2624 2637]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [2533 2717])
            ("compressProductionRequest" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2769 2796]))                  
                :type "void")
                nil [2719 2885])
            ("compressProductionRequest" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2937 2964])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [2965 2978]))                  
                :type "void")
                nil [2887 3050])
            ("decompressProductionRequest" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3109 3136]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [3052 3234])
            ("decompressProductionRequest" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :type ("ProductionRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3293 3320])
                    ("ratio" variable
                       (:reference 1
                        :type "float")
                        (reparse-symbol arg-sub-list) [3329 3342]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [3236 3423])
            ("compressData" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3462 3496])
                    ("inputData" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [3534 3556])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3557 3572])
                    ("compressData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3610 3631]))                  
                :type "bool")
                nil [3425 3880])
            ("compressData" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3918 3952])
                    ("inputData" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3978 4002])
                    ("compressData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4003 4024]))                  
                :type "bool")
                nil [3881 4147])
            ("uncompressData" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4188 4222])
                    ("inputData" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4262 4286])
                    ("uncompressData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4287 4310]))                  
                :type "bool")
                nil [4149 4438])
            ("uncompressData" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4479 4513])
                    ("inputData" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4553 4575])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4576 4587])
                    ("uncompressData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4627 4650]))                  
                :type "bool")
                nil [4440 4898])
            ("compressMergedMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4946 4980])
                    ("compressThreshold" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4989 5016])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5017 5034])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5035 5050])
                    ("compressedData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5051 5074]))                  
                :type "bool")
                nil [4900 5540])
            ("decompressMergedMessage" function
               (:parent "MessageCompressor"
                :arguments 
                  ( ("compressor" variable
                       (:pointer 1
                        :type ("autil::ZlibCompressor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5590 5624])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5633 5650])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5651 5662])
                    ("uncompressData" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5663 5686]))                  
                :type "bool")
                nil [5542 5939])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5961 5970]))                  
                :type "int")
                nil [5941 5971]))          
      :file "MessageCompressor.cpp"
      :pointmax 5973
      :fsize 5972
      :lastmodtime '(23963 42868 955757 944000)
      :unmatched-syntax nil)
    (semanticdb-table "MessageCompressor.h"
      :file "MessageCompressor.h"
      :fsize 18409
      :lastmodtime '(23963 42868 955757 944000)))
  :file "!swift_develop!swift_func_test!temp!source_code!swift!swift!protocol!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
