;; Object yarn/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "yarn/"
  :tables
  (list
    (semanticdb-table "YarnSerializer.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_YARNSERIALIZER_H" variable (:constant-flag t) nil [40 62])
            ("swift/common/Common.h" include nil nil [64 96])
            ("swift/common/Log.h" include nil nil [97 126])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [150 156]))                  
                :type "int")
                nil [128 157])
            ("YarnSerializer" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [182 189])
                    ("YarnSerializer" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("YarnSerializer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [194 211])
                    ("YarnSerializer" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [216 234])
                    ("private" label nil (reparse-symbol classsubparts) [235 243])
                    ("YarnSerializer" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("YarnSerializer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [263 286]))                          
                        :type ("YarnSerializer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [248 287])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("YarnSerializer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [318 341]))                          
                        :type ("YarnSerializer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [292 342])
                    ("public" label nil (reparse-symbol classsubparts) [343 350])
                    ("private" label nil (reparse-symbol classsubparts) [352 360])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [365 385]))                  
                :type "class")
                nil [159 388])
            ("SWIFT_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("YarnSerializer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408 423]))                  
                :type "int")
                nil [390 424])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [446 452]))                  
                :type "int")
                nil [426 453]))          
      :file "YarnSerializer.h"
      :pointmax 487
      :fsize 1107
      :lastmodtime '(22939 52165 353658 976000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_YARNSERIALIZER_H")
          )
)


    (semanticdb-table "YarnMasterDriver.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/admin/scheduler/yarn/YarnMasterDriver.h" include nil nil [1 57])
            ("yarn_client/common/Url.h" include nil nil [58 93])
            ("pthread.h" include (:system-flag t) nil [94 114])
            ("sys/syscall.h" include (:system-flag t) nil [115 139])
            ("ctime" include (:system-flag t) nil [140 156])
            ("swift/config/ConfigDefine.h" include nil nil [157 195])
            ("fslib/fs/FileSystem.h" include nil nil [196 228])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [230 250])
            ("hadoop::yarn" using (:type ("hadoop::yarn" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [251 280])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [281 303])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [327 333]))                  
                :type "int")
                nil [305 334])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [351 357])
                    ("" variable (:type ("YarnMasterDriver" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [358 375]))                  
                :type "int")
                nil [335 376])
            ("YarnMasterDriver" function
               (:constructor-flag t
                :parent "YarnMasterDriver"
                :arguments 
                  ( ("zkWrapper" variable
                       (:pointer 1
                        :type ("cm_basic::ZkWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [413 444])
                    ("zkRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [480 506])
                    ("configPath" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [542 572]))                  
                :type ("YarnMasterDriver" type (:type "class") nil nil))
                nil [378 711])
            ("YarnMasterDriver" function
               (:destructor-flag t
                :parent "YarnMasterDriver"
                :type "void")
                nil [713 754])
            ("init" function
               (:parent "YarnMasterDriver"
                :type "bool")
                nil [756 2012])
            ("isRetriedAM" function
               (:parent "YarnMasterDriver"
                :type "bool")
                nil [2014 2108])
            ("updateMapping" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2148 2171])
                    ("containerId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2211 2237])
                    ("isInsert" variable (:type "bool") (reparse-symbol arg-sub-list) [2238 2252]))                  
                :type "void")
                nil [2110 2554])
            ("start" function
               (:parent "YarnMasterDriver"
                :type "bool")
                nil [2556 3916])
            ("stop" function
               (:parent "YarnMasterDriver"
                :type "bool")
                nil [3918 4202])
            ("addRequest" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("rolePlan" variable
                       (:pointer 1
                        :type ("YarnRolePlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4238 4261]))                  
                :type "bool")
                nil [4204 4683])
            ("removeRole" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5670 5693]))                  
                :type "bool")
                nil [5636 6657])
            ("assignContainer" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("slotInfoPtr" variable (:type ("YarnSlotInfoPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6697 6725])
                    ("container" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ContainerProto" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6726 6758]))                  
                :type "bool")
                nil [6658 7617])
            ("resetSlot" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7652 7675])
                    ("state" variable
                       (:reference 1
                        :constant-flag t
                        :type ("YarnSlotInfoState" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7676 7707]))                  
                :type "bool")
                nil [7619 9622])
            ("applyResource" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("rolePlanPtr" variable
                       (:reference 1
                        :type ("RolePlanPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9661 9686]))                  
                :type "bool")
                nil [9624 12632])
            ("getSlots" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("slots" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("SlotInfoPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12666 12693]))                  
                :type "void")
                nil [12634 12952])
            ("startProcess" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("rolePlan" variable
                       (:reference 1
                        :type ("RolePlanPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12990 13012]))                  
                :type "bool")
                nil [12954 15109])
            ("releaseRoleSlots" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15151 15179]))                  
                :type "void")
                nil [15111 15285])
            ("clearRoleProcess" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15326 15354]))                  
                :type "void")
                nil [15286 17334])
            ("allocate" function
               (:parent "YarnMasterDriver"
                :type "void")
                nil [17336 21978])
            ("persistMetaData" function
               (:parent "YarnMasterDriver"
                :type "bool")
                nil [21980 22372])
            ("loadAndRecoverMetaData" function
               (:parent "YarnMasterDriver"
                :arguments 
                  ( ("res" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RegisterApplicationMasterResponseProto" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [22429 22479]))                  
                :type "bool")
                nil [22374 25218])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("admin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25240 25246]))                  
                :type "int")
                nil [25220 25247]))          
      :file "YarnMasterDriver.cpp"
      :pointmax 25249
      :fsize 25248
      :lastmodtime '(22949 14417 299887 468000)
      :unmatched-syntax nil)
    (semanticdb-table "YarnMasterDriver.h"
      :file "YarnMasterDriver.h"
      :fsize 3846
      :lastmodtime '(22949 11459 897840 971000)))
  :file "!ssd!sdd!git!swift!swift_1_6!swift!build!release64!swift!admin!scheduler!yarn!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
