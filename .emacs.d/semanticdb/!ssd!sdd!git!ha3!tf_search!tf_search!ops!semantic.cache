;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "LookupOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/common/RuntimeResource.h" include nil nil [1 46])
            ("tf_search/common/ReferenceDefine.h" include nil nil [47 92])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [93 141])
            ("tensorflow/core/framework/common_shape_fns.h" include nil nil [142 197])
            ("tensorflow/core/framework/register_types.h" include nil nil [198 251])
            ("tf_search/ops/OpUtil.h" include nil nil [252 285])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [287 307])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [308 335])
            ("tf_search" type
               (:members 
                  ( ("LookupOp" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [416 423])
                            ("LookupOp" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [446 472]))                                  
                                :type ("LookupOp" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [437 664])
                            ("private" label nil (reparse-symbol classsubparts) [1418 1426])
                            ("_attributeName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1431 1453])
                            ("_tableName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1458 1476])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [1481 1501]))                          
                        :superclasses 
                          ( ("OpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [360 1504])
                    ("AUTIL_LOG_SETUP_TEMPLATE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1531 1541])
                            ("" variable (:type ("LookupOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1542 1551])
                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1552 1554]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1506 1555])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1581 1603])
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1629 1647])
                            ("" variable (:type ("LookupOp" type
                                 (:template-specifier 
                                    ( ("double" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [1673 1690]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1557 1691]))                  
                :type "namespace")
                nil [337 1694]))          
      :file "LookupOp.cpp"
      :pointmax 1695
      :fsize 1707
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax '((thing 704 . 712) (thing 681 . 703) (thing 674 . 681) (thing 669 . 673) (thing 428 . 436) (thing 713 . 1417) (thing 1585 . 1603) (thing 1628 . 1629) (thing 1635 . 1647)))
    (semanticdb-table "IndexLookupOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/ops/OpUtil.h" include nil nil [1 34])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [35 83])
            ("tensorflow/core/lib/core/errors.h" include nil nil [84 128])
            ("expression/framework/TypeTraits.h" include nil nil [129 173])
            ("tf_search/common/RuntimeResource.h" include nil nil [174 219])
            ("tf_search/common/SessionResource.h" include nil nil [220 265])
            ("tensorflow/core/framework/types.h" include nil nil [266 310])
            ("expression/framework/TypeTraits.h" include nil nil [311 355])
            ("tf_search/ops/ExpressionOpV2.h" include nil nil [356 397])
            ("type_traits" include (:system-flag t) nil [398 420])
            ("autil/Log.h" include (:system-flag t) nil [421 443])
            ("autil/StringUtil.h" include (:system-flag t) nil [444 473])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [475 495])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [496 518])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [519 544])
            ("expression" using (:type ("expression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [545 572])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [573 600])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [618 625]))                  
                :type "int")
                nil [601 626])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 650]))                  
                :type "int")
                nil [627 651])
            ("tf_search" type
               (:members 
                  ( ("DocSampler" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [695 702])
                            ("DocSampler" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("count" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [718 730]))                                  
                                :type ("DocSampler" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [707 827])
                            ("public" label nil (reparse-symbol classsubparts) [828 835])
                            ("visit" function
                               (:arguments 
                                  ( ("docId" variable (:type ("docid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [851 865]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [840 1164])
                            ("randomPick" function
                               (:arguments 
                                  ( ("n" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1186 1194]))                                  
                                :type ("int64" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1169 1229])
                            ("getAcceptedDocIds" function
                               (:constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("docid_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1234 1320])
                            ("private" label nil (reparse-symbol classsubparts) [1321 1329])
                            ("_count" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1334 1347])
                            ("_docCount" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1352 1368])
                            ("_acceptedDocs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("docid_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1373 1403]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [676 1406])
                    ("Filter" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1423 1430])
                            ("Filter" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("expr" variable
                                       (:pointer 1
                                        :type ("AttributeExpressionTyped" type
                                             (:template-specifier 
                                                ( ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1442 1479]))                                  
                                :type ("Filter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1435 1555])
                            ("public" label nil (reparse-symbol classsubparts) [1556 1563])
                            ("pass" function
                               (:arguments 
                                  ( ("doc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDoc" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1578 1598]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1568 1677])
                            ("private" label nil (reparse-symbol classsubparts) [1678 1686])
                            ("_expr" variable
                               (:pointer 1
                                :type ("AttributeExpressionTyped" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1691 1729])
                            ("_evaluator" variable (:type ("BottomUpEvaluator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1734 1763]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1408 1766])
                    ("IndexLookupOp" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1830 1837])
                            ("IndexLookupOp" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1865 1891]))                                  
                                :type ("IndexLookupOp" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1851 2303])
                            ("public" label nil (reparse-symbol classsubparts) [2304 2311])
                            ("private" label nil (reparse-symbol classsubparts) [4414 4422])
                            ("prepareRuntimeResource" function
                               (:pointer 1
                                :arguments 
                                  ( ("sessionResource" variable
                                       (:pointer 1
                                        :type ("tensorflow::SessionResource" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4480 4525])
                                    ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4526 4554]))                                  
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4427 5079])
                            ("toString" function
                               (:template 
                                  ( ("DataType" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5129 5149])
                                    ("querys" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [5150 5173]))                                  )
                                (reparse-symbol classsubparts) [5085 5459])
                            ("SUPPORTED_INPUT_TYPE_HELPER" variable (:constant-flag t) (reparse-symbol classsubparts) [5469 5496])
                            ("CONVERT_TO_STRING" variable (:constant-flag t) (reparse-symbol classsubparts) [5844 5861])
                            ("genQuerys" function
                               (:arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6016 6036])
                                    ("querys" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [6037 6060]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [6001 6263])
                            ("lookup" function
                               (:arguments 
                                  ( ("indexReader" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IndexReaderPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6342 6376])
                                    ("allocator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocAllocatorPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6393 6431])
                                    ("filter" variable
                                       (:pointer 1
                                        :type ("Filter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6448 6463])
                                    ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6480 6508])
                                    ("query" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6525 6545])
                                    ("docIds" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("docid_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [6562 6586]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [6330 7700])
                            ("createFilter" function
                               (:arguments 
                                  ( ("resource" variable
                                       (:pointer 1
                                        :type ("RuntimeResource" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7724 7750])
                                    ("exprStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7773 7795])
                                    ("filter" variable
                                       (:pointer 1
                                        :type ("unique_ptr" type
                                             (:template-specifier 
                                                ( ("Filter" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7818 7845]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7706 8196])
                            ("pass" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("filter" variable
                                       (:pointer 1
                                        :type ("Filter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8219 8234])
                                    ("allocator" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocAllocatorPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8256 8294])
                                    ("docId" variable (:type ("docid_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8316 8330]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8202 8433])
                            ("getAttributeReader" function
                               (:arguments 
                                  ( ("indexSnapshot" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("PartitionReaderSnapshotPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8477 8525]))                                  
                                :type ("AttributeReaderPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8439 9080])
                            ("FILL_MULTI_ATTR" variable (:constant-flag t) (reparse-symbol classsubparts) [9090 9105])
                            ("FILL_SINGLE_ATTR" variable (:constant-flag t) (reparse-symbol classsubparts) [9510 9526])
                            ("fillAttributes" function
                               (:arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9948 9969])
                                    ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9994 10022])
                                    ("attrReader" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AttributeReaderPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10047 10084])
                                    ("docIds" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("docid_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10109 10139])
                                    ("defaultValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10164 10186]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [9928 11302])
                            ("setZero" function
                               (:arguments 
                                  ( ("out" variable
                                       (:pointer 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11321 11333]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11308 11479])
                            ("fillOutputMultiValue" function
                               (:template 
                                  ( ("AttrValueType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11549 11570])
                                    ("attrIterBase" variable
                                       (:pointer 1
                                        :type ("AttributeIteratorBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11601 11637])
                                    ("docIds" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("docid_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11668 11698])
                                    ("defaultValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11729 11751])
                                    ("out" variable
                                       (:pointer 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11782 11794]))                                  )
                                (reparse-symbol classsubparts) [11485 12829])
                            ("fillOutputSingleValue" function
                               (:template 
                                  ( ("AttrValueType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12900 12921])
                                    ("attrIterBase" variable
                                       (:pointer 1
                                        :type ("AttributeIteratorBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12953 12989])
                                    ("docIds" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("docid_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [13021 13051])
                                    ("defaultValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13083 13105])
                                    ("out" variable
                                       (:pointer 1
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13137 13149]))                                  )
                                (reparse-symbol classsubparts) [12835 13872])
                            ("private" label nil (reparse-symbol classsubparts) [13874 13882])
                            ("_attrName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13887 13904])
                            ("_indexName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13909 13927])
                            ("_valueDimension" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13932 13954])
                            ("_recallCount" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13959 13978])
                            ("_truncateStrategy" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13983 14008])
                            ("private" label nil (reparse-symbol classsubparts) [14009 14017])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [14022 14042]))                          
                        :superclasses 
                          ( ("OpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [1768 14045])
                    ("AUTIL_LOG_SETUP_TEMPLATE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14071 14081])
                            ("" variable (:type ("IndexLookupOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14082 14096])
                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14097 14099]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14046 14100])
                    ("INDEXLOOKUPOP_REGISTER_KERNELS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [14110 14140])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("int8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("int8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14381 14420])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("uint8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("uint8_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14421 14461])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("int16_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("int16_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14462 14502])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("uint16_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("uint16_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14503 14544])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("int32_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("int32_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14545 14585])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("int64" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14586 14624])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("float" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("float" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14625 14663])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("double" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("double" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14664 14703])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("IndexLookupOp" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14704 14743]))                  
                :type "namespace")
                nil [653 14746]))          
      :file "IndexLookupOp.cpp"
      :pointmax 14747
      :fsize 15354
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax '((thing 2351 . 2359) (thing 2328 . 2350) (thing 2321 . 2328) (thing 2316 . 2320) (thing 1842 . 1850) (thing 2360 . 4413))
      :lexical-table 
        '(("INDEXLOOKUPOP_REGISTER_KERNELS" (spp-arg-list ("T") 14140 . 14143) . ((symbol "REGISTER_KERNEL_BUILDER" 14164 . 14187) (semantic-list "(Name(\"IndexLookupOp\")       \\
                            .Device(DEVICE_CPU)         \\
                            .TypeConstraint<T>(\"T2\"),   \\
                            IndexLookupOp<T>)" 14187 . 14379)))
          ("FILL_SINGLE_ATTR" (spp-arg-list ("at") 9526 . 9530) . 
              ((CASE "case" 9580 . 9584) (symbol "at" 9585 . 9587) (punctuation ":" 9587 . 9588) (semantic-list "{                                                          \\
        typedef typename expression::AttrType2AttrValueType<at, false>::AttrValueType AttrValueType; \\
        fillOutputSingleValue<AttrValueType>(ctx, attrIter, docIds, defaultValue, out); \\
        break;                                                          \\
    }" 9589 . 9922)))
          ("FILL_MULTI_ATTR" (spp-arg-list ("at") 9105 . 9109) . 
              ((CASE "case" 9160 . 9164) (symbol "at" 9165 . 9167) (punctuation ":" 9167 . 9168) (semantic-list "{                                                          \\
        typedef typename expression::AttrType2AttrValueType<at, true>::AttrValueType AttrValueType; \\
        fillOutputMultiValue<AttrValueType>(ctx, attrIter, docIds, defaultValue, out); \\
        break;                                                          \\
    }" 9169 . 9500)))
          )
)
    (semanticdb-table "RunGraphOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/common/SessionResource.h" include nil nil [1 46])
            ("tf_search/common/common.h" include nil nil [47 83])
            ("tf_search/search/RsResponse.h" include nil nil [84 124])
            ("tf_search/search/RsSimpleRequestGenerator.h" include nil nil [125 179])
            ("tf_search/ops/OpUtil.h" include nil nil [180 213])
            ("tf_search/ops/ProxyCommon.h" include nil nil [214 252])
            ("tf_search/proto/Search.pb.h" include nil nil [253 291])
            ("tf_search/metrics/Monitor.h" include nil nil [292 330])
            ("tf_search/ops/MatchDocsVariant.h" include nil nil [331 374])
            ("tensorflow/core/framework/op_kernel.h" include (:system-flag t) nil [375 423])
            ("tensorflow/core/lib/core/errors.h" include (:system-flag t) nil [424 468])
            ("suez/common/ResourceGuard.h" include (:system-flag t) nil [469 507])
            ("sstream" include (:system-flag t) nil [508 526])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [528 548])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [549 571])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [572 599])
            ("multi_call" using (:type ("multi_call" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [600 627])
            ("tf_search" type
               (:members 
                  ( ("RunGraphClosure" type
                       (:superclasses 
                          ( ("multi_call::Closure" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [705 712])
                            ("RunGraphClosure" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [733 754])
                                    ("request" variable
                                       (:pointer 1
                                        :type ("GraphRequest" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [775 797])
                                    ("done" variable (:type ("AsyncOpKernel::DoneCallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [818 851])
                                    ("metricReporter" variable
                                       (:pointer 1
                                        :type ("MetricReporter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [872 903]))                                  
                                :type ("RunGraphClosure" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [717 1038])
                            ("RunGraphClosure" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1043 1108])
                            ("getReply" function (:type ("ReplyPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4852 4903])
                            ("private" label nil (reparse-symbol classsubparts) [4904 4912])
                            ("_ctx" variable
                               (:pointer 1
                                :type ("OpKernelContext" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4917 4939])
                            ("_request" variable
                               (:pointer 1
                                :type ("GraphRequest" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4944 4967])
                            ("_done" variable (:type ("AsyncOpKernel::DoneCallback" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4972 5006])
                            ("_reply" variable (:type ("multi_call::ReplyPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5011 5039])
                            ("_waitLatency" variable (:type ("ScopeTime2" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5044 5068])
                            ("_metricReporter" variable
                               (:pointer 1
                                :type ("MetricReporter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5073 5105])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [5110 5130]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [652 5133])
                    ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5150 5160])
                            ("" variable (:type ("RunGraphClosure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5161 5177]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5134 5178])
                    ("RunGraphOp" type
                       (:superclasses 
                          ( ("AsyncOpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [5222 5230])
                            ("RPC_METHOD_NAME" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5235 5271])
                            ("public" label nil (reparse-symbol classsubparts) [5272 5279])
                            ("RunGraphOp" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5304 5330]))                                  
                                :type ("RunGraphOp" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5293 6519])
                            ("RunGraphOp" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [6524 6540])
                            ("public" label nil (reparse-symbol classsubparts) [6541 6548])
                            ("protected" label nil (reparse-symbol classsubparts) [7601 7611])
                            ("runGraphAsync" function
                               (:typemodifiers ("virtual")
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7643 7664])
                                    ("request" variable
                                       (:pointer 1
                                        :type ("GraphRequest" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7665 7687])
                                    ("done" variable (:type ("DoneCallback" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7688 7706])
                                    ("metricReporter" variable
                                       (:pointer 1
                                        :type ("MetricReporter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7738 7769]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7616 8422])
                            ("private" label nil (reparse-symbol classsubparts) [8423 8431])
                            ("generateGraphRequest" function
                               (:arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8462 8483])
                                    ("request" variable
                                       (:pointer 1
                                        :type ("GraphRequest" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8484 8506]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8436 9136])
                            ("private" label nil (reparse-symbol classsubparts) [9137 9145])
                            ("_feeds" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [9150 9172])
                            ("_fetches" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [9177 9201])
                            ("_loc" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9206 9218])
                            ("_bizName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9223 9239])
                            ("_searchService" variable (:type ("multi_call::SearchServicePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9244 9288])
                            ("_timeout" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9293 9310])
                            ("_version" variable (:type ("multi_call::VersionTy" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9315 9346])
                            ("private" label nil (reparse-symbol classsubparts) [9347 9355])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [9360 9380]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5180 9383])
                    ("RunGraphOp::RPC_METHOD_NAME" variable
                       (:constant-flag t
                        :default-value "\"runGraph\""
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9385 9439])
                    ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9457 9467])
                            ("" variable (:type ("RunGraphOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9468 9479]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9441 9480])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9506 9524])
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9525 9543])
                            ("" variable (:type ("RunGraphOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9545 9556]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9482 9557]))                  
                :type "namespace")
                nil [629 9560]))          
      :file "RunGraphOp.cpp"
      :pointmax 9562
      :fsize 9561
      :lastmodtime '(23301 8217 307298 237000)
      :unmatched-syntax '((thing 6621 . 7600) (thing 6612 . 6620) (thing 6570 . 6611) (thing 6558 . 6570) (thing 6553 . 6557) (thing 5284 . 5292) (thing 1133 . 4847) (thing 1124 . 1132) (thing 1121 . 1123) (thing 1118 . 1121) (thing 1113 . 1117) (thing 9510 . 9524) (thing 9524 . 9525) (thing 9531 . 9543) (thing 9560 . 9561)))
    (semanticdb-table "OpUtil.h"
      :file "OpUtil.h"
      :fsize 9855
      :lastmodtime '(23301 8217 305298 237000))
    (semanticdb-table "ExpressionOpV2.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/common/RuntimeResource.h" include nil nil [1 46])
            ("tf_search/common/SessionResource.h" include nil nil [47 92])
            ("expression/framework/AttributeExpressionCreator.h" include nil nil [93 153])
            ("expression/framework/AnyTypeExpression.h" include nil nil [154 205])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [206 254])
            ("tf_search/ops/ExpressionOpV2.h" include nil nil [255 296])
            ("autil/StringUtil.h" include (:system-flag t) nil [297 326])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [329 349])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [350 377])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [378 403])
            ("expression" using (:type ("expression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [404 431])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [432 454])
            ("tf_search" type
               (:members 
                  ( ("AUTIL_DECLARE_AND_SETUP_LOGGER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("expr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [510 515])
                            ("" variable (:type ("expr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [516 521]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [479 522])
                    ("fillQinfoExprValues" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("request" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleDocument" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [556 586])
                            ("anyExpr" variable
                               (:pointer 1
                                :type ("AnyTypeExpression" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [619 646])
                            ("pool" variable
                               (:pointer 1
                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [679 707]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [524 1248])
                    ("create" function
                       (:pointer 1
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1278 1304])
                            ("exprResource" variable
                               (:reference 1
                                :constant-flag t
                                :type ("expression::SessionResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1333 1381])
                            ("attr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1410 1434]))                          
                        :type ("AttributeExpression" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1250 2385])
                    ("evaluate" function
                       (:arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2434 2460])
                            ("attrs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2469 2507])
                            ("matchDocs" variable
                               (:pointer 1
                                :type ("MatchDoc" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2516 2536])
                            ("matchDocCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2545 2568]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("AttributeExpression" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2387 3072])
                    ("create" function
                       (:pointer 1
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3123 3149])
                            ("attr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3150 3174]))                          
                        :type ("expression::AttributeExpression" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3074 3248])
                    ("evaluate" function
                       (:pointer 1
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3280 3306])
                            ("attr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3337 3361])
                            ("matchDocs" variable
                               (:pointer 1
                                :type ("MatchDoc" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3392 3412])
                            ("matchDocCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3443 3466]))                          
                        :type ("AttributeExpression" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3250 3737])
                    ("ExpressionOpV2" type
                       (:superclasses 
                          ( ("OpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [3780 3788])
                            ("_exprStrs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3793 3818])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [3823 3843])
                            ("public" label nil (reparse-symbol classsubparts) [3844 3851])
                            ("ExpressionOpV2" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3880 3906]))                                  
                                :type ("ExpressionOpV2" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3865 3994]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3739 4540])
                    ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4558 4568])
                            ("" variable (:type ("ExpressionOpV2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4569 4584]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4542 4585])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4611 4633])
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4659 4677])
                            ("" variable (:type ("ExpressionOpV2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4703 4718]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4587 4719]))                  
                :type "namespace")
                nil [456 4722]))          
      :file "ExpressionOpV2.cpp"
      :pointmax 4723
      :fsize 2564
      :lastmodtime '(23301 8217 301298 237000)
      :unmatched-syntax '((thing 3856 . 3864) (thing 3999 . 4003) (thing 4004 . 4011) (thing 4011 . 4033) (thing 4034 . 4042) (thing 4043 . 4537) (thing 4615 . 4633) (thing 4658 . 4659) (thing 4665 . 4677)))
    (semanticdb-table "ExpressionOpV2.h"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/common/RuntimeResource.h" include nil nil [1 46])
            ("tf_search/common/SessionResource.h" include nil nil [47 92])
            ("expression/framework/AttributeExpressionCreator.h" include (:system-flag t) nil [93 153])
            ("expression/framework/AnyTypeExpression.h" include (:system-flag t) nil [154 205])
            ("tf_search" type
               (:members 
                  ( ("create" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [316 342])
                            ("attr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [343 367]))                          
                        :type ("expression::AttributeExpression" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [267 368])
                    ("evaluate" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [470 496])
                            ("attr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [505 529])
                            ("matchDocs" variable
                               (:pointer 1
                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [538 568])
                            ("matchDocCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [577 600]))                          
                        :type ("expression::AttributeExpression" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [419 601])
                    ("evaluate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("resource" variable
                               (:pointer 1
                                :type ("RuntimeResource" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [684 710])
                            ("attrs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [719 757])
                            ("matchDocs" variable
                               (:pointer 1
                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [766 796])
                            ("matchDocCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [805 828]))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("expression::AttributeExpression" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [620 829]))                  
                :type "namespace")
                nil [207 832]))          
      :file "ExpressionOpV2.h"
      :pointmax 833
      :fsize 371
      :lastmodtime '(23301 8217 301298 237000)
      :unmatched-syntax nil)
    (semanticdb-table "MultiValueVariant.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/ops/MultiValueVariant.h" include nil nil [1 45])
            ("tensorflow/core/framework/variant_op_registry.h" include nil nil [46 104])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [106 126])
            ("tensorflow" type
               (:members 
                  ( ("MultiValueVariant" function
                       (:constructor-flag t
                        :parent "MultiValueVariant"
                        :type ("MultiValueVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [152 255])
                    ("MultiValueVariant" function
                       (:constructor-flag t
                        :parent "MultiValueVariant"
                        :arguments 
                          ( ("type" variable (:type ("MultiTypeEnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [294 313])
                            ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [314 326]))                          
                        :type ("MultiValueVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [257 399])
                    ("MultiValueVariant" function
                       (:constructor-flag t
                        :parent "MultiValueVariant"
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [438 469]))                          
                        :type ("MultiValueVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [401 610])
                    ("MultiValueVariant" function
                       (:destructor-flag t
                        :parent "MultiValueVariant"
                        :type "void")
                        (reparse-symbol namespacesubparts) [612 667])
                    ("CASE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [677 681])
                    ("CASES_WITH_DEFAULT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [933 951])
                    ("Encode" function
                       (:parent "MultiValueVariant"
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :type ("VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1923 1947]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1892 2220])
                    ("Decode" function
                       (:parent "MultiValueVariant"
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2253 2283]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2222 2731])
                    ("EncodeData" function
                       (:parent "MultiValueVariant"
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2768 2798]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2733 2874])
                    ("EncodeDataTyped" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2938 2968]))                          
                        :parent "MultiValueVariant")
                        (reparse-symbol namespacesubparts) [2876 3111])
                    ("DecodeData" function
                       (:parent "MultiValueVariant"
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3148 3178]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3113 3260])
                    ("DecodeDataTyped" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3324 3354]))                          
                        :parent "MultiValueVariant")
                        (reparse-symbol namespacesubparts) [3262 3484])
                    ("copy" function
                       (:parent "MultiValueVariant"
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3515 3546]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3486 3605])
                    ("copyTyped" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3663 3694]))                          
                        :parent "MultiValueVariant")
                        (reparse-symbol namespacesubparts) [3607 3785])
                    ("init" function
                       (:parent "MultiValueVariant"
                        :type "void")
                        (reparse-symbol namespacesubparts) [3787 3871])
                    ("initTyped" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :parent "MultiValueVariant")
                        (reparse-symbol namespacesubparts) [3873 4052])
                    ("free" function
                       (:parent "MultiValueVariant"
                        :type "void")
                        (reparse-symbol namespacesubparts) [4054 4138])
                    ("freeTyped" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :parent "MultiValueVariant")
                        (reparse-symbol namespacesubparts) [4140 4382])
                    ("REGISTER_UNARY_VARIANT_DECODE_FUNCTION" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("MultiValueVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4423 4441]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [4384 4460]))                  
                :type "namespace")
                nil [128 4463]))          
      :file "MultiValueVariant.cpp"
      :pointmax 4464
      :fsize 5441
      :lastmodtime '(23301 8217 304298 237000)
      :unmatched-syntax '((thing 4442 . 4458))
      :lexical-table 
        '(("CASE" (spp-arg-list ("t" "STMTS") 681 . 691) . 
              ((CASE "case" 723 . 727) (symbol "t" 728 . 729) (punctuation ":" 729 . 730) (semantic-list "{                                   \\
        typedef MTE2Type<t>::Type Type;         \\
        STMTS;                                  \\
        break;                                  \\
    }" 731 . 924)))
          ("CASES_WITH_DEFAULT" (spp-arg-list ("TYPE_ENUM" "STMTS") 951 . 969) . 
              ((SWITCH "switch" 989 . 995) (semantic-list "(TYPE_ENUM)" 996 . 1007) (semantic-list "{                                  \\
        CASE(MTE_INT8, STMTS);                            \\
        CASE(MTE_INT16, STMTS);                           \\
        CASE(MTE_INT32, STMTS);                           \\
        CASE(MTE_INT64, STMTS);                           \\
        CASE(MTE_UINT8, STMTS);                           \\
        CASE(MTE_UINT16, STMTS);                          \\
        CASE(MTE_UINT32, STMTS);                          \\
        CASE(MTE_UINT64, STMTS);                          \\
        CASE(MTE_FLOAT, STMTS);                           \\
        CASE(MTE_DOUBLE, STMTS);                          \\
        CASE(MTE_CHAR, STMTS);                            \\
        CASE(MTE_STRING, STMTS);                          \\
        default:                                          \\
            break;                                        \\
    }" 1008 . 1890)))
          )
)
    (semanticdb-table "MultiValueVariant.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TF_SEARCH_MULTIVALUEVARIANT_H" variable (:constant-flag t) nil [55 92])
            ("autil/MultiValueType.h" include (:system-flag t) nil [94 127])
            ("autil/DataBuffer.h" include (:system-flag t) nil [128 157])
            ("tensorflow/core/framework/variant.h" include nil nil [158 204])
            ("tensorflow/core/framework/variant_encode_decode.h" include nil nil [205 265])
            ("tensorflow/core/framework/tensor_shape.h" include nil nil [266 317])
            ("tensorflow" type
               (:members 
                  ( ("MultiTypeEnum" type
                       (:members 
                          ( ("MTE_INVALID" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [368 380])
                            ("MTE_INT8" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [385 394])
                            ("MTE_INT16" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [399 409])
                            ("MTE_INT32" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [414 424])
                            ("MTE_INT64" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [429 439])
                            ("MTE_UINT8" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [444 454])
                            ("MTE_UINT16" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [459 470])
                            ("MTE_UINT32" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [475 486])
                            ("MTE_UINT64" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [491 502])
                            ("MTE_FLOAT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [507 517])
                            ("MTE_DOUBLE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [522 533])
                            ("MTE_CHAR" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [538 547])
                            ("MTE_STRING" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [552 564]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [343 565])
                    ("MTE2Type" type
                       (:template 
                          ( ("MultiTypeEnum" type nil nil nil))                          
                        :type "struct"
                        :members 
                          ( ("UnknownType" type (:type "struct") (reparse-symbol classsubparts) [618 640])
                            ("Type" type
                               (:typedef ("UnknownType" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [645 670]))                          )
                        (reparse-symbol namespacesubparts) [567 673])
                    ("Type2MTE" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "MTE_INVALID"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [735 767]))                          )
                        (reparse-symbol namespacesubparts) [674 770])
                    ("MTE_TYPE_TRAITS_HELPER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [780 802])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("int8_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_INT8" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1243 1283])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("int8_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1243 1283])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("int16_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_INT16" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1284 1326])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("int16_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1284 1326])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("int32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_INT32" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1327 1369])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("int32_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1327 1369])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("int64_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_INT64" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1370 1412])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("int64_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1370 1412])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("uint8_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_UINT8" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1413 1455])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("uint8_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1413 1455])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("uint16_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_UINT16" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1456 1500])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("uint16_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1456 1500])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("uint32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_UINT32" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1501 1545])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("uint32_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1501 1545])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("uint64_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_UINT64" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1546 1590])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("uint64_t" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1546 1590])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("float")
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_FLOAT" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1591 1631])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("float" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1591 1631])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("double")
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_DOUBLE" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1632 1674])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("double" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1632 1674])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("char")
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_CHAR" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1675 1713])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("char" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1675 1713])
                    ("MTE2Type" type
                       (:type "struct"
                        :members 
                          ( ("Type" type
                               (:typedef ("autil" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("MTE_STRING" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1714 1766])
                    ("Type2MTE" type
                       (:type "struct"
                        :members 
                          ( ("MTE" variable
                               (:default-value "mte"
                                :type ("MultiTypeEnum" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) nil))                          
                        :template-specifier 
                          ( ("autil" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [1714 1766])
                    ("MultiValueVariant" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1794 1801])
                            ("MultiValueVariant" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1806 1826])
                            ("MultiValueVariant" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("type" variable (:type ("MultiTypeEnum" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1849 1868])
                                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1869 1881]))                                  
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1831 1882])
                            ("MultiValueVariant" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MultiValueVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1905 1936]))                                  
                                :type ("MultiValueVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1887 1937])
                            ("MultiValueVariant" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1942 1963])
                            ("public" label nil (reparse-symbol classsubparts) [1964 1971])
                            ("Encode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2028 2052]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2016 2059])
                            ("Decode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2076 2106]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2064 2107])
                            ("TypeName" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2112 2181])
                            ("public" label nil (reparse-symbol classsubparts) [2182 2189])
                            ("set" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("id" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2229 2239])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("autil::MultiValueType" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2240 2274]))                                  )
                                (reparse-symbol classsubparts) [2194 2350])
                            ("get" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("autil::MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("id" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2418 2428]))                                  
                                :constant-flag t
                                :pointer 1)
                                (reparse-symbol classsubparts) [2356 2552])
                            ("base" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("autil::MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :constant-flag t
                                :pointer 1)
                                (reparse-symbol classsubparts) [2558 2788])
                            ("data" function
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol classsubparts) [2794 2848])
                            ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2854 2903])
                            ("type" function (:type ("MultiTypeEnum" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2909 2965])
                            ("private" label nil (reparse-symbol classsubparts) [2966 2974])
                            ("data" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("autil::MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("idx" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3036 3047]))                                  )
                                (reparse-symbol classsubparts) [2979 3203])
                            ("data" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("autil::MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("idx" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3272 3283]))                                  
                                :constant-flag t)
                                (reparse-symbol classsubparts) [3209 3469])
                            ("private" label nil (reparse-symbol classsubparts) [3470 3478])
                            ("EncodeData" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dataBuffer" variable
                                       (:reference 1
                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3499 3529]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3483 3536])
                            ("EncodeDataTyped" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("dataBuffer" variable
                                       (:reference 1
                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3588 3618]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3541 3625])
                            ("DecodeData" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dataBuffer" variable
                                       (:reference 1
                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3647 3677]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3631 3678])
                            ("DecodeDataTyped" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("dataBuffer" variable
                                       (:reference 1
                                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3730 3760]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3683 3761])
                            ("copy" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MultiValueVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3777 3808]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3767 3809])
                            ("copyTyped" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MultiValueVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3855 3886]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3814 3887])
                            ("init" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3893 3905])
                            ("initTyped" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3910 3953])
                            ("free" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3959 3971])
                            ("freeTyped" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3976 4019])
                            ("private" label nil (reparse-symbol classsubparts) [4020 4028])
                            ("_type" variable (:type ("MultiTypeEnum" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4033 4053])
                            ("_data" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol classsubparts) [4058 4070])
                            ("_size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4075 4088])
                            ("_decodePool" variable (:type ("std::shared_ptr" type
                                 (:template-specifier 
                                    ( ("autil::mem_pool::Pool" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4093 4144]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1768 4166]))                  
                :type "namespace")
                nil [319 4169]))          
      :file "MultiValueVariant.h"
      :pointmax 4218
      :fsize 6829
      :lastmodtime '(23301 8217 304298 237000)
      :unmatched-syntax '((thing 725 . 734) (thing 718 . 724))
      :lexical-table 
        '(("ISEARCH_TF_SEARCH_MULTIVALUEVARIANT_H")
          ("MTE_TYPE_TRAITS_HELPER" (spp-arg-list ("mte" "type") 802 . 813) . 
              ((TEMPLATE "template" 834 . 842) (punctuation "<" 843 . 844) (punctuation ">" 844 . 845) (STRUCT "struct" 892 . 898) (symbol "MTE2Type" 899 . 907) (punctuation "<" 907 . 908) (symbol "mte" 908 . 911) (punctuation ">" 911 . 912) (semantic-list "{                              \\
        typedef type Type;                              \\
    }" 913 . 1009) (punctuation ";" 1009 . 1010) (TEMPLATE "template" 1066 . 1074) (punctuation "<" 1075 . 1076) (punctuation ">" 1076 . 1077) (STRUCT "struct" 1124 . 1130) (symbol "Type2MTE" 1131 . 1139) (punctuation "<" 1139 . 1140) (symbol "type" 1140 . 1144) (punctuation ">" 1144 . 1145) (semantic-list "{                             \\
        static constexpr MultiTypeEnum MTE = mte;       \\
    }" 1146 . 1241) (punctuation ";" 1241 . 1242)))
          )
)
    (semanticdb-table "OpDefs.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/op.h" include nil nil [1 42])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [43 97])
            ("tensorflow/core/framework/common_shape_fns.h" include nil nil [98 153])
            ("tensorflow/core/lib/core/errors.h" include nil nil [154 198])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [200 227])
            ("tf_search" type
               (:members 
                  ( ("MatchDocShapeInference" function
                       (:arguments 
                          ( ("c" variable
                               (:pointer 1
                                :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [282 319]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [252 383])
                    ("ModelInputShapeInference" function
                       (:arguments 
                          ( ("c" variable
                               (:pointer 1
                                :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [417 454]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [385 747])
                    ("QueryInputOpV3KeyExistShapeInfer" function
                       (:arguments 
                          ( ("c" variable
                               (:pointer 1
                                :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [789 826]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [749 905])
                    ("EmbeddingShapeInference" function
                       (:arguments 
                          ( ("c" variable
                               (:pointer 1
                                :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [938 975]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [907 1465])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [1865 4225])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [4416 4995])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("ModelInputShapeInference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5163 5188]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5152 5189])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("ModelInputShapeInference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5352 5377]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5341 5378])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [5566 5835])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [6275 6984])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [7230 7558])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [7898 8226])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [8474 8688])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [8937 9151])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [9287 9486])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [9819 10018])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("QueryInputOpV3KeyExistShapeInfer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10316 10349]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10305 10350])
                    ("Output" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [10413 10442])
                    ("Output" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [10527 10556])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("ModelInputShapeInference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10750 10775]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10739 10776])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [11199 12022])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [12142 12326])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [12474 12615])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [12744 12885])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [13065 13390])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13593 13622]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [13582 13623])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [13761 13902])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14039 14068]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14028 14069])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14202 14231]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14191 14232])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [14510 14836])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [15183 15509])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [15873 16199])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [16669 17033])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [17278 17495])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [18034 18398])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [18713 18930])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [19147 19419])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [19699 19960])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [20155 20574])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20734 20763]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [20723 20764])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20894 20923]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [20883 20924])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [21046 21202])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21364 21393]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [21353 21394])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21738 21767]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [21727 21768])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22049 22078]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22038 22079])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22283 22312]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22272 22313])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22444 22473]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22433 22474])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22640 22669]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22629 22670])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22804 22833]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22793 22834])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [22973 23407])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23564 23593]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [23553 23594])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23780 23809]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [23769 23810])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [24319 24494])
                    ("Attr" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [24610 24648])
                    ("Attr" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [24806 24844])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [24931 25087])
                    ("Doc" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [25210 25331])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25541 25742]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [25537 25744])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25977 25988]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [25973 25990])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26082 26093]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [26078 26095])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26289 26300]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [26285 26302])
                    ("Doc" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26763 26774]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [26759 26776])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [27017 27173])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tensorflow::shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27297 27338]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [27286 27339])
                    ("SetIsStateful" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [27596 27612])
                    ("Output" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [27760 27785])
                    ("Output" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [27876 27905])
                    ("Attr" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [27978 28000])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tensorflow::shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28104 28145]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [28093 28146])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [28377 28502])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tensorflow::shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28765 28806]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [28754 28807])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tensorflow::shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28952 28993]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [28941 28994])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tensorflow::shape_inference::ScalarShape" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29205 29246]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [29194 29247])
                    ("SetShapeFn" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [29421 29577]))                  
                :type "namespace")
                nil [229 29580]))          
      :file "OpDefs.cpp"
      :pointmax 29581
      :fsize 29580
      :lastmodtime '(23301 8217 305298 237000)
      :unmatched-syntax '((thing 25814 . 25829) (thing 25815 . 25828) (thing 25809 . 25814) (thing 25808 . 25809) (thing 25788 . 25807) (thing 25789 . 25806) (thing 25783 . 25788) (thing 25782 . 25783) (thing 25757 . 25781) (thing 25758 . 25780) (thing 25746 . 25757) (thing 25542 . 25742) (thing 25536 . 25537) (thing 25511 . 25535) (thing 25512 . 25534) (thing 25507 . 25511) (thing 25506 . 25507) (thing 25483 . 25505) (thing 25484 . 25504) (thing 25479 . 25483) (thing 25478 . 25479) (thing 25460 . 25477) (thing 25461 . 25476) (thing 25456 . 25460) (thing 25455 . 25456) (thing 25435 . 25454) (thing 25436 . 25453) (thing 25429 . 25435) (thing 25428 . 25429) (thing 25404 . 25427) (thing 25405 . 25426) (thing 25399 . 25404) (thing 25398 . 25399) (thing 25376 . 25397) (thing 25377 . 25396) (thing 25371 . 25376) (thing 25370 . 25371) (thing 25344 . 25369) (thing 25345 . 25368) (thing 25333 . 25344) (thing 25214 . 25329) (thing 25209 . 25210) (thing 25193 . 25208) (thing 25194 . 25207) (thing 25189 . 25193) (thing 25188 . 25189) (thing 25162 . 25187) (thing 25163 . 25186) (thing 25156 . 25162) (thing 25155 . 25156) (thing 25131 . 25154) (thing 25132 . 25153) (thing 25126 . 25131) (thing 25125 . 25126) (thing 25100 . 25124) (thing 25101 . 25123) (thing 25089 . 25100) (thing 24983 . 25085) (thing 24944 . 24982) (thing 24942 . 24944) (thing 24930 . 24931) (thing 24912 . 24929) (thing 24913 . 24928) (thing 24906 . 24912) (thing 24905 . 24906) (thing 24882 . 24904) (thing 24883 . 24903) (thing 24877 . 24882) (thing 24876 . 24877) (thing 24857 . 24875) (thing 24858 . 24874) (thing 24846 . 24857) (thing 24811 . 24842) (thing 24805 . 24806) (thing 24782 . 24804) (thing 24783 . 24803) (thing 24778 . 24782) (thing 24777 . 24778) (thing 24763 . 24776) (thing 24764 . 24775) (thing 24757 . 24763) (thing 24756 . 24757) (thing 24698 . 24723) (thing 24699 . 24722) (thing 24693 . 24698) (thing 24692 . 24693) (thing 24661 . 24691) (thing 24662 . 24690) (thing 24650 . 24661) (thing 24615 . 24646) (thing 24609 . 24610) (thing 24586 . 24608) (thing 24587 . 24607) (thing 24582 . 24586) (thing 24581 . 24582) (thing 24567 . 24580) (thing 24568 . 24579) (thing 24561 . 24567) (thing 24560 . 24561) (thing 24542 . 24559) (thing 24543 . 24558) (thing 24537 . 24542) (thing 24536 . 24537) (thing 24507 . 24535) (thing 24508 . 24534) (thing 24496 . 24507) (thing 24371 . 24492) (thing 24332 . 24370) (thing 24330 . 24332) (thing 24318 . 24319) (thing 24285 . 24317) (thing 24286 . 24316) (thing 24281 . 24285) (thing 24280 . 24281) (thing 24256 . 24279) (thing 24257 . 24278) (thing 24252 . 24256) (thing 24251 . 24252) (thing 24227 . 24250) (thing 24228 . 24249) (thing 24223 . 24227) (thing 24222 . 24223) (thing 24198 . 24221) (thing 24199 . 24220) (thing 24194 . 24198) (thing 24193 . 24194) (thing 24165 . 24192) (thing 24166 . 24191) (thing 24159 . 24165) (thing 24158 . 24159) (thing 24134 . 24157) (thing 24135 . 24156) (thing 24128 . 24134) (thing 24127 . 24128) (thing 24112 . 24126) (thing 24113 . 24125) (thing 24107 . 24112) (thing 24106 . 24107) (thing 24091 . 24105) (thing 24092 . 24104) (thing 24086 . 24091) (thing 24085 . 24086) (thing 24062 . 24084) (thing 24063 . 24083) (thing 24057 . 24062) (thing 24056 . 24057) (thing 24034 . 24055) (thing 24035 . 24054) (thing 24029 . 24034) (thing 24028 . 24029) (thing 24016 . 24027) (thing 24017 . 24026) (thing 24011 . 24016) (thing 24010 . 24011) (thing 23978 . 24009) (thing 23979 . 24008) (thing 23973 . 23978) (thing 23972 . 23973) (thing 23946 . 23971) (thing 23947 . 23970) (thing 23941 . 23946) (thing 23940 . 23941) (thing 23908 . 23939) (thing 23909 . 23938) (thing 23903 . 23908) (thing 23902 . 23903) (thing 23870 . 23901) (thing 23871 . 23900) (thing 23865 . 23870) (thing 23864 . 23865) (thing 23848 . 23863) (thing 23849 . 23862) (thing 23843 . 23848) (thing 23842 . 23843) (thing 23823 . 23841) (thing 23824 . 23840) (thing 23812 . 23823) (thing 23768 . 23769) (thing 23741 . 23767) (thing 23742 . 23766) (thing 23737 . 23741) (thing 23736 . 23737) (thing 23709 . 23735) (thing 23710 . 23734) (thing 23703 . 23709) (thing 23702 . 23703) (thing 23688 . 23701) (thing 23689 . 23700) (thing 23683 . 23688) (thing 23682 . 23683) (thing 23656 . 23681) (thing 23657 . 23680) (thing 23651 . 23656) (thing 23650 . 23651) (thing 23634 . 23649) (thing 23635 . 23648) (thing 23629 . 23634) (thing 23628 . 23629) (thing 23607 . 23627) (thing 23608 . 23626) (thing 23596 . 23607) (thing 23552 . 23553) (thing 23522 . 23551) (thing 23523 . 23550) (thing 23518 . 23522) (thing 23517 . 23518) (thing 23494 . 23516) (thing 23495 . 23515) (thing 23490 . 23494) (thing 23489 . 23490) (thing 23472 . 23488) (thing 23473 . 23487) (thing 23466 . 23472) (thing 23465 . 23466) (thing 23454 . 23464) (thing 23455 . 23463) (thing 23449 . 23454) (thing 23448 . 23449) (thing 23420 . 23447) (thing 23421 . 23446) (thing 23409 . 23420) (thing 23025 . 23405) (thing 22986 . 23024) (thing 22984 . 22986) (thing 22972 . 22973) (thing 22951 . 22971) (thing 22952 . 22970) (thing 22947 . 22951) (thing 22946 . 22947) (thing 22934 . 22945) (thing 22935 . 22944) (thing 22930 . 22934) (thing 22929 . 22930) (thing 22915 . 22928) (thing 22916 . 22927) (thing 22909 . 22915) (thing 22908 . 22909) (thing 22882 . 22907) (thing 22883 . 22906) (thing 22877 . 22882) (thing 22876 . 22877) (thing 22847 . 22875) (thing 22848 . 22874) (thing 22836 . 22847) (thing 22792 . 22793) (thing 22771 . 22791) (thing 22772 . 22790) (thing 22767 . 22771) (thing 22766 . 22767) (thing 22746 . 22765) (thing 22747 . 22764) (thing 22740 . 22746) (thing 22739 . 22740) (thing 22713 . 22738) (thing 22714 . 22737) (thing 22708 . 22713) (thing 22707 . 22708) (thing 22683 . 22706) (thing 22684 . 22705) (thing 22672 . 22683) (thing 22628 . 22629) (thing 22601 . 22627) (thing 22602 . 22626) (thing 22595 . 22601) (thing 22594 . 22595) (thing 22577 . 22593) (thing 22578 . 22592) (thing 22572 . 22577) (thing 22571 . 22572) (thing 22543 . 22570) (thing 22544 . 22569) (thing 22538 . 22543) (thing 22537 . 22538) (thing 22514 . 22536) (thing 22515 . 22535) (thing 22509 . 22514) (thing 22508 . 22509) (thing 22487 . 22507) (thing 22488 . 22506) (thing 22476 . 22487) (thing 22432 . 22433) (thing 22405 . 22431) (thing 22406 . 22430) (thing 22399 . 22405) (thing 22398 . 22399) (thing 22381 . 22397) (thing 22382 . 22396) (thing 22376 . 22381) (thing 22375 . 22376) (thing 22352 . 22374) (thing 22353 . 22373) (thing 22347 . 22352) (thing 22346 . 22347) (thing 22326 . 22345) (thing 22327 . 22344) (thing 22315 . 22326) (thing 22271 . 22272) (thing 22250 . 22270) (thing 22251 . 22269) (thing 22246 . 22250) (thing 22245 . 22246) (thing 22216 . 22244) (thing 22217 . 22243) (thing 22212 . 22216) (thing 22211 . 22212) (thing 22184 . 22210) (thing 22185 . 22209) (thing 22178 . 22184) (thing 22177 . 22178) (thing 22150 . 22176) (thing 22151 . 22175) (thing 22145 . 22150) (thing 22144 . 22145) (thing 22117 . 22143) (thing 22118 . 22142) (thing 22112 . 22117) (thing 22111 . 22112) (thing 22092 . 22110) (thing 22093 . 22109) (thing 22081 . 22092) (thing 22037 . 22038) (thing 22010 . 22036) (thing 22011 . 22035) (thing 22004 . 22010) (thing 22003 . 22004) (thing 21980 . 22002) (thing 21981 . 22001) (thing 21976 . 21980) (thing 21975 . 21976) (thing 21941 . 21974) (thing 21942 . 21973) (thing 21937 . 21941) (thing 21936 . 21937) (thing 21904 . 21935) (thing 21905 . 21934) (thing 21900 . 21904) (thing 21899 . 21900) (thing 21868 . 21898) (thing 21869 . 21897) (thing 21864 . 21868) (thing 21863 . 21864) (thing 21848 . 21862) (thing 21849 . 21861) (thing 21843 . 21848) (thing 21842 . 21843) (thing 21816 . 21841) (thing 21817 . 21840) (thing 21811 . 21816) (thing 21810 . 21811) (thing 21781 . 21809) (thing 21782 . 21808) (thing 21770 . 21781) (thing 21726 . 21727) (thing 21723 . 21725) (thing 21710 . 21723) (thing 21709 . 21710) (thing 21686 . 21708) (thing 21687 . 21707) (thing 21682 . 21686) (thing 21681 . 21682) (thing 21658 . 21680) (thing 21659 . 21679) (thing 21652 . 21658) (thing 21651 . 21652) (thing 21636 . 21650) (thing 21637 . 21649) (thing 21631 . 21636) (thing 21630 . 21631) (thing 21602 . 21629) (thing 21603 . 21628) (thing 21597 . 21602) (thing 21596 . 21597) (thing 21578 . 21595) (thing 21579 . 21594) (thing 21573 . 21578) (thing 21572 . 21573) (thing 21554 . 21571) (thing 21555 . 21570) (thing 21549 . 21554) (thing 21548 . 21549) (thing 21523 . 21547) (thing 21524 . 21546) (thing 21512 . 21523) (thing 21352 . 21353) (thing 21329 . 21351) (thing 21330 . 21350) (thing 21325 . 21329) (thing 21324 . 21325) (thing 21304 . 21323) (thing 21305 . 21322) (thing 21298 . 21304) (thing 21297 . 21298) (thing 21276 . 21296) (thing 21277 . 21295) (thing 21271 . 21276) (thing 21270 . 21271) (thing 21251 . 21269) (thing 21252 . 21268) (thing 21246 . 21251) (thing 21245 . 21246) (thing 21215 . 21244) (thing 21216 . 21243) (thing 21204 . 21215) (thing 21098 . 21200) (thing 21059 . 21097) (thing 21057 . 21059) (thing 21045 . 21046) (thing 21033 . 21044) (thing 21034 . 21043) (thing 21029 . 21033) (thing 21028 . 21029) (thing 21005 . 21027) (thing 21006 . 21026) (thing 21001 . 21005) (thing 21000 . 21001) (thing 20986 . 20999) (thing 20987 . 20998) (thing 20980 . 20986) (thing 20979 . 20980) (thing 20960 . 20978) (thing 20961 . 20977) (thing 20955 . 20960) (thing 20954 . 20955) (thing 20937 . 20953) (thing 20938 . 20952) (thing 20926 . 20937) (thing 20882 . 20883) (thing 20859 . 20881) (thing 20860 . 20880) (thing 20855 . 20859) (thing 20854 . 20855) (thing 20834 . 20853) (thing 20835 . 20852) (thing 20828 . 20834) (thing 20827 . 20828) (thing 20808 . 20826) (thing 20809 . 20825) (thing 20803 . 20808) (thing 20802 . 20803) (thing 20777 . 20801) (thing 20778 . 20800) (thing 20766 . 20777) (thing 20722 . 20723) (thing 20699 . 20721) (thing 20700 . 20720) (thing 20695 . 20699) (thing 20694 . 20695) (thing 20674 . 20693) (thing 20675 . 20692) (thing 20668 . 20674) (thing 20667 . 20668) (thing 20648 . 20666) (thing 20649 . 20665) (thing 20643 . 20648) (thing 20642 . 20643) (thing 20621 . 20641) (thing 20622 . 20640) (thing 20616 . 20621) (thing 20615 . 20616) (thing 20588 . 20614) (thing 20589 . 20613) (thing 20577 . 20588) (thing 20207 . 20572) (thing 20168 . 20206) (thing 20166 . 20168) (thing 20154 . 20155) (thing 20142 . 20153) (thing 20143 . 20152) (thing 20138 . 20142) (thing 20137 . 20138) (thing 20113 . 20136) (thing 20114 . 20135) (thing 20107 . 20113) (thing 20106 . 20107) (thing 20083 . 20105) (thing 20084 . 20104) (thing 20077 . 20083) (thing 20076 . 20077) (thing 20055 . 20075) (thing 20056 . 20074) (thing 20050 . 20055) (thing 20049 . 20050) (thing 20027 . 20048) (thing 20028 . 20047) (thing 20022 . 20027) (thing 20021 . 20022) (thing 20004 . 20020) (thing 20005 . 20019) (thing 19999 . 20004) (thing 19998 . 19999) (thing 19973 . 19997) (thing 19974 . 19996) (thing 19962 . 19973) (thing 19751 . 19958) (thing 19712 . 19750) (thing 19710 . 19712) (thing 19698 . 19699) (thing 19675 . 19697) (thing 19676 . 19696) (thing 19671 . 19675) (thing 19670 . 19671) (thing 19647 . 19669) (thing 19648 . 19668) (thing 19643 . 19647) (thing 19642 . 19643) (thing 19626 . 19641) (thing 19627 . 19640) (thing 19622 . 19626) (thing 19621 . 19622) (thing 19568 . 19620) (thing 19569 . 19619) (thing 19564 . 19568) (thing 19563 . 19564) (thing 19540 . 19562) (thing 19541 . 19561) (thing 19534 . 19540) (thing 19533 . 19534) (thing 19514 . 19532) (thing 19515 . 19531) (thing 19508 . 19514) (thing 19507 . 19508) (thing 19489 . 19506) (thing 19490 . 19505) (thing 19483 . 19489) (thing 19482 . 19483) (thing 19459 . 19481) (thing 19460 . 19480) (thing 19454 . 19459) (thing 19453 . 19454) (thing 19432 . 19452) (thing 19433 . 19451) (thing 19421 . 19432) (thing 19199 . 19417) (thing 19160 . 19198) (thing 19158 . 19160) (thing 19146 . 19147) (thing 19119 . 19145) (thing 19120 . 19144) (thing 19115 . 19119) (thing 19114 . 19115) (thing 19092 . 19113) (thing 19093 . 19112) (thing 19088 . 19092) (thing 19087 . 19088) (thing 19064 . 19086) (thing 19065 . 19085) (thing 19060 . 19064) (thing 19059 . 19060) (thing 19034 . 19058) (thing 19035 . 19057) (thing 19028 . 19034) (thing 19027 . 19028) (thing 19008 . 19026) (thing 19009 . 19025) (thing 19002 . 19008) (thing 19001 . 19002) (thing 18983 . 19000) (thing 18984 . 18999) (thing 18977 . 18983) (thing 18976 . 18977) (thing 18965 . 18975) (thing 18966 . 18974) (thing 18960 . 18965) (thing 18959 . 18960) (thing 18944 . 18958) (thing 18945 . 18957) (thing 18933 . 18944) (thing 18765 . 18928) (thing 18726 . 18764) (thing 18724 . 18726) (thing 18712 . 18713) (thing 18687 . 18711) (thing 18688 . 18710) (thing 18683 . 18687) (thing 18682 . 18683) (thing 18656 . 18681) (thing 18657 . 18680) (thing 18652 . 18656) (thing 18651 . 18652) (thing 18620 . 18650) (thing 18621 . 18649) (thing 18616 . 18620) (thing 18615 . 18616) (thing 18592 . 18614) (thing 18593 . 18613) (thing 18588 . 18592) (thing 18587 . 18588) (thing 18568 . 18586) (thing 18569 . 18585) (thing 18562 . 18568) (thing 18561 . 18562) (thing 18543 . 18560) (thing 18544 . 18559) (thing 18537 . 18543) (thing 18536 . 18537) (thing 18522 . 18535) (thing 18523 . 18534) (thing 18517 . 18522) (thing 18516 . 18517) (thing 18484 . 18515) (thing 18485 . 18514) (thing 18479 . 18484) (thing 18478 . 18479) (thing 18462 . 18477) (thing 18463 . 18476) (thing 18457 . 18462) (thing 18456 . 18457) (thing 18439 . 18455) (thing 18440 . 18454) (thing 18434 . 18439) (thing 18433 . 18434) (thing 18412 . 18432) (thing 18413 . 18431) (thing 18401 . 18412) (thing 18086 . 18396) (thing 18047 . 18085) (thing 18045 . 18047) (thing 18033 . 18034) (thing 18008 . 18032) (thing 18009 . 18031) (thing 18004 . 18008) (thing 18003 . 18004) (thing 17980 . 18002) (thing 17981 . 18001) (thing 17976 . 17980) (thing 17975 . 17976) (thing 17945 . 17974) (thing 17946 . 17973) (thing 17941 . 17945) (thing 17940 . 17941) (thing 17916 . 17939) (thing 17917 . 17938) (thing 17912 . 17916) (thing 17911 . 17912) (thing 17890 . 17910) (thing 17891 . 17909) (thing 17886 . 17890) (thing 17885 . 17886) (thing 17854 . 17884) (thing 17855 . 17883) (thing 17850 . 17854) (thing 17849 . 17850) (thing 17815 . 17848) (thing 17816 . 17847) (thing 17811 . 17815) (thing 17810 . 17811) (thing 17786 . 17809) (thing 17787 . 17808) (thing 17782 . 17786) (thing 17781 . 17782) (thing 17752 . 17780) (thing 17753 . 17779) (thing 17748 . 17752) (thing 17747 . 17748) (thing 17721 . 17746) (thing 17722 . 17745) (thing 17717 . 17721) (thing 17716 . 17717) (thing 17693 . 17715) (thing 17694 . 17714) (thing 17689 . 17693) (thing 17688 . 17689) (thing 17669 . 17687) (thing 17670 . 17686) (thing 17663 . 17669) (thing 17662 . 17663) (thing 17643 . 17661) (thing 17644 . 17660) (thing 17637 . 17643) (thing 17636 . 17637) (thing 17622 . 17635) (thing 17623 . 17634) (thing 17617 . 17622) (thing 17616 . 17617) (thing 17584 . 17615) (thing 17585 . 17614) (thing 17579 . 17584) (thing 17578 . 17579) (thing 17562 . 17577) (thing 17563 . 17576) (thing 17557 . 17562) (thing 17556 . 17557) (thing 17539 . 17555) (thing 17540 . 17554) (thing 17534 . 17539) (thing 17533 . 17534) (thing 17508 . 17532) (thing 17509 . 17531) (thing 17497 . 17508) (thing 17330 . 17493) (thing 17291 . 17329) (thing 17289 . 17291) (thing 17277 . 17278) (thing 17251 . 17276) (thing 17252 . 17275) (thing 17247 . 17251) (thing 17246 . 17247) (thing 17215 . 17245) (thing 17216 . 17244) (thing 17211 . 17215) (thing 17210 . 17211) (thing 17187 . 17209) (thing 17188 . 17208) (thing 17183 . 17187) (thing 17182 . 17183) (thing 17164 . 17181) (thing 17165 . 17180) (thing 17158 . 17164) (thing 17157 . 17158) (thing 17139 . 17156) (thing 17140 . 17155) (thing 17133 . 17139) (thing 17132 . 17133) (thing 17118 . 17131) (thing 17119 . 17130) (thing 17113 . 17118) (thing 17112 . 17113) (thing 17096 . 17111) (thing 17097 . 17110) (thing 17091 . 17096) (thing 17090 . 17091) (thing 17073 . 17089) (thing 17074 . 17088) (thing 17068 . 17073) (thing 17067 . 17068) (thing 17046 . 17066) (thing 17047 . 17065) (thing 17035 . 17046) (thing 16721 . 17031) (thing 16682 . 16720) (thing 16680 . 16682) (thing 16668 . 16669) (thing 16645 . 16667) (thing 16646 . 16666) (thing 16641 . 16645) (thing 16640 . 16641) (thing 16610 . 16639) (thing 16611 . 16638) (thing 16606 . 16610) (thing 16605 . 16606) (thing 16581 . 16604) (thing 16582 . 16603) (thing 16577 . 16581) (thing 16576 . 16577) (thing 16555 . 16575) (thing 16556 . 16574) (thing 16551 . 16555) (thing 16550 . 16551) (thing 16519 . 16549) (thing 16520 . 16548) (thing 16515 . 16519) (thing 16514 . 16515) (thing 16480 . 16513) (thing 16481 . 16512) (thing 16476 . 16480) (thing 16475 . 16476) (thing 16451 . 16474) (thing 16452 . 16473) (thing 16447 . 16451) (thing 16446 . 16447) (thing 16417 . 16445) (thing 16418 . 16444) (thing 16413 . 16417) (thing 16412 . 16413) (thing 16386 . 16411) (thing 16387 . 16410) (thing 16382 . 16386) (thing 16381 . 16382) (thing 16358 . 16380) (thing 16359 . 16379) (thing 16354 . 16358) (thing 16353 . 16354) (thing 16335 . 16352) (thing 16336 . 16351) (thing 16329 . 16335) (thing 16328 . 16329) (thing 16309 . 16327) (thing 16310 . 16326) (thing 16303 . 16309) (thing 16302 . 16303) (thing 16288 . 16301) (thing 16289 . 16300) (thing 16283 . 16288) (thing 16282 . 16283) (thing 16266 . 16281) (thing 16267 . 16280) (thing 16261 . 16266) (thing 16260 . 16261) (thing 16243 . 16259) (thing 16244 . 16258) (thing 16238 . 16243) (thing 16237 . 16238) (thing 16212 . 16236) (thing 16213 . 16235) (thing 16201 . 16212) (thing 15925 . 16197) (thing 15886 . 15924) (thing 15884 . 15886) (thing 15872 . 15873) (thing 15850 . 15871) (thing 15851 . 15870) (thing 15846 . 15850) (thing 15845 . 15846) (thing 15815 . 15844) (thing 15816 . 15843) (thing 15811 . 15815) (thing 15810 . 15811) (thing 15782 . 15809) (thing 15783 . 15808) (thing 15778 . 15782) (thing 15777 . 15778) (thing 15761 . 15776) (thing 15762 . 15775) (thing 15757 . 15761) (thing 15756 . 15757) (thing 15732 . 15755) (thing 15733 . 15754) (thing 15728 . 15732) (thing 15727 . 15728) (thing 15704 . 15726) (thing 15705 . 15725) (thing 15700 . 15704) (thing 15699 . 15700) (thing 15676 . 15698) (thing 15677 . 15697) (thing 15670 . 15676) (thing 15669 . 15670) (thing 15651 . 15668) (thing 15652 . 15667) (thing 15645 . 15651) (thing 15644 . 15645) (thing 15630 . 15643) (thing 15631 . 15642) (thing 15625 . 15630) (thing 15624 . 15625) (thing 15592 . 15623) (thing 15593 . 15622) (thing 15587 . 15592) (thing 15586 . 15587) (thing 15570 . 15585) (thing 15571 . 15584) (thing 15565 . 15570) (thing 15564 . 15565) (thing 15547 . 15563) (thing 15548 . 15562) (thing 15542 . 15547) (thing 15541 . 15542) (thing 15522 . 15540) (thing 15523 . 15539) (thing 15511 . 15522) (thing 15235 . 15507) (thing 15196 . 15234) (thing 15194 . 15196) (thing 15182 . 15183) (thing 15157 . 15181) (thing 15158 . 15180) (thing 15153 . 15157) (thing 15152 . 15153) (thing 15121 . 15151) (thing 15122 . 15150) (thing 15117 . 15121) (thing 15116 . 15117) (thing 15092 . 15115) (thing 15093 . 15114) (thing 15088 . 15092) (thing 15087 . 15088) (thing 15061 . 15086) (thing 15062 . 15085) (thing 15057 . 15061) (thing 15056 . 15057) (thing 15033 . 15055) (thing 15034 . 15054) (thing 15029 . 15033) (thing 15028 . 15029) (thing 15009 . 15027) (thing 15010 . 15026) (thing 15003 . 15009) (thing 15002 . 15003) (thing 14985 . 15001) (thing 14986 . 15000) (thing 14979 . 14985) (thing 14978 . 14979) (thing 14964 . 14977) (thing 14965 . 14976) (thing 14959 . 14964) (thing 14958 . 14959) (thing 14926 . 14957) (thing 14927 . 14956) (thing 14921 . 14926) (thing 14920 . 14921) (thing 14904 . 14919) (thing 14905 . 14918) (thing 14899 . 14904) (thing 14898 . 14899) (thing 14881 . 14897) (thing 14882 . 14896) (thing 14876 . 14881) (thing 14875 . 14876) (thing 14849 . 14874) (thing 14850 . 14873) (thing 14838 . 14849) (thing 14562 . 14834) (thing 14523 . 14561) (thing 14521 . 14523) (thing 14509 . 14510) (thing 14478 . 14508) (thing 14479 . 14507) (thing 14474 . 14478) (thing 14473 . 14474) (thing 14449 . 14472) (thing 14450 . 14471) (thing 14445 . 14449) (thing 14444 . 14445) (thing 14418 . 14443) (thing 14419 . 14442) (thing 14414 . 14418) (thing 14413 . 14414) (thing 14390 . 14412) (thing 14391 . 14411) (thing 14386 . 14390) (thing 14385 . 14386) (thing 14367 . 14384) (thing 14368 . 14383) (thing 14361 . 14367) (thing 14360 . 14361) (thing 14343 . 14359) (thing 14344 . 14358) (thing 14337 . 14343) (thing 14336 . 14337) (thing 14322 . 14335) (thing 14323 . 14334) (thing 14317 . 14322) (thing 14316 . 14317) (thing 14300 . 14315) (thing 14301 . 14314) (thing 14295 . 14300) (thing 14294 . 14295) (thing 14277 . 14293) (thing 14278 . 14292) (thing 14272 . 14277) (thing 14271 . 14272) (thing 14245 . 14270) (thing 14246 . 14269) (thing 14234 . 14245) (thing 14190 . 14191) (thing 14168 . 14189) (thing 14169 . 14188) (thing 14164 . 14168) (thing 14163 . 14164) (thing 14143 . 14162) (thing 14144 . 14161) (thing 14137 . 14143) (thing 14136 . 14137) (thing 14118 . 14135) (thing 14119 . 14134) (thing 14113 . 14118) (thing 14112 . 14113) (thing 14082 . 14111) (thing 14083 . 14110) (thing 14071 . 14082) (thing 14027 . 14028) (thing 14005 . 14026) (thing 14006 . 14025) (thing 14001 . 14005) (thing 14000 . 14001) (thing 13980 . 13999) (thing 13981 . 13998) (thing 13974 . 13980) (thing 13973 . 13974) (thing 13955 . 13972) (thing 13956 . 13971) (thing 13950 . 13955) (thing 13949 . 13950) (thing 13915 . 13948) (thing 13916 . 13947) (thing 13904 . 13915) (thing 13813 . 13900) (thing 13774 . 13812) (thing 13772 . 13774) (thing 13760 . 13761) (thing 13738 . 13759) (thing 13739 . 13758) (thing 13734 . 13738) (thing 13733 . 13734) (thing 13721 . 13732) (thing 13722 . 13731) (thing 13717 . 13721) (thing 13716 . 13717) (thing 13702 . 13715) (thing 13703 . 13714) (thing 13696 . 13702) (thing 13695 . 13696) (thing 13677 . 13694) (thing 13678 . 13693) (thing 13672 . 13677) (thing 13671 . 13672) (thing 13636 . 13670) (thing 13637 . 13669) (thing 13625 . 13636) (thing 13581 . 13582) (thing 13559 . 13580) (thing 13560 . 13579) (thing 13555 . 13559) (thing 13554 . 13555) (thing 13542 . 13553) (thing 13543 . 13552) (thing 13538 . 13542) (thing 13537 . 13538) (thing 13511 . 13536) (thing 13512 . 13535) (thing 13505 . 13511) (thing 13504 . 13505) (thing 13489 . 13503) (thing 13490 . 13502) (thing 13484 . 13489) (thing 13483 . 13484) (thing 13469 . 13482) (thing 13470 . 13481) (thing 13464 . 13469) (thing 13463 . 13464) (thing 13438 . 13462) (thing 13439 . 13461) (thing 13433 . 13438) (thing 13432 . 13433) (thing 13403 . 13431) (thing 13404 . 13430) (thing 13392 . 13403) (thing 13117 . 13388) (thing 13078 . 13116) (thing 13076 . 13078) (thing 13064 . 13065) (thing 13052 . 13063) (thing 13053 . 13062) (thing 13048 . 13052) (thing 13047 . 13048) (thing 13025 . 13046) (thing 13026 . 13045) (thing 13021 . 13025) (thing 13020 . 13021) (thing 12996 . 13019) (thing 12997 . 13018) (thing 12992 . 12996) (thing 12991 . 12992) (thing 12977 . 12990) (thing 12978 . 12989) (thing 12971 . 12977) (thing 12970 . 12971) (thing 12955 . 12969) (thing 12956 . 12968) (thing 12949 . 12955) (thing 12948 . 12949) (thing 12926 . 12947) (thing 12927 . 12946) (thing 12921 . 12926) (thing 12920 . 12921) (thing 12898 . 12919) (thing 12899 . 12918) (thing 12887 . 12898) (thing 12796 . 12883) (thing 12757 . 12795) (thing 12755 . 12757) (thing 12743 . 12744) (thing 12723 . 12742) (thing 12724 . 12741) (thing 12719 . 12723) (thing 12718 . 12719) (thing 12691 . 12717) (thing 12692 . 12716) (thing 12685 . 12691) (thing 12684 . 12685) (thing 12658 . 12683) (thing 12659 . 12682) (thing 12653 . 12658) (thing 12652 . 12653) (thing 12628 . 12651) (thing 12629 . 12650) (thing 12617 . 12628) (thing 12526 . 12613) (thing 12487 . 12525) (thing 12485 . 12487) (thing 12473 . 12474) (thing 12461 . 12472) (thing 12462 . 12471) (thing 12457 . 12461) (thing 12456 . 12457) (thing 12432 . 12455) (thing 12433 . 12454) (thing 12428 . 12432) (thing 12427 . 12428) (thing 12413 . 12426) (thing 12414 . 12425) (thing 12407 . 12413) (thing 12406 . 12407) (thing 12388 . 12405) (thing 12389 . 12404) (thing 12383 . 12388) (thing 12382 . 12383) (thing 12369 . 12381) (thing 12370 . 12380) (thing 12364 . 12369) (thing 12363 . 12364) (thing 12339 . 12362) (thing 12340 . 12361) (thing 12328 . 12339) (thing 12194 . 12324) (thing 12155 . 12193) (thing 12153 . 12155) (thing 12141 . 12142) (thing 12129 . 12140) (thing 12130 . 12139) (thing 12125 . 12129) (thing 12124 . 12125) (thing 12106 . 12123) (thing 12107 . 12122) (thing 12100 . 12106) (thing 12099 . 12100) (thing 12085 . 12098) (thing 12086 . 12097) (thing 12079 . 12085) (thing 12078 . 12079) (thing 12065 . 12077) (thing 12066 . 12076) (thing 12060 . 12065) (thing 12059 . 12060) (thing 12035 . 12058) (thing 12036 . 12057) (thing 12024 . 12035) (thing 11251 . 12020) (thing 11212 . 11250) (thing 11210 . 11212) (thing 11198 . 11199) (thing 11157 . 11197) (thing 11158 . 11196) (thing 11153 . 11157) (thing 11152 . 11153) (thing 11113 . 11138) (thing 11114 . 11137) (thing 11109 . 11113) (thing 11108 . 11109) (thing 11078 . 11107) (thing 11079 . 11106) (thing 11074 . 11078) (thing 11073 . 11074) (thing 11050 . 11072) (thing 11051 . 11071) (thing 11046 . 11050) (thing 11045 . 11046) (thing 10988 . 11009) (thing 10989 . 11008) (thing 10984 . 10988) (thing 10983 . 10984) (thing 10970 . 10982) (thing 10971 . 10981) (thing 10966 . 10970) (thing 10965 . 10966) (thing 10912 . 10964) (thing 10913 . 10963) (thing 10908 . 10912) (thing 10907 . 10908) (thing 10887 . 10906) (thing 10888 . 10905) (thing 10881 . 10887) (thing 10880 . 10881) (thing 10858 . 10879) (thing 10859 . 10878) (thing 10853 . 10858) (thing 10852 . 10853) (thing 10833 . 10851) (thing 10834 . 10850) (thing 10828 . 10833) (thing 10827 . 10828) (thing 10813 . 10826) (thing 10814 . 10825) (thing 10808 . 10813) (thing 10807 . 10808) (thing 10789 . 10806) (thing 10790 . 10805) (thing 10778 . 10789) (thing 10738 . 10739) (thing 10735 . 10737) (thing 10722 . 10735) (thing 10721 . 10722) (thing 10705 . 10720) (thing 10706 . 10719) (thing 10701 . 10705) (thing 10700 . 10701) (thing 10679 . 10699) (thing 10680 . 10698) (thing 10675 . 10679) (thing 10674 . 10675) (thing 10650 . 10673) (thing 10651 . 10672) (thing 10646 . 10650) (thing 10645 . 10646) (thing 10622 . 10644) (thing 10623 . 10643) (thing 10618 . 10622) (thing 10617 . 10618) (thing 10592 . 10616) (thing 10593 . 10615) (thing 10586 . 10592) (thing 10585 . 10586) (thing 10569 . 10584) (thing 10570 . 10583) (thing 10558 . 10569) (thing 10534 . 10554) (thing 10526 . 10527) (thing 10508 . 10525) (thing 10509 . 10524) (thing 10503 . 10508) (thing 10502 . 10503) (thing 10479 . 10501) (thing 10480 . 10500) (thing 10474 . 10479) (thing 10473 . 10474) (thing 10455 . 10472) (thing 10456 . 10471) (thing 10444 . 10455) (thing 10420 . 10440) (thing 10412 . 10413) (thing 10389 . 10411) (thing 10390 . 10410) (thing 10384 . 10389) (thing 10383 . 10384) (thing 10363 . 10382) (thing 10364 . 10381) (thing 10352 . 10363) (thing 10304 . 10305) (thing 10262 . 10303) (thing 10263 . 10302) (thing 10258 . 10262) (thing 10257 . 10258) (thing 10245 . 10256) (thing 10246 . 10255) (thing 10241 . 10245) (thing 10240 . 10241) (thing 10213 . 10239) (thing 10214 . 10238) (thing 10209 . 10213) (thing 10208 . 10209) (thing 10187 . 10207) (thing 10188 . 10206) (thing 10183 . 10187) (thing 10182 . 10183) (thing 10160 . 10181) (thing 10161 . 10180) (thing 10156 . 10160) (thing 10155 . 10156) (thing 10135 . 10154) (thing 10136 . 10153) (thing 10129 . 10135) (thing 10128 . 10129) (thing 10108 . 10127) (thing 10109 . 10126) (thing 10102 . 10108) (thing 10101 . 10102) (thing 10084 . 10100) (thing 10085 . 10099) (thing 10079 . 10084) (thing 10078 . 10079) (thing 10056 . 10077) (thing 10057 . 10076) (thing 10051 . 10056) (thing 10050 . 10051) (thing 10031 . 10049) (thing 10032 . 10048) (thing 10020 . 10031) (thing 9871 . 10016) (thing 9832 . 9870) (thing 9830 . 9832) (thing 9818 . 9819) (thing 9776 . 9817) (thing 9777 . 9816) (thing 9772 . 9776) (thing 9771 . 9772) (thing 9735 . 9770) (thing 9736 . 9769) (thing 9731 . 9735) (thing 9730 . 9731) (thing 9706 . 9729) (thing 9707 . 9728) (thing 9702 . 9706) (thing 9701 . 9702) (thing 9677 . 9700) (thing 9678 . 9699) (thing 9673 . 9677) (thing 9672 . 9673) (thing 9648 . 9671) (thing 9649 . 9670) (thing 9644 . 9648) (thing 9643 . 9644) (thing 9618 . 9642) (thing 9619 . 9641) (thing 9612 . 9618) (thing 9611 . 9612) (thing 9588 . 9610) (thing 9589 . 9609) (thing 9582 . 9588) (thing 9581 . 9582) (thing 9559 . 9580) (thing 9560 . 9579) (thing 9554 . 9559) (thing 9553 . 9554) (thing 9537 . 9552) (thing 9538 . 9551) (thing 9532 . 9537) (thing 9531 . 9532) (thing 9519 . 9530) (thing 9520 . 9529) (thing 9514 . 9519) (thing 9513 . 9514) (thing 9499 . 9512) (thing 9500 . 9511) (thing 9500 . 9511) (thing 9488 . 9499) (thing 9488 . 9499) (thing 9339 . 9484) (thing 9339 . 9484) (thing 9300 . 9338) (thing 9300 . 9338) (thing 9298 . 9300) (thing 9298 . 9300) (thing 9286 . 9287) (thing 9286 . 9287) (thing 9263 . 9285) (thing 9263 . 9285) (thing 9264 . 9284) (thing 9264 . 9284) (thing 9259 . 9263) (thing 9259 . 9263) (thing 9258 . 9259) (thing 9258 . 9259) (thing 9233 . 9257) (thing 9233 . 9257) (thing 9234 . 9256) (thing 9234 . 9256) (thing 9227 . 9233) (thing 9227 . 9233) (thing 9226 . 9227) (thing 9226 . 9227) (thing 9203 . 9225) (thing 9203 . 9225) (thing 9204 . 9224) (thing 9204 . 9224) (thing 9197 . 9203) (thing 9197 . 9203) (thing 9196 . 9197) (thing 9196 . 9197) (thing 9185 . 9195) (thing 9185 . 9195) (thing 9186 . 9194) (thing 9186 . 9194) (thing 9180 . 9185) (thing 9180 . 9185) (thing 9179 . 9180) (thing 9179 . 9180) (thing 9165 . 9178) (thing 9165 . 9178) (thing 9166 . 9177) (thing 9166 . 9177) (thing 9154 . 9165) (thing 9154 . 9165) (thing 8989 . 9149) (thing 8989 . 9149) (thing 8950 . 8988) (thing 8950 . 8988) (thing 8948 . 8950) (thing 8948 . 8950) (thing 8936 . 8937) (thing 8936 . 8937) (thing 8912 . 8935) (thing 8912 . 8935) (thing 8913 . 8934) (thing 8913 . 8934) (thing 8908 . 8912) (thing 8908 . 8912) (thing 8907 . 8908) (thing 8907 . 8908) (thing 8876 . 8906) (thing 8876 . 8906) (thing 8877 . 8905) (thing 8877 . 8905) (thing 8872 . 8876) (thing 8872 . 8876) (thing 8871 . 8872) (thing 8871 . 8872) (thing 8840 . 8870) (thing 8840 . 8870) (thing 8841 . 8869) (thing 8841 . 8869) (thing 8836 . 8840) (thing 8836 . 8840) (thing 8835 . 8836) (thing 8835 . 8836) (thing 8816 . 8834) (thing 8816 . 8834) (thing 8817 . 8833) (thing 8817 . 8833) (thing 8810 . 8816) (thing 8810 . 8816) (thing 8809 . 8810) (thing 8809 . 8810) (thing 8792 . 8808) (thing 8792 . 8808) (thing 8793 . 8807) (thing 8793 . 8807) (thing 8786 . 8792) (thing 8786 . 8792) (thing 8785 . 8786) (thing 8785 . 8786) (thing 8765 . 8784) (thing 8765 . 8784) (thing 8766 . 8783) (thing 8766 . 8783) (thing 8760 . 8765) (thing 8760 . 8765) (thing 8759 . 8760) (thing 8759 . 8760) (thing 8743 . 8758) (thing 8743 . 8758) (thing 8744 . 8757) (thing 8744 . 8757) (thing 8738 . 8743) (thing 8738 . 8743) (thing 8737 . 8738) (thing 8737 . 8738) (thing 8720 . 8736) (thing 8720 . 8736) (thing 8721 . 8735) (thing 8721 . 8735) (thing 8715 . 8720) (thing 8715 . 8720) (thing 8714 . 8715) (thing 8714 . 8715) (thing 8701 . 8713) (thing 8701 . 8713) (thing 8702 . 8712) (thing 8702 . 8712) (thing 8690 . 8701) (thing 8690 . 8701) (thing 8526 . 8686) (thing 8526 . 8686) (thing 8487 . 8525) (thing 8487 . 8525) (thing 8485 . 8487) (thing 8485 . 8487) (thing 8473 . 8474) (thing 8473 . 8474) (thing 8449 . 8472) (thing 8449 . 8472) (thing 8450 . 8471) (thing 8450 . 8471) (thing 8445 . 8449) (thing 8445 . 8449) (thing 8444 . 8445) (thing 8444 . 8445) (thing 8413 . 8443) (thing 8413 . 8443) (thing 8414 . 8442) (thing 8414 . 8442) (thing 8409 . 8413) (thing 8409 . 8413) (thing 8408 . 8409) (thing 8408 . 8409) (thing 8377 . 8407) (thing 8377 . 8407) (thing 8378 . 8406) (thing 8378 . 8406) (thing 8373 . 8377) (thing 8373 . 8377) (thing 8372 . 8373) (thing 8372 . 8373) (thing 8354 . 8371) (thing 8354 . 8371) (thing 8355 . 8370) (thing 8355 . 8370) (thing 8348 . 8354) (thing 8348 . 8354) (thing 8347 . 8348) (thing 8347 . 8348) (thing 8330 . 8346) (thing 8330 . 8346) (thing 8331 . 8345) (thing 8331 . 8345) (thing 8324 . 8330) (thing 8324 . 8330) (thing 8323 . 8324) (thing 8323 . 8324) (thing 8303 . 8322) (thing 8303 . 8322) (thing 8304 . 8321) (thing 8304 . 8321) (thing 8298 . 8303) (thing 8298 . 8303) (thing 8297 . 8298) (thing 8297 . 8298) (thing 8281 . 8296) (thing 8281 . 8296) (thing 8282 . 8295) (thing 8282 . 8295) (thing 8276 . 8281) (thing 8276 . 8281) (thing 8275 . 8276) (thing 8275 . 8276) (thing 8258 . 8274) (thing 8258 . 8274) (thing 8259 . 8273) (thing 8259 . 8273) (thing 8253 . 8258) (thing 8253 . 8258) (thing 8252 . 8253) (thing 8252 . 8253) (thing 8239 . 8251) (thing 8239 . 8251) (thing 8240 . 8250) (thing 8240 . 8250) (thing 8228 . 8239) (thing 8228 . 8239) (thing 7950 . 8224) (thing 7950 . 8224) (thing 7911 . 7949) (thing 7911 . 7949) (thing 7909 . 7911) (thing 7909 . 7911) (thing 7897 . 7898) (thing 7897 . 7898) (thing 7872 . 7896) (thing 7872 . 7896) (thing 7873 . 7895) (thing 7873 . 7895) (thing 7868 . 7872) (thing 7868 . 7872) (thing 7867 . 7868) (thing 7867 . 7868) (thing 7841 . 7866) (thing 7841 . 7866) (thing 7842 . 7865) (thing 7842 . 7865) (thing 7837 . 7841) (thing 7837 . 7841) (thing 7836 . 7837) (thing 7836 . 7837) (thing 7813 . 7835) (thing 7813 . 7835) (thing 7814 . 7834) (thing 7814 . 7834) (thing 7814 . 7834) (thing 7809 . 7813) (thing 7809 . 7813) (thing 7809 . 7813) (thing 7808 . 7809) (thing 7808 . 7809) (thing 7808 . 7809) (thing 7789 . 7807) (thing 7789 . 7807) (thing 7789 . 7807) (thing 7790 . 7806) (thing 7790 . 7806) (thing 7790 . 7806) (thing 7783 . 7789) (thing 7783 . 7789) (thing 7783 . 7789) (thing 7782 . 7783) (thing 7782 . 7783) (thing 7782 . 7783) (thing 7763 . 7781) (thing 7763 . 7781) (thing 7763 . 7781) (thing 7764 . 7780) (thing 7764 . 7780) (thing 7764 . 7780) (thing 7757 . 7763) (thing 7757 . 7763) (thing 7757 . 7763) (thing 7756 . 7757) (thing 7756 . 7757) (thing 7756 . 7757) (thing 7735 . 7755) (thing 7735 . 7755) (thing 7735 . 7755) (thing 7736 . 7754) (thing 7736 . 7754) (thing 7736 . 7754) (thing 7729 . 7735) (thing 7729 . 7735) (thing 7729 . 7735) (thing 7728 . 7729) (thing 7728 . 7729) (thing 7728 . 7729) (thing 7707 . 7727) (thing 7707 . 7727) (thing 7707 . 7727) (thing 7708 . 7726) (thing 7708 . 7726) (thing 7708 . 7726) (thing 7701 . 7707) (thing 7701 . 7707) (thing 7701 . 7707) (thing 7700 . 7701) (thing 7700 . 7701) (thing 7700 . 7701) (thing 7686 . 7699) (thing 7686 . 7699) (thing 7686 . 7699) (thing 7687 . 7698) (thing 7687 . 7698) (thing 7687 . 7698) (thing 7681 . 7686) (thing 7681 . 7686) (thing 7681 . 7686) (thing 7680 . 7681) (thing 7680 . 7681) (thing 7680 . 7681) (thing 7648 . 7679) (thing 7648 . 7679) (thing 7648 . 7679) (thing 7649 . 7678) (thing 7649 . 7678) (thing 7649 . 7678) (thing 7643 . 7648) (thing 7643 . 7648) (thing 7643 . 7648) (thing 7642 . 7643) (thing 7642 . 7643) (thing 7642 . 7643) (thing 7626 . 7641) (thing 7626 . 7641) (thing 7626 . 7641) (thing 7627 . 7640) (thing 7627 . 7640) (thing 7627 . 7640) (thing 7621 . 7626) (thing 7621 . 7626) (thing 7621 . 7626) (thing 7620 . 7621) (thing 7620 . 7621) (thing 7620 . 7621) (thing 7603 . 7619) (thing 7603 . 7619) (thing 7603 . 7619) (thing 7604 . 7618) (thing 7604 . 7618) (thing 7604 . 7618) (thing 7598 . 7603) (thing 7598 . 7603) (thing 7598 . 7603) (thing 7597 . 7598) (thing 7597 . 7598) (thing 7597 . 7598) (thing 7571 . 7596) (thing 7571 . 7596) (thing 7571 . 7596) (thing 7572 . 7595) (thing 7572 . 7595) (thing 7572 . 7595) (thing 7560 . 7571) (thing 7560 . 7571) (thing 7560 . 7571) (thing 7282 . 7556) (thing 7282 . 7556) (thing 7282 . 7556) (thing 7243 . 7281) (thing 7243 . 7281) (thing 7243 . 7281) (thing 7241 . 7243) (thing 7241 . 7243) (thing 7241 . 7243) (thing 7229 . 7230) (thing 7229 . 7230) (thing 7229 . 7230) (thing 7203 . 7228) (thing 7203 . 7228) (thing 7203 . 7228) (thing 7204 . 7227) (thing 7204 . 7227) (thing 7204 . 7227) (thing 7199 . 7203) (thing 7199 . 7203) (thing 7199 . 7203) (thing 7198 . 7199) (thing 7198 . 7199) (thing 7198 . 7199) (thing 7175 . 7197) (thing 7175 . 7197) (thing 7175 . 7197) (thing 7176 . 7196) (thing 7176 . 7196) (thing 7176 . 7196) (thing 7171 . 7175) (thing 7171 . 7175) (thing 7171 . 7175) (thing 7170 . 7171) (thing 7170 . 7171) (thing 7170 . 7171) (thing 7151 . 7169) (thing 7151 . 7169) (thing 7151 . 7169) (thing 7152 . 7168) (thing 7152 . 7168) (thing 7152 . 7168) (thing 7145 . 7151) (thing 7145 . 7151) (thing 7145 . 7151) (thing 7144 . 7145) (thing 7144 . 7145) (thing 7144 . 7145) (thing 7123 . 7143) (thing 7123 . 7143) (thing 7123 . 7143) (thing 7124 . 7142) (thing 7124 . 7142) (thing 7124 . 7142) (thing 7117 . 7123) (thing 7117 . 7123) (thing 7117 . 7123) (thing 7116 . 7117) (thing 7116 . 7117) (thing 7116 . 7117) (thing 7095 . 7115) (thing 7095 . 7115) (thing 7095 . 7115) (thing 7096 . 7114) (thing 7096 . 7114) (thing 7096 . 7114) (thing 7089 . 7095) (thing 7089 . 7095) (thing 7089 . 7095) (thing 7088 . 7089) (thing 7088 . 7089) (thing 7088 . 7089) (thing 7074 . 7087) (thing 7074 . 7087) (thing 7074 . 7087) (thing 7075 . 7086) (thing 7075 . 7086) (thing 7075 . 7086) (thing 7069 . 7074) (thing 7069 . 7074) (thing 7069 . 7074) (thing 7068 . 7069) (thing 7068 . 7069) (thing 7068 . 7069) (thing 7052 . 7067) (thing 7052 . 7067) (thing 7052 . 7067) (thing 7053 . 7066) (thing 7053 . 7066) (thing 7053 . 7066) (thing 7047 . 7052) (thing 7047 . 7052) (thing 7047 . 7052) (thing 7046 . 7047) (thing 7046 . 7047) (thing 7046 . 7047) (thing 7029 . 7045) (thing 7029 . 7045) (thing 7029 . 7045) (thing 7030 . 7044) (thing 7030 . 7044) (thing 7030 . 7044) (thing 7024 . 7029) (thing 7024 . 7029) (thing 7024 . 7029) (thing 7023 . 7024) (thing 7023 . 7024) (thing 7023 . 7024) (thing 6997 . 7022) (thing 6997 . 7022) (thing 6997 . 7022) (thing 6998 . 7021) (thing 6998 . 7021) (thing 6998 . 7021) (thing 6986 . 6997) (thing 6986 . 6997) (thing 6986 . 6997) (thing 6327 . 6982) (thing 6327 . 6982) (thing 6327 . 6982) (thing 6288 . 6326) (thing 6288 . 6326) (thing 6288 . 6326) (thing 6286 . 6288) (thing 6286 . 6288) (thing 6286 . 6288) (thing 6274 . 6275) (thing 6274 . 6275) (thing 6274 . 6275) (thing 6213 . 6273) (thing 6213 . 6273) (thing 6213 . 6273) (thing 6214 . 6272) (thing 6214 . 6272) (thing 6214 . 6272) (thing 6209 . 6213) (thing 6209 . 6213) (thing 6209 . 6213) (thing 6208 . 6209) (thing 6208 . 6209) (thing 6208 . 6209) (thing 6178 . 6207) (thing 6178 . 6207) (thing 6178 . 6207) (thing 6179 . 6206) (thing 6179 . 6206) (thing 6179 . 6206) (thing 6174 . 6178) (thing 6174 . 6178) (thing 6174 . 6178) (thing 6173 . 6174) (thing 6173 . 6174) (thing 6173 . 6174) (thing 6148 . 6172) (thing 6148 . 6172) (thing 6148 . 6172) (thing 6149 . 6171) (thing 6149 . 6171) (thing 6149 . 6171) (thing 6144 . 6148) (thing 6144 . 6148) (thing 6144 . 6148) (thing 6143 . 6144) (thing 6143 . 6144) (thing 6143 . 6144) (thing 6122 . 6142) (thing 6122 . 6142) (thing 6122 . 6142) (thing 6123 . 6141) (thing 6123 . 6141) (thing 6123 . 6141) (thing 6118 . 6122) (thing 6118 . 6122) (thing 6118 . 6122) (thing 6117 . 6118) (thing 6117 . 6118) (thing 6117 . 6118) (thing 6086 . 6116) (thing 6086 . 6116) (thing 6086 . 6116) (thing 6087 . 6115) (thing 6087 . 6115) (thing 6087 . 6115) (thing 6082 . 6086) (thing 6082 . 6086) (thing 6082 . 6086) (thing 6081 . 6082) (thing 6081 . 6082) (thing 6081 . 6082) (thing 6047 . 6080) (thing 6047 . 6080) (thing 6047 . 6080) (thing 6048 . 6079) (thing 6048 . 6079) (thing 6048 . 6079) (thing 6043 . 6047) (thing 6043 . 6047) (thing 6043 . 6047) (thing 6042 . 6043) (thing 6042 . 6043) (thing 6042 . 6043) (thing 6018 . 6041) (thing 6018 . 6041) (thing 6018 . 6041) (thing 6019 . 6040) (thing 6019 . 6040) (thing 6019 . 6040) (thing 6014 . 6018) (thing 6014 . 6018) (thing 6014 . 6018) (thing 6013 . 6014) (thing 6013 . 6014) (thing 6013 . 6014) (thing 5984 . 6012) (thing 5984 . 6012) (thing 5984 . 6012) (thing 5985 . 6011) (thing 5985 . 6011) (thing 5985 . 6011) (thing 5980 . 5984) (thing 5980 . 5984) (thing 5980 . 5984) (thing 5979 . 5980) (thing 5979 . 5980) (thing 5979 . 5980) (thing 5960 . 5978) (thing 5960 . 5978) (thing 5960 . 5978) (thing 5961 . 5977) (thing 5961 . 5977) (thing 5961 . 5977) (thing 5954 . 5960) (thing 5954 . 5960) (thing 5954 . 5960) (thing 5953 . 5954) (thing 5953 . 5954) (thing 5953 . 5954) (thing 5930 . 5952) (thing 5930 . 5952) (thing 5930 . 5952) (thing 5931 . 5951) (thing 5931 . 5951) (thing 5931 . 5951) (thing 5925 . 5930) (thing 5925 . 5930) (thing 5925 . 5930) (thing 5924 . 5925) (thing 5924 . 5925) (thing 5924 . 5925) (thing 5901 . 5923) (thing 5901 . 5923) (thing 5901 . 5923) (thing 5902 . 5922) (thing 5902 . 5922) (thing 5902 . 5922) (thing 5896 . 5901) (thing 5896 . 5901) (thing 5896 . 5901) (thing 5895 . 5896) (thing 5895 . 5896) (thing 5895 . 5896) (thing 5876 . 5894) (thing 5876 . 5894) (thing 5876 . 5894) (thing 5877 . 5893) (thing 5877 . 5893) (thing 5877 . 5893) (thing 5871 . 5876) (thing 5871 . 5876) (thing 5871 . 5876) (thing 5870 . 5871) (thing 5870 . 5871) (thing 5870 . 5871) (thing 5848 . 5869) (thing 5848 . 5869) (thing 5848 . 5869) (thing 5849 . 5868) (thing 5849 . 5868) (thing 5849 . 5868) (thing 5837 . 5848) (thing 5837 . 5848) (thing 5837 . 5848) (thing 5618 . 5833) (thing 5618 . 5833) (thing 5618 . 5833) (thing 5579 . 5617) (thing 5579 . 5617) (thing 5579 . 5617) (thing 5577 . 5579) (thing 5577 . 5579) (thing 5577 . 5579) (thing 5565 . 5566) (thing 5565 . 5566) (thing 5565 . 5566) (thing 5553 . 5564) (thing 5553 . 5564) (thing 5553 . 5564) (thing 5554 . 5563) (thing 5554 . 5563) (thing 5554 . 5563) (thing 5549 . 5553) (thing 5549 . 5553) (thing 5549 . 5553) (thing 5548 . 5549) (thing 5548 . 5549) (thing 5548 . 5549) (thing 5526 . 5547) (thing 5526 . 5547) (thing 5526 . 5547) (thing 5527 . 5546) (thing 5527 . 5546) (thing 5527 . 5546) (thing 5522 . 5526) (thing 5522 . 5526) (thing 5522 . 5526) (thing 5521 . 5522) (thing 5521 . 5522) (thing 5521 . 5522) (thing 5498 . 5520) (thing 5498 . 5520) (thing 5498 . 5520) (thing 5499 . 5519) (thing 5499 . 5519) (thing 5499 . 5519) (thing 5492 . 5498) (thing 5492 . 5498) (thing 5492 . 5498) (thing 5491 . 5492) (thing 5491 . 5492) (thing 5491 . 5492) (thing 5477 . 5490) (thing 5477 . 5490) (thing 5477 . 5490) (thing 5478 . 5489) (thing 5478 . 5489) (thing 5478 . 5489) (thing 5471 . 5477) (thing 5471 . 5477) (thing 5471 . 5477) (thing 5470 . 5471) (thing 5470 . 5471) (thing 5470 . 5471) (thing 5451 . 5469) (thing 5451 . 5469) (thing 5451 . 5469) (thing 5452 . 5468) (thing 5452 . 5468) (thing 5452 . 5468) (thing 5445 . 5451) (thing 5445 . 5451) (thing 5445 . 5451) (thing 5444 . 5445) (thing 5444 . 5445) (thing 5444 . 5445) (thing 5421 . 5443) (thing 5421 . 5443) (thing 5421 . 5443) (thing 5422 . 5442) (thing 5422 . 5442) (thing 5422 . 5442) (thing 5416 . 5421) (thing 5416 . 5421) (thing 5416 . 5421) (thing 5415 . 5416) (thing 5415 . 5416) (thing 5415 . 5416) (thing 5391 . 5414) (thing 5391 . 5414) (thing 5391 . 5414) (thing 5392 . 5413) (thing 5392 . 5413) (thing 5392 . 5413) (thing 5380 . 5391) (thing 5380 . 5391) (thing 5380 . 5391) (thing 5340 . 5341) (thing 5340 . 5341) (thing 5340 . 5341) (thing 5328 . 5339) (thing 5328 . 5339) (thing 5328 . 5339) (thing 5329 . 5338) (thing 5329 . 5338) (thing 5329 . 5338) (thing 5324 . 5328) (thing 5324 . 5328) (thing 5324 . 5328) (thing 5323 . 5324) (thing 5323 . 5324) (thing 5323 . 5324) (thing 5302 . 5322) (thing 5302 . 5322) (thing 5302 . 5322) (thing 5303 . 5321) (thing 5303 . 5321) (thing 5303 . 5321) (thing 5298 . 5302) (thing 5298 . 5302) (thing 5298 . 5302) (thing 5297 . 5298) (thing 5297 . 5298) (thing 5297 . 5298) (thing 5275 . 5296) (thing 5275 . 5296) (thing 5275 . 5296) (thing 5276 . 5295) (thing 5276 . 5295) (thing 5276 . 5295) (thing 5271 . 5275) (thing 5271 . 5275) (thing 5271 . 5275) (thing 5270 . 5271) (thing 5270 . 5271) (thing 5270 . 5271) (thing 5251 . 5269) (thing 5251 . 5269) (thing 5251 . 5269) (thing 5252 . 5268) (thing 5252 . 5268) (thing 5252 . 5268) (thing 5245 . 5251) (thing 5245 . 5251) (thing 5245 . 5251) (thing 5244 . 5245) (thing 5244 . 5245) (thing 5244 . 5245) (thing 5226 . 5243) (thing 5226 . 5243) (thing 5226 . 5243) (thing 5227 . 5242) (thing 5227 . 5242) (thing 5227 . 5242) (thing 5221 . 5226) (thing 5221 . 5226) (thing 5221 . 5226) (thing 5220 . 5221) (thing 5220 . 5221) (thing 5220 . 5221) (thing 5202 . 5219) (thing 5202 . 5219) (thing 5202 . 5219) (thing 5203 . 5218) (thing 5203 . 5218) (thing 5203 . 5218) (thing 5191 . 5202) (thing 5191 . 5202) (thing 5191 . 5202) (thing 5151 . 5152) (thing 5151 . 5152) (thing 5151 . 5152) (thing 5139 . 5150) (thing 5139 . 5150) (thing 5139 . 5150) (thing 5140 . 5149) (thing 5140 . 5149) (thing 5140 . 5149) (thing 5135 . 5139) (thing 5135 . 5139) (thing 5135 . 5139) (thing 5134 . 5135) (thing 5134 . 5135) (thing 5134 . 5135) (thing 5113 . 5133) (thing 5113 . 5133) (thing 5113 . 5133) (thing 5114 . 5132) (thing 5114 . 5132) (thing 5114 . 5132) (thing 5109 . 5113) (thing 5109 . 5113) (thing 5109 . 5113) (thing 5108 . 5109) (thing 5108 . 5109) (thing 5108 . 5109) (thing 5086 . 5107) (thing 5086 . 5107) (thing 5086 . 5107) (thing 5087 . 5106) (thing 5087 . 5106) (thing 5087 . 5106) (thing 5082 . 5086) (thing 5082 . 5086) (thing 5082 . 5086) (thing 5081 . 5082) (thing 5081 . 5082) (thing 5081 . 5082) (thing 5062 . 5080) (thing 5062 . 5080) (thing 5062 . 5080) (thing 5063 . 5079) (thing 5063 . 5079) (thing 5063 . 5079) (thing 5056 . 5062) (thing 5056 . 5062) (thing 5056 . 5062) (thing 5055 . 5056) (thing 5055 . 5056) (thing 5055 . 5056) (thing 5032 . 5054) (thing 5032 . 5054) (thing 5032 . 5054) (thing 5033 . 5053) (thing 5033 . 5053) (thing 5033 . 5053) (thing 5027 . 5032) (thing 5027 . 5032) (thing 5027 . 5032) (thing 5026 . 5027) (thing 5026 . 5027) (thing 5026 . 5027) (thing 5008 . 5025) (thing 5008 . 5025) (thing 5008 . 5025) (thing 5009 . 5024) (thing 5009 . 5024) (thing 5009 . 5024) (thing 4997 . 5008) (thing 4997 . 5008) (thing 4997 . 5008) (thing 4468 . 4993) (thing 4468 . 4993) (thing 4468 . 4993) (thing 4429 . 4467) (thing 4429 . 4467) (thing 4429 . 4467) (thing 4427 . 4429) (thing 4427 . 4429) (thing 4427 . 4429) (thing 4415 . 4416) (thing 4415 . 4416) (thing 4415 . 4416) (thing 4385 . 4414) (thing 4385 . 4414) (thing 4385 . 4414) (thing 4386 . 4413) (thing 4386 . 4413) (thing 4386 . 4413) (thing 4381 . 4385) (thing 4381 . 4385) (thing 4381 . 4385) (thing 4380 . 4381) (thing 4380 . 4381) (thing 4380 . 4381) (thing 4357 . 4379) (thing 4357 . 4379) (thing 4357 . 4379) (thing 4358 . 4378) (thing 4358 . 4378) (thing 4358 . 4378) (thing 4353 . 4357) (thing 4353 . 4357) (thing 4353 . 4357) (thing 4352 . 4353) (thing 4352 . 4353) (thing 4352 . 4353) (thing 4328 . 4351) (thing 4328 . 4351) (thing 4328 . 4351) (thing 4329 . 4350) (thing 4329 . 4350) (thing 4329 . 4350) (thing 4324 . 4328) (thing 4324 . 4328) (thing 4324 . 4328) (thing 4323 . 4324) (thing 4323 . 4324) (thing 4323 . 4324) (thing 4311 . 4322) (thing 4311 . 4322) (thing 4311 . 4322) (thing 4312 . 4321) (thing 4312 . 4321) (thing 4312 . 4321) (thing 4307 . 4311) (thing 4307 . 4311) (thing 4307 . 4311) (thing 4306 . 4307) (thing 4306 . 4307) (thing 4306 . 4307) (thing 4291 . 4305) (thing 4291 . 4305) (thing 4291 . 4305) (thing 4292 . 4304) (thing 4292 . 4304) (thing 4292 . 4304) (thing 4285 . 4291) (thing 4285 . 4291) (thing 4285 . 4291) (thing 4284 . 4285) (thing 4284 . 4285) (thing 4284 . 4285) (thing 4263 . 4283) (thing 4263 . 4283) (thing 4263 . 4283) (thing 4264 . 4282) (thing 4264 . 4282) (thing 4264 . 4282) (thing 4258 . 4263) (thing 4258 . 4263) (thing 4258 . 4263) (thing 4257 . 4258) (thing 4257 . 4258) (thing 4257 . 4258) (thing 4238 . 4256) (thing 4238 . 4256) (thing 4238 . 4256) (thing 4239 . 4255) (thing 4239 . 4255) (thing 4239 . 4255) (thing 4227 . 4238) (thing 4227 . 4238) (thing 4227 . 4238) (thing 1917 . 4223) (thing 1917 . 4223) (thing 1917 . 4223) (thing 1878 . 1916) (thing 1878 . 1916) (thing 1878 . 1916) (thing 1876 . 1878) (thing 1876 . 1878) (thing 1876 . 1878) (thing 1864 . 1865) (thing 1864 . 1865) (thing 1864 . 1865) (thing 1830 . 1863) (thing 1830 . 1863) (thing 1830 . 1863) (thing 1831 . 1862) (thing 1831 . 1862) (thing 1831 . 1862) (thing 1826 . 1830) (thing 1826 . 1830) (thing 1826 . 1830) (thing 1825 . 1826) (thing 1825 . 1826) (thing 1825 . 1826) (thing 1788 . 1824) (thing 1788 . 1824) (thing 1788 . 1824) (thing 1789 . 1823) (thing 1789 . 1823) (thing 1789 . 1823) (thing 1784 . 1788) (thing 1784 . 1788) (thing 1784 . 1788) (thing 1783 . 1784) (thing 1783 . 1784) (thing 1783 . 1784) (thing 1750 . 1782) (thing 1750 . 1782) (thing 1750 . 1782) (thing 1751 . 1781) (thing 1751 . 1781) (thing 1751 . 1781) (thing 1746 . 1750) (thing 1746 . 1750) (thing 1746 . 1750) (thing 1745 . 1746) (thing 1745 . 1746) (thing 1745 . 1746) (thing 1723 . 1744) (thing 1723 . 1744) (thing 1723 . 1744) (thing 1724 . 1743) (thing 1724 . 1743) (thing 1724 . 1743) (thing 1719 . 1723) (thing 1719 . 1723) (thing 1719 . 1723) (thing 1718 . 1719) (thing 1718 . 1719) (thing 1718 . 1719) (thing 1697 . 1717) (thing 1697 . 1717) (thing 1697 . 1717) (thing 1698 . 1716) (thing 1698 . 1716) (thing 1698 . 1716) (thing 1693 . 1697) (thing 1693 . 1697) (thing 1693 . 1697) (thing 1692 . 1693) (thing 1692 . 1693) (thing 1692 . 1693) (thing 1657 . 1691) (thing 1657 . 1691) (thing 1657 . 1691) (thing 1658 . 1690) (thing 1658 . 1690) (thing 1658 . 1690) (thing 1651 . 1657) (thing 1651 . 1657) (thing 1651 . 1657) (thing 1650 . 1651) (thing 1650 . 1651) (thing 1650 . 1651) (thing 1614 . 1649) (thing 1614 . 1649) (thing 1614 . 1649) (thing 1615 . 1648) (thing 1615 . 1648) (thing 1615 . 1648) (thing 1608 . 1614) (thing 1608 . 1614) (thing 1608 . 1614) (thing 1607 . 1608) (thing 1607 . 1608) (thing 1607 . 1608) (thing 1571 . 1606) (thing 1571 . 1606) (thing 1571 . 1606) (thing 1572 . 1605) (thing 1572 . 1605) (thing 1572 . 1605) (thing 1565 . 1571) (thing 1565 . 1571) (thing 1565 . 1571) (thing 1564 . 1565) (thing 1564 . 1565) (thing 1564 . 1565) (thing 1531 . 1563) (thing 1531 . 1563) (thing 1531 . 1563) (thing 1532 . 1562) (thing 1532 . 1562) (thing 1532 . 1562) (thing 1525 . 1531) (thing 1525 . 1531) (thing 1525 . 1531) (thing 1524 . 1525) (thing 1524 . 1525) (thing 1524 . 1525) (thing 1524 . 1525) (thing 1503 . 1523) (thing 1503 . 1523) (thing 1503 . 1523) (thing 1503 . 1523) (thing 1504 . 1522) (thing 1504 . 1522) (thing 1504 . 1522) (thing 1504 . 1522) (thing 1498 . 1503) (thing 1498 . 1503) (thing 1498 . 1503) (thing 1498 . 1503) (thing 1497 . 1498) (thing 1497 . 1498) (thing 1497 . 1498) (thing 1497 . 1498) (thing 1478 . 1496) (thing 1478 . 1496) (thing 1478 . 1496) (thing 1478 . 1496) (thing 1479 . 1495) (thing 1479 . 1495) (thing 1479 . 1495) (thing 1479 . 1495) (thing 1467 . 1478) (thing 1467 . 1478) (thing 1467 . 1478) (thing 1467 . 1478) (thing 25830 . 25831) (thing 25831 . 25837) (thing 25837 . 25850) (thing 25838 . 25849) (thing 25851 . 25852) (thing 25852 . 25858) (thing 25858 . 25876) (thing 25859 . 25875) (thing 25877 . 25878) (thing 25878 . 25882) (thing 25882 . 25893) (thing 25883 . 25892) (thing 25894 . 25895) (thing 25895 . 25899) (thing 25899 . 25919) (thing 25900 . 25918) (thing 25920 . 25921) (thing 25921 . 25925) (thing 25925 . 25947) (thing 25926 . 25946) (thing 25948 . 25949) (thing 25949 . 25953) (thing 25953 . 25971) (thing 25954 . 25970) (thing 25972 . 25973) (thing 25978 . 25988) (thing 25992 . 26003) (thing 26003 . 26025) (thing 26004 . 26024) (thing 26026 . 26027) (thing 26027 . 26032) (thing 26032 . 26050) (thing 26033 . 26049) (thing 26051 . 26052) (thing 26052 . 26058) (thing 26058 . 26076) (thing 26059 . 26075) (thing 26077 . 26078) (thing 26083 . 26093) (thing 26097 . 26108) (thing 26108 . 26134) (thing 26109 . 26133) (thing 26135 . 26136) (thing 26136 . 26141) (thing 26141 . 26166) (thing 26142 . 26165) (thing 26167 . 26168) (thing 26168 . 26174) (thing 26174 . 26195) (thing 26175 . 26194) (thing 26196 . 26197) (thing 26197 . 26201) (thing 26201 . 26230) (thing 26202 . 26229) (thing 26231 . 26232) (thing 26232 . 26236) (thing 26236 . 26258) (thing 26237 . 26257) (thing 26259 . 26260) (thing 26260 . 26264) (thing 26264 . 26283) (thing 26265 . 26282) (thing 26284 . 26285) (thing 26290 . 26300) (thing 26304 . 26315) (thing 26315 . 26343) (thing 26316 . 26342) (thing 26344 . 26345) (thing 26345 . 26350) (thing 26350 . 26375) (thing 26351 . 26374) (thing 26376 . 26377) (thing 26377 . 26383) (thing 26383 . 26404) (thing 26384 . 26403) (thing 26405 . 26406) (thing 26406 . 26410) (thing 26410 . 26440) (thing 26411 . 26439) (thing 26441 . 26442) (thing 26442 . 26446) (thing 26446 . 26468) (thing 26447 . 26467) (thing 26469 . 26470) (thing 26470 . 26474) (thing 26474 . 26493) (thing 26475 . 26492) (thing 26494 . 26495) (thing 26495 . 26505) (thing 26505 . 26757) (thing 26506 . 26508) (thing 26508 . 26546) (thing 26547 . 26756) (thing 26758 . 26759) (thing 26764 . 26774) (thing 26803 . 26814) (thing 26814 . 26828) (thing 26815 . 26827) (thing 26829 . 26830) (thing 26830 . 26835) (thing 26835 . 26848) (thing 26836 . 26847) (thing 26849 . 26850) (thing 26850 . 26855) (thing 26855 . 26868) (thing 26856 . 26867) (thing 26869 . 26870) (thing 26870 . 26876) (thing 26876 . 26891) (thing 26877 . 26890) (thing 26892 . 26893) (thing 26893 . 26897) (thing 26897 . 26915) (thing 26898 . 26914) (thing 26916 . 26917) (thing 26917 . 26921) (thing 26921 . 26965) (thing 26922 . 26964) (thing 26966 . 26967) (thing 26967 . 26971) (thing 26971 . 27015) (thing 26972 . 27014) (thing 27016 . 27017) (thing 27028 . 27030) (thing 27030 . 27068) (thing 27069 . 27171) (thing 27175 . 27186) (thing 27186 . 27206) (thing 27187 . 27205) (thing 27207 . 27208) (thing 27208 . 27213) (thing 27213 . 27228) (thing 27214 . 27227) (thing 27229 . 27230) (thing 27230 . 27236) (thing 27236 . 27253) (thing 27237 . 27252) (thing 27254 . 27255) (thing 27255 . 27259) (thing 27259 . 27284) (thing 27260 . 27283) (thing 27285 . 27286) (thing 27341 . 27352) (thing 27352 . 27366) (thing 27353 . 27365) (thing 27367 . 27368) (thing 27368 . 27373) (thing 27373 . 27385) (thing 27374 . 27384) (thing 27386 . 27387) (thing 27387 . 27393) (thing 27393 . 27406) (thing 27394 . 27405) (thing 27407 . 27408) (thing 27408 . 27412) (thing 27412 . 27435) (thing 27413 . 27434) (thing 27436 . 27437) (thing 27437 . 27441) (thing 27441 . 27464) (thing 27442 . 27463) (thing 27465 . 27466) (thing 27466 . 27470) (thing 27470 . 27503) (thing 27471 . 27502) (thing 27504 . 27505) (thing 27505 . 27509) (thing 27509 . 27543) (thing 27510 . 27542) (thing 27544 . 27545) (thing 27545 . 27549) (thing 27549 . 27564) (thing 27550 . 27563) (thing 27565 . 27566) (thing 27566 . 27570) (thing 27570 . 27594) (thing 27571 . 27593) (thing 27595 . 27596) (thing 27639 . 27650) (thing 27650 . 27672) (thing 27651 . 27671) (thing 27673 . 27674) (thing 27674 . 27679) (thing 27679 . 27702) (thing 27680 . 27701) (thing 27703 . 27704) (thing 27704 . 27709) (thing 27709 . 27727) (thing 27710 . 27726) (thing 27728 . 27729) (thing 27729 . 27734) (thing 27734 . 27758) (thing 27735 . 27757) (thing 27759 . 27760) (thing 27767 . 27783) (thing 27787 . 27798) (thing 27798 . 27820) (thing 27799 . 27819) (thing 27821 . 27822) (thing 27822 . 27827) (thing 27827 . 27852) (thing 27828 . 27851) (thing 27853 . 27854) (thing 27854 . 27859) (thing 27859 . 27874) (thing 27860 . 27873) (thing 27875 . 27876) (thing 27883 . 27903) (thing 27907 . 27918) (thing 27918 . 27933) (thing 27919 . 27932) (thing 27934 . 27935) (thing 27935 . 27940) (thing 27940 . 27952) (thing 27941 . 27951) (thing 27953 . 27954) (thing 27954 . 27958) (thing 27958 . 27976) (thing 27959 . 27975) (thing 27977 . 27978) (thing 27983 . 27998) (thing 28002 . 28013) (thing 28013 . 28028) (thing 28014 . 28027) (thing 28029 . 28030) (thing 28030 . 28035) (thing 28035 . 28047) (thing 28036 . 28046) (thing 28048 . 28049) (thing 28049 . 28055) (thing 28055 . 28074) (thing 28056 . 28073) (thing 28075 . 28076) (thing 28076 . 28080) (thing 28080 . 28091) (thing 28081 . 28090) (thing 28092 . 28093) (thing 28148 . 28159) (thing 28159 . 28179) (thing 28160 . 28178) (thing 28180 . 28181) (thing 28181 . 28186) (thing 28186 . 28210) (thing 28187 . 28209) (thing 28211 . 28212) (thing 28212 . 28217) (thing 28217 . 28231) (thing 28218 . 28230) (thing 28232 . 28233) (thing 28233 . 28238) (thing 28238 . 28252) (thing 28239 . 28251) (thing 28253 . 28254) (thing 28254 . 28260) (thing 28260 . 28279) (thing 28261 . 28278) (thing 28280 . 28281) (thing 28281 . 28285) (thing 28285 . 28308) (thing 28286 . 28307) (thing 28309 . 28310) (thing 28310 . 28314) (thing 28314 . 28337) (thing 28315 . 28336) (thing 28338 . 28339) (thing 28339 . 28343) (thing 28343 . 28375) (thing 28344 . 28374) (thing 28376 . 28377) (thing 28388 . 28390) (thing 28390 . 28428) (thing 28429 . 28500) (thing 28504 . 28515) (thing 28515 . 28541) (thing 28516 . 28540) (thing 28542 . 28543) (thing 28543 . 28548) (thing 28548 . 28563) (thing 28549 . 28562) (thing 28564 . 28565) (thing 28565 . 28570) (thing 28570 . 28601) (thing 28571 . 28600) (thing 28602 . 28603) (thing 28603 . 28608) (thing 28608 . 28639) (thing 28609 . 28638) (thing 28640 . 28641) (thing 28641 . 28646) (thing 28646 . 28661) (thing 28647 . 28660) (thing 28662 . 28663) (thing 28663 . 28668) (thing 28668 . 28691) (thing 28669 . 28690) (thing 28692 . 28693) (thing 28693 . 28699) (thing 28699 . 28724) (thing 28700 . 28723) (thing 28725 . 28726) (thing 28726 . 28730) (thing 28730 . 28752) (thing 28731 . 28751) (thing 28753 . 28754) (thing 28809 . 28820) (thing 28820 . 28842) (thing 28821 . 28841) (thing 28843 . 28844) (thing 28844 . 28849) (thing 28849 . 28876) (thing 28850 . 28875) (thing 28877 . 28878) (thing 28878 . 28884) (thing 28884 . 28916) (thing 28885 . 28915) (thing 28917 . 28918) (thing 28918 . 28922) (thing 28922 . 28939) (thing 28923 . 28938) (thing 28940 . 28941) (thing 28996 . 29007) (thing 29007 . 29035) (thing 29008 . 29034) (thing 29036 . 29037) (thing 29037 . 29042) (thing 29042 . 29064) (thing 29043 . 29063) (thing 29065 . 29066) (thing 29066 . 29071) (thing 29071 . 29093) (thing 29072 . 29092) (thing 29094 . 29095) (thing 29095 . 29100) (thing 29100 . 29125) (thing 29101 . 29124) (thing 29126 . 29127) (thing 29127 . 29133) (thing 29133 . 29159) (thing 29134 . 29158) (thing 29160 . 29161) (thing 29161 . 29165) (thing 29165 . 29192) (thing 29166 . 29191) (thing 29193 . 29194) (thing 29249 . 29260) (thing 29260 . 29285) (thing 29261 . 29284) (thing 29286 . 29287) (thing 29287 . 29292) (thing 29292 . 29307) (thing 29293 . 29306) (thing 29308 . 29309) (thing 29309 . 29314) (thing 29314 . 29329) (thing 29315 . 29328) (thing 29330 . 29331) (thing 29331 . 29336) (thing 29336 . 29361) (thing 29337 . 29360) (thing 29362 . 29363) (thing 29363 . 29369) (thing 29369 . 29391) (thing 29370 . 29390) (thing 29392 . 29393) (thing 29393 . 29397) (thing 29397 . 29419) (thing 29398 . 29418) (thing 29420 . 29421) (thing 29432 . 29434) (thing 29434 . 29472) (thing 29473 . 29575)))
    (semanticdb-table "WeightsCacheOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/common/SessionResource.h" include nil nil [1 46])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [47 95])
            ("tensorflow/core/framework/types.h" include nil nil [96 140])
            ("tf_search/ops/OpUtil.h" include nil nil [141 174])
            ("tf_search/common/TensorCacheManager.h" include nil nil [175 223])
            ("matchdoc/MatchDoc.h" include nil nil [224 254])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [256 276])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [277 302])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [303 330])
            ("tf_search" type
               (:members 
                  ( ("WeightsCacheOp" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [418 425])
                            ("WeightsCacheOp" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [454 480]))                                  
                                :type ("WeightsCacheOp" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [439 1476])
                            ("public" label nil (reparse-symbol classsubparts) [1477 1484])
                            ("private" label nil (reparse-symbol classsubparts) [2515 2523])
                            ("_dimension" variable (:type ("int64" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2528 2545])
                            ("_cacheName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2550 2568])
                            ("_cachedWeights" variable (:type ("shared_ptr" type
                                 (:template-specifier 
                                    ( ("Tensor" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [2573 2607])
                            ("private" label nil (reparse-symbol classsubparts) [2608 2616])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [2621 2641]))                          
                        :superclasses 
                          ( ("OpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [355 2644])
                    ("AUTIL_LOG_SETUP_TEMPLATE" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2670 2680])
                            ("" variable (:type ("WeightsCacheOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2681 2696])
                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2697 2699]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2645 2700])
                    ("WEIGHTSCACHEOP_REGISTER_KERNELS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2710 2741])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("float" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("WeightsCacheOp" type
                                 (:template-specifier 
                                    ( ("float" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2982 3021])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("TypeConstraint" type
                                 (:template-specifier 
                                    ( ("double" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("WeightsCacheOp" type
                                 (:template-specifier 
                                    ( ("double" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [3022 3062]))                  
                :type "namespace")
                nil [332 3065]))          
      :file "WeightsCacheOp.cpp"
      :pointmax 3066
      :fsize 3065
      :lastmodtime '(23183 56788 659972 260000)
      :unmatched-syntax '((thing 1524 . 1532) (thing 1501 . 1523) (thing 1494 . 1501) (thing 1489 . 1493) (thing 430 . 438) (thing 1533 . 2514))
      :lexical-table 
        '(("WEIGHTSCACHEOP_REGISTER_KERNELS" (spp-arg-list ("T") 2741 . 2744) . ((symbol "REGISTER_KERNEL_BUILDER" 2764 . 2787) (semantic-list "(Name(\"WeightsCacheOp\")      \\
                            .Device(DEVICE_CPU)         \\
                            .TypeConstraint<T>(\"T\"),    \\
                            WeightsCacheOp<T>)" 2787 . 2980)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("source" variable nil nil [57 79])
            ("env" code nil nil [80 166])
            ("env" code nil nil [167 184])
            ("Return" code nil nil [185 203]))          
      :file "SConscript"
      :pointmax 204
      :fsize 203
      :lastmodtime '(23144 20719 730148 923000)
      :unmatched-syntax nil)

    (semanticdb-table "ProxyCommon.h"
      :file "ProxyCommon.h"
      :fsize 411
      :lastmodtime '(23301 8217 305298 237000))
    (semanticdb-table "MatchDocsVariant.h"
      :file "MatchDocsVariant.h"
      :fsize 6314
      :lastmodtime '(23301 8217 304298 237000))
    (semanticdb-table "KeyValueMapVariant.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TF_SEARCH_KEYVALUEMAPVARIANT_H" variable (:constant-flag t) nil [56 94])
            ("autil/Log.h" include (:system-flag t) nil [96 118])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [119 151])
            ("tensorflow/core/framework/variant.h" include nil nil [152 198])
            ("tensorflow/core/framework/variant_encode_decode.h" include nil nil [199 259])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [260 308])
            ("tf_search" type
               (:members 
                  ( ("KeyValueMapVariant" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [360 367])
                            ("KeyValueMapVariant" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("KeyValueMapVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [372 393])
                            ("KeyValueMapVariant" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("KeyValueMapVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [417 449]))                                  
                                :type ("KeyValueMapVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [398 450])
                            ("KeyValueMapVariant" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [455 477])
                            ("public" label nil (reparse-symbol classsubparts) [478 485])
                            ("getFromContext" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :constant-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("tensorflow::OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [538 571])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [572 582]))                                  
                                :type ("KeyValueMapVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [490 583])
                            ("public" label nil (reparse-symbol classsubparts) [584 591])
                            ("Encode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [631 667]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [619 674])
                            ("Decode" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [691 733]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [679 734])
                            ("TypeName" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [739 805])
                            ("public" label nil (reparse-symbol classsubparts) [806 813])
                            ("get" function
                               (:constant-flag t
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil)
                                          ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [818 902])
                            ("get" function (:type ("std::map" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil)
                                      ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [907 979])
                            ("set" function
                               (:arguments 
                                  ( ("kvMap" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::map" type
                                             (:template-specifier 
                                                ( ("std::string" type nil nil nil)
                                                  ("std::string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [993 1041]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [984 1073])
                            ("DebugString" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1078 1278])
                            ("private" label nil (reparse-symbol classsubparts) [1279 1287])
                            ("_kvMap" variable (:type ("std::map" type
                                 (:template-specifier 
                                    ( ("std::string" type nil nil nil)
                                      ("std::string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1292 1334])
                            ("_pool" variable (:type ("std::shared_ptr" type
                                 (:template-specifier 
                                    ( ("autil::mem_pool::Pool" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1339 1384])
                            ("private" label nil (reparse-symbol classsubparts) [1385 1393])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [1398 1418]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [333 1421]))                  
                :type "namespace")
                nil [310 1425]))          
      :file "KeyValueMapVariant.h"
      :pointmax 1475
      :fsize 1474
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_TF_SEARCH_KEYVALUEMAPVARIANT_H")
          )
)
    (semanticdb-table "KeyValueMapVariant.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/ops/KeyValueMapVariant.h" include nil nil [1 46])
            ("tensorflow/core/framework/variant_op_registry.h" include nil nil [47 105])
            ("autil/DataBuffer.h" include (:system-flag t) nil [106 135])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [137 157])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [158 180])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [181 213])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [214 241])
            ("tf_search" type
               (:members 
                  ( ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [281 291])
                            ("" variable (:type ("KeyValueMapVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [292 311]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [265 312])
                    ("KeyValueMapVariant" function
                       (:constructor-flag t
                        :parent "KeyValueMapVariant"
                        :type ("KeyValueMapVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [314 384])
                    ("KeyValueMapVariant" function
                       (:destructor-flag t
                        :parent "KeyValueMapVariant"
                        :type "void")
                        (reparse-symbol namespacesubparts) [386 449])
                    ("KeyValueMapVariant" function
                       (:constructor-flag t
                        :parent "KeyValueMapVariant"
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("KeyValueMapVariant" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [490 522]))                          
                        :type ("KeyValueMapVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [451 553])
                    ("Encode" function
                       (:parent "KeyValueMapVariant"
                        :arguments 
                          ( ("data" variable
                               (:pointer 1
                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [587 623]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [555 853])
                    ("Decode" function
                       (:parent "KeyValueMapVariant"
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [887 929]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [855 1073])
                    ("getFromContext" function
                       (:pointer 1
                        :parent "KeyValueMapVariant"
                        :constant-flag t
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("tensorflow::OpKernelContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1145 1178])
                            ("index" variable (:type "int") (reparse-symbol arg-sub-list) [1179 1189]))                          
                        :type ("KeyValueMapVariant" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1075 1314])
                    ("REGISTER_UNARY_VARIANT_DECODE_FUNCTION" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("KeyValueMapVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1355 1374]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1316 1390]))                  
                :type "namespace")
                nil [243 1393]))          
      :file "KeyValueMapVariant.cpp"
      :pointmax 1394
      :fsize 1393
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax '((thing 1375 . 1388)))
    (semanticdb-table "IGraphClient.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tf_search/ops/IGraphClient.h" include nil nil [1 40])
            ("autil/StringUtil.h" include (:system-flag t) nil [41 70])
            ("sap/util/environ_util.h" include (:system-flag t) nil [71 105])
            ("igraph/client/search/util/Util.h" include (:system-flag t) nil [106 149])
            ("fslib/fslib.h" include (:system-flag t) nil [150 174])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [176 196])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [197 219])
            ("rapidjson" using (:type ("rapidjson" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [220 246])
            ("expression" using (:type ("expression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [247 274])
            ("igraph" using (:type ("igraph" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [275 298])
            ("igraph::client_search" using (:type ("igraph::client_search" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [299 337])
            ("ENV_IGRAPH_SITE" variable (:constant-flag t) nil [347 362])
            ("tf_search" type
               (:members 
                  ( ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [416 426])
                            ("" variable (:type ("IGraphClient" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [427 440]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [400 441])
                    ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [458 468])
                            ("" variable (:type ("IGraphQueryConstructor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [469 492]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [442 493])
                    ("IGraphQueryConstructor::kTableConfigTable" variable
                       (:constant-flag t
                        :default-value "\"table\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [495 565])
                    ("IGraphQueryConstructor::kTableConfigKey" variable
                       (:constant-flag t
                        :default-value "\"key\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [566 632])
                    ("IGraphQueryConstructor::kTableConfigJoinField" variable
                       (:constant-flag t
                        :default-value "\"join_field\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [633 712])
                    ("IGraphQueryConstructor::kTableConfigTables" variable
                       (:constant-flag t
                        :default-value "\"tables\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [713 785])
                    ("IGraphQueryConstructor::kTableConfigSorter" variable
                       (:constant-flag t
                        :default-value "\"sorter\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [786 858])
                    ("IGraphQueryConstructor::kTableConfigFilter" variable
                       (:constant-flag t
                        :default-value "\"filter\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [859 931])
                    ("IGraphQueryConstructor::kTableConfigRange" variable
                       (:constant-flag t
                        :default-value "\"range\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [932 1002])
                    ("IGraphQueryConstructor::kTableConfigFields" variable
                       (:constant-flag t
                        :default-value "\"fields\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1003 1075])
                    ("IGraphQueryConstructor::kTableConfigTableName" variable
                       (:constant-flag t
                        :default-value "\"name\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1076 1149])
                    ("IGraphQueryConstructor::kTableConfigTableType" variable
                       (:constant-flag t
                        :default-value "\"type\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1150 1223])
                    ("IGraphClient" function
                       (:constructor-flag t
                        :parent "IGraphClient"
                        :type ("IGraphClient" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1225 1277])
                    ("IGraphClient" function
                       (:destructor-flag t
                        :parent "IGraphClient"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1279 1387])
                    ("init" function
                       (:parent "IGraphClient"
                        :arguments 
                          ( ("igraphClientConfigs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("IGraphClientConfig" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1413 1472]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1389 1893])
                    ("initClientConfig" function
                       (:parent "IGraphClient"
                        :arguments 
                          ( ("igraphClientConfigs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("IGraphClientConfig" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1940 1999])
                            ("clientConfig" variable
                               (:pointer 1
                                :type ("ClientConfig" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2008 2035]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1895 3359])
                    ("genCM2ConfigFile" function
                       (:parent "IGraphClient"
                        :arguments 
                          ( ("cm2Config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("CM2Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3435 3462]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3397 5293])
                    ("construct" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5338 5364])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5373 5404]))                          
                        :type ("PGQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5295 5476])
                    ("getQueryType" function
                       (:parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5558 5584]))                          
                        :type ("IGraphQueryConstructor::QueryType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5478 5855])
                    ("createQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5902 5928])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5937 5968])
                            ("pos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("QueryPos" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5977 5997])
                            ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6006 6025]))                          
                        :type ("PGQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5857 6432])
                    ("SET_SORTER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6442 6452])
                    ("SET_FILTER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6819 6829])
                    ("SET_RANGE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7196 7205])
                    ("SET_RETURN_FIELDS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8174 8191])
                    ("getSearchKey" function
                       (:parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9196 9222])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9231 9262])
                            ("keyLists" variable
                               (:pointer 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("KeyList" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9271 9297]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [9154 10200])
                    ("createAtomicQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10253 10279])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10288 10319])
                            ("pos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("QueryPos" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10328 10348])
                            ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10357 10376]))                          
                        :type ("PGQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10202 11250])
                    ("createMergeQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11302 11328])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11337 11368])
                            ("pos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("QueryPos" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11377 11397])
                            ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11406 11425]))                          
                        :type ("PGQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11252 12398])
                    ("createJoinQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12449 12475])
                            ("searchKeys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12484 12515])
                            ("pos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IGraphQueryConstructor::QueryPos" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12524 12568])
                            ("parent" variable (:type ("IGraphQueryConstructor::IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12577 12620]))                          
                        :type ("PGQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12400 13802])
                    ("getTableName" function
                       (:parent "IGraphQueryConstructor"
                        :arguments 
                          ( ("config" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13848 13874]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13804 14176])
                    ("createLeftAtomicQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14259 14283])
                            ("keyLists" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("KeyList" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14284 14316]))                          
                        :type ("AtomicQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14178 14507])
                    ("createRightAtomicQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14599 14623])
                            ("keyLists" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("KeyList" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14624 14656]))                          
                        :type ("AtomicQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14517 15069])
                    ("createLeftMergeQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :type ("MergeQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15079 15321])
                    ("createRightMergeQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :type ("MergeQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15331 15634])
                    ("createLeftJoinQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :arguments 
                          ( ("joinField" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15713 15737]))                          
                        :type ("JoinQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15636 15916])
                    ("createRightJoinQuery" function
                       (:pointer 1
                        :parent "IGraphQueryConstructor::IGraphQuery"
                        :arguments 
                          ( ("joinField" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16004 16028]))                          
                        :type ("JoinQuery" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15926 16268]))                  
                :type "namespace")
                nil [378 16271]))          
      :file "IGraphClient.cpp"
      :pointmax 16272
      :fsize 16271
      :lastmodtime '(23301 8217 302298 237000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SET_SORTER" (spp-arg-list ("q" "config") 6452 . 6463) . ((semantic-list "{                                         \\
        string sorter = getMember<string>(config, kTableConfigSorter);  \\
        if (!sorter.empty()) {                                          \\
            q->SetSorter(sorter);                                       \\
        }                                                               \\
    }" 6464 . 6809)))
          ("SET_RANGE" (spp-arg-list ("q" "config") 7205 . 7216) . ((semantic-list "{                                          \\
        SimpleValue::ConstMemberIterator it = config.FindMember(        \\
                kTableConfigRange);                                     \\
        if (it != config.MemberEnd()) {                                 \\
            const SimpleValue &range = it->value;                       \\
            if (range.IsArray()) {                                      \\
                if (range.Size() == 2) {                                \\
                    q->SetRange(range[0].GetInt(), range[1].GetInt());  \\
                }                                                       \\
            } else {                                                    \\
                AUTIL_LOG(ERROR, \"%s is not array.\", kTableConfigRange.c_str()); \\
            }                                                           \\
        }                                                               \\
    }" 7217 . 8164)))
          ("SET_FILTER" (spp-arg-list ("q" "config") 6829 . 6840) . ((semantic-list "{                                         \\
        string filter = getMember<string>(config, kTableConfigFilter);  \\
        if (!filter.empty()) {                                          \\
            q->SetFilter(filter);                                       \\
        }                                                               \\
    }" 6841 . 7186)))
          ("SET_RETURN_FIELDS" (spp-arg-list ("q" "config") 8191 . 8202) . ((semantic-list "{                                  \\
        SimpleValue::ConstMemberIterator it = config.FindMember(        \\
                kTableConfigFields);                                    \\
        if (it != config.MemberEnd()) {                                 \\
            const SimpleValue &fields = it->value;                      \\
            if (fields.IsArray()) {                                     \\
                for (int i = 0; i < (int)fields.Size(); i++) {          \\
                    q->AddReturnField(fields[i].GetString());           \\
                }                                                       \\
            } else {                                                    \\
                AUTIL_LOG(ERROR, \"%s is not array.\", kTableConfigFields.c_str()); \\
            }                                                           \\
        }                                                               \\
    }" 8203 . 9143)))
          ("ENV_IGRAPH_SITE" . ((string "\"IGRAPH_SITE\"" 363 . 376)))
          )
)
    (semanticdb-table "IGraphClient.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TF_SEARCH_IGRAPHCLIENT_H" variable (:constant-flag t) nil [50 82])
            ("autil/Log.h" include (:system-flag t) nil [84 106])
            ("igraph/client/Client.h" include (:system-flag t) nil [107 140])
            ("expression/util/RapidJsonHelper.h" include (:system-flag t) nil [141 185])
            ("tensorflow/core/framework/variant.h" include nil nil [186 232])
            ("tensorflow/core/framework/tensor.h" include nil nil [233 278])
            ("tensorflow/core/framework/variant_encode_decode.h" include nil nil [279 339])
            ("tf_search/common/IGraphClientConfig.h" include nil nil [340 388])
            ("tf_search" type
               (:members 
                  ( ("IGraphClient" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [434 441])
                            ("IGraphClient" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("IGraphClient" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [446 461])
                            ("IGraphClient" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [466 482])
                            ("private" label nil (reparse-symbol classsubparts) [483 491])
                            ("public" label nil (reparse-symbol classsubparts) [601 608])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("igraphClientConfigs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::map" type
                                             (:template-specifier 
                                                ( ("std::string" type nil nil nil)
                                                  ("IGraphClientConfig" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [627 696]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [617 697])
                            ("getClient" function
                               (:pointer 1
                                :type ("igraph::client_search::Client" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [703 777])
                            ("initClientConfig" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("igraphClientConfigs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::map" type
                                             (:template-specifier 
                                                ( ("std::string" type nil nil nil)
                                                  ("IGraphClientConfig" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [818 887])
                                    ("clientConfig" variable
                                       (:pointer 1
                                        :type ("igraph::client_search::ClientConfig" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [900 950]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [783 951])
                            ("genCM2ConfigFile" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("cm2Config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CM2Config" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [986 1013]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [957 1014])
                            ("private" label nil (reparse-symbol classsubparts) [1019 1027])
                            ("_factory" variable (:type ("igraph::client_search::ClientFactory" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1032 1078])
                            ("_client" variable
                               (:pointer 1
                                :type ("igraph::client_search::Client" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1083 1122])
                            ("private" label nil (reparse-symbol classsubparts) [1124 1132])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [1137 1157]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [413 1160])
                    ("IGraphResultPtr" type
                       (:typedef ("std::shared_ptr" type
                             (:template-specifier 
                                ( ("igraph::client_search::Result" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1162 1233])
                    ("IGraphResultVariant" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1263 1270])
                            ("IGraphResultVariant" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("resultPtr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IGraphResultPtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1295 1328]))                                  
                                :type ("IGraphResultVariant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1275 1368])
                            ("IGraphResultVariant" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1373 1403])
                            ("getResult" function
                               (:pointer 1
                                :constant-flag t
                                :type ("igraph::client_search::Result" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1413 1508])
                            ("public" label nil (reparse-symbol classsubparts) [1510 1517])
                            ("Encode" function
                               (:arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1574 1610]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1562 1647])
                            ("Decode" function
                               (:arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1669 1711]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [1657 1764])
                            ("TypeName" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1774 1845])
                            ("private" label nil (reparse-symbol classsubparts) [1851 1859])
                            ("_resultPtr" variable (:type ("IGraphResultPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1864 1891]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1235 1894])
                    ("SearchKeyMap" type
                       (:typedef ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1896 1952])
                    ("IGraphQueryConstructor" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1985 1992])
                            ("kTableConfigTable" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1997 2040])
                            ("kTableConfigKey" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2045 2086])
                            ("kTableConfigJoinField" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2091 2138])
                            ("kTableConfigTables" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2143 2187])
                            ("kTableConfigSorter" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2192 2236])
                            ("kTableConfigFilter" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2241 2285])
                            ("kTableConfigRange" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2290 2333])
                            ("kTableConfigFields" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2338 2382])
                            ("kTableConfigTableName" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2387 2434])
                            ("kTableConfigTableType" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2439 2486])
                            ("QueryType" type
                               (:members 
                                  ( ("QT_ATOMIC" variable
                                       (:constant-flag t
                                        :default-value (2533 2534)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2521 2534])
                                    ("QT_JOIN" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2544 2552])
                                    ("QT_MERGE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2561 2570])
                                    ("QT_UNSUPPORT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2579 2597]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [2496 2598])
                            ("QueryPos" type
                               (:members 
                                  ( ("QP_ROOT" variable
                                       (:constant-flag t
                                        :default-value (2638 2639)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2628 2639])
                                    ("QP_LEFT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2649 2657])
                                    ("QP_RIGHT" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [2666 2680]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [2604 2681])
                            ("IGraphQuery" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2711 2718])
                                    ("IGraphQuery" function
                                       (:constructor-flag t
                                        :type ("IGraphQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2727 2779])
                                    ("IGraphQuery" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("q" variable
                                               (:pointer 1
                                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2800 2834])
                                            ("qt" variable (:type ("QueryType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2835 2848]))                                          
                                        :type ("IGraphQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2788 2908])
                                    ("createLeftAtomicQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("tableName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2993 3022])
                                            ("keyLists" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("igraph::client_search::KeyList" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3039 3099]))                                          
                                        :type ("igraph::client_search::AtomicQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2918 3100])
                                    ("createRightAtomicQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("tableName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3194 3223])
                                            ("keyList" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("igraph::client_search::KeyList" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3240 3299]))                                          
                                        :type ("igraph::client_search::AtomicQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3118 3300])
                                    ("createLeftMergeQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("igraph::client_search::MergeQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3318 3376])
                                    ("createRightMergeQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("igraph::client_search::MergeQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3394 3453])
                                    ("createLeftJoinQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("joinField" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3534 3563]))                                          
                                        :type ("igraph::client_search::JoinQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3463 3564])
                                    ("createRightJoinQuery" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("joinField" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3654 3683]))                                          
                                        :type ("igraph::client_search::JoinQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3582 3684])
                                    ("getQueryType" function (:type ("QueryType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3694 3736])
                                    ("private" label nil (reparse-symbol classsubparts) [3741 3749])
                                    ("_query" variable
                                       (:pointer 1
                                        :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3758 3797])
                                    ("_type" variable (:type ("QueryType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3806 3822]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [2687 3829])
                            ("public" label nil (reparse-symbol classsubparts) [3831 3838])
                            ("construct" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3905 3931])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3944 3975]))                                  
                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3843 3976])
                            ("private" label nil (reparse-symbol classsubparts) [3977 3985])
                            ("getMember" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("doc" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4035 4058])
                                    ("k" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4082 4103])
                                    ("def" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "T()"
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4127 4145]))                                  
                                :typemodifiers ("static")
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [3990 4147])
                            ("getQueryType" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4187 4213]))                                  
                                :type ("QueryType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4157 4214])
                            ("getTableName" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4252 4278]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4220 4279])
                            ("getSearchKey" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4310 4336])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4366 4397])
                                    ("keyLists" variable
                                       (:pointer 1
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("igraph::client_search::KeyList" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4427 4481]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [4285 4482])
                            ("createQuery" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4543 4569])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4582 4613])
                                    ("pos" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("QueryPos" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4626 4646])
                                    ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4659 4678]))                                  
                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4492 4679])
                            ("createAtomicQuery" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4755 4781])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4794 4825])
                                    ("pos" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("QueryPos" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4838 4858])
                                    ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4871 4890]))                                  
                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4685 4891])
                            ("createMergeQuery" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4966 4992])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5005 5036])
                                    ("pos" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("QueryPos" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5049 5069])
                                    ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5082 5101]))                                  
                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4897 5102])
                            ("createJoinQuery" function
                               (:prototype-flag t
                                :pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("config" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SimpleValue" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5176 5202])
                                    ("searchKeys" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5215 5246])
                                    ("pos" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("QueryPos" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5259 5279])
                                    ("parent" variable (:type ("IGraphQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5292 5311]))                                  
                                :type ("igraph::client_search::PGQuery" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5108 5312])
                            ("protected" label nil (reparse-symbol classsubparts) [5322 5332])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [5337 5357]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1954 5360])
                    ("getMember" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("doc" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SimpleValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5420 5443])
                            ("k" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5480 5501])
                            ("def" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5538 5551]))                          
                        :parent "IGraphQueryConstructor")
                        (reparse-symbol namespacesubparts) [5362 5803]))                  
                :type "namespace")
                nil [390 5806]))          
      :file "IGraphClient.h"
      :pointmax 5850
      :fsize 5849
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax '((thing 599 . 600) (thing 599 . 600) (thing 593 . 599) (thing 593 . 599) (thing 591 . 592) (thing 591 . 592) (thing 568 . 590) (thing 568 . 590) (thing 567 . 568) (thing 567 . 568) (thing 559 . 567) (thing 559 . 567) (thing 557 . 558) (thing 557 . 558) (thing 545 . 557) (thing 545 . 557) (thing 539 . 540) (thing 539 . 540) (thing 533 . 539) (thing 533 . 539) (thing 531 . 532) (thing 531 . 532) (thing 508 . 530) (thing 508 . 530) (thing 496 . 508) (thing 496 . 508))
      :lexical-table 
        '(("ISEARCH_TF_SEARCH_IGRAPHCLIENT_H")
          )
)
    (semanticdb-table "IGraphTableGenerateOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("autil/Log.h" include (:system-flag t) nil [1 23])
            ("tf_search/ops/IGraphClient.h" include nil nil [24 63])
            ("tensorflow/core/framework/op_kernel.h" include nil nil [64 112])
            ("tf_search/common/SessionResource.h" include nil nil [113 158])
            ("tf_search/ops/OpUtil.h" include nil nil [159 192])
            ("expression/util/RapidJsonHelper.h" include nil nil [193 237])
            ("rapidjson/error/en.h" include nil nil [238 269])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [271 291])
            ("expression" using (:type ("expression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [292 319])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [320 347])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [348 378])
            ("igraph::client_search" using (:type ("igraph::client_search" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [379 417])
            ("tf_search" type
               (:members 
                  ( ("IGraphTableGenerateOp" type
                       (:superclasses 
                          ( ("tensorflow::OpKernel" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [502 509])
                            ("IGraphTableGenerateOp" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("tensorflow::OpKernelConstruction" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [545 583]))                                  
                                :type ("IGraphTableGenerateOp" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [523 584])
                            ("IGraphTableGenerateOp" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [589 614])
                            ("public" label nil (reparse-symbol classsubparts) [620 627])
                            ("override" variable (:type "int") (reparse-symbol classsubparts) [683 692])
                            ("private" label nil (reparse-symbol classsubparts) [698 706])
                            ("extractSearchKeys" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("tensorflow::OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [734 767])
                                    ("searchKeys" variable
                                       (:pointer 1
                                        :type ("SearchKeyMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [795 820]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [711 821])
                            ("private" label nil (reparse-symbol classsubparts) [827 835])
                            ("_tableName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [840 863])
                            ("_tableConfig" variable (:type ("SimpleDocument" type (:type "class") nil nil)) (reparse-symbol classsubparts) [868 896])
                            ("_client" variable (:type ("IGraphClient" type (:type "class") nil nil)) (reparse-symbol classsubparts) [901 922])
                            ("protected" label nil (reparse-symbol classsubparts) [924 934])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [939 959]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [442 962])
                    ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [980 990])
                            ("" variable (:type ("IGraphTableGenerateOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [991 1013]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [964 1014])
                    ("IGraphTableGenerateOp" function
                       (:constructor-flag t
                        :parent "IGraphTableGenerateOp"
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("OpKernelConstruction" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1061 1087]))                          
                        :type ("IGraphTableGenerateOp" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1016 1778])
                    ("IGraphTableGenerateOp" function
                       (:destructor-flag t
                        :parent "IGraphTableGenerateOp"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1780 1831])
                    ("Compute" function
                       (:parent "IGraphTableGenerateOp"
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("OpKernelContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1869 1890]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1833 2744])
                    ("extractSearchKeys" function
                       (:parent "IGraphTableGenerateOp"
                        :arguments 
                          ( ("ctx" variable
                               (:pointer 1
                                :type ("OpKernelContext" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2792 2813])
                            ("searchKeys" variable
                               (:pointer 1
                                :type ("SearchKeyMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2822 2847]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2746 3476])
                    ("REGISTER_KERNEL_BUILDER" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3502 3531])
                            ("" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3557 3575])
                            ("" variable (:type ("IGraphTableGenerateOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3601 3623]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [3478 3624]))                  
                :type "namespace")
                nil [419 3626]))          
      :file "IGraphTableGenerateOp.cpp"
      :pointmax 3628
      :fsize 3627
      :lastmodtime '(23301 8217 303298 237000)
      :unmatched-syntax '((thing 3563 . 3575) (thing 3556 . 3557) (thing 3506 . 3531) (thing 648 . 682) (thing 641 . 648) (thing 636 . 640) (thing 514 . 522))))
  :file "!ssd!sdd!git!ha3!tf_search!tf_search!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
