;; Object unittest/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unittest/"
  :tables
  (list
    (semanticdb-table "dotest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("gmock/gmock.h" include (:system-flag t) nil [1 25])
            ("alog/Logger.h" include (:system-flag t) nil [26 50])
            ("alog/Configurator.h" include (:system-flag t) nil [51 81])
            ("google/protobuf/stubs/common.h" include (:system-flag t) nil [82 123])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [125 145])
            ("testing" variable (:type "int") nil [164 172])
            ("MAX_CWD_LENGTH" variable (:constant-flag t) nil [182 196])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [213 222])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [223 235]))                  
                :type "int")
                nil [204 914]))          
      :file "dotest.cpp"
      :pointmax 915
      :fsize 914
      :lastmodtime '(23309 26315 302526 338000)
      :unmatched-syntax '((thing 163 . 164) (thing 146 . 151))
      :lexical-table 
        '(("MAX_CWD_LENGTH" . ((number "10240" 197 . 202)))
          )
)
    (semanticdb-table "unittest.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__SUEZ_UNITTEST_H" variable (:constant-flag t) nil [35 52])
            ("string" include (:system-flag t) nil [54 71])
            ("typeinfo" include (:system-flag t) nil [72 91])
            ("execinfo.h" include (:system-flag t) nil [92 113])
            ("dlfcn.h" include (:system-flag t) nil [114 132])
            ("unistd.h" include (:system-flag t) nil [133 152])
            ("GTEST_USE_OWN_TR1_TUPLE" variable (:constant-flag t) nil [161 184])
            ("gtest/gtest.h" include (:system-flag t) nil [187 211])
            ("gmock/gmock.h" include (:system-flag t) nil [212 236])
            ("dirent.h" include (:system-flag t) nil [237 256])
            ("assert.h" include (:system-flag t) nil [257 276])
            ("sys/mman.h" include (:system-flag t) nil [277 298])
            ("errno.h" include (:system-flag t) nil [299 317])
            ("string.h" include (:system-flag t) nil [318 337])
            ("private" variable (:constant-flag t) nil [347 354])
            ("protected" variable (:constant-flag t) nil [370 379])
            ("testing::_" using (:type ("testing::_" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [388 405])
            ("testing::Return" using (:type ("testing::Return" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [406 428])
            ("testing::Throw" using (:type ("testing::Throw" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [429 450])
            ("testing::SetArgReferee" using (:type ("testing::SetArgReferee" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [451 480])
            ("testing::DoAll" using (:type ("testing::DoAll" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [481 502])
            ("testing::Invoke" using (:type ("testing::Invoke" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [503 525])
            ("TESTBASE_BASE" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [549 556])
                    ("TESTBASE_BASE" function
                       (:constructor-flag t
                        :type ("TESTBASE_BASE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [561 810])
                    ("TESTBASE_BASE" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [815 842])
                    ("public" label nil (reparse-symbol classsubparts) [843 850])
                    ("SetUp" function (:type "void") (reparse-symbol classsubparts) [855 993])
                    ("TearDown" function (:type "void") (reparse-symbol classsubparts) [999 1114])
                    ("public" label nil (reparse-symbol classsubparts) [1116 1123])
                    ("setUp" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1128 1151])
                    ("tearDown" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1156 1182])
                    ("GET_CLASS_NAME" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1188 1435])
                    ("GET_TEMPLATE_DATA_PATH" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1441 1516])
                    ("TEST_ROOT_PATH" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1521 1588])
                    ("GET_TEST_DATA_PATH" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1593 1685])
                    ("public" label nil (reparse-symbol classsubparts) [1686 1694])
                    ("testDataPathSetup" function (:type "void") (reparse-symbol classsubparts) [1699 2357])
                    ("testDataPathTearDown" function (:type "void") (reparse-symbol classsubparts) [2363 2429])
                    ("deleteExistDataPath" function (:type "void") (reparse-symbol classsubparts) [2435 2687])
                    ("public" label nil (reparse-symbol classsubparts) [2689 2697])
                    ("isFile" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2714 2738]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2702 2943])
                    ("isDir" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2959 2983]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2948 3188])
                    ("remove" function
                       (:arguments 
                          ( ("path" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3206 3230]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3194 4459])
                    ("public" label nil (reparse-symbol classsubparts) [4461 4469])
                    ("_testRootPath" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4474 4500])
                    ("_testDataPath" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4505 4531]))                  
                :type "class")
                nil [527 4534])
            ("testing::Test" variable (:type "int") nil [4584 4748])
            ("ASSERT_CAST_AND_RETURN" variable (:constant-flag t) nil [5340 5362])
            ("GET_NEXT_FUNC" variable (:constant-flag t) nil [6973 6986]))          
      :file "unittest.h"
      :pointmax 8459
      :fsize 8458
      :lastmodtime '(23310 15680 734267 735000)
      :unmatched-syntax '((thing 4536 . 4541) (thing 4542 . 4550) (thing 4551 . 4552) (thing 4553 . 4559) (thing 4560 . 4573) (thing 4573 . 4574) (thing 4575 . 4581) (thing 4582 . 4583) (thing 4583 . 4584))
      :lexical-table 
        '(("GET_NEXT_FUNC" (spp-arg-list ("func_type") 6986 . 6997) . ((semantic-list "({                                                          \\
        const size_t max_depth = 1;                             \\
        void *stack_addrs[max_depth];                           \\
                                                                \\
        size_t stack_depth = backtrace(stack_addrs, max_depth);         \\
        assert(stack_depth == 1); (void) stack_depth;                   \\
        char **stack_strings = backtrace_symbols(stack_addrs, max_depth); \\
                                                                        \\
        std::string stackStr = stack_strings[0];                        \\
        size_t start = stackStr.find('(');                              \\
        assert(start != std::string::npos);                             \\
        stackStr = stackStr.substr(start + 1);                          \\
        size_t end = stackStr.find('+');                                \\
        assert(end != std::string::npos);                               \\
        std::string funcSym = stackStr.substr(0, end);                  \\
        free(stack_strings);                                            \\
        func_type func = reinterpret_cast<func_type>(dlsym(RTLD_NEXT, funcSym.c_str())); \\
        assert(func);                                                   \\
        func;                                                           \\
    })" 7035 . 8430)))
          ("__SUEZ_UNITTEST_H")
          ("GTEST_USE_OWN_TR1_TUPLE" . ((number "0" 185 . 186)))
          ("private" . ((PUBLIC "public" 355 . 361)))
          ("ASSERT_CAST_AND_RETURN" (spp-arg-list ("expectType" "pointer") 5362 . 5383) . ((semantic-list "({                                                                  \\
        __typeof__(pointer) p = pointer;                                \\
        ASSERT_TRUE(p) << \"pointer is NULL\";                            \\
        expectType *castResult__ = dynamic_cast<expectType*>(p);        \\
        ASSERT_TRUE(castResult__) << \"Expect: \"#expectType << \" Actual: \" << typeid(*p).name(); \\
        castResult__;                                                   \\
    })" 5410 . 5880)))
          ("protected" . ((PUBLIC "public" 380 . 386)))
          )
))
  :file "!ssd!sdd!git!turing_be!basic_ops_compile!unittest_framework!unittest!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
