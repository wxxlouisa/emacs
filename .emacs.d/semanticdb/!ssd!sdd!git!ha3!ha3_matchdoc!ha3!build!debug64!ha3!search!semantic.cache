;; Object search/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "search/"
  :tables
  (list
    (semanticdb-table "BatchMultiAggregator.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/search/BatchMultiAggregator.h" include (:system-flag t) nil [1 45])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [67 74]))                  
                :type "int")
                nil [47 75])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [77 99])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [115 122])
                    ("" variable (:type ("BatchMultiAggregator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [123 144]))                  
                :type "int")
                nil [101 145])
            ("BatchMultiAggregator" function
               (:constructor-flag t
                :parent "BatchMultiAggregator"
                :arguments 
                  ( ("pool" variable
                       (:pointer 1
                        :type ("mem_pool::Pool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [190 211]))                  
                :type ("BatchMultiAggregator" type (:type "class") nil nil))
                nil [147 242])
            ("BatchMultiAggregator" function
               (:constructor-flag t
                :parent "BatchMultiAggregator"
                :arguments 
                  ( ("aggVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AggregatorVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [296 327])
                    ("pool" variable
                       (:pointer 1
                        :type ("mem_pool::Pool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [328 349]))                  
                :type ("BatchMultiAggregator" type (:type "class") nil nil))
                nil [244 391])
            ("BatchMultiAggregator" function
               (:destructor-flag t
                :parent "BatchMultiAggregator"
                :type "void")
                nil [393 443])
            ("doAggregate" function
               (:parent "BatchMultiAggregator"
                :arguments 
                  ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [484 512]))                  
                :type "void")
                nil [445 568])
            ("estimateResult" function
               (:parent "BatchMultiAggregator"
                :arguments 
                  ( ("factor" variable (:type "double") (reparse-symbol arg-sub-list) [612 626]))                  
                :type "void")
                nil [570 825])
            ("endLayer" function
               (:parent "BatchMultiAggregator"
                :arguments 
                  ( ("factor" variable (:type "double") (reparse-symbol arg-sub-list) [863 877]))                  
                :type "void")
                nil [827 912])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [932 939]))                  
                :type "int")
                nil [914 940]))          
      :file "BatchMultiAggregator.cpp"
      :pointmax 942
      :fsize 941
      :lastmodtime '(23091 39247 756880 272000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!ha3_matchdoc!ha3!build!debug64!ha3!search!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
