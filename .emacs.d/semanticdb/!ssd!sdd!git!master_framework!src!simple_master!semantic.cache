;; Object simple_master/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "simple_master/"
  :tables
  (list
    (semanticdb-table "SimpleMasterScheduler.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("common/Log.h" include nil nil [1 24])
            ("master_framework/SimpleMasterScheduler.h" include nil nil [25 76])
            ("autil/StringUtil.h" include (:system-flag t) nil [77 106])
            ("fslib/fslib.h" include (:system-flag t) nil [107 131])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [133 153])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [154 176])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [177 199])
            ("USE_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [231 243]))                  
                :type "int")
                nil [200 244])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [278 292]))                  
                :type "int")
                nil [245 293])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [322 336])
                    ("" variable (:type ("SimpleMasterScheduler" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [337 359]))                  
                :type "int")
                nil [295 360])
            ("SimpleMasterScheduler" function
               (:constructor-flag t
                :parent "SimpleMasterScheduler"
                :type ("SimpleMasterScheduler" type (:type "class") nil nil))
                nil [362 576])
            ("SimpleMasterScheduler" function
               (:destructor-flag t
                :parent "SimpleMasterScheduler"
                :type "void")
                nil [578 641])
            ("init" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("hippoZkRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [685 716])
                    ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [725 743])
                    ("leaderChecker" variable
                       (:pointer 1
                        :type ("LeaderChecker" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [745 774])
                    ("applicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [783 816]))                  
                :type "bool")
                nil [643 1062])
            ("start" function
               (:parent "SimpleMasterScheduler"
                :type "bool")
                nil [1064 1253])
            ("stop" function
               (:parent "SimpleMasterScheduler"
                :type "bool")
                nil [1255 1382])
            ("getRoleSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1430 1453]))                  
                :type ("SlotInfos" type (:type "class") nil nil))
                nil [1384 1676])
            ("getAllRoleSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("roleSlots" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("SlotInfos" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1731 1765]))                  
                :type "void")
                nil [1678 1827])
            ("setAppPlan" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1868 1891]))                  
                :type "void")
                nil [1829 2477])
            ("updateScheduleUnits" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("rolePlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RolePlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2536 2565]))                  
                :type "void")
                nil [2479 4137])
            ("releaseSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("slots" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("hippo::SlotId" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4180 4215])
                    ("pref" variable
                       (:reference 1
                        :constant-flag t
                        :type ("hippo::ReleasePreference" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4224 4261]))                  
                :type "void")
                nil [4139 4321])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4354 4368]))                  
                :type "int")
                nil [4323 4369]))          
      :file "SimpleMasterScheduler.cpp"
      :pointmax 4371
      :fsize 4370
      :lastmodtime '(22537 49518 541248 329000)
      :unmatched-syntax '((thing 744 . 745) (thing 743 . 744) (thing 730 . 743)))
    (semanticdb-table "SimpleMasterWorker.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master_framework/SimpleMaster.h" include nil nil [1 43])
            ("REGISTER_WORKER" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_framework::simple_master::SimpleMaster" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61 107]))                  
                :type "int")
                nil [45 108]))          
      :file "SimpleMasterWorker.cpp"
      :pointmax 109
      :fsize 108
      :lastmodtime '(22537 49518 541248 329000)
      :unmatched-syntax nil)
    (semanticdb-table "SimpleMaster.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("common/Log.h" include nil nil [1 24])
            ("master_framework/SimpleMaster.h" include nil nil [25 67])
            ("simple_master/SimpleMasterServiceImpl.h" include nil nil [68 118])
            ("autil/StringUtil.h" include (:system-flag t) nil [119 148])
            ("fslib/fslib.h" include (:system-flag t) nil [149 173])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [175 195])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [196 218])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [219 241])
            ("fslib" using (:type ("fslib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [242 264])
            ("fslib::fs" using (:type ("fslib::fs" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [265 291])
            ("USE_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [324 336]))                  
                :type "int")
                nil [293 337])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [371 385]))                  
                :type "int")
                nil [338 386])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [415 429])
                    ("" variable (:type ("SimpleMaster" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [430 443]))                  
                :type "int")
                nil [388 444])
            ("SIMPLE_MASTER_APP_PLAN" variable (:constant-flag t) nil [454 476])
            ("SimpleMaster" function
               (:constructor-flag t
                :parent "SimpleMaster"
                :type ("SimpleMaster" type (:type "class") nil nil))
                nil [503 722])
            ("SimpleMaster" function
               (:destructor-flag t
                :parent "SimpleMaster"
                :type "void")
                nil [724 863])
            ("doInit" function
               (:parent "SimpleMaster"
                :type "bool")
                nil [865 1012])
            ("doPrepareToRun" function
               (:parent "SimpleMaster"
                :type "bool")
                nil [1014 1237])
            ("doIdle" function
               (:parent "SimpleMaster"
                :type "void")
                nil [1239 1400])
            ("startSimpleMaster" function
               (:parent "SimpleMaster"
                :type "bool")
                nil [1402 2267])
            ("initLeaderSerializer" function
               (:parent "SimpleMaster"
                :type "bool")
                nil [2269 2948])
            ("recover" function
               (:parent "SimpleMaster"
                :type "bool")
                nil [2950 3541])
            ("doRecoverAppPlan" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3579 3596]))                  
                :type "bool")
                nil [3543 3944])
            ("updateAppPlan" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("proto::UpdateAppPlanRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3979 4022])
                    ("response" variable
                       (:pointer 1
                        :type ("proto::UpdateAppPlanResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4056 4095]))                  
                :type "void")
                nil [3946 4894])
            ("updateRoleProperties" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("proto::UpdateRolePropertiesRequest" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4945 4995])
                    ("response" variable
                       (:pointer 1
                        :type ("proto::UpdateRolePropertiesResponse" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5004 5050]))                  
                :type "void")
                nil [4896 6434])
            ("updateProperties" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("op" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6472 6489])
                    ("kvMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6526 6559])
                    ("rolePlan" variable
                       (:reference 1
                        :type ("RolePlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6596 6615]))                  
                :type "void")
                nil [6436 6758])
            ("setProperties" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("kvMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6793 6826])
                    ("rolePlan" variable
                       (:reference 1
                        :type ("RolePlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6860 6879]))                  
                :type "void")
                nil [6760 7097])
            ("delProperties" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("kvMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7132 7165])
                    ("rolePlan" variable
                       (:reference 1
                        :type ("RolePlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7199 7218]))                  
                :type "void")
                nil [7099 7429])
            ("doUpdateAppPlan" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7466 7489]))                  
                :type "bool")
                nil [7431 7963])
            ("schedule" function
               (:parent "SimpleMaster"
                :type "void")
                nil [7965 8377])
            ("getIpFromSpec" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("spec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8414 8433]))                  
                :type ("string" type (:type "class") nil nil))
                nil [8379 8637])
            ("getRoleIps" function
               (:parent "SimpleMaster"
                :arguments 
                  ( ("roleSlotInfos" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("SlotInfos" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8678 8722])
                    ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8731 8754])
                    ("ips" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8755 8775]))                  
                :type "void")
                nil [8639 9397])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9430 9444]))                  
                :type "int")
                nil [9399 9445]))          
      :file "SimpleMaster.cpp"
      :pointmax 9447
      :fsize 9446
      :lastmodtime '(22537 49518 541248 329000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SIMPLE_MASTER_APP_PLAN" . ((string "\"simple_master_app_plan\"" 477 . 501)))
          )
)
    (semanticdb-table "AppPlan.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master_framework/AppPlan.h" include nil nil [1 38])
            ("common/Log.h" include nil nil [39 62])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [64 86])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [87 107])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [108 138])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173 187]))                  
                :type "int")
                nil [140 188])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [217 231])
                    ("" variable (:type ("AppPlan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [232 240]))                  
                :type "int")
                nil [190 241])
            ("AppPlan" function
               (:constructor-flag t
                :parent "AppPlan"
                :type ("AppPlan" type (:type "class") nil nil))
                nil [243 265])
            ("AppPlan" function
               (:destructor-flag t
                :parent "AppPlan"
                :type "void")
                nil [267 290])
            ("Jsonize" function
               (:parent "AppPlan"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [314 344]))                  
                :type "void")
                nil [292 438])
            ("fromString" function
               (:parent "AppPlan"
                :arguments 
                  ( ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [465 487]))                  
                :type "bool")
                nil [440 788])
            ("==" function
               (:operator-flag t
                :parent "AppPlan"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [817 840]))                  
                :type "bool")
                nil [790 907])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [940 954]))                  
                :type "int")
                nil [909 955]))          
      :file "AppPlan.cpp"
      :pointmax 957
      :fsize 956
      :lastmodtime '(22537 49518 536248 338000)
      :unmatched-syntax nil)
    (semanticdb-table "RoleManager.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("simple_master/RoleManager.h" include nil nil [1 39])
            ("common/Log.h" include nil nil [40 63])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [65 85])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119 133]))                  
                :type "int")
                nil [86 134])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163 177])
                    ("" variable (:type ("RoleManager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178 190]))                  
                :type "int")
                nil [136 191])
            ("RoleManager" function
               (:constructor-flag t
                :parent "RoleManager"
                :type ("RoleManager" type (:type "class") nil nil))
                nil [193 223])
            ("RoleManager" function
               (:destructor-flag t
                :parent "RoleManager"
                :type "void")
                nil [225 256])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [289 303]))                  
                :type "int")
                nil [258 304]))          
      :file "RoleManager.cpp"
      :pointmax 306
      :fsize 305
      :lastmodtime '(22537 49518 541248 329000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!master_framework!src!simple_master!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
