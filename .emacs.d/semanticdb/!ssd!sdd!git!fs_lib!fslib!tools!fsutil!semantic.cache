;; Object fsutil/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "fsutil/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("env" code nil nil [58 189])
            ("env" code nil nil [191 226])
            ("env" code nil nil [227 258])
            ("env" code nil nil [259 298])
            ("env" code nil nil [300 317])
            ("lib_names" variable nil nil [334 394])
            ("fs_util_exe" variable nil nil [396 579])
            ("env" code nil nil [581 612])
            ("env" code nil nil [613 637]))          
      :file "SConscript"
      :pointmax 640
      :fsize 639
      :lastmodtime '(22552 25559 951984 574000)
      :unmatched-syntax nil)
    (semanticdb-table "FsUtilMain.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [1 20])
            ("errno.h" include (:system-flag t) nil [21 39])
            ("fslib/config.h" include nil nil [40 65])
            ("tools/fsutil/FsUtil.h" include nil nil [66 98])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [100 120])
            ("fslib" using (:type ("fslib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [121 143])
            ("FSLIB_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("tools" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164 170]))                  
                :type "int")
                nil [144 171])
            ("DEFAULT_LOG_CONF" variable
               (:constant-flag t
                :default-value "\"alog.rootLogger=INFO, fslibAppender\\n\"
    \"alog.appender.fslibAppender=FileAppender\\n\"
    \"alog.appender.fslibAppender.fileName=fs_util.log\\n\"
    \"alog.appender.fslibAppender.async_flush=true\\n\"
    \"alog.appender.fslibAppender.flush_threshold=1024\\n\"
    \"alog.appender.fslibAppender.flush_interval=1000\\n\"
    \"alog.appender.fslibAppender.max_file_size=100\\n\"
    \"alog.appender.fslibAppender.layout=PatternLayout\\n\"
    \"alog.appender.fslibAppender.layout.LogPattern=[\\%\\%d] [\\%\\%l] [\\%\\%t,\\%\\%F -- \\%\\%f():\\%\\%n] [\\%\\%m]\\n\"
    \"alog.appender.fslibAppender.log_keep_count=100\""
                :type ("string" type (:type "class") nil nil))
                nil [173 794])
            ("printFsUtilCmdUsage" function (:type "void") nil [801 2908])
            ("processCmd" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [2931 2940])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [2941 2953]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [2910 5544])
            ("initLogWithLogFile" function
               (:arguments 
                  ( ("logConf" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5570 5592]))                  
                :type "bool")
                nil [5546 5865])
            ("initLogWithDefaultConf" function
               (:arguments 
                  ( ("defaultLogLevel" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5895 5925]))                  
                :type "void")
                nil [5867 6959])
            ("initLog" function
               (:arguments 
                  ( ("argc" variable
                       (:reference 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [6974 6985])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [6985 6997]))                  
                :type "void")
                nil [6961 8000])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [8012 8021])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [8022 8034]))                  
                :type "int")
                nil [8003 8397]))          
      :file "FsUtilMain.cpp"
      :pointmax 8398
      :fsize 8397
      :lastmodtime '(22727 39387 716139 576000)
      :unmatched-syntax nil)
    (semanticdb-table "FsUtil.h"
      :file "FsUtil.h"
      :fsize 2019
      :lastmodtime '(22727 39387 716139 576000)))
  :file "!ssd!sdd!git!fs_lib!fslib!tools!fsutil!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
