;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [26 39])
            ("env" variable nil nil [40 57])
            ("env" code nil nil [58 107]))          
      :file "SConscript"
      :pointmax 365
      :fsize 364
      :lastmodtime '(23348 39485 230678 73000)
      :unmatched-syntax nil)
    (semanticdb-table "ExtractTriggerInfoOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [19 66])
            ("tensorflow/core/kernels/ops_testutil.h" include (:system-flag t) nil [67 116])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [117 166])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [167 222])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [223 269])
            ("suez/turing/ops/test/OpTestBase.h" include nil nil [270 314])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [316 343])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [344 364])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("ExtractTriggerInfoOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [456 466])
                                    ("prepareDefaultOp" function
                                       (:arguments 
                                          ( ("fieldsName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [493 526])
                                            ("fieldsType" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [527 560])
                                            ("queryParam" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [587 612])
                                            ("keyListSplit" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\",\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [613 645])
                                            ("fieldSplit" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\":\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [673 703]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [471 1211])
                                    ("prepareDefaultInput" function
                                       (:arguments 
                                          ( ("kvPair" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("map" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil)
                                                          ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1242 1276]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1217 1422])
                                    ("prepareDefaultOpFailed" function
                                       (:arguments 
                                          ( ("fieldsName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1456 1489])
                                            ("fieldsType" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1490 1523])
                                            ("queryParam" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1556 1581])
                                            ("keyListSplit" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\",\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1582 1614])
                                            ("fieldSplit" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\":\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1648 1678]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1428 2289])
                                    ("public" label nil (reparse-symbol classsubparts) [2291 2298]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [403 2301])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2310 2335])
                                    ("" variable (:type ("testFieldNameSizeNotEqFieldsTypeSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2336 2373]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2303 2768])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2777 2802])
                                    ("" variable (:type ("testFieldNameSizeEmpty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2803 2826]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2770 3114])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3123 3148])
                                    ("" variable (:type ("testFieldTypeError" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3149 3168]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3116 3534])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3543 3568])
                                    ("" variable (:type ("testSplitIsSame" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3569 3585]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3536 3981])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3990 4015])
                                    ("" variable (:type ("testDefaultNormal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4016 4034]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3983 5194])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5203 5228])
                                    ("" variable (:type ("testSetSplitField" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5229 5247]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5196 6533])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6542 6567])
                                    ("" variable (:type ("testDefaultTriggerEmpty" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6568 6592]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6535 7803])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7812 7837])
                                    ("" variable (:type ("testDefaultAllTriggerBad" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7838 7863]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7805 9001])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTriggerInfoOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9010 9035])
                                    ("" variable (:type ("testDefaultTriggerNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9036 9063]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9003 9680]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [383 9682]))                  
                :type "namespace")
                nil [366 9684]))          
      :file "ExtractTriggerInfoOpTest.cpp"
      :pointmax 9685
      :fsize 9682
      :lastmodtime '(23347 19653 490739 126000)
      :unmatched-syntax nil)
    (semanticdb-table "ExtractTensorFromRawTensorOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("vector" include (:system-flag t) nil [1 18])
            ("autil/StringUtil.h" include nil nil [19 48])
            ("basic_ops/variant/RawTensorVariant.h" include nil nil [49 96])
            ("tensorflow/core/kernels/ops_testutil.h" include (:system-flag t) nil [97 146])
            ("tensorflow/core/framework/fake_input.h" include (:system-flag t) nil [147 196])
            ("tensorflow/core/framework/node_def_builder.h" include (:system-flag t) nil [197 252])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [253 299])
            ("basic_ops/ops/test/OpTestBase.h" include nil nil [300 342])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [344 371])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [372 392])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [393 415])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("ExtractTensorFromRawTensorOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [515 525])
                                    ("prepareDefaultOp" function
                                       (:arguments 
                                          ( ("dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [552 567])
                                            ("fieldName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [567 591])
                                            ("isInitOk" variable
                                               (:default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [592 612])
                                            ("errorMessge" variable
                                               (:reference 1
                                                :constant-flag t
                                                :default-value "\"\""
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [640 670]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [530 1241])
                                    ("addTensor" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("dtype" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1288 1303])
                                            ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1304 1328])
                                            ("shape" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("TensorShape" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1329 1354])
                                            ("values" variable
                                               (:constant-flag t
                                                :type ("vector" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1374 1397])
                                            ("variant" variable
                                               (:reference 1
                                                :type ("RawTensorVariant" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1398 1424]))                                          )
                                        (reparse-symbol classsubparts) [1247 1658]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [454 1661])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTensorFromRawTensorOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1670 1703])
                                    ("" variable (:type ("testIntValve" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1704 1717]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1663 2273])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTensorFromRawTensorOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2282 2315])
                                    ("" variable (:type ("testString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2316 2327]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2275 3136])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTensorFromRawTensorOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3145 3178])
                                    ("" variable (:type ("testTypeNotMatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3179 3196]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3138 3999])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("ExtractTensorFromRawTensorOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4009 4042])
                                    ("" variable (:type ("testNotExist" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4043 4056]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4002 4767]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [434 4770]))                  
                :type "namespace")
                nil [417 4772]))          
      :file "ExtractTensorFromRawTensorOpTest.cpp"
      :pointmax 4773
      :fsize 4771
      :lastmodtime '(23348 39931 795163 184000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!turing_be!basic_ops_compile!basic_ops!basic_ops!ops!basic!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
