;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "ClosureGuard.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CARBON_CLOSUREGUARD_H" variable (:constant-flag t) nil [39 60])
            ("common/common.h" include nil nil [62 88])
            ("google/protobuf/stubs/common.h" include (:system-flag t) nil [89 130])
            ("BEGIN_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155 162]))                  
                :type "int")
                nil [132 163])
            ("ClosureGuard" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [187 194])
                    ("ClosureGuard" function
                       (:constructor-flag t
                        :arguments 
                          ( ("done" variable
                               (:pointer 1
                                :type ("google::protobuf::Closure" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [214 246]))                          
                        :type ("ClosureGuard" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [199 280])
                    ("ClosureGuard" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [285 373])
                    ("private" label nil (reparse-symbol classsubparts) [374 382])
                    ("ClosureGuard" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ClosureGuard" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [400 421]))                          
                        :type ("ClosureGuard" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [387 422])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ClosureGuard" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [451 472]))                          
                        :type ("ClosureGuard" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [427 473])
                    ("public" label nil (reparse-symbol classsubparts) [474 481])
                    ("_done" variable
                       (:pointer 1
                        :type ("google::protobuf::Closure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [488 521]))                  
                :type "class")
                nil [166 524])
            ("END_CARBON_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [547 554]))                  
                :type "int")
                nil [526 555]))          
      :file "ClosureGuard.h"
      :pointmax 588
      :fsize 587
      :lastmodtime '(22850 12252 161928 245000)
      :unmatched-syntax '((thing 487 . 488) (thing 486 . 487) (thing 213 . 214) (thing 212 . 213))
      :lexical-table 
        '(("CARBON_CLOSUREGUARD_H")
          )
)
    (semanticdb-table "common.h"
      :file "common.h"
      :fsize 2344
      :lastmodtime '(22850 12252 162928 244000)))
  :file "!ssd!sdd!git!carbon!src!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
