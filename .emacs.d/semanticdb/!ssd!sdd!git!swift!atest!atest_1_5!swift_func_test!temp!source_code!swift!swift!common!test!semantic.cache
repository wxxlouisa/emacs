;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "RangeUtilTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/test/unittest.h" include nil nil [1 33])
            ("swift/common/RangeUtil.h" include nil nil [34 69])
            ("autil/StringUtil.h" include nil nil [70 99])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [101 121])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144 151]))                  
                :type "int")
                nil [122 152])
            ("RangeUtilTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("protected" label nil (reparse-symbol classsubparts) [200 210])
                    ("checkRangePairs" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [236 260])
                            ("rangeStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [261 284]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [215 285])
                    ("checkRangePairs" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [311 335])
                            ("rangeCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [336 356])
                            ("rangeStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [382 405]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [290 406])
                    ("checkPartionsIds" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [433 457])
                            ("from" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [458 472])
                            ("to" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [500 512])
                            ("pids" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [513 532]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [411 533]))                  
                :type "class")
                nil [154 536])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RangeUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [545 559])
                    ("" variable (:type ("testSplitPartitions" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [560 580]))                  
                :type "int")
                nil [538 1192])
            ("checkRangePairs" function
               (:parent "RangeUtilTest"
                :arguments 
                  ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1239 1263])
                    ("rangeStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1264 1287]))                  
                :type "void")
                nil [1194 1866])
            ("checkRangePairs" function
               (:parent "RangeUtilTest"
                :arguments 
                  ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1913 1937])
                    ("rangeCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1938 1958])
                    ("rangeStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1959 1982]))                  
                :type "void")
                nil [1868 2625])
            ("checkPartionsIds" function
               (:parent "RangeUtilTest"
                :arguments 
                  ( ("partitionCount" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2664 2688])
                    ("from" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2689 2703])
                    ("to" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2742 2754])
                    ("pids" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2755 2774]))                  
                :type "void")
                nil [2627 3116])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RangeUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3125 3139])
                    ("" variable (:type ("testGetPartitionIds" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3140 3160]))                  
                :type "int")
                nil [3118 3464])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RangeUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3473 3487])
                    ("" variable (:type ("testGetPartitionId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3488 3507]))                  
                :type "int")
                nil [3466 3980])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RangeUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3989 4003])
                    ("" variable (:type ("testGetMergeHashId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4004 4023]))                  
                :type "int")
                nil [3982 5387])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5408 5415]))                  
                :type "int")
                nil [5388 5416]))          
      :file "RangeUtilTest.cpp"
      :pointmax 5417
      :fsize 5416
      :lastmodtime '(22913 40365 212181 13000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!atest!atest_1_5!swift_func_test!temp!source_code!swift!swift!common!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
