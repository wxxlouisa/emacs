;; Object Variables/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Variables/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"engine.SCons.Variables

This file defines the Variables class that is used to add user-friendly
customizable variables to an SCons build.
\"\"\"" code nil nil [1 145])
            ("__revision__" variable nil nil [1258 1370])
            ("os.path" include nil nil [1372 1386])
            ("sys" include nil nil [1387 1397])
            ("SCons.Environment" include nil nil [1399 1423])
            ("SCons.Errors" include nil nil [1424 1443])
            ("SCons.Util" include nil nil [1444 1461])
            ("SCons.Warnings" include nil nil [1462 1483])
            ("BoolVariable" include nil nil [1485 1522])
            ("EnumVariable" include nil nil [1531 1568])
            ("ListVariable" include nil nil [1577 1614])
            ("PackageVariable" include nil nil [1623 1666])
            ("PathVariable" include nil nil [1674 1711])
            ("Variables" type
               (:superclasses ("object")
                :members 
                  ( ("instance" variable nil (reparse-symbol indented_block_body) [1750 1763])
                    ("\"\"\"
    Holds all the options, updates the environment with the variables,
    and renders the help text.
    \"\"\"" code nil (reparse-symbol indented_block_body) [1769 1882])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        files - [optional] List of option configuration files to load
            (backward compatibility) If a single string is passed it is
                                     automatically placed in a file list
        \"\"\"" code nil (reparse-symbol indented_block_body) [1951 2181])
                            ("if" code nil (reparse-symbol indented_block_body) [2221 2262])
                            ("if" code nil (reparse-symbol indented_block_body) [2270 2309])
                            ("self" variable nil (reparse-symbol indented_block_body) [2317 2334])
                            ("self" variable nil (reparse-symbol indented_block_body) [2343 2359])
                            ("if" code nil (reparse-symbol indented_block_body) [2368 2503])
                            ("self" variable nil (reparse-symbol indented_block_body) [2511 2529])
                            ("self" variable nil (reparse-symbol indented_block_body) [2538 2555])
                            ("if" code nil (reparse-symbol indented_block_body) [2605 2735]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1900 1904])
                            ("files" variable nil (reparse-symbol function_parameters) [1906 1911])
                            ("args" variable nil (reparse-symbol function_parameters) [1918 1922])
                            ("is_global" variable nil (reparse-symbol function_parameters) [1929 1938]))                          
                        :documentation "
        files - [optional] List of option configuration files to load
            (backward compatibility) If a single string is passed it is
                                     automatically placed in a file list
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1887 2735])
                    ("_do_add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2752 2756])
                            ("key" variable nil (reparse-symbol function_parameters) [2758 2761])
                            ("help" variable nil (reparse-symbol function_parameters) [2763 2767])
                            ("default" variable nil (reparse-symbol function_parameters) [2772 2779])
                            ("validator" variable nil (reparse-symbol function_parameters) [2786 2795])
                            ("converter" variable nil (reparse-symbol function_parameters) [2802 2811]))                          )
                        (reparse-symbol indented_block_body) [2740 3707])
                    ("keys" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3721 3725]))                          
                        :documentation "
        Returns the keywords for the options
        ")
                        (reparse-symbol indented_block_body) [3712 3842])
                    ("Add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3855 3859])
                            ("key" variable nil (reparse-symbol function_parameters) [3861 3864])
                            ("help" variable nil (reparse-symbol function_parameters) [3866 3870])
                            ("default" variable nil (reparse-symbol function_parameters) [3875 3882])
                            ("validator" variable nil (reparse-symbol function_parameters) [3889 3898])
                            ("converter" variable nil (reparse-symbol function_parameters) [3905 3914])
                            ("kw" variable nil (reparse-symbol function_parameters) [3921 3925]))                          
                        :documentation "
        Add an option.

        key - the name of the variable, or a list or tuple of arguments
        help - optional help text for the options
        default - optional default value
        validator - optional function that is called to validate the option's value
                    Called with (key, value, environment)
        converter - optional function that is called to convert the option's value before
                    putting it in the environment.
        ")
                        (reparse-symbol indented_block_body) [3847 4804])
                    ("AddVariables" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4826 4830])
                            ("optlist" variable nil (reparse-symbol function_parameters) [4832 4840]))                          
                        :documentation "
        Add a list of options.

        Each list element is a tuple/list of arguments to be passed on
        to the underlying method for adding options.

        Example:
          opt.AddVariables(
            ('debug', '', 0),
            ('CC', 'The C compiler'),
            ('VALIDATE', 'An option for testing validation', 'notset',
             validator, None),
            )
        ")
                        (reparse-symbol indented_block_body) [4809 5308])
                    ("Update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5325 5329])
                            ("env" variable nil (reparse-symbol function_parameters) [5331 5334])
                            ("args" variable nil (reparse-symbol function_parameters) [5336 5340]))                          
                        :documentation "
        Update an environment with the option variables.

        env - the environment to update.
        ")
                        (reparse-symbol indented_block_body) [5314 7670])
                    ("UnknownVariables" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7696 7700]))                          
                        :documentation "
        Returns any options in the specified arguments lists that
        were not known, declared options in this object.
        ")
                        (reparse-symbol indented_block_body) [7675 7878])
                    ("Save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7892 7896])
                            ("filename" variable nil (reparse-symbol function_parameters) [7898 7906])
                            ("env" variable nil (reparse-symbol function_parameters) [7908 7911]))                          
                        :documentation "
        Saves all the options in the given file.  This file can
        then be used to load the options next run.  This can be used
        to create an option cache file.

        filename - Name of the file to save into
        env - the environment get the option values from
        ")
                        (reparse-symbol indented_block_body) [7883 9864])
                    ("GenerateHelpText" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9890 9894])
                            ("env" variable nil (reparse-symbol function_parameters) [9896 9899])
                            ("sort" variable nil (reparse-symbol function_parameters) [9901 9905]))                          
                        :documentation "
        Generate the help text for the options.

        env - an environment that is used to get the current values
              of the options.
        ")
                        (reparse-symbol indented_block_body) [9869 10588])
                    ("format" variable nil (reparse-symbol indented_block_body) [10593 10648])
                    ("format_" variable nil (reparse-symbol indented_block_body) [10653 10725])
                    ("FormatVariableHelpText" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10758 10762])
                            ("env" variable nil (reparse-symbol function_parameters) [10764 10767])
                            ("key" variable nil (reparse-symbol function_parameters) [10769 10772])
                            ("help" variable nil (reparse-symbol function_parameters) [10774 10778])
                            ("default" variable nil (reparse-symbol function_parameters) [10780 10787])
                            ("actual" variable nil (reparse-symbol function_parameters) [10789 10795])
                            ("aliases" variable nil (reparse-symbol function_parameters) [10797 10804]))                          )
                        (reparse-symbol indented_block_body) [10731 11094]))                  
                :type "class")
                nil [1721 11094]))          
      :file "__init__.py"
      :pointmax 11203
      :fsize 11202
      :lastmodtime '(22493 11213 721254 101000)
      :unmatched-syntax nil))
  :file "!usr!lib!scons!SCons!Variables!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
