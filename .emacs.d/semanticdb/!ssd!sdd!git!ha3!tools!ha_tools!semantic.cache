;; Object ha_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha_tools/"
  :tables
  (list
    (semanticdb-table "local_search_starter.py"
      :major-mode 'python-mode
      :tags 
        '( ("re" include nil nil [20 29])
            ("sys" include nil nil [30 40])
            ("os" include nil nil [41 50])
            ("socket" include nil nil [51 64])
            ("optparse" include nil nil [65 98])
            ("tempfile" include nil nil [99 114])
            ("subprocess" include nil nil [115 132])
            ("json" include nil nil [133 144])
            ("time" include nil nil [145 156])
            ("socket" include nil nil [157 170])
            ("LocalSearchStartCmd" type
               (:superclasses ("object")
                :members 
                  ( ("'''
local_search_starter.py
    {-i index_dir           | --index=index_dir}
    {-c config_dir          | --config=config_dir}
    {-p port_start          | --prot=prot_start}
    {-z zone_name           | --zone=zone_name}
    {-b binary_path         | --binary=binary_path}
    {-t timeout             | --timeout=timeout}
    {-l preload             | --preload=preload}

options:
    -i index_dir,     --index=index_dir              : required, index dir
    -c config_dir,    --config=config_dir            : required, config path,
    -p port_list,     --port=port_list               : optional, port list, http port is first port, arpc port is second port, default 12000, if only one port is designed, next port is start +1 (total port may use start + n*3 )
    -z zone_name,     --zone=zone_name               : optional, special zone to start
    -j auxiliary_table, --tables=auxiliary_table     : optional, special auxiliary table to load
    -b binary_path,   --binary=binary_path           : optional, special binary path to load
    -t timeout,       --timeout=timeout              : optional, special timeout load [defalut 300]
    -l preload,       --preload=preload              : optional, special lib to load
    -s serviceName,   --serviceName=serviceName      : optional, serviceName [default ha3_suez_local_search]
    -a amonPort,      --amonPort=amonPort            : optional, amon port [default 10086]

examples:
    ./local_search_starter.py -i /path/to/index -c path/to/config
    ./local_search_starter.py -i /path/to/index -c path/to/config -p 12345
    ./local_search_starter.py -i /path/to/index -c path/to/config -p 12345,22345,32345
    ./local_search_starter.py -i /path/to/index -c path/to/config -z zone1,zone2 -j table1:t1,t3;table2:t3
    '''" code nil (reparse-symbol indented_block_body) [211 1992])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2026 2072]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2011 2015]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1998 2073])
                    ("usage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2088 2092]))                          )
                        (reparse-symbol indented_block_body) [2078 2147])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2167 2171]))                          )
                        (reparse-symbol indented_block_body) [2152 3698])
                    ("parseParams" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3719 3723])
                            ("optionList" variable nil (reparse-symbol function_parameters) [3725 3735]))                          )
                        (reparse-symbol indented_block_body) [3703 4096])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4126 4130])
                            ("options" variable nil (reparse-symbol function_parameters) [4132 4139]))                          )
                        (reparse-symbol indented_block_body) [4101 4457])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4477 4481])
                            ("options" variable nil (reparse-symbol function_parameters) [4483 4490]))                          )
                        (reparse-symbol indented_block_body) [4462 9198])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9211 9215]))                          )
                        (reparse-symbol indented_block_body) [9203 9542])
                    ("stopAll" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9559 9563])
                            ("timeout" variable nil (reparse-symbol function_parameters) [9565 9572]))                          )
                        (reparse-symbol indented_block_body) [9547 10882])
                    ("startSearcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10905 10909]))                          )
                        (reparse-symbol indented_block_body) [10887 11288])
                    ("startQrs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11306 11310]))                          )
                        (reparse-symbol indented_block_body) [11293 11503])
                    ("curl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11517 11521])
                            ("address" variable nil (reparse-symbol function_parameters) [11523 11530])
                            ("method" variable nil (reparse-symbol function_parameters) [11532 11538])
                            ("request" variable nil (reparse-symbol function_parameters) [11540 11547]))                          )
                        (reparse-symbol indented_block_body) [11508 12024])
                    ("createRuntimedirLink" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12054 12058])
                            ("zoneName" variable nil (reparse-symbol function_parameters) [12060 12068])
                            ("partId" variable nil (reparse-symbol function_parameters) [12070 12076]))                          )
                        (reparse-symbol indented_block_body) [12029 12595])
                    ("createConfigLink" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12621 12625])
                            ("zoneName" variable nil (reparse-symbol function_parameters) [12627 12635])
                            ("prefix" variable nil (reparse-symbol function_parameters) [12637 12643])
                            ("bizName" variable nil (reparse-symbol function_parameters) [12645 12652])
                            ("config" variable nil (reparse-symbol function_parameters) [12654 12660]))                          )
                        (reparse-symbol indented_block_body) [12600 13441])
                    ("_loadQrsTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13465 13469])
                            ("timeout" variable nil (reparse-symbol function_parameters) [13471 13478]))                          )
                        (reparse-symbol indented_block_body) [13446 15040])
                    ("_loadSearcherTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15069 15073])
                            ("targetInfos" variable nil (reparse-symbol function_parameters) [15075 15086])
                            ("timeout" variable nil (reparse-symbol function_parameters) [15088 15095]))                          )
                        (reparse-symbol indented_block_body) [15045 17435])
                    ("_startQrs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17454 17458]))                          )
                        (reparse-symbol indented_block_body) [17440 19058])
                    ("_startSearcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19082 19086])
                            ("targetInfos" variable nil (reparse-symbol function_parameters) [19088 19099]))                          )
                        (reparse-symbol indented_block_body) [19063 21131])
                    ("_getSearcherPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21161 21165])
                            ("pos" variable nil (reparse-symbol function_parameters) [21167 21170]))                          )
                        (reparse-symbol indented_block_body) [21136 21216])
                    ("_getQrsPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21241 21245]))                          )
                        (reparse-symbol indented_block_body) [21221 21285])
                    ("_genPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21307 21311])
                            ("count" variable nil (reparse-symbol function_parameters) [21313 21318]))                          )
                        (reparse-symbol indented_block_body) [21290 21831])
                    ("_getArpcPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21857 21861]))                          )
                        (reparse-symbol indented_block_body) [21836 22025])
                    ("_getHttpArpcPortList" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22055 22059]))                          )
                        (reparse-symbol indented_block_body) [22030 22239])
                    ("_genTargetInfos" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22264 22268])
                            ("zoneNames" variable nil (reparse-symbol function_parameters) [22270 22279]))                          )
                        (reparse-symbol indented_block_body) [22244 24643])
                    ("_getMaxGenerationId" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24672 24676])
                            ("indexPath" variable nil (reparse-symbol function_parameters) [24678 24687])
                            ("tableName" variable nil (reparse-symbol function_parameters) [24689 24698]))                          )
                        (reparse-symbol indented_block_body) [24648 24910])
                    ("_getMaxIndexVersion" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24939 24943])
                            ("path" variable nil (reparse-symbol function_parameters) [24945 24949])
                            ("clusterName" variable nil (reparse-symbol function_parameters) [24951 24962])
                            ("generationId" variable nil (reparse-symbol function_parameters) [24964 24976])
                            ("partition" variable nil (reparse-symbol function_parameters) [24978 24987]))                          )
                        (reparse-symbol indented_block_body) [24915 25274])
                    ("_getPartitions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25298 25302])
                            ("path" variable nil (reparse-symbol function_parameters) [25304 25308])
                            ("clusterName" variable nil (reparse-symbol function_parameters) [25310 25321])
                            ("generationId" variable nil (reparse-symbol function_parameters) [25323 25335]))                          )
                        (reparse-symbol indented_block_body) [25279 25665])
                    ("_getNeedStartZoneName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25696 25700]))                          )
                        (reparse-symbol indented_block_body) [25670 26025])
                    ("getDefunctPids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26049 26053]))                          )
                        (reparse-symbol indented_block_body) [26030 26381])
                    ("getPids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26398 26402])
                            ("port" variable nil (reparse-symbol function_parameters) [26404 26408]))                          )
                        (reparse-symbol indented_block_body) [26386 26746])
                    ("getUnusedPort" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26769 26773])
                            ("lackPort" variable nil (reparse-symbol function_parameters) [26775 26783]))                          )
                        (reparse-symbol indented_block_body) [26751 27129]))                  
                :type "class")
                nil [172 27129])
            ("if" code nil nil [27130 27469]))          
      :file "local_search_starter.py"
      :pointmax 27469
      :fsize 27468
      :lastmodtime '(23328 60849 778821 634000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!tools!ha_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
