;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "unittest.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__SWIFT_UNITTEST_H" variable (:constant-flag t) nil [36 54])
            ("string" include (:system-flag t) nil [56 73])
            ("typeinfo" include (:system-flag t) nil [74 93])
            ("execinfo.h" include (:system-flag t) nil [94 115])
            ("dlfcn.h" include (:system-flag t) nil [116 134])
            ("unistd.h" include (:system-flag t) nil [135 154])
            ("GTEST_USE_OWN_TR1_TUPLE" variable (:constant-flag t) nil [163 186])
            ("gtest/gtest.h" include nil nil [189 213])
            ("gmock/gmock.h" include nil nil [214 238])
            ("swift/common/Log.h" include nil nil [239 268])
            ("swift/test/test.h" include nil nil [269 297])
            ("stdlib.h" include (:system-flag t) nil [298 317])
            ("private" variable (:constant-flag t) nil [326 333])
            ("protected" variable (:constant-flag t) nil [349 358])
            ("testing::_" using (:type ("testing::_" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [367 384])
            ("testing::Return" using (:type ("testing::Return" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [385 407])
            ("testing::Throw" using (:type ("testing::Throw" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [408 429])
            ("testing::SetArgReferee" using (:type ("testing::SetArgReferee" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [430 459])
            ("testing::DoAll" using (:type ("testing::DoAll" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [460 481])
            ("testing::Invoke" using (:type ("testing::Invoke" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [482 504])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [505 525])
            ("SWIFT_TESTBASE" type
               (:superclasses 
                  ( ("testing::Test" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [573 580])
                    ("SWIFT_TESTBASE" function
                       (:constructor-flag t
                        :type ("SWIFT_TESTBASE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [585 604])
                    ("SWIFT_TESTBASE" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [609 637])
                    ("public" label nil (reparse-symbol classsubparts) [638 645])
                    ("SetUp" function (:type "void") (reparse-symbol classsubparts) [650 788])
                    ("TearDown" function (:type "void") (reparse-symbol classsubparts) [794 869])
                    ("public" label nil (reparse-symbol classsubparts) [871 878])
                    ("setUp" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [883 906])
                    ("tearDown" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [911 937])
                    ("GET_CLASS_NAME" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [943 1014])
                    ("GET_TEST_DATA_PATH" function
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1020 1091])
                    ("public" label nil (reparse-symbol classsubparts) [1093 1101])
                    ("testDataPathSetup" function (:type "void") (reparse-symbol classsubparts) [1106 1333])
                    ("testDataPathTearDown" function (:type "void") (reparse-symbol classsubparts) [1339 1405])
                    ("deleteExistDataPath" function (:type "void") (reparse-symbol classsubparts) [1411 1721])
                    ("public" label nil (reparse-symbol classsubparts) [1723 1731])
                    ("_testDataPath" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1736 1762])
                    ("public" label nil (reparse-symbol classsubparts) [1764 1774])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1779 1799]))                  
                :type "class")
                nil [527 1802])
            ("ASSERT_CAST_AND_RETURN" variable (:constant-flag t) nil [1812 1834])
            ("GET_NEXT_FUNC" variable (:constant-flag t) nil [3266 3279]))          
      :file "unittest.h"
      :pointmax 4753
      :fsize 4752
      :lastmodtime '(22948 54710 216431 853000)
      :unmatched-syntax nil
      :lexical-table 
        '(("GET_NEXT_FUNC" (spp-arg-list ("func_type") 3279 . 3290) . ((semantic-list "({                                                          \\
        const size_t max_depth = 1;                             \\
        void *stack_addrs[max_depth];                           \\
                                                                \\
        size_t stack_depth = backtrace(stack_addrs, max_depth);         \\
        assert(stack_depth == 1); (void) stack_depth;                   \\
        char **stack_strings = backtrace_symbols(stack_addrs, max_depth); \\
                                                                        \\
        std::string stackStr = stack_strings[0];                        \\
        size_t start = stackStr.find('(');                              \\
        assert(start != std::string::npos);                             \\
        stackStr = stackStr.substr(start + 1);                          \\
        size_t end = stackStr.find('+');                                \\
        assert(end != std::string::npos);                               \\
        std::string funcSym = stackStr.substr(0, end);                  \\
        free(stack_strings);                                            \\
        func_type func = reinterpret_cast<func_type>(dlsym(RTLD_NEXT, funcSym.c_str())); \\
        assert(func);                                                   \\
        func;                                                           \\
    })" 3328 . 4723)))
          ("GTEST_USE_OWN_TR1_TUPLE" . ((number "0" 187 . 188)))
          ("__SWIFT_UNITTEST_H")
          ("private" . ((PUBLIC "public" 334 . 340)))
          ("ASSERT_CAST_AND_RETURN" (spp-arg-list ("expectType" "pointer") 1834 . 1855) . ((semantic-list "({                                                                  \\
        ASSERT_TRUE(pointer) << \"pointer is NULL\";                      \\
        expectType *castResult__ = dynamic_cast<expectType*>(pointer);  \\
        ASSERT_TRUE(castResult__) << \"Expect: \"#expectType << \" Actual: \" << typeid(*pointer).name(); \\
        castResult__;                                                   \\
    })" 1882 . 2284)))
          ("protected" . ((PUBLIC "public" 359 . 365)))
          )
)
    (semanticdb-table "dotest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("GTEST_USE_OWN_TR1_TUPLE" variable (:constant-flag t) nil [9 32])
            ("gmock/gmock.h" include nil nil [35 59])
            ("swift/common/Log.h" include nil nil [60 89])
            ("swift/test/test.h" include nil nil [90 118])
            ("swift/test/unittest.h" include nil nil [119 151])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [153 173])
            ("testing" variable (:type "int") nil [192 200])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [218 223])
                    ("" variable (:type ("SWIFT_TESTBASE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [224 239]))                  
                :type "int")
                nil [202 240])
            ("SWIFT_DEFAULT_LOG_CONF" variable
               (:constant-flag t
                :default-value "\"\\n\\
alog.rootLogger=FATAL, swiftAppender\\n                                   \\
alog.max_msg_len=4096\\n                                                 \\
alog.appender.swiftAppender=ConsoleAppender\\n                           \\
alog.appender.swiftAppender.fileName=swift.log\\n                        \\
alog.appender.swiftAppender.flush=true\\n                                \\
alog.appender.swiftAppender.max_file_size=1000\\n                         \\
alog.appender.swiftAppender.compress=true\\n                             \\
alog.appender.swiftAppender.layout=PatternLayout\\n                      \\
alog.appender.swiftAppender.layout.LogPattern=[%%d] [%%l] [%%t,%%F -- %%f():%%n] [%%m]\\n \\
alog.appender.swiftAppender.log_keep_count=100\\n                        \\
alog.logger.arpc=WARN\\n                                                 \\
alog.logger.swift.common.AccessLogger=ERROR\\n            \\
\""
                :type ("std::string" type (:type "class") nil nil))
                nil [241 1183])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1194 1203])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [1204 1216]))                  
                :type "int")
                nil [1185 1393]))          
      :file "dotest.cpp"
      :pointmax 1394
      :fsize 1393
      :lastmodtime '(23041 15238 787573 926000)
      :unmatched-syntax '((thing 191 . 192) (thing 174 . 179))
      :lexical-table 
        '(("GTEST_USE_OWN_TR1_TUPLE" . ((number "0" 33 . 34)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [24 33])
            ("Import" code nil nil [35 48])
            ("env" variable nil nil [49 66])
            ("env" code nil nil [68 101]))          
      :file "SConscript"
      :pointmax 103
      :fsize 102
      :lastmodtime '(22925 26700 309789 692000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift_1_7!swift!swift!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
