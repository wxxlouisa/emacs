;; Object internal/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "internal/"
  :tables
  (list
    (semanticdb-table "gtest-internal.h"
      :major-mode 'c++-mode
      :tags 
        '( ("GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_" variable (:constant-flag t) nil [1883 1929])
            ("gtest/internal/gtest-port.h" include nil nil [1931 1969])
            ("ctype.h" include (:system-flag t) nil [2161 2179])
            ("float.h" include (:system-flag t) nil [2180 2198])
            ("string.h" include (:system-flag t) nil [2199 2218])
            ("iomanip" include (:system-flag t) nil [2219 2237])
            ("limits" include (:system-flag t) nil [2238 2255])
            ("set" include (:system-flag t) nil [2256 2270])
            ("gtest/gtest-message.h" include nil nil [2272 2304])
            ("gtest/internal/gtest-string.h" include nil nil [2305 2345])
            ("gtest/internal/gtest-filepath.h" include nil nil [2346 2388])
            ("gtest/internal/gtest-type-util.h" include nil nil [2389 2432])
            ("GTEST_CONCAT_TOKEN_" variable (:constant-flag t) nil [2798 2817])
            ("GTEST_CONCAT_TOKEN_IMPL_" variable (:constant-flag t) nil [2871 2895])
            ("ProtocolMessage" type
               (:prototype t
                :type "class")
                nil [2918 2940])
            ("proto2" type
               (:members 
                  ( ("Message" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2960 2974]))                  
                :type "namespace")
                nil [2941 2976])
            ("testing" type
               (:members 
                  ( ("AssertionResult" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3025 3047])
                    ("Message" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3091 3105])
                    ("Test" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3163 3174])
                    ("TestInfo" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3224 3239])
                    ("TestPartResult" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3292 3313])
                    ("UnitTest" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [3357 3372])
                    ("PrintToString" function
                       (:prototype-flag t
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3478 3493]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3452 3494])
                    ("internal" type
                       (:members 
                          ( ("TraceInfo" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3518 3535])
                            ("ScopedTrace" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [3593 3611])
                            ("TestInfoImpl" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [3660 3679])
                            ("UnitTestImpl" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [3736 3755])
                            ("g_init_gtest_count" variable
                               (:typemodifiers ("extern")
                                :type "int")
                                (reparse-symbol namespacesubparts) [3876 3906])
                            ("kStackTraceMarker" variable
                               (:dereference 1
                                :typemodifiers ("extern")
                                :constant-flag t
                                :type "char")
                                (reparse-symbol namespacesubparts) [4001 4039])
                            ("IsNullLiteralHelper" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("p" variable
                                       (:pointer 1
                                        :type ("Secret" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4858 4868]))                                  
                                :type "char")
                                (reparse-symbol namespacesubparts) [4833 4869])
                            ("GTEST_IS_NULL_LITERAL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5283 5305])
                            ("AppendUserMessage" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("gtest_msg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5533 5562])
                                    ("user_msg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Message" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5563 5587]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5498 5588])
                            ("GTEST_ATTRIBUTE_UNUSED_" variable (:type "int") (reparse-symbol namespacesubparts) [6726 6750])
                            ("EqFailure" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("expected_expression" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [7554 7586])
                                    ("actual_expression" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [7624 7654])
                                    ("expected_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7692 7726])
                                    ("actual_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7764 7796])
                                    ("ignoring_case" variable (:type "bool") (reparse-symbol arg-sub-list) [7834 7853]))                                  
                                :type ("AssertionResult" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7528 7854])
                            ("GetBoolAssertionFailureMessage" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("assertion_result" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AssertionResult" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7991 8031])
                                    ("expression_text" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [8036 8064])
                                    ("actual_predicate_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [8069 8104])
                                    ("expected_predicate_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [8109 8146]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7943 8147])
                            ("FloatingPoint" type
                               (:template 
                                  ( ("RawType" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [9201 9208])
                                    ("Bits" variable (:type ("UInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9356 9366])
                                    ("kFractionBitCount" variable (:type "int") (reparse-symbol classsubparts) [9688 9706])
                                    ("kMaxUlps" variable
                                       (:typemodifiers ("static")
                                        :constant-flag t
                                        :default-value "4"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10728 10761])
                                    ("FloatingPoint" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("x" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("RawType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11108 11125]))                                          
                                        :type ("FloatingPoint" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11094 11144])
                                    ("ReinterpretBits" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("bits" variable
                                               (:constant-flag t
                                                :type ("Bits" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11329 11345]))                                          
                                        :type ("RawType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11298 11425])
                                    ("Infinity" function
                                       (:typemodifiers ("static")
                                        :type ("RawType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11502 11579])
                                    ("Max" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :type ("RawType" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11652 11673])
                                    ("bits" function
                                       (:constant-flag t
                                        :type ("Bits" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11753 11798])
                                    ("exponent_bits" function (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11849 11915])
                                    ("fraction_bits" function (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11966 12032])
                                    ("sign_bit" function (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12078 12135])
                                    ("is_nan" function (:type "bool") (reparse-symbol classsubparts) [12189 12395])
                                    ("AlmostEquals" function
                                       (:arguments 
                                          ( ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("FloatingPoint" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [12710 12735]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [12692 12993])
                                    ("private" label nil (reparse-symbol classsubparts) [12996 13004])
                                    ("FloatingPointUnion" type
                                       (:members 
                                          ( ("value_" variable (:type ("RawType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13105 13120])
                                            ("bits_" variable (:type ("Bits" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13160 13171]))                                          
                                        :type "union")
                                        (reparse-symbol classsubparts) [13074 13220])
                                    ("SignAndMagnitudeToBiased" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("sam" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Bits" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [13920 13936]))                                          
                                        :type ("Bits" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13883 14133])
                                    ("DistanceBetweenSignAndMagnitudeNumbers" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("sam1" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Bits" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14315 14332])
                                            ("sam2" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Bits" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [14386 14403]))                                          
                                        :type ("Bits" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [14264 14600])
                                    ("u_" variable (:type ("FloatingPointUnion" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14604 14626]))                                  )
                                (reparse-symbol namespacesubparts) [9150 14629])
                            ("Max" function
                               (:type "float"
                                :typemodifiers ("inline")
                                :parent "FloatingPoint")
                                (reparse-symbol namespacesubparts) [14740 14812])
                            ("Max" function
                               (:type "double"
                                :typemodifiers ("inline")
                                :parent "FloatingPoint")
                                (reparse-symbol namespacesubparts) [14813 14887])
                            ("Float" type
                               (:typedef ("FloatingPoint" type
                                     (:template-specifier 
                                        ( ("float" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [14975 15010])
                            ("Double" type
                               (:typedef ("FloatingPoint" type
                                     (:template-specifier 
                                        ( ("double" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [15011 15048])
                            ("TypeId" type
                               (:typedef ("void")
                                :pointer 1
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [15435 15462])
                            ("TypeIdHelper" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [15508 15515])
                                    ("dummy_" variable
                                       (:typemodifiers ("static")
                                        :type "bool")
                                        (reparse-symbol classsubparts) [15706 15725]))                                  )
                                (reparse-symbol namespacesubparts) [15464 15728])
                            ("TypeIdHelper::dummy_" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol namespacesubparts) [15730 15789])
                            ("GetTypeId" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("TypeId" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15990 16280])
                            ("GetTestTypeId" function
                               (:prototype-flag t
                                :type ("TypeId" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [16568 16591])
                            ("TestFactoryBase" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [16704 16711])
                                    ("TestFactoryBase" function
                                       (:destructor-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [16714 16743])
                                    ("CreateTest" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :pointer 1
                                        :typemodifiers ("virtual")
                                        :type ("Test" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16859 16890])
                                    ("protected" label nil (reparse-symbol classsubparts) [16893 16903])
                                    ("TestFactoryBase" function
                                       (:constructor-flag t
                                        :type ("TestFactoryBase" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16906 16926])
                                    ("private" label nil (reparse-symbol classsubparts) [16929 16937])
                                    ("GTEST_DISALLOW_COPY_AND_ASSIGN_" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("TestFactoryBase" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16972 16988]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [16940 16989]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [16679 16992])
                            ("TestFactoryImpl" type
                               (:template 
                                  ( ("TestClass" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [17181 17188])
                                    ("CreateTest" function
                                       (:pointer 1
                                        :typemodifiers ("virtual")
                                        :type ("Test" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17191 17243]))                                  
                                :superclasses 
                                  ( ("TestFactoryBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [17104 17246])
                            ("SetUpTestCaseFunc" function
                               (:prototype-flag t
                                :function-pointer t
                                :type "void")
                                (reparse-symbol namespacesubparts) [17840 17868])
                            ("TearDownTestCaseFunc" function
                               (:prototype-flag t
                                :function-pointer t
                                :type "void")
                                (reparse-symbol namespacesubparts) [17877 17908])
                            ("MakeAndRegisterTestInfo" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("test_case_name" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [18861 18888])
                                    ("name" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [18893 18910])
                                    ("type_param" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [18915 18938])
                                    ("value_param" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [18943 18967])
                                    ("fixture_class_id" variable (:type ("TypeId" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18972 18996])
                                    ("set_up_tc" variable (:type ("SetUpTestCaseFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19001 19029])
                                    ("tear_down_tc" variable (:type ("TearDownTestCaseFunc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19034 19068])
                                    ("factory" variable
                                       (:pointer 1
                                        :type ("TestFactoryBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19073 19098]))                                  
                                :type ("TestInfo" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [18822 19099])
                            ("SkipPrefix" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("prefix" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [19335 19354])
                                    ("pstr" variable
                                       (:pointer 2
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [19355 19373]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [19319 19374])
                            ("GetCurrentOsStackTraceExceptTop" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("unit_test" variable
                                       (:pointer 1
                                        :type ("UnitTest" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25030 25050])
                                    ("skip_count" variable (:type "int") (reparse-symbol arg-sub-list) [25051 25066]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [24981 25067])
                            ("AlwaysTrue" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol namespacesubparts) [25187 25205])
                            ("AlwaysFalse" function
                               (:typemodifiers ("inline")
                                :type "bool")
                                (reparse-symbol namespacesubparts) [25232 25283])
                            ("ConstCharPtr" variable (:type ("GTEST_API_" type
                                 (:prototype t
                                  :type "struct")
                                  nil nil)) (reparse-symbol namespacesubparts) [25443 25588])
                            ("Random" variable (:type ("GTEST_API_" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [25906 26294])
                            ("CompileAssertTypesEqual" type
                               (:template 
                                  ( ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [26425 26492])
                            ("CompileAssertTypesEqual" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("T" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [26494 26557])
                            ("RemoveReference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [26786 26801]))                                  )
                                (reparse-symbol namespacesubparts) [26739 26804])
                            ("RemoveReference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [26867 26882]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [26816 26885])
                            ("GTEST_REMOVE_REFERENCE_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [27014 27037])
                            ("RemoveConst" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [27310 27325]))                                  )
                                (reparse-symbol namespacesubparts) [27267 27328])
                            ("RemoveConst" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [27392 27407]))                                  
                                :template-specifier 
                                  ( ("T" type (:constant-flag t) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27340 27410])
                            ("GTEST_REMOVE_CONST_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [28223 28242])
                            ("GTEST_REMOVE_REFERENCE_AND_CONST_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [28362 28395])
                            ("AddReference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28678 28686]))                                  )
                                (reparse-symbol namespacesubparts) [28626 28689])
                            ("AddReference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28757 28765]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [28701 28768])
                            ("GTEST_ADD_REFERENCE_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [28894 28914])
                            ("GTEST_REFERENCE_TO_CONST_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [29272 29297])
                            ("ImplicitlyConvertible" type
                               (:template 
                                  ( ("From" type (:type "class") nil nil)
                                    ("To" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [29578 29586])
                                    ("MakeFrom" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :type ("From" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [29844 29867])
                                    ("Helper" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable (:type ("To" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30421 30424]))                                          
                                        :type "char")
                                        (reparse-symbol classsubparts) [30402 30425])
                                    ("public" label nil (reparse-symbol classsubparts) [30584 30591]))                                  )
                                (reparse-symbol namespacesubparts) [29509 31445])
                            ("ImplicitlyConvertible::value" variable
                               (:constant-flag t
                                :type "bool")
                                (reparse-symbol namespacesubparts) [31446 31534])
                            ("IsContainer" type
                               (:typedef ("int")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [33137 33161])
                            ("IsContainerTest" function
                               (:template 
                                  ( ("C" type (:type "class") nil nil))                                  
                                :type ("IsContainer" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [33209 33225])
                                    ("" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :type ("C::iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33254 33291])
                                    ("" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :type ("C::const_iterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [33321 33370]))                                  )
                                (reparse-symbol namespacesubparts) [33162 33387])
                            ("IsNotContainer" type
                               (:typedef ("char")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [33389 33417])
                            ("IsContainerTest" function
                               (:template 
                                  ( ("C" type (:type "class") nil nil))                                  
                                :type ("IsNotContainer" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable (:type "long") (reparse-symbol arg-sub-list) [33468 33485]))                                  )
                                (reparse-symbol namespacesubparts) [33418 33502])
                            ("EnableIf" type
                               (:template 
                                  ( ("bool" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [33769 33800])
                            ("EnableIf" type
                               (:type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [33836 33854]))                                  
                                :template-specifier 
                                  ( ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [33801 33857])
                            ("ArrayEq" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("lhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34152 34165])
                                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34166 34178])
                                    ("rhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34179 34192]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [34105 34193])
                            ("ArrayEq" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34294 34307])
                                    ("rhs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34308 34321]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [34240 34344])
                            ("ArrayEq" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("size_t" type nil nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("" variable
                                       (:constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34448 34461])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34466 34479]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [34384 34528])
                            ("ArrayEq" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("lhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34768 34781])
                                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34782 34794])
                                    ("rhs" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34795 34808]))                                  )
                                (reparse-symbol namespacesubparts) [34721 34934])
                            ("ArrayAwareFind" function
                               (:template 
                                  ( ("Iter" type (:type "class") nil nil)
                                    ("Element" type (:type "class") nil nil))                                  
                                :type ("Iter" type (:type "class") nil nil)
                                :arguments 
                                  ( ("begin" variable (:type ("Iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35126 35137])
                                    ("end" variable (:type ("Iter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35138 35147])
                                    ("elem" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Element" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35148 35168]))                                  )
                                (reparse-symbol namespacesubparts) [35063 35288])
                            ("CopyArray" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35528 35542])
                                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35543 35555])
                                    ("to" variable
                                       (:pointer 1
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35556 35562]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [35479 35563])
                            ("CopyArray" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35666 35680])
                                    ("to" variable
                                       (:pointer 1
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35681 35687]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [35610 35703])
                            ("CopyArray" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("size_t" type nil nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35809 35823])
                                    ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35828 35834]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [35743 35879])
                            ("CopyArray" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("from" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36123 36137])
                                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36138 36150])
                                    ("to" variable
                                       (:pointer 1
                                        :type ("U" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36151 36157]))                                  )
                                (reparse-symbol namespacesubparts) [36074 36246])
                            ("RelationToSource" type
                               (:members 
                                  ( ("kReference" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36371 36382])
                                    ("kCopy" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [36434 36537]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [36345 36538])
                            ("NativeArray" type
                               (:template 
                                  ( ("Element" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [37119 37126])
                                    ("value_type" type
                                       (:typedef ("Element" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [37164 37191])
                                    ("iterator" type
                                       (:typedef ("Element" type (:type "class") nil nil)
                                        :pointer 1
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [37194 37220])
                                    ("const_iterator" type
                                       (:typedef ("Element" type (:type "class") nil nil)
                                        :pointer 1
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [37223 37261])
                                    ("NativeArray" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("array" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Element" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37314 37335])
                                            ("count" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37336 37349])
                                            ("relation" variable (:type ("RelationToSource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37350 37376]))                                          
                                        :type ("NativeArray" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37302 37416])
                                    ("NativeArray" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("NativeArray" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37455 37478]))                                          
                                        :type ("NativeArray" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [37443 37542])
                                    ("NativeArray" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [37546 37839])
                                    ("size" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37877 37914])
                                    ("begin" function (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37917 37964])
                                    ("end" function (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37967 38020])
                                    ("==" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("rhs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("NativeArray" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [38039 38062]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [38023 38156])
                                    ("private" label nil (reparse-symbol classsubparts) [38159 38167])
                                    ("Init" function
                                       (:arguments 
                                          ( ("array" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("Element" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [38271 38292])
                                            ("a_size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38293 38307])
                                            ("relation" variable (:type ("RelationToSource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38308 38334]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [38261 38579])
                                    ("array_" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Element" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [38583 38605])
                                    ("size_" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38608 38621])
                                    ("relation_to_source_" variable (:type ("RelationToSource" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38624 38661])
                                    ("GTEST_DISALLOW_ASSIGN_" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("NativeArray" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38688 38700]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [38665 38701]))                                  )
                                (reparse-symbol namespacesubparts) [37070 38704]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3496 38707]))                  
                :type "namespace")
                nil [2978 38732])
            ("GTEST_MESSAGE_AT_" variable (:constant-flag t) nil [38764 38781])
            ("GTEST_MESSAGE_" variable (:constant-flag t) nil [38926 38940])
            ("GTEST_FATAL_FAILURE_" variable (:constant-flag t) nil [39036 39056])
            ("GTEST_NONFATAL_FAILURE_" variable (:constant-flag t) nil [39152 39175])
            ("GTEST_SUCCESS_" variable (:constant-flag t) nil [39267 39281])
            ("GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_" variable (:constant-flag t) nil [39529 39575])
            ("GTEST_TEST_THROW_" variable (:constant-flag t) nil [39654 39671])
            ("GTEST_TEST_NO_THROW_" variable (:constant-flag t) nil [40670 40690])
            ("GTEST_TEST_ANY_THROW_" variable (:constant-flag t) nil [41162 41183])
            ("GTEST_TEST_BOOLEAN_" variable (:constant-flag t) nil [41980 41999])
            ("GTEST_TEST_NO_FATAL_FAILURE_" variable (:constant-flag t) nil [42322 42350])
            ("GTEST_TEST_CLASS_NAME_" variable (:constant-flag t) nil [43039 43061])
            ("GTEST_TEST_" variable (:constant-flag t) nil [43174 43185]))          
      :file "gtest-internal.h"
      :pointmax 44146
      :fsize 44145
      :lastmodtime '(22242 20807 0 0)
      :unmatched-syntax '((thing 16557 . 16567) (thing 16557 . 16567) (thing 11085 . 11093) (thing 11085 . 11093) (thing 10058 . 10059) (thing 10058 . 10059) (thing 10025 . 10058) (thing 10025 . 10058) (thing 10024 . 10025) (thing 10024 . 10025) (thing 10022 . 10023) (thing 10022 . 10023) (thing 10005 . 10021) (thing 10005 . 10021) (thing 10000 . 10004) (thing 10000 . 10004) (thing 9994 . 9999) (thing 9994 . 9999) (thing 9987 . 9993) (thing 9987 . 9993) (thing 9945 . 9946) (thing 9945 . 9946) (thing 9922 . 9945) (thing 9922 . 9945) (thing 9920 . 9921) (thing 9920 . 9921) (thing 9919 . 9920) (thing 9919 . 9920) (thing 9915 . 9918) (thing 9915 . 9918) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9916 . 9917) (thing 9914 . 9915) (thing 9914 . 9915) (thing 9910 . 9914) (thing 9910 . 9914) (thing 9909 . 9910) (thing 9909 . 9910) (thing 9898 . 9909) (thing 9898 . 9909) (thing 9897 . 9898) (thing 9897 . 9898) (thing 9891 . 9892) (thing 9891 . 9892) (thing 9874 . 9890) (thing 9874 . 9890) (thing 9869 . 9873) (thing 9869 . 9873) (thing 9863 . 9868) (thing 9863 . 9868) (thing 9856 . 9862) (thing 9856 . 9862) (thing 9814 . 9815) (thing 9814 . 9815) (thing 9799 . 9814) (thing 9799 . 9814) (thing 9797 . 9798) (thing 9797 . 9798) (thing 9796 . 9797) (thing 9796 . 9797) (thing 9792 . 9795) (thing 9792 . 9795) (thing 9793 . 9794) (thing 9793 . 9794) (thing 9791 . 9792) (thing 9791 . 9792) (thing 9787 . 9791) (thing 9787 . 9791) (thing 9786 . 9787) (thing 9786 . 9787) (thing 9775 . 9786) (thing 9775 . 9786) (thing 9773 . 9774) (thing 9773 . 9774) (thing 9773 . 9774) (thing 9760 . 9772) (thing 9760 . 9772) (thing 9760 . 9772) (thing 9755 . 9759) (thing 9755 . 9759) (thing 9755 . 9759) (thing 9749 . 9754) (thing 9749 . 9754) (thing 9749 . 9754) (thing 9742 . 9748) (thing 9742 . 9748) (thing 9742 . 9748) (thing 9686 . 9687) (thing 9686 . 9687) (thing 9686 . 9687) (thing 9684 . 9685) (thing 9684 . 9685) (thing 9684 . 9685) (thing 9682 . 9683) (thing 9682 . 9683) (thing 9682 . 9683) (thing 9672 . 9681) (thing 9672 . 9681) (thing 9672 . 9681) (thing 9670 . 9671) (thing 9670 . 9671) (thing 9670 . 9671) (thing 9652 . 9669) (thing 9652 . 9669) (thing 9652 . 9669) (thing 9645 . 9651) (thing 9645 . 9651) (thing 9645 . 9651) (thing 9639 . 9644) (thing 9639 . 9644) (thing 9639 . 9644) (thing 9632 . 9638) (thing 9632 . 9638) (thing 9632 . 9638) (thing 9590 . 9591) (thing 9590 . 9591) (thing 9590 . 9591) (thing 9589 . 9590) (thing 9589 . 9590) (thing 9589 . 9590) (thing 9587 . 9588) (thing 9587 . 9588) (thing 9587 . 9588) (thing 9580 . 9586) (thing 9580 . 9586) (thing 9580 . 9586) (thing 9579 . 9580) (thing 9579 . 9580) (thing 9579 . 9580) (thing 9578 . 9579) (thing 9578 . 9579) (thing 9578 . 9579) (thing 9577 . 9578) (thing 9577 . 9578) (thing 9577 . 9578) (thing 9570 . 9577) (thing 9570 . 9577) (thing 9570 . 9577) (thing 9569 . 9570) (thing 9569 . 9570) (thing 9569 . 9570) (thing 9555 . 9569) (thing 9555 . 9569) (thing 9555 . 9569) (thing 9554 . 9555) (thing 9554 . 9555) (thing 9554 . 9555) (thing 9553 . 9554) (thing 9553 . 9554) (thing 9553 . 9554) (thing 9550 . 9553) (thing 9550 . 9553) (thing 9550 . 9553) (thing 9544 . 9545) (thing 9544 . 9545) (thing 9544 . 9545) (thing 9526 . 9543) (thing 9526 . 9543) (thing 9526 . 9543) (thing 9519 . 9525) (thing 9519 . 9525) (thing 9519 . 9525) (thing 9513 . 9518) (thing 9513 . 9518) (thing 9513 . 9518) (thing 9506 . 9512) (thing 9506 . 9512) (thing 9506 . 9512) (thing 9464 . 9465) (thing 9464 . 9465) (thing 9464 . 9465) (thing 9455 . 9464) (thing 9455 . 9464) (thing 9455 . 9464) (thing 9449 . 9455) (thing 9449 . 9455) (thing 9449 . 9455) (thing 9448 . 9449) (thing 9448 . 9449) (thing 9448 . 9449) (thing 9447 . 9448) (thing 9447 . 9448) (thing 9447 . 9448) (thing 9445 . 9446) (thing 9445 . 9446) (thing 9445 . 9446) (thing 9435 . 9444) (thing 9435 . 9444) (thing 9435 . 9444) (thing 9428 . 9434) (thing 9428 . 9434) (thing 9428 . 9434) (thing 9422 . 9427) (thing 9422 . 9427) (thing 9422 . 9427) (thing 9415 . 9421) (thing 9415 . 9421) (thing 9415 . 9421) (thing 9355 . 9356) (thing 9355 . 9356) (thing 9355 . 9356) (thing 9354 . 9355) (thing 9354 . 9355) (thing 9354 . 9355) (thing 9353 . 9354) (thing 9353 . 9354) (thing 9353 . 9354) (thing 9344 . 9353) (thing 9344 . 9353) (thing 9344 . 9353) (thing 9338 . 9344) (thing 9338 . 9344) (thing 9338 . 9344) (thing 9337 . 9338) (thing 9337 . 9338) (thing 9337 . 9338) (thing 9325 . 9337) (thing 9325 . 9337) (thing 9325 . 9337) (thing 9316 . 9324) (thing 9316 . 9324) (thing 9316 . 9324) (thing 9308 . 9315) (thing 9308 . 9315) (thing 9308 . 9315) (thing 7932 . 7942) (thing 7932 . 7942) (thing 7932 . 7942) (thing 7517 . 7527) (thing 7517 . 7527) (thing 7517 . 7527) (thing 7517 . 7527) (thing 6294 . 6725) (thing 6294 . 6725) (thing 6294 . 6725) (thing 6294 . 6725) (thing 6282 . 6293) (thing 6282 . 6293) (thing 6282 . 6293) (thing 6282 . 6293) (thing 6271 . 6281) (thing 6271 . 6281) (thing 6271 . 6281) (thing 6271 . 6281) (thing 6265 . 6270) (thing 6265 . 6270) (thing 6265 . 6270) (thing 6265 . 6270) (thing 5487 . 5497) (thing 5487 . 5497) (thing 5487 . 5497) (thing 5487 . 5497) (thing 4905 . 4906) (thing 4905 . 4906) (thing 4905 . 4906) (thing 4905 . 4906) (thing 4902 . 4905) (thing 4902 . 4905) (thing 4902 . 4905) (thing 4902 . 4905) (thing 4875 . 4902) (thing 4875 . 4902) (thing 4875 . 4902) (thing 4875 . 4902) (thing 4870 . 4874) (thing 4870 . 4874) (thing 4870 . 4874) (thing 4870 . 4874) (thing 3990 . 4000) (thing 3990 . 4000) (thing 3990 . 4000) (thing 3990 . 4000) (thing 3865 . 3875) (thing 3865 . 3875) (thing 3865 . 3875) (thing 3865 . 3875) (thing 3451 . 3452) (thing 3451 . 3452) (thing 3451 . 3452) (thing 3451 . 3452) (thing 3450 . 3451) (thing 3450 . 3451) (thing 3450 . 3451) (thing 3450 . 3451) (thing 3448 . 3449) (thing 3448 . 3449) (thing 3448 . 3449) (thing 3448 . 3449) (thing 3447 . 3448) (thing 3447 . 3448) (thing 3447 . 3448) (thing 3447 . 3448) (thing 3438 . 3446) (thing 3438 . 3446) (thing 3438 . 3446) (thing 3438 . 3446) (thing 3437 . 3438) (thing 3437 . 3438) (thing 3437 . 3438) (thing 3437 . 3438) (thing 3428 . 3436) (thing 3428 . 3436) (thing 3428 . 3436) (thing 3428 . 3436) (thing 17832 . 17839) (thing 17832 . 17839) (thing 17869 . 17876) (thing 17869 . 17876) (thing 18811 . 18821) (thing 18811 . 18821) (thing 19308 . 19318) (thing 19308 . 19318) (thing 24970 . 24980) (thing 24970 . 24980) (thing 25176 . 25186) (thing 25176 . 25186) (thing 27633 . 27641) (thing 27633 . 27641) (thing 27642 . 27643) (thing 27642 . 27643) (thing 27643 . 27651) (thing 27643 . 27651) (thing 27652 . 27653) (thing 27652 . 27653) (thing 27653 . 27654) (thing 27653 . 27654) (thing 27655 . 27661) (thing 27655 . 27661) (thing 27662 . 27663) (thing 27662 . 27663) (thing 27663 . 27664) (thing 27663 . 27664) (thing 27665 . 27671) (thing 27665 . 27671) (thing 27672 . 27683) (thing 27672 . 27683) (thing 27683 . 27684) (thing 27683 . 27684) (thing 27684 . 27689) (thing 27684 . 27689) (thing 27690 . 27691) (thing 27690 . 27691) (thing 27691 . 27694) (thing 27691 . 27694) (thing 27694 . 27695) (thing 27694 . 27695) (thing 27696 . 27748) (thing 27696 . 27748) (thing 27748 . 27749) (thing 27748 . 27749) (thing 28670 . 28677) (thing 28670 . 28677) (thing 28749 . 28756) (thing 28749 . 28756) (thing 30428 . 30434) (thing 30428 . 30434) (thing 30435 . 30439) (thing 30435 . 30439) (thing 30440 . 30454) (thing 30440 . 30454) (thing 30454 . 30457) (thing 30454 . 30457) (thing 30457 . 30458) (thing 30457 . 30458) (thing 31335 . 31341) (thing 31335 . 31341) (thing 31342 . 31347) (thing 31342 . 31347) (thing 31348 . 31352) (thing 31348 . 31352) (thing 31353 . 31358) (thing 31353 . 31358) (thing 31359 . 31360) (thing 31359 . 31360) (thing 31367 . 31373) (thing 31367 . 31373) (thing 31373 . 31416) (thing 31373 . 31416) (thing 31417 . 31418) (thing 31417 . 31418) (thing 31418 . 31419) (thing 31418 . 31419) (thing 31420 . 31421) (thing 31420 . 31421) (thing 31421 . 31422) (thing 31421 . 31422) (thing 31690 . 31698) (thing 31690 . 31698) (thing 31699 . 31700) (thing 31699 . 31700) (thing 31700 . 31708) (thing 31700 . 31708) (thing 31709 . 31710) (thing 31709 . 31710) (thing 31710 . 31711) (thing 31710 . 31711) (thing 31712 . 31718) (thing 31712 . 31718) (thing 31719 . 31737) (thing 31719 . 31737) (thing 31742 . 31743) (thing 31742 . 31743) (thing 31744 . 31750) (thing 31744 . 31750) (thing 31751 . 31764) (thing 31751 . 31764) (thing 31764 . 31765) (thing 31764 . 31765) (thing 31768 . 31789) (thing 31768 . 31789) (thing 31789 . 31790) (thing 31789 . 31790) (thing 31790 . 31795) (thing 31790 . 31795) (thing 31796 . 31797) (thing 31796 . 31797) (thing 31797 . 31798) (thing 31797 . 31798) (thing 31798 . 31799) (thing 31798 . 31799) (thing 31800 . 31805) (thing 31800 . 31805) (thing 31806 . 31807) (thing 31806 . 31807) (thing 31807 . 31808) (thing 31807 . 31808) (thing 31808 . 31823) (thing 31808 . 31823) (thing 31823 . 31824) (thing 31823 . 31824) (thing 31824 . 31825) (thing 31824 . 31825) (thing 31825 . 31826) (thing 31825 . 31826) (thing 31826 . 31827) (thing 31826 . 31827) (thing 31827 . 31832) (thing 31827 . 31832) (thing 31833 . 31834) (thing 31833 . 31834) (thing 31834 . 31835) (thing 31834 . 31835) (thing 31838 . 31859) (thing 31838 . 31859) (thing 31859 . 31860) (thing 31859 . 31860) (thing 31860 . 31865) (thing 31860 . 31865) (thing 31866 . 31867) (thing 31866 . 31867) (thing 31867 . 31868) (thing 31867 . 31868) (thing 31868 . 31869) (thing 31868 . 31869) (thing 31870 . 31875) (thing 31870 . 31875) (thing 31876 . 31877) (thing 31876 . 31877) (thing 31877 . 31878) (thing 31877 . 31878) (thing 31878 . 31884) (thing 31878 . 31884) (thing 31884 . 31885) (thing 31884 . 31885) (thing 31885 . 31886) (thing 31885 . 31886) (thing 31886 . 31893) (thing 31886 . 31893) (thing 31893 . 31894) (thing 31893 . 31894) (thing 31894 . 31895) (thing 31894 . 31895) (thing 31895 . 31896) (thing 31895 . 31896) (thing 31896 . 31897) (thing 31896 . 31897) (thing 31897 . 31902) (thing 31897 . 31902) (thing 31902 . 31903) (thing 31902 . 31903) (thing 31904 . 31907) (thing 31907 . 31908) (thing 34455 . 34461) (thing 34461 . 34464) (thing 34473 . 34479) (thing 34479 . 34482) (thing 35816 . 35823) (thing 35823 . 35826) (thing 35829 . 35834) (thing 35834 . 35837))
      :lexical-table 
        '(("GTEST_NONFATAL_FAILURE_" (spp-arg-list ("message") 39175 . 39184) . ((symbol "GTEST_MESSAGE_" 39189 . 39203) (semantic-list "(message, ::testing::TestPartResult::kNonFatalFailure)" 39203 . 39257)))
          ("GTEST_TEST_CLASS_NAME_" (spp-arg-list ("test_case_name" "test_name") 43061 . 43088) . ((spp-symbol-merge ((spp-symbol-merge ((spp-symbol-merge ((symbol "test_case_name" 43093 . 43107) (symbol "_" 43109 . 43110)) 43093 . 43110) (symbol "test_name" 43112 . 43121)) 43093 . 43121) (symbol "_Test" 43123 . 43128)) 43093 . 43128)))
          ("GTEST_REMOVE_CONST_" (spp-arg-list ("T") 28242 . 28245) . 
              ((TYPENAME "typename" 28252 . 28260) (punctuation ":" 28261 . 28262) (punctuation ":" 28262 . 28263) (symbol "testing" 28263 . 28270) (punctuation ":" 28270 . 28271) (punctuation ":" 28271 . 28272) (symbol "internal" 28272 . 28280) (punctuation ":" 28280 . 28281) (punctuation ":" 28281 . 28282) (symbol "RemoveConst" 28282 . 28293) (punctuation "<" 28293 . 28294) (symbol "T" 28294 . 28295) (punctuation ">" 28295 . 28296) (punctuation ":" 28296 . 28297) (punctuation ":" 28297 . 28298) (symbol "type" 28298 . 28302)))
          ("GTEST_MESSAGE_AT_" (spp-arg-list ("file" "line" "message" "result_type") 38781 . 38815) . 
              ((punctuation ":" 38820 . 38821) (punctuation ":" 38821 . 38822) (symbol "testing" 38822 . 38829) (punctuation ":" 38829 . 38830) (punctuation ":" 38830 . 38831) (symbol "internal" 38831 . 38839) (punctuation ":" 38839 . 38840) (punctuation ":" 38840 . 38841) (symbol "AssertHelper" 38841 . 38853) (semantic-list "(result_type, file, line, message)" 38853 . 38887) (punctuation "=" 38894 . 38895) (punctuation ":" 38896 . 38897) (punctuation ":" 38897 . 38898) (symbol "testing" 38898 . 38905) (punctuation ":" 38905 . 38906) (punctuation ":" 38906 . 38907) (symbol "Message" 38907 . 38914) (semantic-list "()" 38914 . 38916)))
          ("GTEST_MESSAGE_" (spp-arg-list ("message" "result_type") 38940 . 38962) . ((symbol "GTEST_MESSAGE_AT_" 38967 . 38984) (semantic-list "(__FILE__, __LINE__, message, result_type)" 38984 . 39026)))
          ("GTEST_FATAL_FAILURE_" (spp-arg-list ("message") 39056 . 39065) . 
              ((RETURN "return" 39070 . 39076) (symbol "GTEST_MESSAGE_" 39077 . 39091) (semantic-list "(message, ::testing::TestPartResult::kFatalFailure)" 39091 . 39142)))
          ("GTEST_TEST_ANY_THROW_" (spp-arg-list ("statement" "fail") 41183 . 41200) . 
              ((symbol "GTEST_AMBIGUOUS_ELSE_BLOCKER_" 41205 . 41234) (IF "if" 41239 . 41241) (semantic-list "(::testing::internal::AlwaysTrue())" 41242 . 41277) (semantic-list "{ \\
    bool gtest_caught_any = false; \\
    try { \\
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\
    } \\
    catch (...) { \\
      gtest_caught_any = true; \\
    } \\
    if (!gtest_caught_any) { \\
      goto GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__); \\
    } \\
  }" 41278 . 41580) (ELSE "else" 41581 . 41585) (symbol "GTEST_CONCAT_TOKEN_" 41592 . 41611) (semantic-list "(gtest_label_testanythrow_, __LINE__)" 41611 . 41648) (punctuation ":" 41648 . 41649) (symbol "fail" 41658 . 41662) (semantic-list "(\"Expected: \" #statement \" throws an exception.\\n\" \\
           \"  Actual: it doesn't.\")" 41662 . 41750)))
          ("GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_" (spp-arg-list ("statement") 39575 . 39586) . 
              ((IF "if" 39591 . 39593) (semantic-list "(::testing::internal::AlwaysTrue())" 39594 . 39629) (semantic-list "{ statement; }" 39630 . 39644)))
          ("GTEST_TEST_THROW_" (spp-arg-list ("statement" "expected_exception" "fail") 39671 . 39708) . 
              ((symbol "GTEST_AMBIGUOUS_ELSE_BLOCKER_" 39713 . 39742) (IF "if" 39747 . 39749) (semantic-list "(::testing::internal::ConstCharPtr gtest_msg = \"\")" 39750 . 39800) (semantic-list "{ \\
    bool gtest_caught_expected = false; \\
    try { \\
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\
    } \\
    catch (expected_exception const&) { \\
      gtest_caught_expected = true; \\
    } \\
    catch (...) { \\
      gtest_msg.value = \\
          \"Expected: \" #statement \" throws an exception of type \" \\
          #expected_exception \".\\n  Actual: it throws a different type.\"; \\
      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\
    } \\
    if (!gtest_caught_expected) { \\
      gtest_msg.value = \\
          \"Expected: \" #statement \" throws an exception of type \" \\
          #expected_exception \".\\n  Actual: it throws nothing.\"; \\
      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\
    } \\
  }" 39801 . 40564) (ELSE "else" 40565 . 40569) (symbol "GTEST_CONCAT_TOKEN_" 40576 . 40595) (semantic-list "(gtest_label_testthrow_, __LINE__)" 40595 . 40629) (punctuation ":" 40629 . 40630) (symbol "fail" 40639 . 40643) (semantic-list "(gtest_msg.value)" 40643 . 40660)))
          ("GTEST_TEST_BOOLEAN_" (spp-arg-list ("expression" "text" "actual" "expected" "fail") 41999 . 42041) . 
              ((symbol "GTEST_AMBIGUOUS_ELSE_BLOCKER_" 42046 . 42075) (IF "if" 42080 . 42082) (semantic-list "(const ::testing::AssertionResult gtest_ar_ = \\
      ::testing::AssertionResult(expression))" 42083 . 42176) (punctuation ";" 42183 . 42184) (ELSE "else" 42189 . 42193) (symbol "fail" 42200 . 42204) (semantic-list "(::testing::internal::GetBoolAssertionFailureMessage(\\
        gtest_ar_, text, #actual, #expected).c_str())" 42204 . 42312)))
          ("GTEST_TEST_NO_FATAL_FAILURE_" (spp-arg-list ("statement" "fail") 42350 . 42367) . 
              ((symbol "GTEST_AMBIGUOUS_ELSE_BLOCKER_" 42372 . 42401) (IF "if" 42406 . 42408) (semantic-list "(::testing::internal::AlwaysTrue())" 42409 . 42444) (semantic-list "{ \\
    ::testing::internal::HasNewFatalFailureHelper gtest_fatal_failure_checker; \\
    GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\
    if (gtest_fatal_failure_checker.has_new_fatal_failure()) { \\
      goto GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__); \\
    } \\
  }" 42445 . 42741) (ELSE "else" 42742 . 42746) (symbol "GTEST_CONCAT_TOKEN_" 42753 . 42772) (semantic-list "(gtest_label_testnofatal_, __LINE__)" 42772 . 42808) (punctuation ":" 42808 . 42809) (symbol "fail" 42818 . 42822) (semantic-list "(\"Expected: \" #statement \" doesn't generate new fatal \" \\
           \"failures in the current thread.\\n\" \\
           \"  Actual: it does.\")" 42822 . 42961)))
          ("GTEST_CONCAT_TOKEN_" (spp-arg-list ("foo" "bar") 2817 . 2827) . ((symbol "GTEST_CONCAT_TOKEN_IMPL_" 2828 . 2852) (semantic-list "(foo, bar)" 2852 . 2862)))
          ("GTEST_CONCAT_TOKEN_IMPL_" (spp-arg-list ("foo" "bar") 2895 . 2905) . ((spp-symbol-merge ((symbol "foo" 2906 . 2909) (symbol "bar" 2913 . 2916)) 2906 . 2916)))
          ("GTEST_ADD_REFERENCE_" (spp-arg-list ("T") 28914 . 28917) . 
              ((TYPENAME "typename" 28924 . 28932) (punctuation ":" 28933 . 28934) (punctuation ":" 28934 . 28935) (symbol "testing" 28935 . 28942) (punctuation ":" 28942 . 28943) (punctuation ":" 28943 . 28944) (symbol "internal" 28944 . 28952) (punctuation ":" 28952 . 28953) (punctuation ":" 28953 . 28954) (symbol "AddReference" 28954 . 28966) (punctuation "<" 28966 . 28967) (symbol "T" 28967 . 28968) (punctuation ">" 28968 . 28969) (punctuation ":" 28969 . 28970) (punctuation ":" 28970 . 28971) (symbol "type" 28971 . 28975)))
          ("GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_")
          ("GTEST_REFERENCE_TO_CONST_" (spp-arg-list ("T") 29297 . 29300) . ((symbol "GTEST_ADD_REFERENCE_" 29307 . 29327) (semantic-list "(const GTEST_REMOVE_REFERENCE_(T))" 29327 . 29361)))
          ("GTEST_REMOVE_REFERENCE_" (spp-arg-list ("T") 27037 . 27040) . 
              ((TYPENAME "typename" 27047 . 27055) (punctuation ":" 27056 . 27057) (punctuation ":" 27057 . 27058) (symbol "testing" 27058 . 27065) (punctuation ":" 27065 . 27066) (punctuation ":" 27066 . 27067) (symbol "internal" 27067 . 27075) (punctuation ":" 27075 . 27076) (punctuation ":" 27076 . 27077) (symbol "RemoveReference" 27077 . 27092) (punctuation "<" 27092 . 27093) (symbol "T" 27093 . 27094) (punctuation ">" 27094 . 27095) (punctuation ":" 27095 . 27096) (punctuation ":" 27096 . 27097) (symbol "type" 27097 . 27101)))
          ("GTEST_SUCCESS_" (spp-arg-list ("message") 39281 . 39290) . ((symbol "GTEST_MESSAGE_" 39295 . 39309) (semantic-list "(message, ::testing::TestPartResult::kSuccess)" 39309 . 39355)))
          ("GTEST_IS_NULL_LITERAL_" (spp-arg-list ("x") 5305 . 5308) . ((semantic-list "(sizeof(::testing::internal::IsNullLiteralHelper(x)) == 1)" 5315 . 5373)))
          ("GTEST_TEST_" (spp-arg-list ("test_case_name" "test_name" "parent_class" "parent_id") 43185 . 43237) . 
              ((CLASS "class" 43239 . 43244) (symbol "GTEST_TEST_CLASS_NAME_" 43245 . 43267) (semantic-list "(test_case_name, test_name)" 43267 . 43294) (punctuation ":" 43295 . 43296) (PUBLIC "public" 43297 . 43303) (symbol "parent_class" 43304 . 43316) (semantic-list "{\\
 public:\\
  GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() {}\\
 private:\\
  virtual void TestBody();\\
  static ::testing::TestInfo* const test_info_ GTEST_ATTRIBUTE_UNUSED_;\\
  GTEST_DISALLOW_COPY_AND_ASSIGN_(\\
      GTEST_TEST_CLASS_NAME_(test_case_name, test_name));\\
}" 43317 . 43596) (punctuation ";" 43596 . 43597) (punctuation ":" 43601 . 43602) (punctuation ":" 43602 . 43603) (symbol "testing" 43603 . 43610) (punctuation ":" 43610 . 43611) (punctuation ":" 43611 . 43612) (symbol "TestInfo" 43612 . 43620) (punctuation "*" 43620 . 43621) (CONST "const" 43622 . 43627) (symbol "GTEST_TEST_CLASS_NAME_" 43628 . 43650) (semantic-list "(test_case_name, test_name)" 43650 . 43677) (punctuation ":" 43681 . 43682) (punctuation ":" 43682 . 43683) (symbol "test_info_" 43683 . 43693) (punctuation "=" 43694 . 43695) (punctuation ":" 43701 . 43702) (punctuation ":" 43702 . 43703) (symbol "testing" 43703 . 43710) (punctuation ":" 43710 . 43711) (punctuation ":" 43711 . 43712) (symbol "internal" 43712 . 43720) (punctuation ":" 43720 . 43721) (punctuation ":" 43721 . 43722) (symbol "MakeAndRegisterTestInfo" 43722 . 43745) (semantic-list "(\\
        #test_case_name, #test_name, NULL, NULL, \\
        (parent_id), \\
        parent_class::SetUpTestCase, \\
        parent_class::TearDownTestCase, \\
        new ::testing::internal::TestFactoryImpl<\\
            GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>)" 43745 . 44017) (punctuation ";" 44017 . 44018) (VOID "void" 44020 . 44024) (symbol "GTEST_TEST_CLASS_NAME_" 44025 . 44047) (semantic-list "(test_case_name, test_name)" 44047 . 44074) (punctuation ":" 44074 . 44075) (punctuation ":" 44075 . 44076) (symbol "TestBody" 44076 . 44084) (semantic-list "()" 44084 . 44086)))
          ("GTEST_REMOVE_REFERENCE_AND_CONST_" (spp-arg-list ("T") 28395 . 28398) . ((symbol "GTEST_REMOVE_CONST_" 28405 . 28424) (semantic-list "(GTEST_REMOVE_REFERENCE_(T))" 28424 . 28452)))
          ("GTEST_TEST_NO_THROW_" (spp-arg-list ("statement" "fail") 40690 . 40707) . 
              ((symbol "GTEST_AMBIGUOUS_ELSE_BLOCKER_" 40712 . 40741) (IF "if" 40746 . 40748) (semantic-list "(::testing::internal::AlwaysTrue())" 40749 . 40784) (semantic-list "{ \\
    try { \\
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\
    } \\
    catch (...) { \\
      goto GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__); \\
    } \\
  }" 40785 . 40977) (ELSE "else" 40978 . 40982) (symbol "GTEST_CONCAT_TOKEN_" 40989 . 41008) (semantic-list "(gtest_label_testnothrow_, __LINE__)" 41008 . 41044) (punctuation ":" 41044 . 41045) (symbol "fail" 41054 . 41058) (semantic-list "(\"Expected: \" #statement \" doesn't throw an exception.\\n\" \\
           \"  Actual: it throws.\")" 41058 . 41152)))
          )
))
  :file "!ssd!sdd!git!turing_be!basic_ops_compile!_external!usr!local!include!gtest!internal!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
