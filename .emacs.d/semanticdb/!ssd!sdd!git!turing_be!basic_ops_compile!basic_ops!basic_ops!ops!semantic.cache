;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "OpDefs.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/op.h" include nil nil [1 42])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [43 97])
            ("tensorflow/core/framework/common_shape_fns.h" include nil nil [98 153])
            ("tensorflow/core/lib/core/errors.h" include nil nil [154 198])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [200 227])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [1059 1095])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [1307 1339])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [1452 1478])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [1578 1616])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [1985 2021])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [2137 2162])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [2881 2913])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [3044 3077])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [3328 3348])
                            ("SetShapeFn" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [3488 3656])
                            ("SetShapeFn" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [3826 3955])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [4223 4249])
                            ("Output" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol namespacesubparts) [4476 4502]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [246 4505]))                  
                :type "namespace")
                nil [229 4507]))          
      :file "OpDefs.cpp"
      :pointmax 4508
      :unmatched-syntax '((thing 1907 . 1932) (thing 1907 . 1932) (thing 1908 . 1931) (thing 1908 . 1931) (thing 1902 . 1907) (thing 1902 . 1907) (thing 1901 . 1902) (thing 1901 . 1902) (thing 1855 . 1896) (thing 1855 . 1896) (thing 1856 . 1895) (thing 1856 . 1895) (thing 1851 . 1855) (thing 1851 . 1855) (thing 1850 . 1851) (thing 1850 . 1851) (thing 1816 . 1845) (thing 1816 . 1845) (thing 1817 . 1844) (thing 1817 . 1844) (thing 1812 . 1816) (thing 1812 . 1816) (thing 1811 . 1812) (thing 1811 . 1812) (thing 1774 . 1806) (thing 1774 . 1806) (thing 1775 . 1805) (thing 1775 . 1805) (thing 1770 . 1774) (thing 1770 . 1774) (thing 1769 . 1770) (thing 1769 . 1770) (thing 1741 . 1764) (thing 1741 . 1764) (thing 1742 . 1763) (thing 1742 . 1763) (thing 1737 . 1741) (thing 1737 . 1741) (thing 1736 . 1737) (thing 1736 . 1737) (thing 1702 . 1731) (thing 1702 . 1731) (thing 1703 . 1730) (thing 1703 . 1730) (thing 1698 . 1702) (thing 1698 . 1702) (thing 1697 . 1698) (thing 1697 . 1698) (thing 1663 . 1692) (thing 1663 . 1692) (thing 1664 . 1691) (thing 1664 . 1691) (thing 1659 . 1663) (thing 1659 . 1663) (thing 1658 . 1659) (thing 1658 . 1659) (thing 1629 . 1653) (thing 1629 . 1653) (thing 1630 . 1652) (thing 1630 . 1652) (thing 1618 . 1629) (thing 1618 . 1629) (thing 1585 . 1614) (thing 1585 . 1614) (thing 1577 . 1578) (thing 1577 . 1578) (thing 1554 . 1572) (thing 1554 . 1572) (thing 1555 . 1571) (thing 1555 . 1571) (thing 1549 . 1554) (thing 1549 . 1554) (thing 1548 . 1549) (thing 1548 . 1549) (thing 1520 . 1543) (thing 1520 . 1543) (thing 1521 . 1542) (thing 1521 . 1542) (thing 1516 . 1520) (thing 1516 . 1520) (thing 1515 . 1516) (thing 1515 . 1516) (thing 1491 . 1510) (thing 1491 . 1510) (thing 1492 . 1509) (thing 1492 . 1509) (thing 1480 . 1491) (thing 1480 . 1491) (thing 1459 . 1476) (thing 1459 . 1476) (thing 1451 . 1452) (thing 1451 . 1452) (thing 1424 . 1446) (thing 1424 . 1446) (thing 1425 . 1445) (thing 1425 . 1445) (thing 1419 . 1424) (thing 1419 . 1424) (thing 1418 . 1419) (thing 1418 . 1419) (thing 1398 . 1413) (thing 1398 . 1413) (thing 1399 . 1412) (thing 1399 . 1412) (thing 1394 . 1398) (thing 1394 . 1398) (thing 1393 . 1394) (thing 1393 . 1394) (thing 1369 . 1388) (thing 1369 . 1388) (thing 1370 . 1387) (thing 1370 . 1387) (thing 1358 . 1369) (thing 1358 . 1369) (thing 1314 . 1337) (thing 1314 . 1337) (thing 1306 . 1307) (thing 1306 . 1307) (thing 1257 . 1287) (thing 1257 . 1287) (thing 1258 . 1286) (thing 1258 . 1286) (thing 1252 . 1257) (thing 1252 . 1257) (thing 1251 . 1252) (thing 1251 . 1252) (thing 1221 . 1246) (thing 1221 . 1246) (thing 1222 . 1245) (thing 1222 . 1245) (thing 1217 . 1221) (thing 1217 . 1221) (thing 1216 . 1217) (thing 1216 . 1217) (thing 1170 . 1211) (thing 1170 . 1211) (thing 1171 . 1210) (thing 1171 . 1210) (thing 1166 . 1170) (thing 1166 . 1170) (thing 1165 . 1166) (thing 1165 . 1166) (thing 1141 . 1160) (thing 1141 . 1160) (thing 1142 . 1159) (thing 1142 . 1159) (thing 1130 . 1141) (thing 1130 . 1141) (thing 1066 . 1093) (thing 1066 . 1093) (thing 1058 . 1059) (thing 1058 . 1059) (thing 989 . 1015) (thing 989 . 1015) (thing 990 . 1014) (thing 990 . 1014) (thing 984 . 989) (thing 984 . 989) (thing 983 . 984) (thing 983 . 984) (thing 895 . 920) (thing 895 . 920) (thing 896 . 919) (thing 896 . 919) (thing 890 . 895) (thing 890 . 895) (thing 889 . 890) (thing 889 . 890) (thing 818 . 869) (thing 818 . 869) (thing 819 . 868) (thing 819 . 868) (thing 814 . 818) (thing 814 . 818) (thing 813 . 814) (thing 813 . 814) (thing 745 . 786) (thing 745 . 786) (thing 746 . 785) (thing 746 . 785) (thing 741 . 745) (thing 741 . 745) (thing 740 . 741) (thing 740 . 741) (thing 669 . 718) (thing 669 . 718) (thing 670 . 717) (thing 670 . 717) (thing 665 . 669) (thing 665 . 669) (thing 664 . 665) (thing 664 . 665) (thing 596 . 635) (thing 596 . 635) (thing 597 . 634) (thing 597 . 634) (thing 592 . 596) (thing 592 . 596) (thing 591 . 592) (thing 591 . 592) (thing 528 . 558) (thing 528 . 558) (thing 529 . 557) (thing 529 . 557) (thing 524 . 528) (thing 524 . 528) (thing 523 . 524) (thing 523 . 524) (thing 449 . 485) (thing 449 . 485) (thing 450 . 484) (thing 450 . 484) (thing 445 . 449) (thing 445 . 449) (thing 444 . 445) (thing 444 . 445) (thing 373 . 415) (thing 373 . 415) (thing 374 . 414) (thing 374 . 414) (thing 369 . 373) (thing 369 . 373) (thing 368 . 369) (thing 368 . 369) (thing 300 . 330) (thing 300 . 330) (thing 301 . 329) (thing 301 . 329) (thing 296 . 300) (thing 296 . 300) (thing 295 . 296) (thing 295 . 296) (thing 277 . 290) (thing 277 . 290) (thing 278 . 289) (thing 278 . 289) (thing 266 . 277) (thing 266 . 277) (thing 1937 . 1938) (thing 1937 . 1938) (thing 1938 . 1944) (thing 1938 . 1944) (thing 1944 . 1979) (thing 1944 . 1979) (thing 1945 . 1978) (thing 1945 . 1978) (thing 1984 . 1985) (thing 1984 . 1985) (thing 1992 . 2019) (thing 1992 . 2019) (thing 2023 . 2034) (thing 2023 . 2034) (thing 2034 . 2051) (thing 2034 . 2051) (thing 2035 . 2050) (thing 2035 . 2050) (thing 2056 . 2057) (thing 2056 . 2057) (thing 2057 . 2061) (thing 2057 . 2061) (thing 2061 . 2102) (thing 2061 . 2102) (thing 2062 . 2101) (thing 2062 . 2101) (thing 2107 . 2108) (thing 2107 . 2108) (thing 2108 . 2113) (thing 2108 . 2113) (thing 2113 . 2131) (thing 2113 . 2131) (thing 2114 . 2130) (thing 2114 . 2130) (thing 2136 . 2137) (thing 2136 . 2137) (thing 2144 . 2160) (thing 2144 . 2160) (thing 2164 . 2175) (thing 2164 . 2175) (thing 2175 . 2197) (thing 2175 . 2190) (thing 2176 . 2196) (thing 2176 . 2189) (thing 2195 . 2196) (thing 2196 . 2200) (thing 2197 . 2198) (thing 2198 . 2203) (thing 2200 . 2230) (thing 2201 . 2229) (thing 2203 . 2225) (thing 2204 . 2224) (thing 2225 . 2226) (thing 2233 . 2260) (thing 2256 . 2257) (thing 2257 . 2261) (thing 2261 . 2298) (thing 2262 . 2297) (thing 2264 . 2275) (thing 2275 . 2290) (thing 2276 . 2289) (thing 2295 . 2296) (thing 2296 . 2300) (thing 2300 . 2330) (thing 2301 . 2329) (thing 2303 . 2304) (thing 2304 . 2308) (thing 2308 . 2352) (thing 2309 . 2351) (thing 2356 . 2357) (thing 2357 . 2361) (thing 2361 . 2398) (thing 2362 . 2397) (thing 2403 . 2404) (thing 2404 . 2408) (thing 2406 . 2407) (thing 2407 . 2411) (thing 2408 . 2452) (thing 2409 . 2451) (thing 2411 . 2451) (thing 2412 . 2450) (thing 2456 . 2457) (thing 2457 . 2461) (thing 2461 . 2509) (thing 2462 . 2508) (thing 2506 . 2507) (thing 2507 . 2511) (thing 2511 . 2551) (thing 2512 . 2550) (thing 2556 . 2557) (thing 2557 . 2561) (thing 2561 . 2609) (thing 2562 . 2608) (thing 2562 . 2563) (thing 2563 . 2567) (thing 2567 . 2589) (thing 2568 . 2588) (thing 2646 . 2647) (thing 2647 . 2651) (thing 2651 . 2683) (thing 2652 . 2682) (thing 2662 . 2663) (thing 2663 . 2667) (thing 2667 . 2689) (thing 2668 . 2688) (thing 2688 . 2689) (thing 2689 . 2693) (thing 2693 . 2730) (thing 2694 . 2729) (thing 2735 . 2736) (thing 2736 . 2740) (thing 2740 . 2776) (thing 2741 . 2775) (thing 2746 . 2747) (thing 2747 . 2751) (thing 2751 . 2783) (thing 2752 . 2782) (thing 2781 . 2782) (thing 2782 . 2787) (thing 2787 . 2812) (thing 2788 . 2789) (thing 2788 . 2811) (thing 2789 . 2793) (thing 2793 . 2830) (thing 2794 . 2829) (thing 2829 . 2830) (thing 2830 . 2835) (thing 2835 . 2836) (thing 2835 . 2858) (thing 2836 . 2840) (thing 2836 . 2857) (thing 2840 . 2876) (thing 2841 . 2875) (thing 2880 . 2881) (thing 2881 . 2882) (thing 2882 . 2887) (thing 2887 . 2912) (thing 2888 . 2911) (thing 2888 . 2911) (thing 2915 . 2926) (thing 2926 . 2943) (thing 2927 . 2942) (thing 2929 . 2930) (thing 2930 . 2935) (thing 2935 . 2958) (thing 2936 . 2957) (thing 2948 . 2949) (thing 2949 . 2953) (thing 2953 . 2990) (thing 2954 . 2989) (thing 2980 . 2981) (thing 2988 . 3011) (thing 2995 . 2996) (thing 2996 . 3001) (thing 3001 . 3026) (thing 3002 . 3025) (thing 3015 . 3026) (thing 3026 . 3043) (thing 3027 . 3042) (thing 3043 . 3044) (thing 3048 . 3049) (thing 3049 . 3053) (thing 3051 . 3075) (thing 3053 . 3090) (thing 3054 . 3089) (thing 3091 . 3102) (thing 3095 . 3096) (thing 3096 . 3101) (thing 3101 . 3126) (thing 3102 . 3125) (thing 3102 . 3128) (thing 3103 . 3127) (thing 3133 . 3134) (thing 3134 . 3138) (thing 3138 . 3167) (thing 3139 . 3166) (thing 3143 . 3144) (thing 3151 . 3175) (thing 3172 . 3173) (thing 3173 . 3177) (thing 3177 . 3211) (thing 3178 . 3210) (thing 3191 . 3202) (thing 3202 . 3228) (thing 3203 . 3227) (thing 3216 . 3217) (thing 3217 . 3221) (thing 3221 . 3250) (thing 3222 . 3249) (thing 3233 . 3234) (thing 3234 . 3238) (thing 3238 . 3267) (thing 3239 . 3266) (thing 3255 . 3256) (thing 3256 . 3261) (thing 3261 . 3286) (thing 3262 . 3285) (thing 3272 . 3273) (thing 3273 . 3277) (thing 3277 . 3311) (thing 3278 . 3310) (thing 3303 . 3304) (thing 3304 . 3309) (thing 3309 . 3322) (thing 3310 . 3321) (thing 3316 . 3317) (thing 3317 . 3321) (thing 3321 . 3350) (thing 3322 . 3349) (thing 3327 . 3328) (thing 3335 . 3346) (thing 3350 . 3361) (thing 3355 . 3356) (thing 3356 . 3361) (thing 3361 . 3386) (thing 3361 . 3384) (thing 3362 . 3385) (thing 3362 . 3383) (thing 3389 . 3390) (thing 3390 . 3395) (thing 3395 . 3407) (thing 3396 . 3406) (thing 3403 . 3404) (thing 3404 . 3409) (thing 3409 . 3422) (thing 3410 . 3421) (thing 3412 . 3413) (thing 3413 . 3419) (thing 3419 . 3432) (thing 3420 . 3431) (thing 3427 . 3428) (thing 3435 . 3446) (thing 3437 . 3438) (thing 3438 . 3444) (thing 3444 . 3461) (thing 3445 . 3460) (thing 3450 . 3461) (thing 3461 . 3474) (thing 3462 . 3473) (thing 3466 . 3467) (thing 3467 . 3471) (thing 3471 . 3482) (thing 3472 . 3481) (thing 3479 . 3480) (thing 3480 . 3484) (thing 3484 . 3518) (thing 3485 . 3517) (thing 3487 . 3488) (thing 3499 . 3501) (thing 3501 . 3539) (thing 3523 . 3524) (thing 3524 . 3528) (thing 3528 . 3553) (thing 3529 . 3552) (thing 3540 . 3654) (thing 3558 . 3559) (thing 3559 . 3563) (thing 3563 . 3589) (thing 3564 . 3588) (thing 3594 . 3595) (thing 3595 . 3599) (thing 3599 . 3630) (thing 3600 . 3629) (thing 3635 . 3636) (thing 3636 . 3640) (thing 3640 . 3672) (thing 3641 . 3671) (thing 3658 . 3669) (thing 3669 . 3690) (thing 3670 . 3689) (thing 3677 . 3678) (thing 3678 . 3682) (thing 3682 . 3711) (thing 3683 . 3710) (thing 3695 . 3696) (thing 3696 . 3701) (thing 3701 . 3713) (thing 3702 . 3712) (thing 3716 . 3717) (thing 3717 . 3721) (thing 3718 . 3719) (thing 3719 . 3724) (thing 3721 . 3755) (thing 3722 . 3754) (thing 3724 . 3741) (thing 3725 . 3740) (thing 3746 . 3747) (thing 3747 . 3753) (thing 3753 . 3766) (thing 3754 . 3765) (thing 3760 . 3761) (thing 3761 . 3765) (thing 3765 . 3794) (thing 3766 . 3793) (thing 3771 . 3772) (thing 3772 . 3776) (thing 3776 . 3799) (thing 3777 . 3798) (thing 3799 . 3800) (thing 3800 . 3804) (thing 3804 . 3832) (thing 3804 . 3805) (thing 3805 . 3831) (thing 3805 . 3809) (thing 3809 . 3820) (thing 3810 . 3819) (thing 3825 . 3826) (thing 3837 . 3838) (thing 3837 . 3839) (thing 3838 . 3842) (thing 3839 . 3877) (thing 3842 . 3882) (thing 3843 . 3881) (thing 3878 . 3953) (thing 3887 . 3888) (thing 3888 . 3892) (thing 3892 . 3927) (thing 3893 . 3926) (thing 3932 . 3933) (thing 3933 . 3938) (thing 3938 . 3963) (thing 3939 . 3962) (thing 3957 . 3968) (thing 3968 . 3969) (thing 3968 . 3982) (thing 3969 . 3974) (thing 3969 . 3981) (thing 3974 . 3997) (thing 3975 . 3996) (thing 3987 . 3988) (thing 3988 . 3992) (thing 3992 . 4016) (thing 3993 . 4015) (thing 4002 . 4003) (thing 4010 . 4037) (thing 4021 . 4022) (thing 4022 . 4026) (thing 4026 . 4044) (thing 4027 . 4043) (thing 4043 . 4054) (thing 4054 . 4075) (thing 4055 . 4074) (thing 4080 . 4081) (thing 4081 . 4086) (thing 4086 . 4111) (thing 4087 . 4110) (thing 4089 . 4090) (thing 4090 . 4094) (thing 4094 . 4123) (thing 4095 . 4122) (thing 4128 . 4129) (thing 4128 . 4129) (thing 4129 . 4134) (thing 4129 . 4134) (thing 4134 . 4156) (thing 4134 . 4155) (thing 4135 . 4155) (thing 4135 . 4154) (thing 4161 . 4162) (thing 4169 . 4196) (thing 4173 . 4174) (thing 4174 . 4179) (thing 4179 . 4198) (thing 4180 . 4197) (thing 4200 . 4211) (thing 4211 . 4238) (thing 4212 . 4237) (thing 4222 . 4223) (thing 4230 . 4247) (thing 4238 . 4239) (thing 4239 . 4244) (thing 4244 . 4269) (thing 4245 . 4268) (thing 4251 . 4262) (thing 4262 . 4287) (thing 4263 . 4286) (thing 4269 . 4270) (thing 4277 . 4297) (thing 4292 . 4293) (thing 4293 . 4297) (thing 4297 . 4341) (thing 4298 . 4340) (thing 4301 . 4312) (thing 4312 . 4329) (thing 4313 . 4328) (thing 4334 . 4335) (thing 4335 . 4339) (thing 4339 . 4374) (thing 4340 . 4373) (thing 4346 . 4347) (thing 4347 . 4351) (thing 4351 . 4387) (thing 4352 . 4386) (thing 4379 . 4380) (thing 4380 . 4384) (thing 4384 . 4419) (thing 4385 . 4418) (thing 4392 . 4393) (thing 4393 . 4397) (thing 4397 . 4425) (thing 4398 . 4424) (thing 4424 . 4425) (thing 4425 . 4430) (thing 4430 . 4448) (thing 4430 . 4431) (thing 4431 . 4447) (thing 4431 . 4436) (thing 4436 . 4457) (thing 4437 . 4456) (thing 4453 . 4454) (thing 4461 . 4477) (thing 4475 . 4476) (thing 4483 . 4494) (thing 4483 . 4500) (thing 4494 . 4508) (thing 4495 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508) (thing 4508 . 4508)))
    (semanticdb-table "ProxyCommon.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SUEZ_TURING_SEARCH_PROXYCOMMON_H" variable (:constant-flag t) nil [58 98])
            ("string" include (:system-flag t) nil [100 117])
            ("sstream" include (:system-flag t) nil [118 136])
            ("multi_call/interface/Response.h" include (:system-flag t) nil [137 179])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("formatResponse" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("response" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("multi_call::ResponsePtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [238 278])
                                    ("ss" variable
                                       (:reference 1
                                        :type ("std::stringstream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [279 301]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [218 302])
                            ("formatMessage" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("response" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("multi_call::ResponsePtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [329 369])
                                    ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [370 397]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [303 398]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [198 400]))                  
                :type "namespace")
                nil [181 402]))          
      :file "ProxyCommon.h"
      :pointmax 455
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_SUEZ_TURING_SEARCH_PROXYCOMMON_H")
          )
)
    (semanticdb-table "ProxyCommon.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("suez/turing/ops/ProxyCommon.h" include nil nil [1 41])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [43 63])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("formatResponse" function
                               (:arguments 
                                  ( ("response" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("multi_call::ResponsePtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [122 162])
                                    ("ss" variable
                                       (:reference 1
                                        :type ("std::stringstream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [163 185]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [102 816])
                            ("formatMessage" function
                               (:arguments 
                                  ( ("response" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("multi_call::ResponsePtr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [844 884])
                                    ("message" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [885 912]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [818 1019]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [82 1021]))                  
                :type "namespace")
                nil [65 1023]))          
      :file "ProxyCommon.cpp"
      :pointmax 1024
      :unmatched-syntax nil)
    (semanticdb-table "OpUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TURING_OPUTIL_H" variable (:constant-flag t) nil [41 64])
            ("autil/Log.h" include (:system-flag t) nil [66 88])
            ("autil/MultiValueType.h" include (:system-flag t) nil [89 122])
            ("autil/StringUtil.h" include (:system-flag t) nil [123 152])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [153 207])
            ("tensorflow/core/common_runtime/local_device.h" include nil nil [208 264])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("TURING_REQ_TRUE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [311 326])
                            ("TURING_REQ_OK" variable (:constant-flag t) (reparse-symbol namespacesubparts) [800 813])
                            ("extractModelAttribute" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1249 1274])
                                    ("tableName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1275 1298])
                                    ("fieldName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1326 1349]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1222 1350])
                            ("MatchDocShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1398 1447]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1354 1448])
                            ("ModelInputShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1498 1547]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1452 1548])
                            ("EmbeddingShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1597 1646]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1552 1647])
                            ("QueryInputOpV3KeyExistShapeInfer" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1710 1759]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1651 1760])
                            ("checkSparseTensor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("values" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1809 1836])
                                    ("indices" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1884 1912])
                                    ("denseShape" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1960 1991]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1764 1992])
                            ("GET_SESSION_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2002 2022])
                            ("GET_QUERY_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2901 2919]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [283 3495])
                    ("CHECK_TIMEOUT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3505 3518]))                  
                :type "namespace")
                nil [266 3997])
            ("TfType2ExprType" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("T" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4081 4096]))                  )
                nil [3999 4099])
            ("TfType2ExprType" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("int64_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4202 4223]))                  
                :template-specifier 
                  ( ("tensorflow::int64" type nil nil nil)
                    ("StringToMultiChar" type nil nil nil))                  )
                nil [4101 4226])
            ("TfType2ExprType" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("uint64_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4330 4352]))                  
                :template-specifier 
                  ( ("tensorflow::uint64" type nil nil nil)
                    ("StringToMultiChar" type nil nil nil))                  )
                nil [4228 4355])
            ("TfType2ExprType" type
               (:type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("autil::MultiChar" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4417 4447]))                  
                :template-specifier 
                  ( ("std::string" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [4357 4450])
            ("ExprValue2TfValue" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4501 4516]))                  
                :typemodifiers ("inline"))
                nil [4452 4538])
            ("ExprValue2TfValue" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4577 4607]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [4540 4663])
            ("convertValue" function
               (:template 
                  ( ("From" type (:type "class") nil nil)
                    ("To" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("From" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4728 4745])
                    ("to" variable
                       (:reference 1
                        :type ("To" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4746 4753]))                  
                :typemodifiers ("inline"))
                nil [4665 4772])
            ("convertValue" function
               (:template 
                  ( ("From" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("From" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4824 4841])
                    ("to" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4842 4858]))                  
                :typemodifiers ("inline"))
                nil [4774 4906])
            ("convertValue" function
               (:template 
                  ( ("To" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4956 4985])
                    ("to" variable
                       (:reference 1
                        :type ("To" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4986 4993]))                  
                :typemodifiers ("inline"))
                nil [4908 5080])
            ("convertValue" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5107 5136])
                    ("to" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5137 5153]))                  
                :type "void")
                nil [5082 5205])
            ("CASE" variable (:constant-flag t) nil [5215 5219])
            ("gatherTensor" function
               (:template 
                  ( ("IndexType" type (:type "class") nil nil))                  
                :type ("tensorflow::Status" type (:type "class") nil nil)
                :arguments 
                  ( ("tensor" variable
                       (:reference 1
                        :constant-flag t
                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7223 7256])
                    ("index" variable (:type ("IndexType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7257 7273])
                    ("indexSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7274 7291])
                    ("result" variable
                       (:reference 1
                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7324 7351]))                  )
                nil [7161 8370]))          
      :file "OpUtil.h"
      :pointmax 8419
      :unmatched-syntax '((thing 1959 . 1960) (thing 1958 . 1959) (thing 1952 . 1957) (thing 1883 . 1884) (thing 1882 . 1883) (thing 1876 . 1881) (thing 1808 . 1809) (thing 1807 . 1808) (thing 1801 . 1806) (thing 1763 . 1764) (thing 1762 . 1763) (thing 1709 . 1710) (thing 1708 . 1709) (thing 1650 . 1651) (thing 1649 . 1650) (thing 1596 . 1597) (thing 1595 . 1596) (thing 1551 . 1552) (thing 1550 . 1551) (thing 1497 . 1498) (thing 1496 . 1497) (thing 1451 . 1452) (thing 1450 . 1451) (thing 1397 . 1398) (thing 1396 . 1397) (thing 1353 . 1354) (thing 1352 . 1353))
      :lexical-table 
        '(("TURING_REQ_TRUE" (spp-arg-list ("expr" "status") 326 . 340) . 
              ((DO "do" 366 . 368) (semantic-list "{                                                 \\
        bool re = (expr);                                \\
        if (!re) {                                       \\
            auto s = (status);                           \\
            AUTIL_LOG(WARN, \"%s\", s.ToString().c_str()); \\
            return s;                                    \\
        }                                                \\
    }" 369 . 780) (WHILE "while" 781 . 786) (semantic-list "(0)" 787 . 790)))
          ("TURING_REQ_OK" (spp-arg-list ("status") 813 . 821) . 
              ((DO "do" 855 . 857) (semantic-list "{                                                 \\
        auto s = (status);                               \\
        if (!s.ok()) {                                   \\
            AUTIL_LOG(WARN, \"%s\", s.ToString().c_str()); \\
            return s;                                    \\
        }                                                \\
    }" 858 . 1210) (WHILE "while" 1211 . 1216) (semantic-list "(0)" 1217 . 1220)))
          ("ISEARCH_TURING_OPUTIL_H")
          ("GET_SESSION_RESOURCE" (spp-arg-list nil 2022 . 2024) . ((semantic-list "({                                                                                           \\
        auto device = dynamic_cast<tensorflow::LocalDevice *>(ctx->device());                    \\
        OP_REQUIRES(ctx, device,                                                                 \\
                    ::tensorflow::Status(tensorflow::error::UNAVAILABLE, \"not a local device\")); \\
        auto sessionResource = device->GetSessionResource();                                     \\
        OP_REQUIRES(ctx, sessionResource, ::tensorflow::Status(tensorflow::error::UNAVAILABLE,   \\
                                                               \"SessionResource is null\"));      \\
        sessionResource;                                                                         \\
    })" 2097 . 2891)))
          ("GET_QUERY_RESOURCE" (spp-arg-list ("sessionResource") 2919 . 2936) . ((semantic-list "({                                                                                           \\
        int64_t runId = ctx->step_id();                                                          \\
        auto queryResource = sessionResource->getQueryResource(runId);                           \\
        OP_REQUIRES(ctx, queryResource, errors::Unavailable(\"invalid query resource: \", runId)); \\
        queryResource;                                                                           \\
    })" 2996 . 3493)))
          ("CHECK_TIMEOUT" (spp-arg-list ("queryResource") 3518 . 3533) . ((semantic-list "({                                                                          \\
        if (queryResource->timeoutTerminator) {                                 \\
            OP_REQUIRES(ctx, !queryResource->timeoutTerminator->checkTimeout(), \\
                        errors::Unavailable(\"query timeout.\"));                 \\
        }                                                                       \\
    })" 3583 . 3995)))
          )
)
    (semanticdb-table "TableUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SUEZ_TURING_TABLEUTIL_H" variable (:constant-flag t) nil [49 80])
            ("vector" include (:system-flag t) nil [82 99])
            ("indexlib/config/index_partition_schema.h" include nil nil [100 151])
            ("indexlib/index/kkv/kkv_iterator.h" include nil nil [152 196])
            ("matchdoc/MatchDocAllocator.h" include nil nil [197 236])
            ("suez/turing/ops/ValueCollector.h" include nil nil [237 280])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("TableUtil" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [337 344])
                                    ("TableUtil" function
                                       (:constructor-flag t
                                        :type ("TableUtil" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [349 363])
                                    ("TableUtil" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [368 383])
                                    ("private" label nil (reparse-symbol classsubparts) [385 393])
                                    ("TableUtil" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("TableUtil" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [408 426]))                                          
                                        :type ("TableUtil" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [398 427])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("TableUtil" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [453 471]))                                          
                                        :type ("TableUtil" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [432 472])
                                    ("public" label nil (reparse-symbol classsubparts) [474 481])
                                    ("declareExtendVariable" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("srcAllocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [520 571])
                                            ("dstAllocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [610 661])
                                            ("extendFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("std::string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [700 745])
                                            ("required" variable
                                               (:default-value "false"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [784 805]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [486 807])
                                    ("fillExtendFields" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("srcDoc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [841 874])
                                            ("dstDocs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [908 955])
                                            ("srcAllocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [989 1040])
                                            ("dstAllocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1074 1125])
                                            ("extendFields" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("std::string" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1159 1204]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [812 1205])
                                    ("createMatchDocAllocator" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("IE_NAMESPACE" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1282 1308])
                                            ("schema" variable
                                               (:reference 1
                                                :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1310 1342])
                                            ("pool" variable
                                               (:pointer 1
                                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1343 1371]))                                          
                                        :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1211 1372])
                                    ("createValueCollector" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("IE_NAMESPACE" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1432 1458])
                                            ("schema" variable
                                               (:reference 1
                                                :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1460 1492])
                                            ("allocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1501 1549]))                                          
                                        :type ("ValueCollectorPtr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1377 1550])
                                    ("moveToNextVaildDoc" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable (:type ("IE_NAMESPACE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1586 1605])
                                            ("iter" variable
                                               (:pointer 1
                                                :type ("KKVIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1607 1625])
                                            ("matchDoc" variable
                                               (:reference 1
                                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1661 1690])
                                            ("allocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1726 1774])
                                            ("valueCollector" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("ValueCollectorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1810 1850])
                                            ("matchDocCount" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [1886 1905]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1555 1906])
                                    ("isVaildMatchDoc" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("matchDoc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1939 1974]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [1911 2059])
                                    ("fillExtendField" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("dstDocs" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2119 2166])
                                            ("srcDoc" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2199 2232])
                                            ("srcReference" variable
                                               (:pointer 1
                                                :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2265 2303])
                                            ("dstReference" variable
                                               (:pointer 1
                                                :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2336 2374]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2065 3009])
                                    ("builtinTypeToString" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("vt" variable (:type ("matchdoc::BuiltinType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3054 3079]))                                          
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3015 3080])
                                    ("private" label nil (reparse-symbol classsubparts) [3081 3089])
                                    ("AUTIL_LOG_DECLARE" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [3094 3114]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [319 3117]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [299 3119]))                  
                :type "namespace")
                nil [282 3121]))          
      :file "TableUtil.h"
      :pointmax 3166
      :unmatched-syntax '((thing 1606 . 1607) (thing 1605 . 1606) (thing 1598 . 1605) (thing 1459 . 1460) (thing 1458 . 1459) (thing 1450 . 1458) (thing 1309 . 1310) (thing 1308 . 1309) (thing 1300 . 1308))
      :lexical-table 
        '(("ISEARCH_SUEZ_TURING_TABLEUTIL_H")
          )
)
    (semanticdb-table "ValueCollector.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__SUEZ_TURING_VALUE_COLLECTOR_H_" variable (:constant-flag t) nil [50 82])
            ("tr1/memory" include (:system-flag t) nil [84 105])
            ("matchdoc/Reference.h" include nil nil [106 137])
            ("matchdoc/MatchDocAllocator.h" include nil nil [138 177])
            ("indexlib/indexlib.h" include nil nil [178 208])
            ("indexlib/index/kkv/kkv_reader.h" include nil nil [209 251])
            ("indexlib/config/index_partition_schema.h" include nil nil [252 303])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("ValueCollector" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [365 373])
                                    ("ValueReferences" type
                                       (:typedef ("std::vector" type
                                             (:template-specifier 
                                                ( ("matchdoc::ReferenceBase" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [378 440])
                                    ("public" label nil (reparse-symbol classsubparts) [442 449])
                                    ("ValueCollector" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("ValueCollector" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [454 471])
                                    ("ValueCollector" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [476 494])
                                    ("public" label nil (reparse-symbol classsubparts) [496 503])
                                    ("init" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("IE_NAMESPACE" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [518 544])
                                            ("tableSchema" variable
                                               (:reference 1
                                                :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [546 583])
                                            ("allocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [598 646]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [508 647])
                                    ("collectValueFields" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [699 727])
                                            ("" variable (:type ("IE_NAMESPACE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [728 747])
                                            ("iter" variable
                                               (:pointer 1
                                                :type ("KKVIterator" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [749 767]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [675 768])
                                    ("collectValueFields" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [819 847])
                                            ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("autil::ConstString" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [848 880]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [795 881])
                                    ("createMountInfo" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("IE_NAMESPACE" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1456 1482])
                                            ("schema" variable
                                               (:reference 1
                                                :type ("IndexPartitionSchemaPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1484 1516]))                                          
                                        :type ("matchdoc::MountInfoPtr" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1401 1517])
                                    ("private" label nil (reparse-symbol classsubparts) [1519 1527])
                                    ("declareReference" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :arguments 
                                          ( ("allocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1574 1622])
                                            ("fieldType" variable (:type ("FieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1669 1689])
                                            ("isMulti" variable (:type "bool") (reparse-symbol arg-sub-list) [1690 1703])
                                            ("valueName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1750 1779])
                                            ("groupName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1826 1855]))                                          
                                        :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1532 1856])
                                    ("setValue" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("doc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1875 1898])
                                            ("ref" variable
                                               (:pointer 1
                                                :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1899 1928])
                                            ("value" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [1929 1947]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1861 1948])
                                    ("private" label nil (reparse-symbol classsubparts) [1950 1958])
                                    ("_valueRefs" variable (:type ("ValueReferences" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1963 1990])
                                    ("_skeyRef" variable
                                       (:pointer 1
                                        :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1995 2029])
                                    ("_tsRef" variable
                                       (:pointer 1
                                        :type ("matchdoc::Reference" type
                                             (:template-specifier 
                                                ( ("uint64_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2034 2072])
                                    ("private" label nil (reparse-symbol classsubparts) [2074 2082])
                                    ("AUTIL_LOG_DECLARE" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [2087 2107]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [342 2110])
                            ("DEFINE_SHARED_PTR" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("ValueCollector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2130 2145]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2112 2146]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [322 2148]))                  
                :type "namespace")
                nil [305 2150]))          
      :file "ValueCollector.h"
      :pointmax 2196
      :unmatched-syntax '((thing 1483 . 1484) (thing 1482 . 1483) (thing 1474 . 1482) (thing 748 . 749) (thing 747 . 748) (thing 740 . 747) (thing 545 . 546) (thing 544 . 545) (thing 536 . 544) (thing 2150 . 2151))
      :lexical-table 
        '(("__SUEZ_TURING_VALUE_COLLECTOR_H_")
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("source" variable nil nil [57 79])
            ("basic" variable nil nil [81 107])
            ("igraph" variable nil nil [108 136])
            ("be" variable nil nil [137 157])
            ("sea" variable nil nil [158 180])
            ("source" variable nil nil [182 228])
            ("op_defs" code nil nil [229 276])
            ("env" code nil nil [279 514])
            ("Return" code nil nil [536 554]))          
      :file "SConscript"
      :pointmax 555
      :fsize 554
      :lastmodtime '(23347 17972 441188 857000)
      :unmatched-syntax '((thing 137 . 139) (thing 555 . 555)))
    (semanticdb-table "ScopeLatencyOp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("tensorflow/core/framework/op_kernel.h" include (:system-flag t) nil [1 49])
            ("autil/TimeUtility.h" include (:system-flag t) nil [50 80])
            ("suez/turing/common/SessionResource.h" include nil nil [81 128])
            ("suez/turing/ops/OpUtil.h" include nil nil [129 164])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [166 193])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("ScopeLatencyOpBase" type
                               (:superclasses 
                                  ( ("OpKernel" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [277 284])
                                    ("ScopeLatencyOpBase" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ctx" variable
                                               (:pointer 1
                                                :type ("OpKernelConstruction" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [317 343]))                                          
                                        :type ("ScopeLatencyOpBase" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [298 362])
                                    ("ComputeBase" function
                                       (:arguments 
                                          ( ("ctx" variable
                                               (:pointer 1
                                                :type ("OpKernelContext" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [384 405]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [367 589]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [232 654])
                            ("ScopeLatencyBeginOp" type
                               (:superclasses 
                                  ( ("ScopeLatencyOpBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [712 719])
                                    ("ScopeLatencyBeginOp" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ctx" variable
                                               (:pointer 1
                                                :type ("OpKernelConstruction" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [753 779]))                                          
                                        :type ("ScopeLatencyBeginOp" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [733 808]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [656 1072])
                            ("ScopeLatencyEndOp" type
                               (:superclasses 
                                  ( ("ScopeLatencyOpBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1128 1135])
                                    ("ScopeLatencyEndOp" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ctx" variable
                                               (:pointer 1
                                                :type ("OpKernelConstruction" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1167 1193]))                                          
                                        :type ("ScopeLatencyEndOp" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1149 1299])
                                    ("public" label nil (reparse-symbol classsubparts) [1301 1308])
                                    ("private" label nil (reparse-symbol classsubparts) [2050 2058])
                                    ("_metricName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2063 2087]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [1074 2090]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [212 2276]))                  
                :type "namespace")
                nil [195 2278]))          
      :file "ScopeLatencyOp.cpp"
      :pointmax 2279
      :unmatched-syntax '((thing 1348 . 1356) (thing 1325 . 1347) (thing 1318 . 1325) (thing 1313 . 1317) (thing 1140 . 1148) (thing 857 . 1069) (thing 848 . 856) (thing 825 . 847) (thing 818 . 825) (thing 813 . 817) (thing 724 . 732) (thing 622 . 651) (thing 613 . 621) (thing 610 . 612) (thing 599 . 610) (thing 594 . 598) (thing 289 . 297) (thing 1357 . 2048) (thing 2092 . 2115) (thing 2115 . 2184) (thing 2120 . 2143) (thing 2143 . 2144) (thing 2150 . 2162) (thing 2186 . 2209) (thing 2209 . 2274) (thing 2214 . 2235) (thing 2235 . 2236) (thing 2242 . 2254))))
  :file "!ssd!sdd!git!turing_be!basic_ops_compile!basic_ops!basic_ops!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
