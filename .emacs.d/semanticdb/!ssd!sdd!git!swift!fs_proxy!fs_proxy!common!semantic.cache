;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "Common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_COMMON_H_" variable (:constant-flag t) nil [36 54])
            ("assert.h" include (:system-flag t) nil [56 75])
            ("FS_PROXY_BEGIN_NAMESPACE" variable (:constant-flag t) nil [85 109])
            ("FS_PROXY_END_NAMESPACE" variable (:constant-flag t) nil [157 179])
            ("FS_PROXY_USE_NAMESPACE" variable (:constant-flag t) nil [197 219])
            ("tr1/memory" include (:system-flag t) nil [253 274])
            ("FS_PROXY_TYPEDEF_PTR" variable (:constant-flag t) nil [283 303])
            ("COPY_CONSTRUCTOR" variable (:constant-flag t) nil [455 471])
            ("DISALLOW_COPY_AND_ASSIGN" variable (:constant-flag t) nil [535 559])
            ("DELETE" variable (:constant-flag t) nil [610 616])
            ("DELETE_ARRAY" variable (:constant-flag t) nil [862 874])
            ("ErrorCode" type
               (:members 
                  ( ("FS_EC_OK" variable
                       (:constant-flag t
                        :default-value (1148 1151)
                        :type "int")
                        (reparse-symbol enumsubparts) [1137 1151])
                    ("FS_EC_CREATED" variable
                       (:constant-flag t
                        :default-value (1173 1176)
                        :type "int")
                        (reparse-symbol enumsubparts) [1157 1176])
                    ("FS_EC_NO_CONTENT" variable
                       (:constant-flag t
                        :default-value (1201 1204)
                        :type "int")
                        (reparse-symbol enumsubparts) [1182 1204])
                    ("FS_EC_INVALID_REQUEST" variable
                       (:constant-flag t
                        :default-value (1234 1237)
                        :type "int")
                        (reparse-symbol enumsubparts) [1210 1237])
                    ("FS_EC_NOT_FOUND" variable
                       (:constant-flag t
                        :default-value (1261 1264)
                        :type "int")
                        (reparse-symbol enumsubparts) [1243 1264])
                    ("FS_EC_SERVER_ERROR" variable
                       (:constant-flag t
                        :default-value (1291 1294)
                        :type "int")
                        (reparse-symbol enumsubparts) [1270 1294])
                    ("FS_EC_NOT_IMPLEMENTED" variable
                       (:constant-flag t
                        :default-value (1324 1327)
                        :type "int")
                        (reparse-symbol enumsubparts) [1300 1327])
                    ("FS_EC_SERVICE_UNAVAILABLE" variable
                       (:constant-flag t
                        :default-value (1361 1364)
                        :type "int")
                        (reparse-symbol enumsubparts) [1333 1364])
                    ("FS_EC_TIME_OUT" variable
                       (:constant-flag t
                        :default-value (1387 1390)
                        :type "int")
                        (reparse-symbol enumsubparts) [1370 1390]))                  
                :type "enum")
                nil [1116 1395]))          
      :file "Common.h"
      :pointmax 1429
      :fsize 1428
      :lastmodtime '(22731 22268 528022 525000)
      :unmatched-syntax '((thing 1121 . 1126) (thing 1116 . 1120))
      :lexical-table 
        '(("FS_PROXY_BEGIN_NAMESPACE" (spp-arg-list ("x") 109 . 112) . 
              ((NAMESPACE "namespace" 113 . 122) (symbol "fs_proxy" 123 . 131) (open-paren "{" 132 . 133) (NAMESPACE "namespace" 134 . 143) (symbol "x" 144 . 145) (open-paren "{" 145 . 146)))
          ("DELETE_ARRAY" (spp-arg-list ("x") 874 . 877) . 
              ((DO "do" 878 . 880) (semantic-list "{             \\
        if(x){                                  \\
            delete [] x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 881 . 1105) (WHILE "while" 1105 . 1110) (semantic-list "(0)" 1110 . 1113)))
          ("FS_PROXY_TYPEDEF_PTR" (spp-arg-list ("x") 303 . 306) . 
              ((TYPEDEF "typedef" 307 . 314) (symbol "std" 315 . 318) (punctuation ":" 318 . 319) (punctuation ":" 319 . 320) (symbol "tr1" 320 . 323) (punctuation ":" 323 . 324) (punctuation ":" 324 . 325) (symbol "shared_ptr" 325 . 335) (punctuation "<" 335 . 336) (symbol "x" 336 . 337) (punctuation ">" 337 . 338) (spp-symbol-merge ((symbol "x" 339 . 340) (symbol "Ptr" 342 . 345)) 339 . 345)))
          ("DISALLOW_COPY_AND_ASSIGN" (spp-arg-list ("T") 559 . 562) . ((symbol "COPY_CONSTRUCTOR" 581 . 597) (semantic-list "(T)" 597 . 600)))
          ("DELETE" (spp-arg-list ("x") 616 . 619) . 
              ((DO "do" 620 . 622) (semantic-list "{             \\
        if(x){                                  \\
            delete x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 623 . 844) (WHILE "while" 844 . 849) (semantic-list "(0)" 849 . 852)))
          ("COPY_CONSTRUCTOR" (spp-arg-list ("T") 471 . 474) . 
              ((symbol "T" 481 . 482) (semantic-list "(const T &)" 482 . 493) (punctuation ";" 493 . 494) (symbol "T" 501 . 502) (punctuation "&" 503 . 504) (OPERATOR "operator" 505 . 513) (punctuation "=" 513 . 514) (semantic-list "(const T &)" 514 . 525)))
          ("FS_PROXY_COMMON_H_")
          ("FS_PROXY_USE_NAMESPACE" (spp-arg-list ("x") 219 . 222) . 
              ((USING "using" 223 . 228) (NAMESPACE "namespace" 229 . 238) (symbol "fs_proxy" 239 . 247) (punctuation ":" 247 . 248) (punctuation ":" 248 . 249) (symbol "x" 249 . 250) (punctuation ";" 250 . 251)))
          ("FS_PROXY_END_NAMESPACE" (spp-arg-list ("x") 179 . 182) . ((close-paren "}" 183 . 184) (close-paren "}" 185 . 186)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("common" variable nil nil [57 79])
            ("env" code nil nil [80 141])
            ("env" code nil nil [142 159])
            ("Return" code nil nil [160 179]))          
      :file "SConscript"
      :pointmax 181
      :fsize 180
      :lastmodtime '(22722 17879 119716 525000)
      :unmatched-syntax nil)
    (semanticdb-table "HttpParamDefine.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_PARAM_TOPIC" variable (:constant-flag t) nil [9 29])
            ("PARAM_URI" variable (:constant-flag t) nil [48 57]))          
      :file "HttpParamDefine.h"
      :pointmax 64
      :fsize 63
      :lastmodtime '(22722 8928 121674 610000)
      :unmatched-syntax nil
      :lexical-table 
        '(("PARAM_URI" . ((string "\"uri\"" 58 . 63)))
          ("FS_PROXY_PARAM_TOPIC" . ((string "\"timeout\"" 30 . 39)))
          )
)
    (semanticdb-table "Atomic.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_ATOMIC_H" variable (:constant-flag t) nil [35 52])
            ("fs_proxy/common/Common.h" include (:system-flag t) nil [54 89])
            ("fs_proxy/common/Log.h" include (:system-flag t) nil [90 122])
            ("FS_PROXY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [148 155]))                  
                :type "int")
                nil [123 156])
            ("Atomic" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [195 202])
                    ("Atomic" function
                       (:constructor-flag t
                        :type ("Atomic" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [207 243])
                    ("public" label nil (reparse-symbol classsubparts) [244 251])
                    ("get" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [256 330])
                    ("getAndAdd" function
                       (:arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [348 352]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [336 409])
                    ("addAndGet" function
                       (:arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [431 435]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [419 476])
                    ("testAndDecreament" function (:type "bool") (reparse-symbol classsubparts) [482 740])
                    ("incrementAndGet" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [746 802])
                    ("add" function
                       (:arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [817 821]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [808 851])
                    ("increment" function (:type "void") (reparse-symbol classsubparts) [857 908])
                    ("decrementAndGet" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [914 971])
                    ("decrement" function (:type "void") (reparse-symbol classsubparts) [977 1024])
                    ("getAndSet" function
                       (:arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1042 1046]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1030 1107])
                    ("private" label nil (reparse-symbol classsubparts) [1108 1116])
                    ("_value" variable
                       (:typemodifiers ("volatile")
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1121 1139]))                  )
                nil [158 1142])
            ("Atomic16" type
               (:typedef ("Atomic" type
                     (:template-specifier 
                        ( ("int16_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [1144 1177])
            ("Atomic32" type
               (:typedef ("Atomic" type
                     (:template-specifier 
                        ( ("int32_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [1178 1211])
            ("Atomic64" type
               (:typedef ("Atomic" type
                     (:template-specifier 
                        ( ("int64_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [1212 1245])
            ("FS_PROXY_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Atomic16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1267 1276]))                  
                :type "int")
                nil [1246 1277])
            ("FS_PROXY_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Atomic32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1299 1308]))                  
                :type "int")
                nil [1278 1309])
            ("FS_PROXY_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("Atomic64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1331 1340]))                  
                :type "int")
                nil [1310 1341])
            ("FS_PROXY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1367 1374]))                  
                :type "int")
                nil [1344 1375]))          
      :file "Atomic.h"
      :pointmax 1404
      :fsize 1403
      :lastmodtime '(22722 8928 120674 611000)
      :unmatched-syntax nil
      :lexical-table 
        '(("FS_PROXY_ATOMIC_H")
          )
)
    (semanticdb-table "UrlDecoder.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("fs_proxy/common/UrlDecoder.h" include (:system-flag t) nil [1 40])
            ("string.h" include (:system-flag t) nil [41 60])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [61 81])
            ("FS_PROXY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [108 115]))                  
                :type "int")
                nil [83 116])
            ("FS_PROXY_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [136 143])
                    ("" variable (:type ("UrlDecoder" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [144 155]))                  
                :type "int")
                nil [117 156])
            ("UrlDecoder" function
               (:constructor-flag t
                :parent "UrlDecoder"
                :type ("UrlDecoder" type (:type "class") nil nil))
                nil [158 187])
            ("UrlDecoder" function
               (:destructor-flag t
                :parent "UrlDecoder"
                :type "void")
                nil [189 219])
            ("Decode" function
               (:parent "UrlDecoder"
                :arguments 
                  ( ("str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [247 265]))                  
                :type ("string" type (:type "class") nil nil))
                nil [221 794])
            ("Decode" function
               (:pointer 1
                :parent "UrlDecoder"
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [821 837]))                  
                :type "char")
                nil [796 1249])
            ("DecodeChar" function
               (:parent "UrlDecoder"
                :arguments 
                  ( ("bytes" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1279 1297]))                  
                :type "char")
                nil [1251 1523])
            ("FS_PROXY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1548 1555]))                  
                :type "int")
                nil [1525 1556]))          
      :file "UrlDecoder.cpp"
      :pointmax 1558
      :fsize 1557
      :lastmodtime '(22722 8928 121674 610000)
      :unmatched-syntax nil)
    (semanticdb-table "UrlDecoder.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_URLDECODER_H" variable (:constant-flag t) nil [39 60])
            ("fs_proxy/common/Common.h" include (:system-flag t) nil [62 97])
            ("fs_proxy/common/Log.h" include (:system-flag t) nil [98 130])
            ("FS_PROXY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [157 164]))                  
                :type "int")
                nil [132 165])
            ("UrlDecoder" type
               (:members 
                  ( ("private" label nil (reparse-symbol classsubparts) [186 194])
                    ("UrlDecoder" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("UrlDecoder" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [199 212])
                    ("UrlDecoder" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [217 231])
                    ("UrlDecoder" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("UrlDecoder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [247 266]))                          
                        :type ("UrlDecoder" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [236 267])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("UrlDecoder" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [294 313]))                          
                        :type ("UrlDecoder" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [272 314])
                    ("public" label nil (reparse-symbol classsubparts) [316 323])
                    ("Decode" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("str" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [354 377]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [328 378])
                    ("Decode" function
                       (:prototype-flag t
                        :pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [403 417]))                          
                        :type "char")
                        (reparse-symbol classsubparts) [383 418])
                    ("private" label nil (reparse-symbol classsubparts) [420 428])
                    ("DecodeChar" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("bytes" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [456 474]))                          
                        :type "char")
                        (reparse-symbol classsubparts) [433 475])
                    ("private" label nil (reparse-symbol classsubparts) [477 485])
                    ("FS_PROXY_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [490 513]))                  
                :type "class")
                nil [167 516])
            ("FS_PROXY_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("UrlDecoder" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [539 550]))                  
                :type "int")
                nil [518 551])
            ("FS_PROXY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [576 583]))                  
                :type "int")
                nil [553 584]))          
      :file "UrlDecoder.h"
      :pointmax 594
      :fsize 593
      :lastmodtime '(22722 8928 121674 610000)
      :unmatched-syntax nil
      :lexical-table 
        '(("FS_PROXY_URLDECODER_H")
          )
)
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_LOG_H" variable (:constant-flag t) nil [32 46])
            ("iostream" include (:system-flag t) nil [48 67])
            ("alog/Logger.h" include (:system-flag t) nil [69 93])
            ("alog/Configurator.h" include (:system-flag t) nil [94 124])
            ("iostream" include (:system-flag t) nil [125 144])
            ("FS_PROXY_LOG_CONFIG" variable (:constant-flag t) nil [154 173])
            ("FS_PROXY_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [693 724])
            ("FS_PROXY_LOG_DECLARE" variable (:constant-flag t) nil [1370 1390])
            ("FS_PROXY_LOG_SETUP" variable (:constant-flag t) nil [1431 1449])
            ("FS_PROXY_LOG" variable (:constant-flag t) nil [1547 1559])
            ("FS_PROXY_LOG" variable (:constant-flag t) nil [1547 1559])
            ("FS_PROXY_LOG_SHUTDOWN" variable (:constant-flag t) nil [1652 1673])
            ("FS_PROXY_LOG_FLUSH" variable (:constant-flag t) nil [1709 1727]))          
      :file "Log.h"
      :pointmax 1780
      :fsize 1779
      :lastmodtime '(22728 57667 853573 131000)
      :unmatched-syntax nil
      :lexical-table 
        '(("FS_PROXY_LOG_SHUTDOWN" (spp-arg-list nil 1670 . 1672) . 
              ((symbol "alog" 1673 . 1677) (punctuation ":" 1677 . 1678) (punctuation ":" 1678 . 1679) (symbol "Logger" 1679 . 1685) (punctuation ":" 1685 . 1686) (punctuation ":" 1686 . 1687) (symbol "shutdown" 1687 . 1695) (semantic-list "()" 1695 . 1697)))
          ("FS_PROXY_LOG_CONFIG" (spp-arg-list ("filename") 173 . 183) . 
              ((DO "do" 184 . 186) (semantic-list "{                 \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"Error!!! Failed to configure logger\"  \\
                      << e.what() << std::endl;                 \\
            exit(-1);                                           \\
        }                                                       \\
    }" 187 . 674) (WHILE "while" 674 . 679) (semantic-list "(0)" 679 . 682)))
          ("FS_PROXY_LOG_DECLARE" (spp-arg-list nil 1390 . 1392) . 
              ((STATIC "static" 1393 . 1399) (symbol "alog" 1400 . 1404) (punctuation ":" 1404 . 1405) (punctuation ":" 1405 . 1406) (symbol "Logger" 1406 . 1412) (punctuation "*" 1413 . 1414) (symbol "_logger" 1414 . 1421)))
          ("FS_PROXY_LOG" (spp-arg-list ("level" "format" "args...") 1559 . 1583) . ((symbol "ALOG_LOG" 1584 . 1592) (semantic-list "(_logger, alog::LOG_LEVEL_##level, format, ##args)" 1592 . 1642)))
          ("FS_PROXY_LOG_SETUP" (spp-arg-list ("n" "c") 1449 . 1454) . 
              ((symbol "alog" 1455 . 1459) (punctuation ":" 1459 . 1460) (punctuation ":" 1460 . 1461) (symbol "Logger" 1461 . 1467) (punctuation "*" 1468 . 1469) (symbol "c" 1469 . 1470) (punctuation ":" 1470 . 1471) (punctuation ":" 1471 . 1472) (symbol "_logger" 1472 . 1479) (punctuation "=" 1488 . 1489) (symbol "alog" 1490 . 1494) (punctuation ":" 1494 . 1495) (punctuation ":" 1495 . 1496) (symbol "Logger" 1496 . 1502) (punctuation ":" 1502 . 1503) (punctuation ":" 1503 . 1504) (symbol "getLogger" 1504 . 1513) (semantic-list "(\"swift.\" #n \".\"  #c)" 1513 . 1534)))
          ("FS_PROXY_LOG_FLUSH" (spp-arg-list nil 1724 . 1726) . 
              ((symbol "alog" 1727 . 1731) (punctuation ":" 1731 . 1732) (punctuation ":" 1732 . 1733) (symbol "Logger" 1733 . 1739) (punctuation ":" 1739 . 1740) (punctuation ":" 1740 . 1741) (symbol "flushAll" 1741 . 1749) (semantic-list "()" 1749 . 1751)))
          ("FS_PROXY_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 724 . 733) . 
              ((DO "do" 734 . 736) (semantic-list "{              \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"WARN! Failed to configure logger!\"            \\
                      << e.what() << \",use default log conf.\"           \\
                      << std::endl;                                     \\
            exit(-1);                                                   \\
        }                                                               \\
    }" 737 . 1351) (WHILE "while" 1351 . 1356) (semantic-list "(0)" 1356 . 1359)))
          ("FS_PROXY_LOG_H")
          )
)
    (semanticdb-table "ErrorCode.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FS_PROXY_ERRORCODE_H" variable (:constant-flag t) nil [38 58])
            ("FS_PROXY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [85 92]))                  
                :type "int")
                nil [60 93])
            ("FS_PROXY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [123 130]))                  
                :type ("EN" type (:type "class") nil nil))
                nil [95 131]))          
      :file "ErrorCode.h"
      :pointmax 141
      :fsize 136
      :lastmodtime '(22731 21885 448771 228000)
      :unmatched-syntax nil
      :lexical-table 
        '(("FS_PROXY_ERRORCODE_H")
          )
))
  :file "!ssd!sdd!git!swift!fs_proxy!fs_proxy!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
