;; Object search_test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "search_test/"
  :tables
  (list
    (semanticdb-table "prj_fixture.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [26 35])
            ("re" include nil nil [36 45])
            ("sys" include nil nil [46 56])
            ("shutil" include nil nil [57 70])
            ("glob" include nil nil [71 82])
            ("subprocess" include nil nil [83 100])
            ("framework.test_suite" include nil nil [101 142])
            ("ConfigParser" include nil nil [143 184])
            ("framework.fixture_base" include nil nil [185 238])
            ("common_utils" include nil nil [239 272])
            ("common_utils.socket_util" include nil nil [273 320])
            ("common_utils.pexpect" include nil nil [321 359])
            ("common_utils.process" include nil nil [361 401])
            ("framework.fixture_base" include nil nil [402 455])
            ("suez_testlib.common" include nil nil [456 504])
            ("suez_testlib.common" include nil nil [505 546])
            ("suez_testlib.common.fsutil_wrapper" include nil nil [547 607])
            ("prj_lib.test_result_reporter" include nil nil [608 667])
            ("common_utils" include nil nil [668 704])
            ("ha3_systemtest_lib.common_lib.testbed_maintainer" include nil nil [705 782])
            ("HaSuezProjectFixture" type
               (:superclasses ("ProjectFixtureBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [874 926])
                            ("self" variable nil (reparse-symbol indented_block_body) [935 994])
                            ("self" variable nil (reparse-symbol indented_block_body) [1003 1060])
                            ("self" variable nil (reparse-symbol indented_block_body) [1069 1118])
                            ("self" variable nil (reparse-symbol indented_block_body) [1127 1185])
                            ("self" variable nil (reparse-symbol indented_block_body) [1194 1223])
                            ("self" variable nil (reparse-symbol indented_block_body) [1232 1275])
                            ("self" variable nil (reparse-symbol indented_block_body) [1284 1318])
                            ("self" variable nil (reparse-symbol indented_block_body) [1327 1416])
                            ("self" code nil (reparse-symbol indented_block_body) [1425 1451])
                            ("self" variable nil (reparse-symbol indented_block_body) [1460 1528])
                            ("self" variable nil (reparse-symbol indented_block_body) [1537 1601])
                            ("self" variable nil (reparse-symbol indented_block_body) [1610 1678])
                            ("self" variable nil (reparse-symbol indented_block_body) [1687 1759])
                            ("self" variable nil (reparse-symbol indented_block_body) [1768 1838])
                            ("self" variable nil (reparse-symbol indented_block_body) [1847 1919])
                            ("self" variable nil (reparse-symbol indented_block_body) [1928 1994])
                            ("self" variable nil (reparse-symbol indented_block_body) [2003 2071])
                            ("self" variable nil (reparse-symbol indented_block_body) [2080 2156])
                            ("self" variable nil (reparse-symbol indented_block_body) [2165 2237])
                            ("self" variable nil (reparse-symbol indented_block_body) [2246 2309])
                            ("self" variable nil (reparse-symbol indented_block_body) [2318 2387])
                            ("self" code nil (reparse-symbol indented_block_body) [2396 2462])
                            ("self" variable nil (reparse-symbol indented_block_body) [2471 2495])
                            ("self" variable nil (reparse-symbol indented_block_body) [2504 2537])
                            ("self" variable nil (reparse-symbol indented_block_body) [2546 2606])
                            ("if" code nil (reparse-symbol indented_block_body) [2693 2757])
                            ("self" code nil (reparse-symbol indented_block_body) [2765 2790]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [849 853])
                            ("prj_conf" variable nil (reparse-symbol function_parameters) [855 863]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [836 2791])
                    ("__copyHippoPe" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3016 3020]))                          )
                        (reparse-symbol indented_block_body) [2998 3239])
                    ("__prepareHippo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3263 3267]))                          )
                        (reparse-symbol indented_block_body) [3244 4648])
                    ("__initProjectConfig" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4677 4681]))                          )
                        (reparse-symbol indented_block_body) [4653 4808])
                    ("__loadToolsLibPath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4836 4840]))                          )
                        (reparse-symbol indented_block_body) [4813 4945])
                    ("tearDown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4963 4967]))                          )
                        (reparse-symbol indented_block_body) [4950 5000])
                    ("report" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5016 5020]))                          )
                        (reparse-symbol indented_block_body) [5005 6065])
                    ("__cleanTempDir" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6089 6093]))                          )
                        (reparse-symbol indented_block_body) [6070 6207])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6220 6224])
                            ("cmd" variable nil (reparse-symbol function_parameters) [6226 6229]))                          )
                        (reparse-symbol indented_block_body) [6212 6296])
                    ("__buildTar" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6324 6328]))                          )
                        (reparse-symbol indented_block_body) [6309 7422])
                    ("__updateBsToolsConf" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7763 7767]))                          )
                        (reparse-symbol indented_block_body) [7739 8275])
                    ("__installTar" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8297 8301])
                            ("hostList" variable nil (reparse-symbol function_parameters) [8303 8311]))                          )
                        (reparse-symbol indented_block_body) [8280 9166])
                    ("__stopTestRepo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9206 9210]))                          )
                        (reparse-symbol indented_block_body) [9187 9265])
                    ("__generateHippoConfigTemplate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9304 9308])
                            ("type" variable nil (reparse-symbol function_parameters) [9310 9314]))                          )
                        (reparse-symbol indented_block_body) [9270 9956])
                    ("__getRepoUid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9978 9982]))                          )
                        (reparse-symbol indented_block_body) [9961 10024])
                    ("__cleanHippoApp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10049 10053]))                          )
                        (reparse-symbol indented_block_body) [10029 10878])
                    ("__findCoresInHippo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10906 10910])
                            ("startTime" variable nil (reparse-symbol function_parameters) [10912 10921])
                            ("endTime" variable nil (reparse-symbol function_parameters) [10923 10930]))                          )
                        (reparse-symbol indented_block_body) [10883 12134])
                    ("__checkCoreInHost" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12161 12165])
                            ("remoteIP" variable nil (reparse-symbol function_parameters) [12167 12175])
                            ("checkDir" variable nil (reparse-symbol function_parameters) [12177 12185])
                            ("beginTime" variable nil (reparse-symbol function_parameters) [12187 12196])
                            ("endTime" variable nil (reparse-symbol function_parameters) [12203 12210])
                            ("recursive" variable nil (reparse-symbol function_parameters) [12217 12226])
                            ("pattern" variable nil (reparse-symbol function_parameters) [12233 12240]))                          )
                        (reparse-symbol indented_block_body) [12139 13884])
                    ("executePexpect" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13908 13912])
                            ("cmd" variable nil (reparse-symbol function_parameters) [13914 13917])
                            ("os_passwd" variable nil (reparse-symbol function_parameters) [13919 13928]))                          )
                        (reparse-symbol indented_block_body) [13889 14651]))                  
                :type "class")
                nil [784 14651]))          
      :file "prj_fixture.py"
      :pointmax 14651
      :fsize 14650
      :lastmodtime '(22499 43432 818186 746000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!search_test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
