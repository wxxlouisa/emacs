;; Object sdk/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sdk/"
  :tables
  (list
    (semanticdb-table "HippoConnector.h"
      :major-mode 'c++-mode
      :tags 
        '( ("HIPPO_HIPPOCONNECTOR_H" variable (:constant-flag t) nil [40 62])
            ("util/Log.h" include nil nil [64 85])
            ("common/common.h" include nil nil [86 112])
            ("common/LeaderLocator.h" include nil nil [113 146])
            ("hippo/DriverCommon.h" include nil nil [147 178])
            ("util/PathUtil.h" include nil nil [179 205])
            ("arpc/ANetRPCChannelManager.h" include (:system-flag t) nil [206 245])
            ("arpc/ANetRPCChannel.h" include (:system-flag t) nil [246 278])
            ("BEGIN_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [302 306]))                  
                :type "int")
                nil [280 307])
            ("HippoConnector" type
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [370 377])
                    ("HippoConnector" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("HippoConnector" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [382 399])
                    ("HippoConnector" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [404 430])
                    ("private" label nil (reparse-symbol classsubparts) [431 439])
                    ("HippoConnector" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoConnector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [459 482]))                          
                        :type ("HippoConnector" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [444 483])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HippoConnector" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [514 537]))                          
                        :type ("HippoConnector" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [488 538])
                    ("public" label nil (reparse-symbol classsubparts) [539 546])
                    ("stub_type" type
                       (:typedef ("ServiceStubFactory::stub_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [551 608])
                    ("public" label nil (reparse-symbol classsubparts) [609 616])
                    ("init" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("hippoZkRoot" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [639 670]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [621 671])
                    ("getServiceStub" function
                       (:prototype-flag t
                        :pointer 1
                        :typemodifiers ("virtual" "typename")
                        :type ("ServiceStubFactory::stub_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [699 765])
                    ("getMasterInfo" function (:type ("MasterInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [770 838])
                    ("collectErrorInfo" function
                       (:arguments 
                          ( ("ec" variable
                               (:reference 1
                                :constant-flag t
                                :type ("proto::ErrorCode" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [865 892])
                            ("msg" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [893 916]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [843 1004])
                    ("setConnectStatus" function
                       (:arguments 
                          ( ("isConnected" variable (:type "bool") (reparse-symbol arg-sub-list) [1031 1048]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1009 1101])
                    ("public" label nil (reparse-symbol classsubparts) [1102 1109])
                    ("setLeaderLocator" function
                       (:arguments 
                          ( ("locator" variable
                               (:pointer 1
                                :type ("common::LeaderLocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1148 1179]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1126 1252])
                    ("setServiceStubFactory" function
                       (:arguments 
                          ( ("factory" variable
                               (:pointer 1
                                :type ("ServiceStubFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1285 1313]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1258 1382])
                    ("setServiceStub" function
                       (:arguments 
                          ( ("stub" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("ServiceStubFactory::stub_type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1408 1453]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1388 1519])
                    ("private" label nil (reparse-symbol classsubparts) [1521 1529])
                    ("isConnected" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [1534 1559])
                    ("private" label nil (reparse-symbol classsubparts) [1561 1569])
                    ("_lastConnected" variable (:type "bool") (reparse-symbol classsubparts) [1574 1594])
                    ("_masterInfo" variable (:type ("MasterInfo" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1599 1622])
                    ("private" label nil (reparse-symbol classsubparts) [1623 1631])
                    ("_stubFactory" variable
                       (:pointer 1
                        :type ("ServiceStubFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1636 1669])
                    ("_serviceStub" variable
                       (:pointer 1
                        :typemodifiers ("typename")
                        :type ("ServiceStubFactory::stub_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1674 1727])
                    ("private" label nil (reparse-symbol classsubparts) [1728 1736])
                    ("_zkWrapper" variable
                       (:pointer 1
                        :type ("cm_basic::ZkWrapper" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1741 1773])
                    ("_leaderLocator" variable
                       (:pointer 1
                        :type ("common::LeaderLocator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1778 1816])
                    ("private" label nil (reparse-symbol classsubparts) [1817 1825])
                    ("HIPPO_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1830 1850]))                  )
                nil [309 1853])
            ("HippoConnector" function
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type ("HippoConnector" type (:type "class") nil nil)
                :parent "HippoConnector"
                :constructor-flag t)
                nil [1855 2116])
            ("HippoConnector" function
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type "void"
                :parent "HippoConnector"
                :destructor-flag t)
                nil [2118 2369])
            ("init" function
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("hippoZkRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2456 2487]))                  
                :parent "HippoConnector")
                nil [2372 3346])
            ("isConnected" function
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type "bool"
                :parent "HippoConnector")
                nil [3348 3701])
            ("getServiceStub" function
               (:template 
                  ( ("ServiceStubFactory" type (:type "class") nil nil))                  
                :type ("ServiceStubFactory::stub_type" type (:type "class") nil nil)
                :typemodifiers ("typename")
                :parent "HippoConnector"
                :pointer 1)
                nil [3703 4303])
            ("HIPPO_LOG_SETUP_TEMPLATE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4330 4334])
                    ("" variable (:type ("HippoConnector" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4335 4350])
                    ("" variable (:type ("ServiceStubFactory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4351 4370]))                  
                :type "int")
                nil [4305 4371])
            ("RPC_REQUEST" variable (:constant-flag t) nil [4381 4392])
            ("RPC_REQUEST_NO_ERRORCODE_CHECK" variable (:constant-flag t) nil [5694 5724])
            ("RPC_REQUEST_WITH_ERRORCODE_CHECK" variable (:constant-flag t) nil [5944 5976])
            ("END_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7078 7082]))                  
                :type "int")
                nil [7058 7083]))          
      :file "HippoConnector.h"
      :pointmax 7117
      :fsize 7116
      :lastmodtime '(22990 3279 616465 106000)
      :unmatched-syntax '((thing 2369 . 2370))
      :lexical-table 
        '(("RPC_REQUEST" (spp-arg-list ("method" "request" "response" "hippoConnector") 4392 . 4435) . 
              ((symbol "TYPEOF" 4451 . 4457) (semantic-list "(hippoConnector.getServiceStub())" 4457 . 4490) (symbol "stub" 4491 . 4495) (punctuation "=" 4496 . 4497) (symbol "hippoConnector" 4498 . 4512) (punctuation "." 4512 . 4513) (symbol "getServiceStub" 4513 . 4527) (semantic-list "()" 4527 . 4529) (punctuation ";" 4529 . 4530) (IF "if" 4537 . 4539) (semantic-list "(!stub)" 4540 . 4547) (semantic-list "{                                                        \\
        HIPPO_LOG(ERROR, #method\"  get service stub failed.\");          \\
        return false;                                                   \\
    }" 4548 . 4760) (symbol "HIPPO_LOG" 4833 . 4842) (semantic-list "(DEBUG, #method\", request:%s\", request.ShortDebugString().c_str())" 4842 . 4908) (punctuation ";" 4908 . 4909) (symbol "arpc" 4916 . 4920) (punctuation ":" 4920 . 4921) (punctuation ":" 4921 . 4922) (symbol "ANetRPCController" 4922 . 4939) (symbol "controller" 4940 . 4950) (punctuation ";" 4950 . 4951) (symbol "stub" 4990 . 4994) (punctuation "-" 4994 . 4995) (punctuation ">" 4995 . 4996) (symbol "method" 4996 . 5002) (semantic-list "(&controller, &request, response, NULL)" 5002 . 5041) (punctuation ";" 5041 . 5042) (symbol "arpc" 5064 . 5068) (punctuation ":" 5068 . 5069) (punctuation ":" 5069 . 5070) (symbol "ErrorCode" 5070 . 5079) (symbol "ec" 5080 . 5082) (punctuation "=" 5083 . 5084) (symbol "controller" 5085 . 5095) (punctuation "." 5095 . 5096) (symbol "GetErrorCode" 5096 . 5108) (semantic-list "()" 5108 . 5110) (punctuation ";" 5110 . 5111) (symbol "hippoConnector" 5138 . 5152) (punctuation "." 5152 . 5153) (symbol "collectErrorInfo" 5153 . 5169) (semantic-list "((proto::ErrorCode)ec, controller.ErrorText())" 5169 . 5215) (punctuation ";" 5215 . 5216) (IF "if" 5223 . 5225) (semantic-list "(arpc::ARPC_ERROR_NONE != ec)" 5226 . 5255) (semantic-list "{                                  \\
        HIPPO_LOG(ERROR, #method\" request failed. errorCode:[%d], errorMsg:[%s]\", \\
                  controller.GetErrorCode(), controller.ErrorText().c_str()); \\
        /*should reconnect master*/                                     \\
        hippoConnector.setConnectStatus(false);                         \\
        return false;                                                   \\
    }" 5256 . 5684)))
          ("HIPPO_HIPPOCONNECTOR_H")
          ("RPC_REQUEST_NO_ERRORCODE_CHECK" (spp-arg-list ("method" "request" "response" "hippoConnector") 5724 . 5767) . 
              ((symbol "RPC_REQUEST" 5774 . 5785) (semantic-list "(method, request, response, hippoConnector)" 5785 . 5828) (punctuation ";" 5828 . 5829) (symbol "hippoConnector" 5848 . 5862) (punctuation "." 5862 . 5863) (symbol "setConnectStatus" 5863 . 5879) (semantic-list "(true)" 5879 . 5885) (punctuation ";" 5885 . 5886) (RETURN "return" 5922 . 5928) (symbol "true" 5929 . 5933) (punctuation ";" 5933 . 5934)))
          ("RPC_REQUEST_WITH_ERRORCODE_CHECK" (spp-arg-list ("method" "request" "response" "hippoConnector") 5976 . 6019) . 
              ((symbol "RPC_REQUEST" 6026 . 6037) (semantic-list "(method, request, response, hippoConnector)" 6037 . 6080) (punctuation ";" 6080 . 6081) (symbol "hippoConnector" 6100 . 6114) (punctuation "." 6114 . 6115) (symbol "collectErrorInfo" 6115 . 6131) (semantic-list "(response->errorinfo().errorcode(),  \\
                                    response->errorinfo().errormsg())" 6131 . 6239) (punctuation ";" 6239 . 6240) (IF "if" 6247 . 6249) (semantic-list "(proto::ERROR_MASTER_NOT_LEADER == response->errorinfo().errorcode() \\
        || proto::ERROR_MASTER_SERVICE_NOT_AVAILABLE == response->errorinfo().errorcode())" 6250 . 6411) (semantic-list "{                                                                   \\
        HIPPO_LOG(ERROR, #method\" request failed. errorCode:[%d], errorMsg:[%s]\", \\
                  response->errorinfo().errorcode(), response->errorinfo().errormsg().c_str()); \\
        /* should reconnect master */                                   \\
        hippoConnector.setConnectStatus(false);                         \\
        return false;                                                   \\
    }" 6418 . 6897) (symbol "hippoConnector" 6970 . 6984) (punctuation "." 6984 . 6985) (symbol "setConnectStatus" 6985 . 7001) (semantic-list "(true)" 7001 . 7007) (punctuation ";" 7007 . 7008) (RETURN "return" 7044 . 7050) (symbol "true" 7051 . 7055) (punctuation ";" 7055 . 7056)))
          )
)
    (semanticdb-table "ServiceStubFactory.h"
      :major-mode 'c++-mode
      :tags 
        '( ("HIPPO_SERVICESTUBFACTORY_H" variable (:constant-flag t) nil [44 70])
            ("util/Log.h" include nil nil [72 93])
            ("common/common.h" include nil nil [94 120])
            ("arpc/CommonMacros.h" include nil nil [121 151])
            ("arpc/ANetRPCChannelManager.h" include nil nil [152 191])
            ("BEGIN_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [215 219]))                  
                :type "int")
                nil [193 220])
            ("ServiceStubFactory" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [249 256])
                    ("ServiceStubFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("ServiceStubFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [261 282])
                    ("ServiceStubFactory" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [287 317])
                    ("private" label nil (reparse-symbol classsubparts) [318 326])
                    ("ServiceStubFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ServiceStubFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [350 377]))                          
                        :type ("ServiceStubFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [331 378])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ServiceStubFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [413 440]))                          
                        :type ("ServiceStubFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [383 441])
                    ("public" label nil (reparse-symbol classsubparts) [442 449])
                    ("init" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :type "bool")
                        (reparse-symbol classsubparts) [477 497])
                    ("protected" label nil (reparse-symbol classsubparts) [498 508])
                    ("_chManager" variable (:type ("arpc::ANetRPCChannelManager" type (:type "class") nil nil)) (reparse-symbol classsubparts) [513 552]))                  
                :type "class")
                nil [222 555])
            ("CREATE_SERVICE_STUB" variable (:constant-flag t) nil [566 585])
            ("HIPPO_INTERNAL_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ServiceStubFactory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1449 1468]))                  
                :type "int")
                nil [1422 1469])
            ("END_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1491 1495]))                  
                :type "int")
                nil [1471 1496]))          
      :file "ServiceStubFactory.h"
      :pointmax 1534
      :fsize 1533
      :lastmodtime '(22990 5595 922595 911000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CREATE_SERVICE_STUB" (spp-arg-list ("stub_type" "spec") 585 . 602) . 
              ((DO "do" 636 . 638) (semantic-list "{                                                                \\
        HIPPO_LOG(INFO, \"create service stub connecting to server:[%s]\", \\
                  spec.c_str());                                        \\
        RPCChannel *ch = _chManager.OpenChannel(spec, false, 50, 5000, false); \\
        if (ch == NULL) {                                               \\
            HIPPO_LOG(ERROR, \"OpenChannel failed, serverSpec:[%s].\",    \\
                      spec.c_str());                                    \\
            return NULL;                                                \\
        }                                                               \\
        return new stub_type(ch, ::google::protobuf::Service::STUB_OWNS_CHANNEL); \\
    }" 639 . 1395) (WHILE "while" 1396 . 1401) (semantic-list "(0)" 1401 . 1404)))
          ("HIPPO_SERVICESTUBFACTORY_H")
          )
)
    (semanticdb-table "ServiceStubFactory.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("sdk/ServiceStubFactory.h" include nil nil [1 36])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [38 58])
            ("BEGIN_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [81 85]))                  
                :type "int")
                nil [59 86])
            ("ServiceStubFactory" function
               (:constructor-flag t
                :parent "ServiceStubFactory"
                :type ("ServiceStubFactory" type (:type "class") nil nil))
                nil [88 132])
            ("ServiceStubFactory" function
               (:destructor-flag t
                :parent "ServiceStubFactory"
                :type "void")
                nil [134 218])
            ("init" function
               (:parent "ServiceStubFactory"
                :type "bool")
                nil [220 302])
            ("END_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sdk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [324 328]))                  
                :type "int")
                nil [304 329]))          
      :file "ServiceStubFactory.cpp"
      :pointmax 331
      :fsize 330
      :lastmodtime '(22990 3279 618465 106000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift_1_7!admin_starter!hippo!src!sdk!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
