;; Object rapidjson/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "rapidjson/"
  :tables
  (list
    (semanticdb-table "document.h"
      :major-mode 'c++-mode
      :tags 
        '( ("RAPIDJSON_DOCUMENT_H_" variable (:constant-flag t) nil [754 775])
            ("reader.h" include nil nil [802 821])
            ("internal/meta.h" include nil nil [822 848])
            ("internal/strfunc.h" include nil nil [849 878])
            ("new" include (:system-flag t) nil [879 893])
            ("iterator" include (:system-flag t) nil [1272 1291])
            ("GenericValue" type
               (:template 
                  ( ("Encoding" type (:type "class") nil nil)
                    ("Allocator" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [1477 1545])
            ("GenericDocument" type
               (:template 
                  ( ("Encoding" type (:type "class") nil nil)
                    ("Allocator" type (:type "class") nil nil)
                    ("StackAllocator" type (:type "class") nil nil))                  
                :type "class"
                :prototype t)
                nil [1547 1643])
            ("GenericMember" type
               (:template 
                  ( ("Encoding" type (:type "class") nil nil)
                    ("Allocator" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("name" variable (:type ("GenericValue" type
                         (:template-specifier 
                            ( ("Encoding" type nil nil nil)
                              ("Allocator" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2032 2071])
                    ("value" variable (:type ("GenericValue" type
                         (:template-specifier 
                            ( ("Encoding" type nil nil nil)
                              ("Allocator" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2119 2159]))                  )
                nil [1954 2187])
            ("GenericStringRef" type
               (:template 
                  ( ("CharType" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("Ch" type
                       (:typedef ("CharType" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [9012 9032])
                    ("s" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("str" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10262 10266]))                          
                        :type ("GenericStringRef" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [10260 10282])
                    ("GenericStringRef" function
                       (:constructor-flag t
                        :arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("CharType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11160 11180]))                          
                        :type ("GenericStringRef" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [11143 11260])
                    ("GenericStringRef" function
                       (:constructor-flag t
                        :arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("CharType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11682 11702])
                            ("len" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11703 11716]))                          
                        :type ("GenericStringRef" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [11665 11779])
                    ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Ch" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11886 11904])
                    ("length" variable
                       (:constant-flag t
                        :type ("SizeType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11937 11959])
                    ("private" label nil (reparse-symbol classsubparts) [12028 12036])
                    ("GenericStringRef" function
                       (:template 
                          ( ("SizeType" type nil nil nil))                          
                        :type ("GenericStringRef" type (:type "struct") nil nil)
                        :arguments 
                          ( ("" variable (:type ("CharType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12134 12149]))                          
                        :constructor-flag t
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [12092 12169]))                  )
                nil [8954 12172])
            ("StringRef" function
               (:template 
                  ( ("CharType" type (:type "class") nil nil))                  
                :type ("GenericStringRef" type
                     (:template-specifier 
                        ( ("CharType" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CharType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13005 13025]))                  
                :typemodifiers ("inline"))
                nil [12933 13096])
            ("StringRef" function
               (:template 
                  ( ("CharType" type (:type "class") nil nil))                  
                :type ("GenericStringRef" type
                     (:template-specifier 
                        ( ("CharType" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("CharType" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13889 13909])
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13910 13924]))                  
                :typemodifiers ("inline"))
                nil [13817 13990])
            ("internal" type
               (:members 
                  ( ("IsGenericValueImpl" type
                       (:superclasses 
                          ( ("FalseType" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [15062 15103])
                    ("Type" variable (:type "int") (reparse-symbol namespacesubparts) [15407 15415])
                    ("IsGenericValue" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("IsGenericValueImpl::Type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [15501 15578]))                  
                :type "namespace")
                nil [14965 15581])
            ("GenericValue" type
               (:template 
                  ( ("Encoding" type (:type "class") nil nil)
                    ("Allocator" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [16239 16246])
                    ("Member" type
                       (:typedef ("GenericMember" type
                             (:template-specifier 
                                ( ("Encoding" type nil nil nil)
                                  ("Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [16289 16339])
                    ("EncodingType" type
                       (:typedef ("Encoding" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [16344 16374])
                    ("AllocatorType" type
                       (:typedef ("Allocator" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [16440 16472])
                    ("Ch" type
                       (:typedef ("Encoding::Ch" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [16537 16570])
                    ("StringRefType" type
                       (:typedef ("GenericStringRef" type
                             (:template-specifier 
                                ( ("Ch" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [16632 16675])
                    ("MemberIterator" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16786 16810])
                    ("ConstMemberIterator" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16927 16956])
                    ("ValueIterator" type
                       (:typedef ("GenericValue" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [17017 17053])
                    ("ConstValueIterator" type
                       (:typedef ("GenericValue" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [17113 17160])
                    ("ValueType" type
                       (:typedef ("GenericValue" type
                             (:template-specifier 
                                ( ("Encoding" type nil nil nil)
                                  ("Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [17218 17270])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17444 17473])
                    ("private" label nil (reparse-symbol classsubparts) [17708 17716])
                    ("GenericValue" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17777 17801]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [17764 17802])
                    ("public" label nil (reparse-symbol classsubparts) [18211 18218])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [18485 18890])
                    ("GenericValue" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("GenericValue" type (:type "class") nil nil)
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [19322 19373])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19374 19396]))                          
                        :constructor-flag t
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [19268 19397])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [19991 20163])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20254 20385])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20486 20628])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [20729 21254])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21357 21723])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [21820 21873])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22019 22076])
                    ("data_" function
                       (:constructor-flag t
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22218 22256])
                    ("GenericValue" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22343 22355])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22356 22372])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22373 22394]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22330 22465])
                    ("GenericValue" function
                       (:constructor-flag t
                        :arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22552 22563])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [22564 22585]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [22539 22648])
                    ("GenericValue" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [23122 23924])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25689 25697]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [25679 25762])
                    ("CopyFrom" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("GenericValue" type (:type "class") nil nil)
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [26107 26158])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26159 26180]))                          )
                        (reparse-symbol classsubparts) [26044 26376])
                    ("==" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [27709 27760]))                          
                        :operator-flag t)
                        (reparse-symbol classsubparts) [27653 29231])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29307 29321]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [29291 29377])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29983 29996]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [29972 30041])
                    ("!=" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [30173 30224]))                          
                        :operator-flag t)
                        (reparse-symbol classsubparts) [30117 30258])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30338 30352]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [30322 30386])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30582 30595]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [30571 30629])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30845 30858])
                            ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30859 30883]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [30834 30906])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("lhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [31127 31140])
                            ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [31141 31165]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [31116 31191])
                    ("GetType" function (:type ("Type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31234 31305])
                    ("IsNull" function (:type "bool") (reparse-symbol classsubparts) [31310 31363])
                    ("IsFalse" function (:type "bool") (reparse-symbol classsubparts) [31368 31422])
                    ("IsTrue" function (:type "bool") (reparse-symbol classsubparts) [31427 31480])
                    ("IsBool" function (:type "bool") (reparse-symbol classsubparts) [31485 31544])
                    ("IsObject" function (:type "bool") (reparse-symbol classsubparts) [31549 31604])
                    ("IsArray" function (:type "bool") (reparse-symbol classsubparts) [31609 31663])
                    ("IsNumber" function (:type "bool") (reparse-symbol classsubparts) [31668 31729])
                    ("IsInt" function (:type "bool") (reparse-symbol classsubparts) [31734 31792])
                    ("IsUint" function (:type "bool") (reparse-symbol classsubparts) [31797 31856])
                    ("IsInt64" function (:type "bool") (reparse-symbol classsubparts) [31861 31921])
                    ("IsUint64" function (:type "bool") (reparse-symbol classsubparts) [31926 31987])
                    ("IsDouble" function (:type "bool") (reparse-symbol classsubparts) [31992 32053])
                    ("IsString" function (:type "bool") (reparse-symbol classsubparts) [32058 32119])
                    ("SetNull" function (:type ("GenericValue" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32163 32254])
                    ("GetBool" function (:type "bool") (reparse-symbol classsubparts) [32298 32378])
                    ("SetBool" function
                       (:arguments 
                          ( ("b" variable (:type "bool") (reparse-symbol arg-sub-list) [32466 32473]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [32444 32542])
                    ("SetObject" function (:type ("GenericValue" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32667 32771])
                    ("MemberCount" function (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32826 32909])
                    ("ObjectEmpty" function (:type "bool") (reparse-symbol classsubparts) [32958 33042])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("name" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33780 33788]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [33769 33864])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("name" variable
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [34040 34048]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [34029 34105])
                    ("[]" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("GenericValue" type (:type "class") nil nil)
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [34556 34608]))                          
                        :operator-flag t)
                        (reparse-symbol classsubparts) [34491 35143])
                    ("[]" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("GenericValue" type (:type "class") nil nil)
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [35219 35271]))                          
                        :constant-flag t
                        :operator-flag t)
                        (reparse-symbol classsubparts) [35148 35328])
                    ("MemberBegin" function (:type ("ConstMemberIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35750 35868])
                    ("MemberEnd" function (:type ("ConstMemberIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35955 36088])
                    ("MemberBegin" function (:type ("MemberIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36152 36265])
                    ("MemberEnd" function (:type ("MemberIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36346 36474])
                    ("HasMember" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [36835 36850]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [36820 36900])
                    ("HasMember" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [37938 37990]))                          )
                        (reparse-symbol classsubparts) [37883 38040])
                    ("FindMember" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38554 38569]))                          
                        :type ("MemberIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38528 38648])
                    ("FindMember" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38685 38700]))                          
                        :type ("ConstMemberIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [38654 38768])
                    ("FindMember" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("MemberIterator" type (:type "class") nil nil)
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39437 39489]))                          )
                        (reparse-symbol classsubparts) [39371 39768])
                    ("FindMember" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type ("ConstMemberIterator" type (:type "class") nil nil)
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39840 39892]))                          )
                        (reparse-symbol classsubparts) [39773 39960])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [41075 41094])
                            ("value" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [41095 41115])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [41116 41137]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [41051 41947])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42598 42617])
                            ("value" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42618 42638])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42639 42660]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [42574 42745])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [44764 44783])
                            ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44784 44792])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [44793 44814]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [44754 44899])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46194 46213])
                            ("value" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46214 46234])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46235 46256]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46170 46341])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47005 47024])
                            ("value" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47025 47045])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47046 47067]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [46981 47152])
                    ("AddMember" function
                       (:arguments 
                          ( ("name" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48339 48358])
                            ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48359 48367])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [48368 48389]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [48329 48474])
                    ("RemoveAllMembers" function (:type "void") (reparse-symbol classsubparts) [48661 48853])
                    ("RemoveMember" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [49258 49273]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [49240 49354])
                    ("RemoveMember" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [49567 49619]))                          )
                        (reparse-symbol classsubparts) [49509 49807])
                    ("RemoveMember" function
                       (:arguments 
                          ( ("m" variable (:type ("MemberIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50256 50273]))                          
                        :type ("MemberIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [50228 50806])
                    ("EraseMember" function
                       (:arguments 
                          ( ("pos" variable (:type ("ConstMemberIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51418 51442]))                          
                        :type ("MemberIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51391 51491])
                    ("EraseMember" function
                       (:arguments 
                          ( ("first" variable (:type ("ConstMemberIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52021 52047])
                            ("last" variable (:type ("ConstMemberIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52048 52073]))                          
                        :type ("MemberIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [51994 52683])
                    ("EraseMember" function
                       (:arguments 
                          ( ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [52891 52906]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [52874 52986])
                    ("EraseMember" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("name" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [53196 53248]))                          )
                        (reparse-symbol classsubparts) [53139 53435])
                    ("SetArray" function (:type ("GenericValue" type (:type "class") nil nil)) (reparse-symbol classsubparts) [53555 53658])
                    ("Size" function (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [53709 53784])
                    ("Capacity" function (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [53825 53908])
                    ("Empty" function (:type "bool") (reparse-symbol classsubparts) [53956 54033])
                    ("Clear" function (:type "void") (reparse-symbol classsubparts) [54219 54404])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("index" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54595 54610]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54570 54743])
                    ("[]" function
                       (:operator-flag t
                        :constant-flag t
                        :arguments 
                          ( ("index" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54779 54794]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [54748 54852])
                    ("Begin" function (:type ("ValueIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [54917 54996])
                    ("End" function (:type ("ValueIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [55077 55169])
                    ("Begin" function (:type ("ConstValueIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [55242 55327])
                    ("End" function (:type ("ConstValueIterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [55417 55498])
                    ("Reserve" function
                       (:arguments 
                          ( ("newCapacity" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55917 55938])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [55939 55960]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [55895 56300])
                    ("PushBack" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56958 56978])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [56979 57000]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [56935 57301])
                    ("PushBack" function
                       (:arguments 
                          ( ("value" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58101 58121])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [58122 58143]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [58078 58226])
                    ("PushBack" function
                       (:arguments 
                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [59454 59462])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [59463 59484]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [59445 59562])
                    ("PopBack" function (:type ("GenericValue" type (:type "class") nil nil)) (reparse-symbol classsubparts) [59669 59853])
                    ("Erase" function
                       (:arguments 
                          ( ("pos" variable (:type ("ConstValueIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60239 60262]))                          
                        :type ("ValueIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [60219 60306])
                    ("Erase" function
                       (:arguments 
                          ( ("first" variable (:type ("ConstValueIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60723 60748])
                            ("last" variable (:type ("ConstValueIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60749 60773]))                          
                        :type ("ValueIterator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [60703 61365])
                    ("GetInt" function (:type "int") (reparse-symbol classsubparts) [61411 61503])
                    ("GetUint" function (:type "unsigned int") (reparse-symbol classsubparts) [61508 61600])
                    ("GetInt64" function (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [61605 61695])
                    ("GetUint64" function (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [61700 61791])
                    ("GetDouble" function (:type "double") (reparse-symbol classsubparts) [61797 62443])
                    ("SetInt" function
                       (:arguments 
                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [62470 62476]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62449 62560])
                    ("SetUint" function
                       (:arguments 
                          ( ("u" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [62587 62598]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62565 62676])
                    ("SetInt64" function
                       (:arguments 
                          ( ("i64" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62704 62716]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62681 62792])
                    ("SetUint64" function
                       (:arguments 
                          ( ("u64" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62821 62834]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62797 62908])
                    ("SetDouble" function
                       (:arguments 
                          ( ("d" variable (:type "double") (reparse-symbol arg-sub-list) [62937 62946]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [62913 63024])
                    ("GetString" function
                       (:pointer 1
                        :constant-flag t
                        :type ("Ch" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [63070 63196])
                    ("GetStringLength" function (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [63365 63509])
                    ("SetString" function
                       (:arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [64032 64044])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64045 64061]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [64008 64105])
                    ("SetString" function
                       (:arguments 
                          ( ("s" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64384 64400]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [64360 64458])
                    ("SetString" function
                       (:arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65076 65088])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [65089 65105])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65106 65127]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [65052 65215])
                    ("SetString" function
                       (:arguments 
                          ( ("s" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65625 65637])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [65638 65659]))                          
                        :type ("GenericValue" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [65601 65716])
                    ("Accept" function
                       (:template 
                          ( ("Handler" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("handler" variable
                               (:reference 1
                                :type ("Handler" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [66858 66875]))                          )
                        (reparse-symbol classsubparts) [66814 68547])
                    ("private" label nil (reparse-symbol classsubparts) [68549 68557])
                    ("GenericValue" friend nil (reparse-symbol classsubparts) [68592 68617])
                    ("GenericDocument" friend nil (reparse-symbol classsubparts) [68663 68691])
                    ("" type
                       (:members 
                          ( ("kBoolFlag" variable
                               (:constant-flag t
                                :default-value (68725 68730)
                                :type "int")
                                (reparse-symbol enumsubparts) [68713 68730])
                            ("kNumberFlag" variable
                               (:constant-flag t
                                :default-value (68754 68759)
                                :type "int")
                                (reparse-symbol enumsubparts) [68740 68759])
                            ("kIntFlag" variable
                               (:constant-flag t
                                :default-value (68780 68785)
                                :type "int")
                                (reparse-symbol enumsubparts) [68769 68785])
                            ("kUintFlag" variable
                               (:constant-flag t
                                :default-value (68807 68812)
                                :type "int")
                                (reparse-symbol enumsubparts) [68795 68812])
                            ("kInt64Flag" variable
                               (:constant-flag t
                                :default-value (68835 68841)
                                :type "int")
                                (reparse-symbol enumsubparts) [68822 68841])
                            ("kUint64Flag" variable
                               (:constant-flag t
                                :default-value (68865 68871)
                                :type "int")
                                (reparse-symbol enumsubparts) [68851 68871])
                            ("kDoubleFlag" variable
                               (:constant-flag t
                                :default-value (68895 68901)
                                :type "int")
                                (reparse-symbol enumsubparts) [68881 68901])
                            ("kStringFlag" variable
                               (:constant-flag t
                                :default-value (68925 68933)
                                :type "int")
                                (reparse-symbol enumsubparts) [68911 68933])
                            ("kCopyFlag" variable
                               (:constant-flag t
                                :default-value (68955 68963)
                                :type "int")
                                (reparse-symbol enumsubparts) [68943 68963])
                            ("kInlineStrFlag" variable
                               (:constant-flag t
                                :default-value (68990 68998)
                                :type "int")
                                (reparse-symbol enumsubparts) [68973 68998])
                            ("kNullFlag" variable
                               (:constant-flag t
                                :default-value (69066 69075)
                                :type "int")
                                (reparse-symbol enumsubparts) [69054 69075])
                            ("kTrueFlag" variable
                               (:constant-flag t
                                :default-value (69097 69118)
                                :type "int")
                                (reparse-symbol enumsubparts) [69085 69118])
                            ("kFalseFlag" variable
                               (:constant-flag t
                                :default-value (69141 69163)
                                :type "int")
                                (reparse-symbol enumsubparts) [69128 69163])
                            ("kNumberIntFlag" variable
                               (:constant-flag t
                                :default-value (69190 69215)
                                :type "int")
                                (reparse-symbol enumsubparts) [69173 69215])
                            ("kIntFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69218 69228])
                            ("kInt64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69229 69240])
                            ("kNumberUintFlag" variable
                               (:constant-flag t
                                :default-value (69267 69292)
                                :type "int")
                                (reparse-symbol enumsubparts) [69249 69292])
                            ("kUintFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69295 69306])
                            ("kUint64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69307 69320])
                            ("kInt64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69321 69332])
                            ("kNumberInt64Flag" variable
                               (:constant-flag t
                                :default-value (69360 69385)
                                :type "int")
                                (reparse-symbol enumsubparts) [69341 69385])
                            ("kInt64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69388 69399])
                            ("kNumberUint64Flag" variable
                               (:constant-flag t
                                :default-value (69428 69453)
                                :type "int")
                                (reparse-symbol enumsubparts) [69408 69453])
                            ("kUint64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69456 69468])
                            ("kNumberDoubleFlag" variable
                               (:constant-flag t
                                :default-value (69497 69522)
                                :type "int")
                                (reparse-symbol enumsubparts) [69477 69522])
                            ("kDoubleFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69525 69537])
                            ("kNumberAnyFlag" variable
                               (:constant-flag t
                                :default-value (69563 69588)
                                :type "int")
                                (reparse-symbol enumsubparts) [69546 69588])
                            ("kIntFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69591 69601])
                            ("kInt64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69602 69614])
                            ("kUintFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69615 69626])
                            ("kUint64Flag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69627 69640])
                            ("kDoubleFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69641 69653])
                            ("kConstStringFlag" variable
                               (:constant-flag t
                                :default-value (69681 69706)
                                :type "int")
                                (reparse-symbol enumsubparts) [69662 69706])
                            ("kCopyStringFlag" variable
                               (:constant-flag t
                                :default-value (69734 69759)
                                :type "int")
                                (reparse-symbol enumsubparts) [69716 69759])
                            ("kCopyFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69762 69772])
                            ("kShortStringFlag" variable
                               (:constant-flag t
                                :default-value (69800 69825)
                                :type "int")
                                (reparse-symbol enumsubparts) [69781 69825])
                            ("kCopyFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69828 69839])
                            ("kInlineStrFlag" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [69840 69855])
                            ("kObjectFlag" variable
                               (:constant-flag t
                                :default-value (69878 69889)
                                :type "int")
                                (reparse-symbol enumsubparts) [69864 69889])
                            ("kArrayFlag" variable
                               (:constant-flag t
                                :default-value (69912 69922)
                                :type "int")
                                (reparse-symbol enumsubparts) [69899 69922])
                            ("kTypeMask" variable
                               (:constant-flag t
                                :default-value (69945 69949)
                                :type "int")
                                (reparse-symbol enumsubparts) [69933 69949]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [68698 70021])
                    ("kDefaultArrayCapacity" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "16"
                        :type ("SizeType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [70027 70076])
                    ("kDefaultObjectCapacity" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "16"
                        :type ("SizeType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [70081 70131])
                    ("String" type
                       (:members 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [70161 70175])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [70184 70200])
                            ("hashcode" variable (:type "unsigned int") (reparse-symbol classsubparts) [70209 70227]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [70137 70249])
                    ("ShortString" type
                       (:members 
                          ( ("" type
                               (:members 
                                  ( ("MaxChars" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [71010 71020])
                                    ("MaxSize" variable
                                       (:constant-flag t
                                        :default-value (71060 71072)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [71050 71072])
                                    ("LenPos" variable
                                       (:constant-flag t
                                        :default-value (71083 71090)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [71074 71090]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [71003 71093])
                            ("str" variable
                               (:dereference 1
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [71102 71119])
                            ("Usable" function
                               (:typemodifiers ("inline" "static")
                                :arguments 
                                  ( ("len" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71155 71168]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [71129 71219])
                            ("SetLength" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("len" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71254 71267]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [71228 71318])
                            ("GetLength" function
                               (:typemodifiers ("inline")
                                :type ("SizeType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [71327 71425]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [70974 71432])
                    ("Number" type
                       (:members 
                          ( ("i" variable (:type ("I" type
                                 (:prototype t
                                  :type "struct")
                                  nil nil)) (reparse-symbol classsubparts) [71704 71774])
                            ("I" type
                               (:members 
                                  ( ("i" variable (:type "int") (reparse-symbol classsubparts) [71727 71733])
                                    ("padding" variable
                                       (:dereference 1
                                        :type "char")
                                        (reparse-symbol classsubparts) [71746 71762]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [71704 71774])
                            ("u" variable (:type ("U" type
                                 (:prototype t
                                  :type "struct")
                                  nil nil)) (reparse-symbol classsubparts) [71783 71859])
                            ("U" type
                               (:members 
                                  ( ("u" variable (:type "unsigned int") (reparse-symbol classsubparts) [71806 71817])
                                    ("padding2" variable
                                       (:dereference 1
                                        :type "char")
                                        (reparse-symbol classsubparts) [71830 71847]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [71783 71859])
                            ("i64" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72045 72057])
                            ("u64" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72066 72079])
                            ("d" variable (:type "double") (reparse-symbol classsubparts) [72088 72097]))                          
                        :type "union")
                        (reparse-symbol classsubparts) [71634 72104])
                    ("Object" type
                       (:members 
                          ( ("members" variable
                               (:pointer 1
                                :type ("Member" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [72146 72162])
                            ("size" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72171 72185])
                            ("capacity" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72194 72212]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [72122 72219])
                    ("Array" type
                       (:members 
                          ( ("elements" variable
                               (:pointer 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [72301 72324])
                            ("size" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72333 72347])
                            ("capacity" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72356 72374]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [72278 72381])
                    ("Data" type
                       (:members 
                          ( ("s" variable (:type ("String" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72461 72470])
                            ("ss" variable (:type ("ShortString" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72479 72494])
                            ("n" variable (:type ("Number" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72503 72512])
                            ("o" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72521 72530])
                            ("a" variable (:type ("Array" type (:type "class") nil nil)) (reparse-symbol classsubparts) [72539 72547]))                          
                        :type "union")
                        (reparse-symbol classsubparts) [72440 72554])
                    ("SetArrayRaw" function
                       (:arguments 
                          ( ("values" variable
                               (:pointer 1
                                :type ("GenericValue" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [72715 72736])
                            ("count" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [72737 72752])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [72753 72774]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [72698 73129])
                    ("SetObjectRaw" function
                       (:arguments 
                          ( ("members" variable
                               (:pointer 1
                                :type ("Member" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [73240 73256])
                            ("count" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73257 73272])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [73273 73294]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [73222 73630])
                    ("SetStringRaw" function
                       (:arguments 
                          ( ("s" variable (:type ("StringRefType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [73986 74002])
                            ("allocator" variable
                               (:reference 1
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [74003 74024]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [73968 74514])
                    ("StringEqual" function
                       (:template 
                          ( ("SourceAllocator" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("rhs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericValue" type
                                     (:template-specifier 
                                        ( ("Encoding" type nil nil nil)
                                          ("SourceAllocator" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [74777 74828]))                          )
                        (reparse-symbol classsubparts) [74720 75303])
                    ("data_" variable (:type ("Data" type (:type "class") nil nil)) (reparse-symbol classsubparts) [75309 75320])
                    ("flags_" variable (:type "unsigned int") (reparse-symbol classsubparts) [75325 75341]))                  )
                nil [16143 75344])
            ("Value" type
               (:typedef ("GenericValue" type
                     (:template-specifier 
                        ( ("UTF8" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [75382 75418])
            ("GenericDocument" type
               (:template 
                  ( ("Encoding" type (:type "class") nil nil)
                    ("Allocator" type (:type "class") nil nil)
                    ("StackAllocator" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [76258 76265])
                    ("Ch" type
                       (:typedef ("Encoding::Ch" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [76270 76303])
                    ("ValueType" type
                       (:typedef ("GenericValue" type
                             (:template-specifier 
                                ( ("Encoding" type nil nil nil)
                                  ("Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [76373 76425])
                    ("AllocatorType" type
                       (:typedef ("Allocator" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [76466 76498])
                    ("GenericDocument" function
                       (:constructor-flag t
                        :arguments 
                          ( ("type" variable (:type ("Type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [76980 76990])
                            ("allocator" variable
                               (:pointer 1
                                :default-value "0"
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [76991 77015])
                            ("stackCapacity" variable
                               (:default-value "kDefaultStackCapacity"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77017 77061])
                            ("stackAllocator" variable
                               (:pointer 1
                                :default-value "0"
                                :type ("StackAllocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77063 77097]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [76964 77351])
                    ("GenericDocument" function
                       (:constructor-flag t
                        :arguments 
                          ( ("allocator" variable
                               (:pointer 1
                                :default-value "0"
                                :type ("Allocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77690 77714])
                            ("stackCapacity" variable
                               (:default-value "kDefaultStackCapacity"
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77716 77760])
                            ("stackAllocator" variable
                               (:pointer 1
                                :default-value "0"
                                :type ("StackAllocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [77762 77796]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [77674 78009])
                    ("GenericDocument" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [78539 78584])
                    ("ParseStream" function
                       (:template 
                          ( ("unsigned int" type nil nil nil)
                            ("SourceEncoding" type (:type "class") nil nil)
                            ("InputStream" type (:type "class") nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("is" variable
                               (:reference 1
                                :type ("InputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [80841 80857]))                          )
                        (reparse-symbol classsubparts) [80730 81381])
                    ("ParseStream" function
                       (:template 
                          ( ("unsigned int" type nil nil nil)
                            ("InputStream" type (:type "class") nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("is" variable
                               (:reference 1
                                :type ("InputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [81758 81774]))                          )
                        (reparse-symbol classsubparts) [81672 81849])
                    ("ParseStream" function
                       (:template 
                          ( ("InputStream" type (:type "class") nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("is" variable
                               (:reference 1
                                :type ("InputStream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [82178 82194]))                          )
                        (reparse-symbol classsubparts) [82113 82277])
                    ("ParseInsitu" function
                       (:template 
                          ( ("unsigned int" type nil nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("str" variable
                               (:pointer 1
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [82643 82651]))                          )
                        (reparse-symbol classsubparts) [82579 82773])
                    ("ParseInsitu" function
                       (:arguments 
                          ( ("str" variable
                               (:pointer 1
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [83008 83016]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [82979 83077])
                    ("Parse" function
                       (:template 
                          ( ("unsigned int" type nil nil nil)
                            ("SourceEncoding" type (:type "class") nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("str" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :constant-flag t
                                :type ("SourceEncoding::Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [83538 83577]))                          )
                        (reparse-symbol classsubparts) [83455 83756])
                    ("Parse" function
                       (:template 
                          ( ("unsigned int" type nil nil nil))                          
                        :type ("GenericDocument" type (:type "class") nil nil)
                        :arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [84040 84054]))                          )
                        (reparse-symbol classsubparts) [83982 84111])
                    ("Parse" function
                       (:arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [84292 84306]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [84269 84361])
                    ("HasParseError" function (:type "bool") (reparse-symbol classsubparts) [84486 84547])
                    ("GetParseError" function (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [84606 84674])
                    ("GetErrorOffset" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [84750 84813])
                    ("ParseResult" function (:type "int") (reparse-symbol classsubparts) [85209 85253])
                    ("GetAllocator" function (:type ("Allocator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [85313 85412])
                    ("GetStackCapacity" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [85462 85526])
                    ("private" label nil (reparse-symbol classsubparts) [85528 85536])
                    ("ClearStackOnExit" type
                       (:members 
                          ( ("ClearStackOnExit" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("d" variable
                                       (:reference 1
                                        :type ("GenericDocument" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85672 85691]))                                  
                                :type ("ClearStackOnExit" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [85655 85702])
                            ("ClearStackOnExit" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [85711 85751])
                            ("private" label nil (reparse-symbol classsubparts) [85756 85764])
                            ("ClearStackOnExit" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ClearStackOnExit" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85790 85814]))                                  
                                :type ("ClearStackOnExit" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [85773 85815])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ClearStackOnExit" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [85852 85876]))                                  
                                :type ("ClearStackOnExit" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [85824 85877])
                            ("d_" variable (:type ("GenericDocument" type (:type "class") nil nil)) (reparse-symbol classsubparts) [85886 85906]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [85612 85913])
                    ("GenericReader" friend nil (reparse-symbol classsubparts) [86015 86041])
                    ("GenericValue" friend nil (reparse-symbol classsubparts) [86092 86117])
                    ("Null" function (:type "bool") (reparse-symbol classsubparts) [86177 86258])
                    ("Bool" function
                       (:arguments 
                          ( ("b" variable (:type "bool") (reparse-symbol arg-sub-list) [86273 86280]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86263 86351])
                    ("Int" function
                       (:arguments 
                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [86365 86371]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86356 86442])
                    ("Uint" function
                       (:arguments 
                          ( ("i" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [86457 86468]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86447 86539])
                    ("Int64" function
                       (:arguments 
                          ( ("i" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86555 86565]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86544 86636])
                    ("Uint64" function
                       (:arguments 
                          ( ("i" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86653 86664]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86641 86735])
                    ("Double" function
                       (:arguments 
                          ( ("d" variable (:type "double") (reparse-symbol arg-sub-list) [86752 86761]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86740 86832])
                    ("String" function
                       (:arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [86850 86864])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [86865 86881])
                            ("copy" variable (:type "bool") (reparse-symbol arg-sub-list) [86882 86892]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [86838 87122])
                    ("StartObject" function (:type "bool") (reparse-symbol classsubparts) [87128 87227])
                    ("Key" function
                       (:arguments 
                          ( ("str" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("Ch" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [87246 87260])
                            ("length" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87261 87277])
                            ("copy" variable (:type "bool") (reparse-symbol arg-sub-list) [87278 87288]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [87237 87326])
                    ("EndObject" function
                       (:arguments 
                          ( ("memberCount" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87347 87368]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [87332 87599])
                    ("StartArray" function (:type "bool") (reparse-symbol classsubparts) [87605 87702])
                    ("EndArray" function
                       (:arguments 
                          ( ("elementCount" variable (:type ("SizeType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [87726 87748]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [87712 87948])
                    ("private" label nil (reparse-symbol classsubparts) [87950 87958])
                    ("GenericDocument" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericDocument" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [88004 88027]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [87988 88028])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("GenericDocument" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [88088 88111]))                          
                        :type ("GenericDocument" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [88061 88112])
                    ("ClearStack" function (:type "void") (reparse-symbol classsubparts) [88118 88464])
                    ("Destroy" function (:type "void") (reparse-symbol classsubparts) [88470 88533])
                    ("kDefaultStackCapacity" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "1024"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [88539 88588])
                    ("allocator_" variable
                       (:pointer 1
                        :type ("Allocator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [88593 88615])
                    ("ownAllocator_" variable
                       (:pointer 1
                        :type ("Allocator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [88620 88645])
                    ("stack_" variable (:type ("internal::Stack" type
                         (:template-specifier 
                            ( ("StackAllocator" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [88650 88689])
                    ("parseResult_" variable (:type ("ParseResult" type (:type "class") nil nil)) (reparse-symbol classsubparts) [88694 88719]))                  
                :superclasses 
                  ( ("GenericValue" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [76078 88722])
            ("Document" type
               (:typedef ("GenericDocument" type
                     (:template-specifier 
                        ( ("UTF8" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [88763 88805])
            ("GenericValue" function
               (:template 
                  ( ("SourceAllocator" type (:type "class") nil nil))                  
                :type ("GenericValue" type (:type "class") nil nil)
                :arguments 
                  ( ("rhs" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GenericValue" type
                             (:template-specifier 
                                ( ("Encoding" type nil nil nil)
                                  ("SourceAllocator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [89003 89053])
                    ("allocator" variable
                       (:reference 1
                        :type ("Allocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [89054 89075]))                  
                :typemodifiers ("inline")
                :parent "GenericValue"
                :constructor-flag t)
                nil [88913 89789]))          
      :file "document.h"
      :pointmax 89978
      :fsize 92108
      :lastmodtime '(22186 54368 0 0)
      :unmatched-syntax '((thing 89919 . 89937) (thing 89791 . 89814) (thing 88911 . 88912) (thing 88902 . 88911) (thing 88893 . 88901) (thing 88891 . 88892) (thing 88883 . 88891) (thing 88874 . 88882) (thing 88873 . 88874) (thing 88864 . 88872) (thing 86117 . 86118) (thing 86090 . 86091) (thing 86082 . 86090) (thing 86080 . 86081) (thing 86072 . 86080) (thing 86071 . 86072) (thing 86062 . 86070) (thing 86041 . 86042) (thing 86013 . 86014) (thing 86005 . 86013) (thing 86004 . 86005) (thing 85996 . 86004) (thing 85995 . 85996) (thing 85987 . 85995) (thing 85986 . 85987) (thing 85977 . 85985) (thing 85646 . 85654) (thing 85646 . 85654) (thing 85200 . 85208) (thing 80300 . 80314) (thing 80281 . 80299) (thing 80240 . 80280) (thing 80236 . 80240) (thing 80231 . 80235) (thing 80224 . 80230) (thing 80217 . 80223) (thing 79605 . 79863) (thing 79586 . 79604) (thing 79563 . 79585) (thing 79559 . 79563) (thing 79557 . 79558) (thing 79542 . 79557) (thing 76955 . 76963) (thing 74619 . 74714) (thing 74600 . 74618) (thing 74580 . 74599) (thing 74571 . 74580) (thing 74566 . 74570) (thing 73768 . 73870) (thing 73749 . 73767) (thing 73731 . 73748) (thing 73719 . 73731) (thing 73714 . 73718) (thing 71044 . 71048) (thing 71044 . 71048) (thing 71044 . 71048) (thing 71044 . 71048) (thing 71038 . 71044) (thing 71038 . 71044) (thing 71038 . 71044) (thing 71038 . 71044) (thing 71036 . 71037) (thing 71036 . 71037) (thing 71036 . 71037) (thing 71036 . 71037) (thing 71027 . 71035) (thing 71027 . 71035) (thing 71027 . 71035) (thing 71027 . 71035) (thing 71021 . 71027) (thing 71021 . 71027) (thing 71021 . 71027) (thing 71021 . 71027) (thing 71019 . 71020) (thing 71019 . 71020) (thing 71019 . 71020) (thing 71019 . 71020) (thing 69838 . 69839) (thing 69838 . 69839) (thing 69826 . 69827) (thing 69826 . 69827) (thing 69760 . 69761) (thing 69760 . 69761) (thing 69639 . 69640) (thing 69639 . 69640) (thing 69625 . 69626) (thing 69625 . 69626) (thing 69613 . 69614) (thing 69613 . 69614) (thing 69600 . 69601) (thing 69600 . 69601) (thing 69589 . 69590) (thing 69589 . 69590) (thing 69523 . 69524) (thing 69523 . 69524) (thing 69454 . 69455) (thing 69454 . 69455) (thing 69386 . 69387) (thing 69386 . 69387) (thing 69319 . 69320) (thing 69319 . 69320) (thing 69305 . 69306) (thing 69305 . 69306) (thing 69293 . 69294) (thing 69293 . 69294) (thing 69227 . 69228) (thing 69227 . 69228) (thing 69216 . 69217) (thing 69216 . 69217) (thing 68691 . 68692) (thing 68661 . 68662) (thing 68653 . 68661) (thing 68651 . 68652) (thing 68643 . 68651) (thing 68641 . 68642) (thing 68633 . 68641) (thing 68632 . 68633) (thing 68623 . 68631) (thing 68617 . 68618) (thing 68590 . 68591) (thing 68582 . 68590) (thing 68580 . 68581) (thing 68572 . 68580) (thing 68571 . 68572) (thing 68562 . 68570) (thing 59349 . 59440) (thing 59424 . 59439) (thing 59424 . 59439) (thing 59350 . 59422) (thing 59350 . 59422) (thing 59323 . 59349) (thing 59317 . 59318) (thing 59316 . 59317) (thing 59307 . 59315) (thing 59306 . 59307) (thing 59297 . 59305) (thing 48233 . 48324) (thing 48308 . 48323) (thing 48308 . 48323) (thing 48234 . 48306) (thing 48234 . 48306) (thing 48207 . 48233) (thing 48201 . 48202) (thing 48200 . 48201) (thing 48191 . 48199) (thing 48190 . 48191) (thing 48181 . 48189) (thing 44658 . 44749) (thing 44733 . 44748) (thing 44733 . 44748) (thing 44659 . 44731) (thing 44659 . 44731) (thing 44632 . 44658) (thing 44626 . 44627) (thing 44625 . 44626) (thing 44616 . 44624) (thing 44615 . 44616) (thing 44606 . 44614) (thing 33921 . 34028) (thing 34006 . 34027) (thing 34006 . 34027) (thing 33922 . 34005) (thing 33922 . 34005) (thing 33895 . 33921) (thing 33889 . 33890) (thing 33888 . 33889) (thing 33879 . 33887) (thing 33878 . 33879) (thing 33869 . 33877) (thing 33667 . 33768) (thing 33752 . 33767) (thing 33752 . 33767) (thing 33668 . 33751) (thing 33668 . 33751) (thing 33641 . 33667) (thing 33635 . 33636) (thing 33634 . 33635) (thing 33625 . 33633) (thing 33624 . 33625) (thing 33615 . 33623) (thing 31076 . 31115) (thing 31108 . 31114) (thing 31108 . 31114) (thing 31108 . 31114) (thing 31108 . 31114) (thing 31077 . 31106) (thing 31077 . 31106) (thing 31077 . 31106) (thing 31077 . 31106) (thing 31050 . 31076) (thing 31043 . 31049) (thing 31041 . 31042) (thing 31040 . 31041) (thing 31031 . 31039) (thing 31030 . 31031) (thing 31021 . 31029) (thing 30794 . 30833) (thing 30826 . 30832) (thing 30826 . 30832) (thing 30826 . 30832) (thing 30826 . 30832) (thing 30795 . 30824) (thing 30795 . 30824) (thing 30795 . 30824) (thing 30795 . 30824) (thing 30768 . 30794) (thing 30761 . 30767) (thing 30759 . 30760) (thing 30758 . 30759) (thing 30749 . 30757) (thing 30748 . 30749) (thing 30739 . 30747) (thing 30531 . 30570) (thing 30563 . 30569) (thing 30563 . 30569) (thing 30532 . 30561) (thing 30532 . 30561) (thing 30505 . 30531) (thing 30503 . 30504) (thing 30502 . 30503) (thing 30493 . 30501) (thing 30492 . 30493) (thing 30483 . 30491) (thing 29890 . 29971) (thing 29964 . 29970) (thing 29964 . 29970) (thing 29891 . 29962) (thing 29891 . 29962) (thing 29864 . 29890) (thing 29862 . 29863) (thing 29861 . 29862) (thing 29852 . 29860) (thing 29851 . 29852) (thing 29842 . 29850) (thing 27297 . 27314) (thing 27278 . 27296) (thing 27275 . 27277) (thing 27271 . 27275) (thing 27269 . 27270) (thing 27257 . 27269) (thing 27171 . 27185) (thing 27152 . 27170) (thing 27117 . 27151) (thing 27113 . 27117) (thing 27108 . 27112) (thing 27101 . 27107) (thing 27094 . 27100) (thing 26592 . 26736) (thing 26573 . 26591) (thing 26551 . 26572) (thing 26547 . 26551) (thing 26545 . 26546) (thing 26533 . 26545) (thing 25631 . 25674) (thing 25658 . 25673) (thing 25658 . 25673) (thing 25632 . 25656) (thing 25632 . 25656) (thing 25605 . 25631) (thing 25599 . 25600) (thing 25598 . 25599) (thing 25589 . 25597) (thing 25588 . 25589) (thing 25579 . 25587) (thing 24846 . 24908) (thing 24827 . 24845) (thing 24807 . 24826) (thing 24806 . 24807) (thing 24798 . 24806) (thing 24796 . 24797) (thing 24784 . 24796) (thing 24184 . 24308) (thing 24165 . 24183) (thing 24145 . 24164) (thing 24144 . 24145) (thing 24136 . 24144) (thing 24134 . 24135) (thing 24122 . 24134) (thing 22216 . 22217) (thing 22197 . 22215) (thing 22179 . 22196) (thing 22167 . 22179) (thing 22158 . 22166) (thing 22017 . 22018) (thing 21998 . 22016) (thing 21967 . 21997) (thing 21955 . 21967) (thing 21818 . 21819) (thing 21799 . 21817) (thing 21788 . 21798) (thing 21776 . 21788) (thing 21767 . 21775) (thing 21355 . 21356) (thing 21336 . 21354) (thing 21321 . 21335) (thing 21309 . 21321) (thing 21300 . 21308) (thing 20727 . 20728) (thing 20708 . 20726) (thing 20694 . 20707) (thing 20682 . 20694) (thing 20673 . 20681) (thing 20484 . 20485) (thing 20465 . 20483) (thing 20452 . 20464) (thing 20440 . 20452) (thing 20431 . 20439) (thing 20252 . 20253) (thing 20233 . 20251) (thing 20225 . 20232) (thing 20213 . 20225) (thing 20204 . 20212) (thing 19989 . 19990) (thing 19896 . 19914) (thing 19842 . 19895) (thing 19866 . 19894) (thing 19830 . 19842) (thing 19821 . 19829) (thing 19815 . 19816) (thing 19814 . 19815) (thing 19805 . 19813) (thing 19804 . 19805) (thing 19795 . 19803) (thing 18483 . 18484) (thing 18464 . 18482) (thing 18452 . 18463) (thing 18440 . 18452) (thing 18431 . 18439) (thing 17442 . 17443) (thing 17423 . 17441) (thing 17420 . 17422) (thing 17408 . 17420) (thing 16926 . 16927) (thing 16925 . 16926) (thing 16924 . 16925) (thing 16915 . 16924) (thing 16914 . 16915) (thing 16906 . 16914) (thing 16905 . 16906) (thing 16901 . 16905) (thing 16900 . 16901) (thing 16879 . 16900) (thing 16870 . 16878) (thing 16862 . 16869) (thing 16785 . 16786) (thing 16784 . 16785) (thing 16783 . 16784) (thing 16774 . 16783) (thing 16773 . 16774) (thing 16765 . 16773) (thing 16764 . 16765) (thing 16759 . 16764) (thing 16758 . 16759) (thing 16737 . 16758) (thing 16728 . 16736) (thing 16720 . 16727) (thing 15406 . 15407) (thing 15405 . 15406) (thing 15404 . 15405) (thing 15403 . 15404) (thing 15401 . 15402) (thing 15400 . 15401) (thing 15387 . 15400) (thing 15386 . 15387) (thing 15385 . 15386) (thing 15384 . 15385) (thing 15375 . 15383) (thing 15373 . 15374) (thing 15361 . 15373) (thing 15360 . 15361) (thing 15359 . 15360) (thing 15358 . 15359) (thing 15349 . 15357) (thing 15348 . 15349) (thing 15336 . 15348) (thing 15335 . 15336) (thing 15327 . 15335) (thing 15325 . 15326) (thing 15319 . 15320) (thing 15315 . 15319) (thing 15314 . 15315) (thing 15313 . 15314) (thing 15312 . 15313) (thing 15299 . 15312) (thing 15298 . 15299) (thing 15297 . 15298) (thing 15296 . 15297) (thing 15287 . 15295) (thing 15286 . 15287) (thing 15282 . 15286) (thing 15273 . 15281) (thing 15271 . 15272) (thing 15267 . 15271) (thing 15266 . 15267) (thing 15265 . 15266) (thing 15264 . 15265) (thing 15252 . 15264) (thing 15251 . 15252) (thing 15250 . 15251) (thing 15249 . 15250) (thing 15240 . 15248) (thing 15239 . 15240) (thing 15235 . 15239) (thing 15226 . 15234) (thing 15224 . 15225) (thing 15223 . 15224) (thing 15222 . 15223) (thing 15204 . 15222) (thing 15197 . 15203) (thing 15195 . 15196) (thing 15194 . 15195) (thing 15185 . 15193) (thing 15184 . 15185) (thing 15175 . 15183) (thing 15060 . 15061) (thing 15056 . 15060) (thing 15054 . 15055) (thing 15044 . 15053) (thing 15035 . 15043) (thing 15033 . 15034) (thing 15029 . 15033) (thing 15027 . 15028) (thing 15018 . 15026) (thing 15009 . 15017) (thing 15007 . 15008) (thing 15006 . 15007) (thing 14997 . 15005) (thing 14996 . 14997) (thing 14987 . 14995) (thing 12149 . 12152) (thing 12143 . 12149) (thing 11867 . 11880) (thing 11861 . 11866) (thing 11858 . 11860) (thing 11857 . 11858) (thing 11854 . 11856) (thing 11848 . 11853) (thing 11839 . 11847) (thing 11134 . 11142) (thing 10258 . 10259) (thing 10231 . 10249) (thing 10204 . 10230) (thing 10226 . 10229) (thing 10226 . 10229) (thing 10220 . 10226) (thing 10220 . 10226) (thing 10188 . 10204) (thing 10182 . 10183) (thing 10181 . 10182) (thing 10172 . 10180) (thing 10171 . 10172) (thing 10163 . 10171) (thing 7138 . 7139) (thing 3509 . 7138) (thing 3507 . 3508) (thing 3507 . 3508) (thing 3503 . 3507) (thing 3503 . 3507) (thing 3502 . 3503) (thing 3502 . 3503) (thing 3501 . 3502) (thing 3501 . 3502) (thing 3500 . 3501) (thing 3500 . 3501) (thing 3498 . 3499) (thing 3498 . 3499) (thing 3489 . 3498) (thing 3489 . 3498) (thing 3488 . 3489) (thing 3488 . 3489) (thing 3480 . 3488) (thing 3480 . 3488) (thing 3479 . 3480) (thing 3479 . 3480) (thing 3466 . 3479) (thing 3466 . 3479) (thing 3465 . 3466) (thing 3465 . 3466) (thing 3460 . 3465) (thing 3460 . 3465) (thing 3459 . 3460) (thing 3459 . 3460) (thing 3446 . 3459) (thing 3446 . 3459) (thing 3445 . 3446) (thing 3445 . 3446) (thing 3444 . 3445) (thing 3444 . 3445) (thing 3436 . 3444) (thing 3436 . 3444) (thing 3427 . 3435) (thing 3427 . 3435) (thing 3425 . 3426) (thing 3425 . 3426) (thing 3390 . 3416) (thing 3390 . 3416) (thing 3389 . 3390) (thing 3389 . 3390) (thing 3388 . 3389) (thing 3388 . 3389) (thing 3385 . 3388) (thing 3385 . 3388) (thing 3384 . 3385) (thing 3384 . 3385) (thing 3376 . 3384) (thing 3376 . 3384) (thing 3375 . 3376) (thing 3375 . 3376) (thing 3374 . 3375) (thing 3374 . 3375) (thing 3371 . 3374) (thing 3371 . 3374) (thing 3364 . 3370) (thing 3364 . 3370) (thing 3362 . 3363) (thing 3362 . 3363) (thing 3336 . 3357) (thing 3336 . 3357) (thing 3330 . 3335) (thing 3330 . 3335) (thing 3328 . 3329) (thing 3328 . 3329) (thing 3319 . 3328) (thing 3319 . 3328) (thing 3310 . 3318) (thing 3310 . 3318) (thing 3308 . 3309) (thing 3308 . 3309) (thing 3300 . 3308) (thing 3300 . 3308) (thing 3291 . 3299) (thing 3291 . 3299) (thing 3289 . 3290) (thing 3289 . 3290) (thing 3284 . 3289) (thing 3284 . 3289) (thing 3279 . 3283) (thing 3279 . 3283) (thing 3278 . 3279) (thing 3278 . 3279) (thing 3269 . 3277) (thing 3269 . 3277) (thing 1426 . 1451) (thing 1426 . 1451) (thing 1215 . 1223) (thing 1215 . 1223) (thing 1221 . 1222) (thing 1221 . 1222) (thing 1221 . 1222) (thing 1221 . 1222) (thing 1220 . 1221) (thing 1220 . 1221) (thing 1220 . 1221) (thing 1220 . 1221) (thing 1197 . 1215) (thing 1197 . 1215) (thing 1177 . 1196) (thing 1177 . 1196))
      :lexical-table 
        '(("RAPIDJSON_DOCUMENT_H_")
          )
)
    (semanticdb-table "reader.h"
      :file "reader.h"
      :fsize 72826
      :lastmodtime '(22184 13119 0 0)))
  :file "!ssd!sdd!git!ops!basic_ops_compile!_external!usr!local!include!rapidjson!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
