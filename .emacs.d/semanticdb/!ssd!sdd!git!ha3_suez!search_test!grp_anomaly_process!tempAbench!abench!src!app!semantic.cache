;; Object app/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "app/"
  :tables
  (list
    (semanticdb-table "Abench.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [1 20])
            ("abench/GlobalInfo.h" include (:system-flag t) nil [21 51])
            ("abench/Load.h" include (:system-flag t) nil [52 76])
            ("abench/SimpleFileReader.h" include (:system-flag t) nil [77 113])
            ("abench/SearcherQueryReader.h" include (:system-flag t) nil [114 153])
            ("alog/Logger.h" include (:system-flag t) nil [154 178])
            ("getopt.h" include (:system-flag t) nil [179 198])
            ("arpa/inet.h" include (:system-flag t) nil [199 221])
            ("sys/socket.h" include (:system-flag t) nil [222 245])
            ("netdb.h" include (:system-flag t) nil [246 264])
            ("signal.h" include (:system-flag t) nil [265 284])
            ("hsfcpp/hsf.h" include nil nil [286 309])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [311 331])
            ("abench" using (:type ("abench" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [332 355])
            ("alog" using (:type ("alog" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [356 377])
            ("load" variable
               (:pointer 1
                :default-value "NULL"
                :type ("Load" type (:type "class") nil nil))
                nil [379 397])
            ("parseArgs" function
               (:prototype-flag t
                :arguments 
                  ( ("globalInfo" variable
                       (:pointer 1
                        :type ("GlobalInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [412 435])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [436 445])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [446 458]))                  
                :type "int")
                nil [398 459])
            ("signalHandler" function
               (:prototype-flag t
                :arguments 
                  ( ("signal" variable (:type "int") (reparse-symbol arg-sub-list) [479 490]))                  
                :type "void")
                nil [460 491])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [502 511])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [512 525]))                  
                :type "int")
                nil [493 1341])
            ("signalHandler" function
               (:arguments 
                  ( ("signal" variable (:type "int") (reparse-symbol arg-sub-list) [1362 1373]))                  
                :type "void")
                nil [1343 1438])
            ("parseArgs" function
               (:arguments 
                  ( ("globalInfo" variable
                       (:pointer 1
                        :type ("GlobalInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1454 1477])
                    ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1478 1487])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [1488 1500]))                  
                :type "int")
                nil [1440 10265]))          
      :file "Abench.cpp"
      :pointmax 10266
      :fsize 10265
      :lastmodtime '(22466 60615 649693 520000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!search_test!grp_anomaly_process!tempAbench!abench!src!app!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
