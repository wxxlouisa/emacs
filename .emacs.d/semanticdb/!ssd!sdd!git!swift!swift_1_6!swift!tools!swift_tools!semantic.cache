;; Object swift_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "swift_tools/"
  :tables
  (list
    (semanticdb-table "app_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [25 34])
            ("base_cmd" include nil nil [35 63])
            ("tools_config" include nil nil [64 100])
            ("process" include nil nil [101 128])
            ("swift_common_define" include nil nil [129 155])
            ("swift_admin_delegate" include nil nil [156 183])
            ("AppBaseCmd" type
               (:superclasses ("BaseCmd")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [244 278]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [229 233]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [216 279])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [299 303]))                          )
                        (reparse-symbol indented_block_body) [284 351])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [371 375])
                            ("options" variable nil (reparse-symbol function_parameters) [377 384]))                          )
                        (reparse-symbol indented_block_body) [356 439])
                    ("parseConfigInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [464 468])
                            ("configDir" variable nil (reparse-symbol function_parameters) [470 479]))                          )
                        (reparse-symbol indented_block_body) [444 1310])
                    ("getAppInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1330 1334]))                          )
                        (reparse-symbol indented_block_body) [1315 1529])
                    ("parseWorkerCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1555 1559])
                            ("response" variable nil (reparse-symbol function_parameters) [1561 1569]))                          )
                        (reparse-symbol indented_block_body) [1534 2635])
                    ("platformAdapter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2660 2664])
                            ("action" variable nil (reparse-symbol function_parameters) [2666 2672])
                            ("configVersionPath" variable nil (reparse-symbol function_parameters) [2674 2691])
                            ("adapterType" variable nil (reparse-symbol function_parameters) [2698 2709]))                          )
                        (reparse-symbol indented_block_body) [2640 3300]))                  
                :type "class")
                nil [185 3300])
            ("SwiftStartCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {st|start} -z zfs://zfsaddr -t [hippo|yarn]

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
      -t platform : optional, [hippo|yarn], default hippo
examples:
    swift start -z zfs://zfsaddr -t platform
    '''" code nil (reparse-symbol indented_block_body) [3338 3621])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3654 3691]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3639 3643]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3626 3692])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3712 3716]))                          )
                        (reparse-symbol indented_block_body) [3697 3976])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3995 3999])
                            ("options" variable nil (reparse-symbol function_parameters) [4001 4008]))                          )
                        (reparse-symbol indented_block_body) [3980 4172])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4184 4188]))                          )
                        (reparse-symbol indented_block_body) [4176 4333]))                  
                :type "class")
                nil [3301 4333])
            ("SwiftStopCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {sp|stop} -z zfs://zfsaddr -t [hippo|yarn]

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
      -t platform : optional, [hippo|yarn], default hippo
examples:
    swift stop -z zfs://10.250.12.23:1234/root -t platform
    '''" code nil (reparse-symbol indented_block_body) [4370 4666])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [4699 4735]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4684 4688]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4671 4736])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4756 4760]))                          )
                        (reparse-symbol indented_block_body) [4741 4917])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4937 4941])
                            ("options" variable nil (reparse-symbol function_parameters) [4943 4950]))                          )
                        (reparse-symbol indented_block_body) [4922 5054])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5067 5071]))                          )
                        (reparse-symbol indented_block_body) [5059 5205]))                  
                :type "class")
                nil [4334 5205])
            ("SwiftUpdateAdminConfCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {uac|updateAdminConf} -z zfs://zfsaddr

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
      -v config_version_path, --configVersionPath=config_version_path : optional, config version path
      -t platform : optional, [hippo|yarn], default hippo

examples:
    swift uac -z zfs://zfsaddr -t platform
    '''" code nil (reparse-symbol indented_block_body) [5253 5632])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [5665 5712]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5650 5654]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5637 5713])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5733 5737]))                          )
                        (reparse-symbol indented_block_body) [5718 6007])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6027 6031])
                            ("options" variable nil (reparse-symbol function_parameters) [6033 6040]))                          )
                        (reparse-symbol indented_block_body) [6012 6214])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6227 6231]))                          )
                        (reparse-symbol indented_block_body) [6219 6386]))                  
                :type "class")
                nil [5206 6386])
            ("SwiftAppStatusCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {gas|getappstatus}
        {-z zookeeper_address  | --zookeeper=zookeeper_address}
        {-i app_info          | --info=app_info}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
       -i app_info,    --info=app_info      : option[summary, all], print app info, default summary

examples:
    swift gas -z zfs://10.250.12.23:1234/root
    swift gas -z zfs://10.250.12.23:1234/root -i all
    '''" code nil (reparse-symbol indented_block_body) [6428 6901])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [6866 6907]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6919 6923]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6906 6976])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6996 7000]))                          )
                        (reparse-symbol indented_block_body) [6981 7136])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7166 7170])
                            ("options" variable nil (reparse-symbol function_parameters) [7172 7179]))                          )
                        (reparse-symbol indented_block_body) [7141 7466])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7486 7490])
                            ("options" variable nil (reparse-symbol function_parameters) [7492 7499]))                          )
                        (reparse-symbol indented_block_body) [7471 7673])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7686 7690]))                          )
                        (reparse-symbol indented_block_body) [7678 8695]))                  
                :type "class")
                nil [6387 8695])
            ("SwiftDeleteCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {del|delete}
       {-z zookeeper_address  | --zookeeper=zookeeper_address}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address

Example:
    swift del -z zfs://10.250.12.23:1234/root
    '''" code nil (reparse-symbol indented_block_body) [8735 8998])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [8963 9001]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9016 9020]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9003 9070])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9083 9087]))                          )
                        (reparse-symbol indented_block_body) [9075 9907])
                    ("deleteSwiftDirs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9932 9936])
                            ("zkRoot" variable nil (reparse-symbol function_parameters) [9938 9944]))                          )
                        (reparse-symbol indented_block_body) [9912 10550]))                  
                :type "class")
                nil [8697 10550]))          
      :file "app_cmd.py"
      :pointmax 10550
      :fsize 10549
      :lastmodtime '(22948 56519 494627 946000)
      :unmatched-syntax nil)
    (semanticdb-table "base_cmd.py"
      :file "base_cmd.py"
      :fsize 5692
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "tools_config.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("ConfigParser" include nil nil [11 30])
            ("tools_conf" include nil nil [31 48])
            ("swift_common_define" include nil nil [49 82])
            ("swift_util" include nil nil [83 115])
            ("ToolsConfig" type
               (:members 
                  ( ("parse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [150 154]))                          )
                        (reparse-symbol indented_block_body) [140 1705])
                    ("getAdapter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1725 1729]))                          )
                        (reparse-symbol indented_block_body) [1710 1770])
                    ("getHippoAdapter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1795 1799]))                          )
                        (reparse-symbol indented_block_body) [1775 1940])
                    ("getConfigValidator" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1967 1971]))                          )
                        (reparse-symbol indented_block_body) [1944 2115])
                    ("getInstallPrefix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2141 2145]))                          )
                        (reparse-symbol indented_block_body) [2120 2182])
                    ("getFsUtilExe" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2241 2245]))                          )
                        (reparse-symbol indented_block_body) [2224 2278])
                    ("getLibPath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2298 2302]))                          )
                        (reparse-symbol indented_block_body) [2283 2333])
                    ("getCmdEnv" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2352 2356]))                          )
                        (reparse-symbol indented_block_body) [2338 2419])
                    ("getHadoopHome" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2479 2483]))                          )
                        (reparse-symbol indented_block_body) [2461 2517])
                    ("getClassPathUtil" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2555 2559]))                          )
                        (reparse-symbol indented_block_body) [2534 2596])
                    ("__getCmd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2614 2618])
                            ("libPath" variable nil (reparse-symbol function_parameters) [2620 2627])
                            ("hadoopHome" variable nil (reparse-symbol function_parameters) [2629 2639])
                            ("cmd" variable nil (reparse-symbol function_parameters) [2641 2644]))                          )
                        (reparse-symbol indented_block_body) [2601 2913]))                  
                :type "class")
                nil [117 2913]))          
      :file "tools_config.py"
      :pointmax 2914
      :fsize 2913
      :lastmodtime '(22939 52165 359658 975000)
      :unmatched-syntax nil)
    (semanticdb-table "process.py"
      :file "process.py"
      :fsize 412
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "swift_common_define.py"
      :file "swift_common_define.py"
      :fsize 2733
      :lastmodtime '(22924 2409 708093 529000))
    (semanticdb-table "swift_admin_delegate.py"
      :file "swift_admin_delegate.py"
      :fsize 11297
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "swift_config_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [20 29])
            ("time" include nil nil [30 41])
            ("random" include nil nil [42 55])
            ("process" include nil nil [57 84])
            ("base_cmd" include nil nil [85 100])
            ("SwiftDeployCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {deploy|dp}
       {-z zookeeper_address  | --zookeeper=zookeeper_address}
       {-l local_path     | --localPath=local_path}
 
options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
       -l local_path, --localPath=local_path      : required, configuration path to be deployed

examples:
    swift dp -z zfs://10.250.12.23:1234/root -l /path/to/swift_conf
    '''" code nil (reparse-symbol indented_block_body) [146 576])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [610 648]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [595 599]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [582 649])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [669 673]))                          )
                        (reparse-symbol indented_block_body) [654 811])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [841 845])
                            ("options" variable nil (reparse-symbol function_parameters) [847 854]))                          )
                        (reparse-symbol indented_block_body) [816 1090])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1110 1114])
                            ("options" variable nil (reparse-symbol function_parameters) [1116 1123]))                          )
                        (reparse-symbol indented_block_body) [1095 1225])
                    ("checkConfig" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1246 1250])
                            ("path" variable nil (reparse-symbol function_parameters) [1252 1256]))                          )
                        (reparse-symbol indented_block_body) [1230 1562])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1575 1579]))                          )
                        (reparse-symbol indented_block_body) [1567 2460]))                  
                :type "class")
                nil [102 2460])
            ("SwiftDownloadCmd" type
               (:superclasses ("SwiftDeployCmd")
                :members 
                  ( ("'''
    swift {dl|download}
       {-z zookeeper_address  | --zookeeper=zookeeper_address}
       {-l conf_path          | --config=config_path}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
       -l conf_path,         --config=conf_path              : required, download config from zookeeper 

Example:
    swift dl -z zfs://10.250.12.23:1234/root -l /path/to/config
    '''" code nil (reparse-symbol indented_block_body) [2505 2946])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2980 3020]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2965 2969]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2952 3021])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3040 3044]))                          )
                        (reparse-symbol indented_block_body) [3025 3184])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3204 3208])
                            ("options" variable nil (reparse-symbol function_parameters) [3210 3217]))                          )
                        (reparse-symbol indented_block_body) [3189 3401])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3414 3418]))                          )
                        (reparse-symbol indented_block_body) [3406 4379]))                  
                :type "class")
                nil [2461 4379])
            ("SwiftCopyCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {cp|copy}
       {-z zookeeper_address  | --zookeeper=zookeeper_address}
       {-l local_path         | --localpath=local_path}
       {-r remote_path        | --remotepath=remote_path}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
       -l local_path,        --localpath=conf_path           : required, local path
       -r remote_path        --remotepath=remote_path        : required, remote path

Example:
    swift cp -z zfs://10.250.12.23:1234/root -l /path/to/config -r remote_path
    '''" code nil (reparse-symbol indented_block_body) [4422 4998])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [5032 5068]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5017 5021]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5004 5069])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5089 5093]))                          )
                        (reparse-symbol indented_block_body) [5074 5317])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5347 5351])
                            ("options" variable nil (reparse-symbol function_parameters) [5353 5360]))                          )
                        (reparse-symbol indented_block_body) [5322 5709])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5729 5733])
                            ("options" variable nil (reparse-symbol function_parameters) [5735 5742]))                          )
                        (reparse-symbol indented_block_body) [5714 5918])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5931 5935]))                          )
                        (reparse-symbol indented_block_body) [5923 6280]))                  
                :type "class")
                nil [4380 6280]))          
      :file "swift_config_cmd.py"
      :pointmax 6280
      :fsize 6279
      :lastmodtime '(22924 2409 708093 529000)
      :unmatched-syntax nil)
    (semanticdb-table "swift_util.py"
      :file "swift_util.py"
      :fsize 3833
      :lastmodtime '(22924 2409 708093 529000))
    (semanticdb-table "topic_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("base_cmd" include nil nil [12 27])
            ("swift_common_define" include nil nil [28 54])
            ("swift_admin_delegate" include nil nil [55 82])
            ("status_analyzer" include nil nil [83 105])
            ("swift_util" include nil nil [106 123])
            ("swift.protocol.Common_pb2" include nil nil [124 163])
            ("swift.protocol.AdminRequestResponse_pb2" include nil nil [164 217])
            ("transport_cmd_base" include nil nil [218 243])
            ("time" include nil nil [244 255])
            ("swift_broker_delegate" include nil nil [256 284])
            ("local_file_util" include nil nil [285 307])
            ("zlib" include nil nil [308 319])
            ("json" include nil nil [320 331])
            ("TopicAddCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {at|addtopic}
       {-z zookeeper_address           | --zookeeper=zookeeper_address }
       {-t topic_name                  | --topic=topic_name }
       {-c partition_count             | --partcount=partition_count }
       {-R range_count                 | --rangecount=range_count }
       {-s partition_buf_size          | --partbuf=partition_buf_size }
       {-b partition_file_buf_size     | --partfilebuf=partition_file_buf_size }
       {-y partition_max_buf_size      | --partmaxbuf=partition_max_buf_size }
       {-x partition_min_buf_size      | --partminbuf=partition_min_buf_size }
       {-r partition_resource          | --partresource=partition_resource }
       {-l partition_limit             | --partlimit=partition_limit }
       {-m topic_mode                  | --topicmode=topic_mode }
       {-f                             | --fieldfilter }
       {-i obsolete_file_interval      | --obsoletefileinterval=obsolete_file_interval }
       {-n reserved_file_count         | --reservedfilecount=reserved_file_count }
       {-d                             | --deletetopicdata }
       {-o security_commit_time        | --committime=security_commit_time }
       {-p security_commit_data        | --commitdata=security_commit_data }
       {-q                             | --compress=compress_single_msg }
       {-u                             | --compressthres=compress_single_msg_threshold }
       {-a                             | --dfsroot=dfs_root }
       {-e                             | --extenddfsroot=extend_dfs_root }
       {-g                             | --topicgroup=topic_group }
       {-j                             | --expired=expired }
    options:
       -z zookeeper_address,      --zookeeper=zookeeper_address         : required, zookeeper root address
       -t topic_name,             --topic=topic_name                    : required, topic name, eg: news
       -c partition_count,        --partcount=partition_count           : required, partition count of the topic
       -R range_count,            --rangecount=range_count              : optional, range count in one partion, default is 4,
       -s partition_buf_size      --partbuf=partition_buf_size          : [deprecated], partition buffer size of the topic, M
       -b partition_file_buf_size --partfilebuf=partition_file_buf_size : [deprecated], partition read file buffer size of the topic, M
       -x partition_min_buf_size  --partmaxbuf=partition_max_buf_size   : [optional], partition max buffer size of the topic, M
       -y partition_max_buf_size  --partminbuf=partition_min_buf_size   : [optional], partition min buffer size of the topic, M
       -r partition_resource      --partresource=partition_resource     : optional, partition resource[1,1000], default is 100
       -l partition_limit         --partlimit=partition_limit           : optional, partition limit of this topic in one broker, default is no limit
       -m topic_mode              --topicmode=topic_mode                : optional, normal_mode | security_mode | memory_only_mode | memory_prefer_mode, default is normal_mode
       -f                         --fieldfilter                         : optional, filter fields in msg if specialized
       -i obsolete_file_interval  --obsoletefileinterval=obsolete_file_interval : optional, obsolete file time interval, unit is hour.
       -n reserved_file_count     --reservedfilecount=reserved_file_count       : optional, reserved file count.
       -d                         --deletetopicdata                     : optional, delete old topic data if specialized
       -o security_commit_time    --committime=security_commit_time     : optional, max wait time for commit message in security_mode
       -p security_commit_data    --commitdata=security_commit_data     : optional, max data size for commit message in security_mode
       -q                         --compress=compress_single_msg        : optional, compress msg in this topic
       -u                         --compressthres=compress_single_msg_threshold        : optional, compress msg great than threshold [default:2048]
       -a                         --dfsroot=dfs_root                    : optional, dfs_root
       -e                         --extenddfsroot=extend_dfs_root       : optional, extend dfs_root add old data when dfs root changed
       -g                         --topicgroup=topic_group              : optional, topic_group
       -j                         --expired=expired                     : optional, topic expired time, auto delete topic after expired, second
Example:
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -y 100 -b 128
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10 -y 100 -r 30
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -m security_mode -f
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -i 1 -n 5
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2 -q
    swift at -z zfs://10.250.12.23:1234/root -t news -c 1 -j 1000
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -a hdfs://xxx/1 -e hdfs://xxx/2,hdfs://xxx/3
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -s 10 [deprecated]
    '''" code nil (reparse-symbol indented_block_body) [374 5775])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5799 5803]))                          )
                        (reparse-symbol indented_block_body) [5784 9268])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9306 9310])
                            ("options" variable nil (reparse-symbol function_parameters) [9312 9319]))                          )
                        (reparse-symbol indented_block_body) [9281 13313])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13333 13337])
                            ("options" variable nil (reparse-symbol function_parameters) [13339 13346]))                          )
                        (reparse-symbol indented_block_body) [13318 14842])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14865 14869]))                          )
                        (reparse-symbol indented_block_body) [14847 15024])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15037 15041]))                          )
                        (reparse-symbol indented_block_body) [15029 16365])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16390 16394])
                            ("timeout" variable nil (reparse-symbol function_parameters) [16396 16403]))                          )
                        (reparse-symbol indented_block_body) [16370 16689])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16712 16716])
                            ("topicName" variable nil (reparse-symbol function_parameters) [16718 16727]))                          )
                        (reparse-symbol indented_block_body) [16694 17548]))                  
                :type "class")
                nil [333 17548])
            ("TopicModifyCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {mt|modifytopic}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t topic_name          | --topic=topic_name }
       {-r partition_resource  | --partresource=partition_resource }
       {-l partition_limit     | --partlimit=partition_limit }
       {-g topic_group         | --group=topic_group }
       {-j expired_time        | --expired_time=expired_time }
    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address     : required, zookeeper root address
       -t topic_names,        --topic=topic_names               : required, topic name, eg: news,news1
       -f topic_file,         --topic_file=topic_file           : optional, topic file, will append in topic_names, one topic per line
       -r partition_resource  --partresource=partition_resource : optional, partition resource
       -l partition_limit     --partlimit=partition_limit       : optional, partition limit of this topic in one broker
       -g topic_group         --group=topic_group               : optional, change topic group name
       -j expired_time        --expired_time=expired_time       : optional, change expired time for topic, -1 no expired,  second

Example:
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 10
    swift mt -z zfs://10.250.12.23:1234/root -t news -l 2
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 20 -l 3
    swift mt -z zfs://10.250.12.23:1234/root -t news -g group_name
    swift mt -z zfs://10.250.12.23:1234/root -t news -j -1       
    '''" code nil (reparse-symbol indented_block_body) [17593 19119])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19139 19143]))                          )
                        (reparse-symbol indented_block_body) [19124 19855])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19893 19897])
                            ("options" variable nil (reparse-symbol function_parameters) [19899 19906]))                          )
                        (reparse-symbol indented_block_body) [19868 21054])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21074 21078])
                            ("options" variable nil (reparse-symbol function_parameters) [21080 21087]))                          )
                        (reparse-symbol indented_block_body) [21059 21586])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21609 21613]))                          )
                        (reparse-symbol indented_block_body) [21591 21768])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21781 21785]))                          )
                        (reparse-symbol indented_block_body) [21773 22359]))                  
                :type "class")
                nil [17549 22359])
            ("TopicDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dt|deletetopic}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t topic_name          | --topic=topic_name }
       {-f file_name           | --file=file_name }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : optional, topic name, eg: news
       -f file_name,          --file=file_name                : optional,
 file name

Example:
    swift dt -z zfs://10.250.12.23:1234/root -t news 
    swift dt -z zfs://10.250.12.23:1234/root -f file_name
    '''" code nil (reparse-symbol indented_block_body) [22404 23026])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23046 23050]))                          )
                        (reparse-symbol indented_block_body) [23031 23264])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23294 23298])
                            ("options" variable nil (reparse-symbol function_parameters) [23300 23307]))                          )
                        (reparse-symbol indented_block_body) [23269 23714])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23734 23738])
                            ("options" variable nil (reparse-symbol function_parameters) [23740 23747]))                          )
                        (reparse-symbol indented_block_body) [23719 24011])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24034 24038]))                          )
                        (reparse-symbol indented_block_body) [24016 24193])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24207 24211]))                          )
                        (reparse-symbol indented_block_body) [24199 25373])
                    ("writeFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25397 25401])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [25403 25416]))                          )
                        (reparse-symbol indented_block_body) [25378 25597]))                  
                :type "class")
                nil [22360 25597])
            ("TopicNamesCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gtn|gettopicnames}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f file_name           | --file=file_name }
    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f file_name           --file=file_name 
Example:
    swift gtn -z zfs://10.250.12.23:1234/root 
    swift gtn -z zfs://10.250.12.23:1234/root -f file.txt
       
    '''" code nil (reparse-symbol indented_block_body) [25641 26079])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26102 26106]))                          )
                        (reparse-symbol indented_block_body) [26084 26264])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26284 26288]))                          )
                        (reparse-symbol indented_block_body) [26269 26419])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26439 26443])
                            ("options" variable nil (reparse-symbol function_parameters) [26445 26452]))                          )
                        (reparse-symbol indented_block_body) [26424 26612])
                    ("writeTopicName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26636 26640])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [26642 26652]))                          )
                        (reparse-symbol indented_block_body) [26617 26853])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26866 26870]))                          )
                        (reparse-symbol indented_block_body) [26858 27486]))                  
                :type "class")
                nil [25598 27486])
            ("TopicInfosCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gti|gettopicinfo}
       {-z zookeeper_address   | --zookeeper=zookeeper_address}
       {-t topic_name          | --topic=topic_name}
       [-c cmd_type            | --cmdtype=cmd_type]

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : required, topic name, eg: news
       -c cmd_type,           --cmdtype=cmd_type              : optional, command type, default: summary
          summary:            topic summary infos
          message:            protocol message
          verbose:            topic verbose infos
       -s sortType            --sort=sortType                 : optional, partid(default)|brokeraddress| partstatus
       -g group_name          --group=group_name              : optional, group name when get all topic info
       

Example:
    swift gti -z zfs://10.250.12.23:1234/root
    swift gti -z zfs://10.250.12.23:1234/root -t news 
    swift gti -z zfs://10.250.12.23:1234/root -t news -c message
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose -s brokeraddress
    '''" code nil (reparse-symbol indented_block_body) [27530 28754])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28774 28778]))                          )
                        (reparse-symbol indented_block_body) [28759 29928])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29966 29970])
                            ("options" variable nil (reparse-symbol function_parameters) [29972 29979]))                          )
                        (reparse-symbol indented_block_body) [29941 30320])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30340 30344])
                            ("options" variable nil (reparse-symbol function_parameters) [30346 30353]))                          )
                        (reparse-symbol indented_block_body) [30325 30579])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30602 30606]))                          )
                        (reparse-symbol indented_block_body) [30584 30764])
                    ("printTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30788 30792]))                          )
                        (reparse-symbol indented_block_body) [30769 34631])
                    ("printAllTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34658 34662]))                          )
                        (reparse-symbol indented_block_body) [34636 35747])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35760 35764]))                          )
                        (reparse-symbol indented_block_body) [35752 35901]))                  
                :type "class")
                nil [27487 35901])
            ("TopicDeleteByTimeCmd" type
               (:superclasses ("transport_cmd_base.TransportCmdBase")
                :members 
                  ( ("'''
    swift {dtt|deletetopicsbytime}
       {-z zookeeper_address     | --zookeeper=zookeeper_address }
       {-i interval              | --interval=interval }
       {-e exclude_topics,       | --exclude=exclude_topics }
       {-f exclude_topics_file,  | --exclude_file=exclude_topics_file }
       {-p prefix_name           | --prefix_name=prefix_name }
       {-t topic_names           | --topic_names=topic_names }

    options:
       -z zookeeper_address,    --zookeeper=zookeeper_address       : required, zookeeper root address
       -i time_interval,        --interval=time_interval            : required, delete topics if the last message arrived interval hours before, (unit:hours)
       -e exclude_topics,       --exclude=exclude_topics            : option, don't delete exclude topics 
       -f exclude_topics_file,  --exclude_file=exclude_topics_file  : option, don't delete exclude topics in file,one topic per line
       -p prefix_name           --prefix_name=prefix_name           : option, delete topic prefix with specified
       -t topic_names           --topic_names=topic_names           : option, delete topic with specified topic names
Example:
    swift dtt -z zfs://10.250.12.23:1234/root -i 48
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -e topic_a,topic_b
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -f a.txt
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -p model_
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -t topic_name_file
       
    '''" code nil (reparse-symbol indented_block_body) [35971 37479])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37499 37503]))                          )
                        (reparse-symbol indented_block_body) [37484 38014])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38052 38056])
                            ("options" variable nil (reparse-symbol function_parameters) [38058 38065]))                          )
                        (reparse-symbol indented_block_body) [38027 38320])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38340 38344])
                            ("options" variable nil (reparse-symbol function_parameters) [38346 38353]))                          )
                        (reparse-symbol indented_block_body) [38325 39233])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39256 39260]))                          )
                        (reparse-symbol indented_block_body) [39238 39492])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39506 39510]))                          )
                        (reparse-symbol indented_block_body) [39498 39693])
                    ("delTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39711 39715])
                            ("topicName" variable nil (reparse-symbol function_parameters) [39717 39726]))                          )
                        (reparse-symbol indented_block_body) [39698 40117])
                    ("deleteTopics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40139 40143]))                          )
                        (reparse-symbol indented_block_body) [40122 40877])
                    ("needDelete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40897 40901])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [40903 40912]))                          )
                        (reparse-symbol indented_block_body) [40882 42540])
                    ("getTopicCreateTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42568 42572])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [42574 42583]))                          )
                        (reparse-symbol indented_block_body) [42545 43161]))                  
                :type "class")
                nil [35902 43161])
            ("TopicDataDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dtd|deletetopicdata}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-d dfs_root            | --dfs=dfs_root }
       {-i interval            | --interval=interval }
       {-e exclude             | --exclude=exclude_topics }
       {-t topic_name          | --topic_name=topic_name }
       {-f exclude_file        | --exclude_file=exclude_file }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -d dfs_root,           --dfs=dfs_root                  : required, dfs root address
       -i time_interval,      --interval=time_interval        : required, delete topic data if the topic is not running and the last message is arrived interval time ago. (unit:hours)
       -e exclude_topics,     --exclude=exclude_topics        : option, don't delete the specified topic data
       -t topic_name,         --topic=topic_name              : option, only delete the specified topic data
       -f exclude_file,       --exclude_file=exclude_file     : option, don't delete the specified topic data in file

Example:
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -f abc.txt
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -e topic_a,topic_b
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -t topic_a  -d hdfs://xxxx/path
       
    '''" code nil (reparse-symbol indented_block_body) [43239 44705])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44725 44729]))                          )
                        (reparse-symbol indented_block_body) [44710 45224])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45262 45266])
                            ("options" variable nil (reparse-symbol function_parameters) [45268 45275]))                          )
                        (reparse-symbol indented_block_body) [45237 45633])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45653 45657])
                            ("options" variable nil (reparse-symbol function_parameters) [45659 45666]))                          )
                        (reparse-symbol indented_block_body) [45638 46285])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46316 46320]))                          )
                        (reparse-symbol indented_block_body) [46298 46478])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46492 46496]))                          )
                        (reparse-symbol indented_block_body) [46484 47348])
                    ("getAllRunningTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47381 47385]))                          )
                        (reparse-symbol indented_block_body) [47353 47744])
                    ("getCandidataTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47776 47780]))                          )
                        (reparse-symbol indented_block_body) [47749 48436])
                    ("getTopicLastModifyTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48468 48472])
                            ("fileUtil" variable nil (reparse-symbol function_parameters) [48474 48482])
                            ("topicDataPath" variable nil (reparse-symbol function_parameters) [48484 48497]))                          )
                        (reparse-symbol indented_block_body) [48441 49404])
                    ("delTopicData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49426 49430])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [49432 49442]))                          )
                        (reparse-symbol indented_block_body) [49409 49685]))                  
                :type "class")
                nil [43191 49685])
            ("ExportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {et|exporttopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f export_file_name    | --file=export_file_name }
       {-g group_name          | --group=group_name }
       {-p prefix              | --prefix=prefix_name }
       {-t topic_names         | --topic=topic_names }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f export_file_name,   --file=export_file_name         : required, export file name
       -g group_name,         --group=group_name              : optional, export group name, default export all topic
       -m migrateDfs,         --migrate=migrate_dfs           : optional, migrate dfs, add new hdfs, add current dfs into extendDfs root      
       -p prefix,             --prefix = prefix               : optional, export topic info with prefix      
       -i topicName,          --topic = topic_names           : optional, export topic info with topic_name file
Example:
    swift et -z zfs://10.250.12.23:1234/root -f a.json
    swift et -z zfs://10.250.12.23:1234/root -f a.json -g swift    
    swift et -z zfs://10.250.12.23:1234/root -f a.json -p prefix
    swift et -z zfs://10.250.12.23:1234/root -f a.json -i topicNameFile
    '''" code nil (reparse-symbol indented_block_body) [49732 51015])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51036 51040]))                          )
                        (reparse-symbol indented_block_body) [51021 51503])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51541 51545])
                            ("options" variable nil (reparse-symbol function_parameters) [51547 51554]))                          )
                        (reparse-symbol indented_block_body) [51516 51795])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51815 51819])
                            ("options" variable nil (reparse-symbol function_parameters) [51821 51828]))                          )
                        (reparse-symbol indented_block_body) [51800 52367])
                    ("getDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52387 52391]))                          )
                        (reparse-symbol indented_block_body) [52372 53077])
                    ("hasDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53097 53101])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [53103 53110]))                          )
                        (reparse-symbol indented_block_body) [53082 53437])
                    ("hasTopicGroup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53460 53464])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [53466 53473]))                          )
                        (reparse-symbol indented_block_body) [53442 53808])
                    ("generateMap" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53834 53838])
                            ("topicMetas" variable nil (reparse-symbol function_parameters) [53840 53850]))                          )
                        (reparse-symbol indented_block_body) [53818 55739])
                    ("updateMigrateDfs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55769 55773])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [55775 55784]))                          )
                        (reparse-symbol indented_block_body) [55748 56348])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56361 56365]))                          )
                        (reparse-symbol indented_block_body) [56353 57083]))                  
                :type "class")
                nil [49687 57083])
            ("ImportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {it|importtopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}
       {-d delete_exist        | --delete_exist=delete_exist}
       {-c continue            | --continue=continue}
       {-g group               | --group=group}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic
       -d delete_exist        --delete_exist=delete_exist     : optional, delete exist topic ,default is false
       -c continue_exist      --continue=continue             : optional, continue if add topic has error ,default is false
       -g group               --group=group                   : optional, add in specified group name
Example:
    swift it -z zfs://10.250.12.23:1234/root -f a.json -w 30
    swift it -z zfs://10.250.12.23:1234/root -f a.json -d -c
    swift it -z zfs://10.250.12.23:1234/root -f a.json -g igraph
    '''" code nil (reparse-symbol indented_block_body) [57129 58338])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58359 58363]))                          )
                        (reparse-symbol indented_block_body) [58344 58981])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59011 59015])
                            ("options" variable nil (reparse-symbol function_parameters) [59017 59024]))                          )
                        (reparse-symbol indented_block_body) [58986 59265])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59285 59289])
                            ("options" variable nil (reparse-symbol function_parameters) [59291 59298]))                          )
                        (reparse-symbol indented_block_body) [59270 59703])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59726 59730]))                          )
                        (reparse-symbol indented_block_body) [59708 59885])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59898 59902]))                          )
                        (reparse-symbol indented_block_body) [59890 66464])
                    ("addFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66486 66490])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [66492 66505]))                          )
                        (reparse-symbol indented_block_body) [66469 66643])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66668 66672])
                            ("timeout" variable nil (reparse-symbol function_parameters) [66674 66681])
                            ("topicName" variable nil (reparse-symbol function_parameters) [66683 66692]))                          )
                        (reparse-symbol indented_block_body) [66648 66968])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66991 66995])
                            ("topicName" variable nil (reparse-symbol function_parameters) [66997 67006]))                          )
                        (reparse-symbol indented_block_body) [66973 67827]))                  
                :type "class")
                nil [57084 67827])
            ("UpdateTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {ut|updatetopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic

Example:
    swift ut -z zfs://10.250.12.23:1234/root -f a.json -w 30
    '''" code nil (reparse-symbol indented_block_body) [67873 68456])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68477 68481]))                          )
                        (reparse-symbol indented_block_body) [68462 68739])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68769 68773])
                            ("options" variable nil (reparse-symbol function_parameters) [68775 68782]))                          )
                        (reparse-symbol indented_block_body) [68744 69023])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69043 69047])
                            ("options" variable nil (reparse-symbol function_parameters) [69049 69056]))                          )
                        (reparse-symbol indented_block_body) [69028 69315])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69338 69342]))                          )
                        (reparse-symbol indented_block_body) [69320 69497])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69510 69514]))                          )
                        (reparse-symbol indented_block_body) [69502 70373])
                    ("addOneTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70394 70398])
                            ("topicDescription" variable nil (reparse-symbol function_parameters) [70400 70416]))                          )
                        (reparse-symbol indented_block_body) [70378 74881])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74906 74910])
                            ("timeout" variable nil (reparse-symbol function_parameters) [74912 74919])
                            ("topicName" variable nil (reparse-symbol function_parameters) [74921 74930]))                          )
                        (reparse-symbol indented_block_body) [74886 75206])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75229 75233])
                            ("topicName" variable nil (reparse-symbol function_parameters) [75235 75244]))                          )
                        (reparse-symbol indented_block_body) [75211 76065]))                  
                :type "class")
                nil [67828 76065])
            ("TransferPartitionCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {tp|transferpartition}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t transfer_info       | --transfer=transfer_info }
    options:
       -z zookeeper_address,     --zookeeper=zookeeper_address     : required, zookeeper root address
       -t transfer_info,         --transfer=transfer_info          : required, topic name, eg: role_name1:0.3,role_name2:0.1
       -g group_name,            --group_name=group_name           : opitional, group name, eg: swift_mainse

Example:
    swift tp -z zfs://10.250.12.23:1234/root -t group1##broker_1_0:0.3;group2##broker_1_0:0.2
    swift tp -z zfs://10.250.12.23:1234/root -t all
    swift tp -z zfs://10.250.12.23:1234/root -t all -g swift_mainse
    '''" code nil (reparse-symbol indented_block_body) [76116 76858])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76878 76882]))                          )
                        (reparse-symbol indented_block_body) [76863 77115])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77154 77158])
                            ("options" variable nil (reparse-symbol function_parameters) [77160 77167]))                          )
                        (reparse-symbol indented_block_body) [77129 77421])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77441 77445])
                            ("options" variable nil (reparse-symbol function_parameters) [77447 77454]))                          )
                        (reparse-symbol indented_block_body) [77426 77611])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77634 77638]))                          )
                        (reparse-symbol indented_block_body) [77616 77793])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77806 77810]))                          )
                        (reparse-symbol indented_block_body) [77798 78110]))                  
                :type "class")
                nil [76066 78110]))          
      :file "topic_cmd.py"
      :pointmax 78110
      :fsize 78109
      :lastmodtime '(22947 52162 500302 289000)
      :unmatched-syntax nil)
    (semanticdb-table "status_analyzer.py"
      :file "status_analyzer.py"
      :fsize 3496
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "transport_cmd_base.py"
      :file "transport_cmd_base.py"
      :fsize 3995
      :lastmodtime '(22924 2409 710093 532000))
    (semanticdb-table "swift_broker_delegate.py"
      :file "swift_broker_delegate.py"
      :fsize 8814
      :lastmodtime '(22939 52165 359658 975000))
    (semanticdb-table "local_file_util.py"
      :file "local_file_util.py"
      :fsize 1943
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "json.py"
      :file "json.py"
      :fsize 11481
      :lastmodtime '(22924 2409 707093 529000))
    (semanticdb-table "cmd_context.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [19 29])
            ("usage" variable nil nil [31 1711])
            ("CmdContext" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [1792 1860])
                            ("self" code nil (reparse-symbol indented_block_body) [1868 1901])
                            ("cmdStr" variable nil (reparse-symbol indented_block_body) [1910 1926])
                            ("if" code nil (reparse-symbol indented_block_body) [1935 6430])
                            ("if" code nil (reparse-symbol indented_block_body) [6439 6531]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1748 1752])
                            ("argv" variable nil (reparse-symbol function_parameters) [1754 1758])
                            ("toolsConfFileDir" variable nil (reparse-symbol function_parameters) [1760 1776]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1735 6531])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6556 6560]))                          )
                        (reparse-symbol indented_block_body) [6548 6884])
                    ("_usage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6900 6904]))                          )
                        (reparse-symbol indented_block_body) [6889 6974])
                    ("initCmdAuthorityCheckTable" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7014 7018]))                          )
                        (reparse-symbol indented_block_body) [6983 8129]))                  
                :type "class")
                nil [1713 8129]))          
      :file "cmd_context.py"
      :pointmax 8129
      :fsize 8128
      :lastmodtime '(22924 2409 707093 529000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift_1_6!swift!tools!swift_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
