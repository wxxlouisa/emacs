;; Object search/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "search/"
  :tables
  (list
    (semanticdb-table "Biz.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("build_service/plugin/Module.h" include nil nil [1 41])
            ("tensorflow/core/protobuf/config.pb.h" include nil nil [42 89])
            ("tensorflow/cc/saved_model/constants.h" include nil nil [90 138])
            ("suez/turing/common/OpKernelFactory.h" include nil nil [139 186])
            ("suez/turing/search/Biz.h" include nil nil [187 222])
            ("suez/turing/common/MultiTableWrapper.h" include nil nil [223 272])
            ("suez/turing/search/BizGraphPartition.h" include nil nil [273 322])
            ("suez/turing/metrics/Monitor.h" include nil nil [323 363])
            ("fslib/fs/FileSystem.h" include (:system-flag t) nil [364 396])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [398 418])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [419 441])
            ("suez" using (:type ("suez" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [442 463])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [464 489])
            ("build_service::plugin" using (:type ("build_service::plugin" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [490 528])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [529 556])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [557 587])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [588 624])
            ("amonitor::client" using (:type ("amonitor::client" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [625 658])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [676 682]))                  
                :type "int")
                nil [659 683])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("AUTIL_LOG_SETUP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [737 744])
                                    ("" variable (:type ("Biz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [745 749]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [721 750])
                            ("Biz" function
                               (:constructor-flag t
                                :parent "Biz"
                                :type ("Biz" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [752 793])
                            ("Biz" function
                               (:destructor-flag t
                                :parent "Biz"
                                :type "void")
                                (reparse-symbol namespacesubparts) [795 879])
                            ("getGraphDef" function
                               (:parent "Biz"
                                :constant-flag t
                                :type ("GraphDef" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [881 957])
                            ("getAllPlaceholders" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("def" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("GraphDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1000 1020]))                                  
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [959 1278])
                            ("initCavaJitWrapper" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("configPath" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1323 1353]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1280 1788])
                            ("init" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("bizName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1819 1841])
                                    ("bizMeta" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("suez::BizMeta" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1842 1871])
                                    ("pr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ProcessResource" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1901 1927]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1790 3706])
                            ("getSession" function
                               (:pointer 1
                                :parent "Biz"
                                :type ("DirectSession" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3708 3927])
                            ("getPlaceholders" function
                               (:parent "Biz"
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [3929 4013])
                            ("getRunOptions" function
                               (:parent "Biz"
                                :constant-flag t
                                :type ("tensorflow::RunOptions" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4015 4108])
                            ("getVersion" function
                               (:parent "Biz"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4110 4240])
                            ("getTopoInfo" function
                               (:parent "Biz"
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4242 4661])
                            ("getBizInfo" function
                               (:parent "Biz"
                                :constant-flag t
                                :type ("BizInfo" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4663 4726])
                            ("prepareMetricsProvider" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("metricGather" variable
                                       (:pointer 1
                                        :type ("MetricGather" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4761 4788]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [4728 4961])
                            ("loadBizInfo" function
                               (:parent "Biz"
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4963 6485])
                            ("updateFlowConfig" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("zoneBizName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6514 6545]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [6487 6731])
                            ("getBizInfoFile" function
                               (:parent "Biz"
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6733 6796])
                            ("getDefaultBizJson" function
                               (:parent "Biz"
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6798 6848])
                            ("loadGraphDef" function
                               (:parent "Biz"
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6854 7210])
                            ("initTablePathMap" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("multiTableReader" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("suez::MultiTableReader" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7239 7286])
                                    ("dependTable" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7314 7348]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [7212 7986])
                            ("prepareIndexInfos" function
                               (:parent "Biz"
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7988 8530])
                            ("prepareSessionOptions" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("options" variable
                                       (:reference 1
                                        :type ("tensorflow::SessionOptions" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8564 8600]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [8532 9684])
                            ("createSession" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("tfsession" variable
                                       (:reference 1
                                        :type ("TfSession" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9786 9807]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [9760 10724])
                            ("preRun" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("sess" variable
                                       (:pointer 1
                                        :type ("Session" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10745 10759]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [10726 11610])
                            ("runRestore" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("restoreNodePath" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11635 11665])
                                    ("variableFileOpPath" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11689 11722])
                                    ("ckptDir" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11746 11768])
                                    ("sess" variable
                                       (:pointer 1
                                        :type ("Session" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11792 11806]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [11612 12533])
                            ("customKernelCreator" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("plugInManager" variable
                                       (:pointer 1
                                        :type ("PlugInManager" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12579 12608])
                                    ("lib" variable
                                       (:pointer 1
                                        :type ("FunctionLibraryRuntime" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12617 12645])
                                    ("nodeDef" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("NodeDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12654 12677])
                                    ("opKernel" variable
                                       (:pointer 2
                                        :type ("OpKernel" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12686 12706]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [12535 14110])
                            ("getRemoteMultiCallVersion" function
                               (:parent "Biz"
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [14163 14394])
                            ("prepareGraph" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("graphFile" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14419 14443])
                                    ("def" variable
                                       (:reference 1
                                        :type ("GraphDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14444 14458]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [14396 15720])
                            ("prepareGraphFromProto" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("graphFile" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15754 15778])
                                    ("def" variable
                                       (:reference 1
                                        :type ("GraphDef" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15779 15793]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [15722 16562])
                            ("getDeviceName" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("zoneName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16590 16613]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [16564 16670])
                            ("createSessionResource" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("maxRuntimeStateCount" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16730 16758]))                                  
                                :type ("tensorflow::SessionResourcePtr" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [16672 16898])
                            ("prepareQueryResource" function
                               (:parent "Biz"
                                :arguments 
                                  ( ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16955 16983]))                                  
                                :type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [16900 17526])
                            ("createQueryResource" function
                               (:parent "Biz"
                                :type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [17528 17670]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [702 17673]))                  
                :type "namespace")
                nil [685 17675]))          
      :file "Biz.cpp"
      :pointmax 17676
      :fsize 17731
      :lastmodtime '(23382 41284 479602 939000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!turing_ha3_compile!suez!build!release64!suez!turing!search!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
