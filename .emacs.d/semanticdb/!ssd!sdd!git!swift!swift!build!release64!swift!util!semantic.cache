;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "BlockPool.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_BLOCKPOOL_H" variable (:constant-flag t) nil [35 52])
            ("swift/common/Common.h" include (:system-flag t) nil [54 86])
            ("swift/common/Log.h" include (:system-flag t) nil [87 116])
            ("swift/util/Block.h" include (:system-flag t) nil [117 146])
            ("autil/Lock.h" include (:system-flag t) nil [147 170])
            ("vector" include (:system-flag t) nil [171 188])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [212 217]))                  
                :type "int")
                nil [190 218])
            ("BlockPool" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [433 440])
                    ("BlockPool" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("bufferSize" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [455 474])
                            ("blockSize" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475 493]))                          
                        :type ("BlockPool" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [445 494])
                    ("BlockPool" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("parent" variable
                               (:pointer 1
                                :type ("BlockPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [509 527])
                            ("maxBufferSize" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [528 550])
                            ("minBufferSize" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [551 573]))                          
                        :type ("BlockPool" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [499 574])
                    ("BlockPool" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [579 592])
                    ("private" label nil (reparse-symbol classsubparts) [593 601])
                    ("BlockPool" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("BlockPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [616 634]))                          
                        :type ("BlockPool" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [606 635])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("BlockPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [661 679]))                          
                        :type ("BlockPool" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [640 680])
                    ("public" label nil (reparse-symbol classsubparts) [681 688])
                    ("allocate" function
                       (:prototype-flag t
                        :type ("BlockPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [693 713])
                    ("freeBlock" function
                       (:prototype-flag t
                        :arguments 
                          ( ("block" variable
                               (:pointer 1
                                :type ("Block" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [733 746]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [718 747])
                    ("freeBlock" function
                       (:prototype-flag t
                        :arguments 
                          ( ("block" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [767 779]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [752 780])
                    ("freeUnusedBlock" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [785 808])
                    ("setReserveBlockCount" function
                       (:prototype-flag t
                        :arguments 
                          ( ("reserveCount" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [839 860]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [813 861])
                    ("getReserveBlockCount" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [866 897])
                    ("getMaxBlockCount" function (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [902 961])
                    ("getMinBlockCount" function (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [966 1025])
                    ("getBlockSize" function (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1030 1081])
                    ("getUsedBlockCount" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1086 1120])
                    ("getUnusedBlockCount" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1125 1161])
                    ("getMaxUnusedBlockCount" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1166 1205])
                    ("getParentUnusedBlockCount" function
                       (:prototype-flag t
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1210 1252])
                    ("private" label nil (reparse-symbol classsubparts) [1253 1261])
                    ("_mutex" variable
                       (:typemodifiers ("mutable")
                        :type ("autil::ThreadMutex" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1266 1300])
                    ("_maxBlockCount" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1305 1328])
                    ("_minBlockCount" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1333 1356])
                    ("_blockSize" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1361 1380])
                    ("_usedBlockCount" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1385 1409])
                    ("_reserveBlockCount" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1414 1441])
                    ("_bufferVec" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("char" type (:pointer 1) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1446 1477])
                    ("_parentPool" variable
                       (:pointer 1
                        :type ("BlockPool" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1482 1505])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1510 1530]))                  
                :type "class")
                nil [415 1533])
            ("SWIFT_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("BlockPool" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1553 1563]))                  
                :type "int")
                nil [1535 1564])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1586 1591]))                  
                :type "int")
                nil [1566 1592]))          
      :file "BlockPool.h"
      :pointmax 1621
      :fsize 1620
      :lastmodtime '(22583 51407 575077 578000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_BLOCKPOOL_H")
          )
))
  :file "!ssd!sdd!git!swift!swift!build!release64!swift!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
