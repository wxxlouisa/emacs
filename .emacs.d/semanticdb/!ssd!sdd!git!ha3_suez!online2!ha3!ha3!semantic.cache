;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [24 38])
            ("os" include nil nil [24 38])
            ("Import" code nil nil [81 94])
            ("copy" include nil nil [95 106])
            ("env" variable nil nil [206 223])
            ("config_h_template" variable nil nil [225 502])
            ("config_cpp_template" variable nil nil [504 828])
            ("run" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [838 841]))              ) nil [830 1221])
            ("GenerateConfig" function nil nil [1222 2474])
            ("aGenConfig" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2490 2494])
                    ("args" variable nil (reparse-symbol function_parameters) [2496 2501])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2503 2511]))                  )
                nil [2475 2616])
            ("env" code nil nil [2616 2641])
            ("env" code nil nil [2642 2658])
            ("env" variable nil nil [2660 2691])
            ("if" code nil nil [2692 2806])
            ("if" code nil nil [2807 3118])
            ("env" code nil nil [3146 3163])
            ("env" code nil nil [3164 3181])
            ("env" code nil nil [3182 3201])
            ("env" code nil nil [3202 3219])
            ("env" code nil nil [3220 3238])
            ("env" code nil nil [3239 3263])
            ("env" code nil nil [3264 3283])
            ("env" code nil nil [3284 3304])
            ("env" code nil nil [3305 3325])
            ("env" code nil nil [3326 3345])
            ("env" code nil nil [3346 3366])
            ("env" code nil nil [3367 3385])
            ("env" code nil nil [3386 3404])
            ("env" code nil nil [3405 3424])
            ("env" code nil nil [3425 3441])
            ("env" code nil nil [3471 3495])
            ("env" code nil nil [3496 3524])
            ("env" code nil nil [3525 3544])
            ("env" code nil nil [3545 3564])
            ("libfake_entry" variable nil nil [3566 3684]))          
      :file "SConscript"
      :pointmax 3685
      :fsize 3684
      :lastmodtime '(22855 16462 302876 341000)
      :unmatched-syntax nil)
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ha3/config.h" include (:system-flag t) nil [54 77])
            ("autil/CommonMacros.h" include (:system-flag t) nil [78 109])
            ("BEGIN_HA3_NAMESPACE" variable (:constant-flag t) nil [119 138])
            ("END_HA3_NAMESPACE" variable (:constant-flag t) nil [184 201])
            ("USE_HA3_NAMESPACE" variable (:constant-flag t) nil [217 234])
            ("BEGIN_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [274 297])
            ("END_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [326 347])
            ("ALIAS_NAMESAPCE" variable (:constant-flag t) nil [359 374])
            ("HA3_NS" variable (:constant-flag t) nil [467 473])
            ("tr1/memory" include (:system-flag t) nil [489 510])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [519 534]))          
      :file "common.h"
      :pointmax 608
      :fsize 607
      :lastmodtime '(22505 58235 778897 570000)
      :unmatched-syntax nil
      :lexical-table 
        '(("BEGIN_ISEARCH_NAMESPACE" . 
              ((NAMESPACE "namespace" 298 . 307) (symbol "isearch" 308 . 315) (open-paren "{" 316 . 317)))
          ("USE_HA3_NAMESPACE" (spp-arg-list ("x") 234 . 237) . 
              ((USING "using" 238 . 243) (NAMESPACE "namespace" 244 . 253) (symbol "isearch" 254 . 261) (punctuation ":" 261 . 262) (punctuation ":" 262 . 263) (symbol "x" 263 . 264)))
          ("END_ISEARCH_NAMESPACE" . ((close-paren "}" 348 . 349)))
          ("ISEARCH_COMMON_H_")
          ("BEGIN_HA3_NAMESPACE" (spp-arg-list ("x") 138 . 141) . 
              ((NAMESPACE "namespace" 142 . 151) (symbol "isearch" 152 . 159) (open-paren "{" 160 . 161) (NAMESPACE "namespace" 162 . 171) (symbol "x" 172 . 173) (open-paren "{" 174 . 175)))
          ("ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 374 . 380) . 
              ((NAMESPACE "namespace" 381 . 390) (symbol "isearch" 391 . 398) (semantic-list "{ namespace x = y; }" 399 . 419)))
          ("HA3_TYPEDEF_PTR" (spp-arg-list ("x") 534 . 537) . 
              ((TYPEDEF "typedef" 538 . 545) (symbol "std" 546 . 549) (punctuation ":" 549 . 550) (punctuation ":" 550 . 551) (symbol "tr1" 551 . 554) (punctuation ":" 554 . 555) (punctuation ":" 555 . 556) (symbol "shared_ptr" 556 . 566) (punctuation "<" 566 . 567) (symbol "x" 567 . 568) (punctuation ">" 568 . 569) (spp-symbol-merge ((symbol "x" 570 . 571) (symbol "Ptr" 573 . 576)) 570 . 576) (punctuation ";" 576 . 577)))
          ("END_HA3_NAMESPACE" (spp-arg-list ("x") 201 . 204) . ((close-paren "}" 205 . 206) (close-paren "}" 207 . 208)))
          ("HA3_NS" (spp-arg-list ("x") 473 . 476) . 
              ((symbol "isearch" 477 . 484) (punctuation ":" 484 . 485) (punctuation ":" 485 . 486) (symbol "x" 486 . 487)))
          )
))
  :file "!ssd!sdd!git!ha3_suez!online2!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
