;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "HttpParamParser.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift_gateway/util/HttpParamParser.h" include (:system-flag t) nil [1 48])
            ("swift_gateway/util/UrlDecoder.h" include (:system-flag t) nil [49 91])
            ("swift_gateway/common/HttpParamDefine.h" include (:system-flag t) nil [92 141])
            ("autil/StringTokenizer.h" include (:system-flag t) nil [142 176])
            ("autil/StringUtil.h" include (:system-flag t) nil [177 206])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [208 230])
            ("SWIFT_GATEWAY_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [262 267]))                  
                :type "int")
                nil [232 268])
            ("SWIFT_GATEWAY_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [293 298])
                    ("" variable (:type ("HttpParamParser" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [299 315]))                  
                :type "int")
                nil [269 316])
            ("HttpParamParser" function
               (:constructor-flag t
                :parent "HttpParamParser"
                :type ("HttpParamParser" type (:type "class") nil nil))
                nil [318 357])
            ("HttpParamParser" function
               (:destructor-flag t
                :parent "HttpParamParser"
                :type "void")
                nil [359 399])
            ("parse" function
               (:parent "HttpParamParser"
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [438 455])
                    ("dataLen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [456 471]))                  
                :type ("HttpParamsPtr" type (:type "class") nil nil))
                nil [401 1241])
            ("transParamName" function
               (:parent "HttpParamParser"
                :arguments 
                  ( ("urlParamMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1289 1328])
                    ("packet" variable
                       (:pointer 1
                        :type ("anet::HTTPPacket" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1337 1362])
                    ("httpParamsPtr" variable (:type ("HttpParamsPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1371 1399]))                  
                :type "void")
                nil [1243 2250])
            ("SWIFT_GATEWAY_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2281 2286]))                  
                :type "int")
                nil [2253 2287]))          
      :file "HttpParamParser.cpp"
      :pointmax 2289
      :fsize 2288
      :lastmodtime '(22556 9796 920723 160000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift_gateway!swift_gateway!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
