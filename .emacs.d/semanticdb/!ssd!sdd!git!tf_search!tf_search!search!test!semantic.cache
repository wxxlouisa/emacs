;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "BizTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include nil nil [1 31])
            ("tensorflow/cc/ops/const_op.h" include nil nil [32 71])
            ("tensorflow/cc/ops/standard_ops.h" include nil nil [72 115])
            ("tensorflow/core/graph/graph_constructor.h" include nil nil [116 168])
            ("tensorflow/core/graph/dist_graph_partition.h" include nil nil [169 224])
            ("tensorflow/core/public/session.h" include nil nil [225 268])
            ("tensorflow/core/lib/core/status_test_util.h" include nil nil [269 323])
            ("tf_search/search/Biz.h" include nil nil [324 357])
            ("tf_search/common/RuntimeResource.h" include nil nil [358 403])
            ("tensorflow/core/kernels/ops_testutil.h" include nil nil [404 453])
            ("tf_search/ops/test/MockSearchService.h" include nil nil [454 503])
            ("tf_search/search/test/MockSession.h" include nil nil [504 550])
            ("tf_search/search/test/IndexPartitionCreator.h" include nil nil [551 607])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [609 629])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [630 660])
            ("suez" using (:type ("suez" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [661 682])
            ("expression" using (:type ("expression" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [683 710])
            ("testing" variable (:type "int") nil [729 737])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [738 765])
            ("tensorflow::ops" using (:type ("tensorflow::ops" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [766 798])
            ("IE_NAMESPACE_USE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("index" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [816 822]))                  
                :type "int")
                nil [799 823])
            ("tf_search" type
               (:members 
                  ( ("MATCHER_P" function
                       (:arguments 
                          ( ("" variable (:type ("InputTensorEq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [858 872])
                            ("" variable (:type ("expectedInputs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [873 888]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [848 1756])
                    ("BizTest" type
                       (:superclasses 
                          ( ("TESTBASE" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [1792 1802])
                            ("createBiz" function (:type ("BizPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1807 2057])
                            ("prepareIndex" function
                               (:arguments 
                                  ( ("_rootDir" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2080 2103]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2062 3781])
                            ("protected" label nil (reparse-symbol classsubparts) [3782 3792])
                            ("_indexPartWrapper" variable (:type ("IndexPartitionWrapperPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3797 3840]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1758 3843])
                    ("SquareOp" function
                       (:arguments 
                          ( ("scope" variable
                               (:reference 1
                                :type ("tensorflow::Scope" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3883 3908])
                            ("x" variable (:type ("tensorflow::Input" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3941 3961])
                            ("y" variable (:type ("tensorflow::Input" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3994 4014])
                            ("moduleName" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4045 4068]))                          
                        :type ("tensorflow::Output" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3847 4612])
                    ("loadPlugin" function
                       (:arguments 
                          ( ("biz" variable
                               (:reference 1
                                :type ("Biz" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4632 4641])
                            ("localConfigPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4642 4672]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4614 5203])
                    ("prepareGraph" function
                       (:arguments 
                          ( ("def" variable
                               (:reference 1
                                :type ("GraphDef" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5225 5239])
                            ("pkType" variable (:type ("DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5240 5256]))                          
                        :type ("Status" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5205 5844])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5853 5861])
                            ("" variable (:type ("testGetPkInputType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5862 5881]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [5846 6238])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6247 6255])
                            ("" variable (:type ("testPlugin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6256 6267]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [6240 7231])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7240 7248])
                            ("" variable (:type ("testNeedProxyGraph" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7249 7268]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [7233 7769])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7778 7786])
                            ("" variable (:type ("testLoadBizInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7787 7803]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [7771 8393])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9755 9763])
                            ("" variable (:type ("testGenBizContextArgs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9764 9786]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [9748 10853])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10862 10870])
                            ("" variable (:type ("testPreRun" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10871 10882]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10855 11826])
                    ("TEST_F" function
                       (:arguments 
                          ( ("" variable (:type ("BizTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11835 11843])
                            ("" variable (:type ("testZoneBizName" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11844 11860]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [11828 11934]))                  
                :type "namespace")
                nil [825 11937]))          
      :file "BizTest.cpp"
      :pointmax 11938
      :fsize 11937
      :lastmodtime '(23316 41168 834336 241000)
      :unmatched-syntax '((thing 889 . 891) (thing 728 . 729) (thing 711 . 716) (thing 3845 . 3846) (thing 3846 . 3847) (thing 3875 . 3880) (thing 3881 . 3882) (thing 3882 . 3883) (thing 3939 . 3940) (thing 3940 . 3941) (thing 3992 . 3993) (thing 3993 . 3994)))
    (semanticdb-table "IndexPartitionCreator.h"
      :file "IndexPartitionCreator.h"
      :fsize 857
      :lastmodtime '(23316 41168 843335 802000)))
  :file "!ssd!sdd!git!tf_search!tf_search!search!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
