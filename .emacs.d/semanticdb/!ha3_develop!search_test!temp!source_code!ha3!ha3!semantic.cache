;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "isearch.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_H_" variable (:constant-flag t) nil [28 38])
            ("stdint.h" include (:system-flag t) nil [40 59])
            ("map" include (:system-flag t) nil [60 74])
            ("string" include (:system-flag t) nil [75 92])
            ("indexlib/indexlib.h" include (:system-flag t) nil [93 123])
            ("tr1/memory" include (:system-flag t) nil [124 145])
            ("autil/LongHashValue.h" include (:system-flag t) nil [146 178])
            ("ha3/config.h" include (:system-flag t) nil [179 202])
            ("matchdoc/ValueType.h" include (:system-flag t) nil [203 234])
            ("suez/turing/expression/common.h" include (:system-flag t) nil [235 277])
            ("primarykey_t" type
               (:typedef ("autil::uint128_t" type (:type "class") nil nil)
                :type "typedef")
                nil [279 317])
            ("fieldboost_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [319 348])
            ("fieldbitmap_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [350 381])
            ("INVALID_FIELDBITMAP" variable
               (:constant-flag t
                :default-value "(fieldbitmap_t)0xFFFFFFFF"
                :type ("fieldbitmap_t" type (:type "class") nil nil))
                nil [382 450])
            ("score_t" type
               (:typedef ("double")
                :type "typedef")
                nil [452 475])
            ("operation_id_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [477 508])
            ("FullIndexVersion" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [509 543])
            ("quota_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [544 569])
            ("INVALID_OPERATION_ID" variable
               (:constant-flag t
                :default-value "-1"
                :type ("operation_id_t" type (:type "class") nil nil))
                nil [571 618])
            ("END_DOCID" variable (:constant-flag t) nil [628 637])
            ("MAX_QUOTA" variable (:constant-flag t) nil [668 677])
            ("UNINITIALIZED_DOCID" variable (:constant-flag t) nil [700 719])
            ("SL_QRS" variable
               (:constant-flag t
                :default-value "SL_PROXY"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [735 767])
            ("VariableType" type
               (:typedef ("matchdoc::BuiltinType" type (:type "class") nil nil)
                :type "typedef")
                nil [769 812])
            ("VRGroupKey" type
               (:members 
                  ( ("FOR_DISTINCT" variable
                       (:constant-flag t
                        :default-value (851 852)
                        :type "int")
                        (reparse-symbol enumsubparts) [836 852])
                    ("FOR_ATTRIBUTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [901 915])
                    ("FOR_USER_DATA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [964 978]))                  
                :type "enum")
                nil [814 1025])
            ("QueryTermType" type
               (:members 
                  ( ("AND_TERM" variable
                       (:constant-flag t
                        :default-value (1063 1064)
                        :type "int")
                        (reparse-symbol enumsubparts) [1052 1064])
                    ("OR_TERM" variable
                       (:constant-flag t
                        :default-value (1080 1081)
                        :type "int")
                        (reparse-symbol enumsubparts) [1070 1081])
                    ("ANDNOT_TERM" variable
                       (:constant-flag t
                        :default-value (1101 1102)
                        :type "int")
                        (reparse-symbol enumsubparts) [1087 1102])
                    ("RANK_TERM" variable
                       (:constant-flag t
                        :default-value (1120 1121)
                        :type "int")
                        (reparse-symbol enumsubparts) [1108 1121]))                  
                :type "enum")
                nil [1027 1125])
            ("JoinType" type
               (:members 
                  ( ("DEFAULT_JOIN" variable
                       (:constant-flag t
                        :default-value (1162 1163)
                        :type "int")
                        (reparse-symbol enumsubparts) [1147 1163])
                    ("WEAK_JOIN" variable
                       (:constant-flag t
                        :default-value (1181 1182)
                        :type "int")
                        (reparse-symbol enumsubparts) [1169 1182])
                    ("STRONG_JOIN" variable
                       (:constant-flag t
                        :default-value (1202 1203)
                        :type "int")
                        (reparse-symbol enumsubparts) [1188 1203]))                  
                :type "enum")
                nil [1127 1206])
            ("SubDocDisplayType" type
               (:members 
                  ( ("SUB_DOC_DISPLAY_NO" variable
                       (:constant-flag t
                        :default-value (1258 1259)
                        :type "int")
                        (reparse-symbol enumsubparts) [1237 1259])
                    ("SUB_DOC_DISPLAY_FLAT" variable
                       (:constant-flag t
                        :default-value (1288 1289)
                        :type "int")
                        (reparse-symbol enumsubparts) [1265 1289])
                    ("SUB_DOC_DISPLAY_GROUP" variable
                       (:constant-flag t
                        :default-value (1319 1320)
                        :type "int")
                        (reparse-symbol enumsubparts) [1295 1320]))                  
                :type "enum")
                nil [1208 1323])
            ("TermType" type
               (:members 
                  ( ("TT_STRING" variable
                       (:constant-flag t
                        :default-value (1357 1358)
                        :type "int")
                        (reparse-symbol enumsubparts) [1345 1358])
                    ("TT_NUMBER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1364 1375]))                  
                :type "enum")
                nil [1325 1376])
            ("QueryType" type
               (:members 
                  ( ("TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (1412 1413)
                        :type "int")
                        (reparse-symbol enumsubparts) [1399 1413])
                    ("NUMBER_QUERY" variable
                       (:constant-flag t
                        :default-value (1434 1435)
                        :type "int")
                        (reparse-symbol enumsubparts) [1419 1435])
                    ("PHRASE_QUERY" variable
                       (:constant-flag t
                        :default-value (1456 1457)
                        :type "int")
                        (reparse-symbol enumsubparts) [1441 1457])
                    ("AND_QUERY" variable
                       (:constant-flag t
                        :default-value (1475 1476)
                        :type "int")
                        (reparse-symbol enumsubparts) [1463 1476])
                    ("OR_QUERY" variable
                       (:constant-flag t
                        :default-value (1493 1494)
                        :type "int")
                        (reparse-symbol enumsubparts) [1482 1494])
                    ("RANK_QUERY" variable
                       (:constant-flag t
                        :default-value (1513 1514)
                        :type "int")
                        (reparse-symbol enumsubparts) [1500 1514])
                    ("ANDNOT_QUERY" variable
                       (:constant-flag t
                        :default-value (1535 1536)
                        :type "int")
                        (reparse-symbol enumsubparts) [1520 1536])
                    ("MULTI_TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (1561 1562)
                        :type "int")
                        (reparse-symbol enumsubparts) [1542 1562]))                  
                :type "enum")
                nil [1378 1566])
            ("MatchDataLevel" type
               (:members 
                  ( ("MDL_NONE" variable
                       (:constant-flag t
                        :default-value (1605 1606)
                        :type "int")
                        (reparse-symbol enumsubparts) [1594 1606])
                    ("MDL_TERM" variable
                       (:constant-flag t
                        :default-value (1623 1624)
                        :type "int")
                        (reparse-symbol enumsubparts) [1612 1624])
                    ("MDL_SUB_QUERY" variable
                       (:constant-flag t
                        :default-value (1646 1647)
                        :type "int")
                        (reparse-symbol enumsubparts) [1630 1647]))                  
                :type "enum")
                nil [1568 1651])
            ("AttributeExprScope" type
               (:members 
                  ( ("AE_DEFAULT" variable
                       (:constant-flag t
                        :default-value (1696 1697)
                        :type "int")
                        (reparse-symbol enumsubparts) [1683 1697])
                    ("AE_FILTER" variable
                       (:constant-flag t
                        :default-value (1715 1716)
                        :type "int")
                        (reparse-symbol enumsubparts) [1703 1716])
                    ("AE_SCORER" variable
                       (:constant-flag t
                        :default-value (1734 1735)
                        :type "int")
                        (reparse-symbol enumsubparts) [1722 1735])
                    ("AE_SORTER" variable
                       (:constant-flag t
                        :default-value (1753 1754)
                        :type "int")
                        (reparse-symbol enumsubparts) [1741 1754]))                  
                :type "enum")
                nil [1653 1758])
            ("HaCompressType" type
               (:members 
                  ( ("INVALID_COMPRESS_TYPE" variable
                       (:constant-flag t
                        :default-value (1810 1811)
                        :type "int")
                        (reparse-symbol enumsubparts) [1786 1811])
                    ("NO_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1817 1829])
                    ("Z_SPEED_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1834 1851])
                    ("Z_DEFAULT_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1856 1875])
                    ("SNAPPY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1880 1887])
                    ("LZ4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1892 1896]))                  
                :type "enum")
                nil [1760 1899])
            ("QueryOperator" type
               (:members 
                  ( ("OP_UNKNOWN" variable
                       (:constant-flag t
                        :default-value (1939 1940)
                        :type "int")
                        (reparse-symbol enumsubparts) [1926 1940])
                    ("OP_AND" variable
                       (:constant-flag t
                        :default-value (1955 1956)
                        :type "int")
                        (reparse-symbol enumsubparts) [1946 1956])
                    ("OP_OR" variable
                       (:constant-flag t
                        :default-value (1970 1971)
                        :type "int")
                        (reparse-symbol enumsubparts) [1962 1971])
                    ("OP_WEAKAND" variable
                       (:constant-flag t
                        :default-value (1990 1991)
                        :type "int")
                        (reparse-symbol enumsubparts) [1977 1991]))                  
                :type "enum")
                nil [1901 1995])
            ("ResultFormatType" type
               (:members 
                  ( ("RF_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2025 2036])
                    ("RF_XML" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2041 2048])
                    ("RF_PROTOBUF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2053 2066]))                  
                :type "enum")
                nil [1997 2067])
            ("FetchSummaryType" type
               (:members 
                  ( ("BY_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2097 2108])
                    ("BY_DOCID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2113 2122])
                    ("BY_PK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2127 2133])
                    ("BY_RAWPK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2138 2148]))                  
                :type "enum")
                nil [2069 2149])
            ("QuotaMode" type
               (:members 
                  ( ("QM_PER_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2172 2183])
                    ("QM_PER_LAYER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2188 2201])
                    ("QM_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2206 2217]))                  
                :type "enum")
                nil [2151 2220])
            ("QuotaType" type
               (:members 
                  ( ("QT_PROPOTION" variable
                       (:constant-flag t
                        :default-value (2258 2259)
                        :type "int")
                        (reparse-symbol enumsubparts) [2243 2259])
                    ("QT_AVERAGE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2312 2323])
                    ("QT_QUOTA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2339 2348])
                    ("QT_UNKNOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2353 2364]))                  
                :type "enum")
                nil [2222 2365])
            ("DispatchType" type
               (:members 
                  ( ("DISPATCH_BY_PARTITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2391 2413])
                    ("DISPATCH_BY_REPLICA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2418 2439]))                  
                :type "enum")
                nil [2367 2440])
            ("MergeInStep" type
               (:members 
                  ( ("MERGE_IN_STEP_FULL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2464 2483])
                    ("MERGE_IN_STEP_BEGIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2488 2508])
                    ("MERGE_IN_STEP_DOING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2513 2533])
                    ("MERGE_IN_STEP_END" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2538 2557]))                  
                :type "enum")
                nil [2442 2558])
            ("SummarySearchType" type
               (:members 
                  ( ("SUMMARY_SEARCH_NORMAL" variable
                       (:constant-flag t
                        :default-value (2612 2613)
                        :type "int")
                        (reparse-symbol enumsubparts) [2588 2613])
                    ("SUMMARY_SEARCH_EXTRA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2619 2640])
                    ("SUMMARY_SEARCH_COUNT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2645 2667]))                  
                :type "enum")
                nil [2560 2668])
            ("SEARCH_PHASE_ONE" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2670 2706])
            ("SEARCH_PHASE_TWO" variable
               (:constant-flag t
                :default-value "2"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2707 2743])
            ("SEARCH_PHASE_SQL" variable
               (:constant-flag t
                :default-value "3"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2744 2780])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [2782 2837])
            ("KeyValueMapPtr" type
               (:typedef ("std::shared_ptr" type
                     (:template-specifier 
                        ( ("KeyValueMap" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [2838 2890])
            ("getValueFromKeyValueMap" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("keyValueMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2944 2998])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3007 3030])
                    ("defaultValue" variable
                       (:reference 1
                        :constant-flag t
                        :default-value "\"\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3039 3075]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [2892 3239])
            ("MAX_AGGREGATE_GROUP_COUNT" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3241 3289])
            ("DOCID_PARTITION_MODE" variable (:constant-flag t) nil [3299 3319])
            ("NULL_CLUSTER" variable (:constant-flag t) nil [3336 3348])
            ("BuildMode" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [3368 3398])
            ("BuildPhase" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [3399 3430])
            ("hashid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3492 3518])
            ("clusterid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3519 3548])
            ("INVALID_CLUSTERID" variable
               (:constant-flag t
                :default-value "(clusterid_t)-1"
                :type ("clusterid_t" type (:type "class") nil nil))
                nil [3549 3603])
            ("DEFAULT_BOOST_VALUE" variable
               (:constant-flag t
                :default-value "100"
                :type ("int32_t" type (:type "class") nil nil))
                nil [3605 3645])
            ("MAX_RERANK_SIZE" variable
               (:constant-flag t
                :default-value "1000000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3646 3687])
            ("MIN_INDEX_SWITCH_LIMIT" variable
               (:constant-flag t
                :default-value "150"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3688 3732])
            ("NULL_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3795 3837])
            ("DYNAMIC_CUT_SEPARATOR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\\x1B\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3838 3894])
            ("LAYERKEY_DOCID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%docid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3895 3946])
            ("LAYERKEY_OTHER" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%other\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3947 3998])
            ("LAYERKEY_SEGMENTID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%segmentid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3999 4058])
            ("LAYERKEY_PERCENT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%percent\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4059 4114])
            ("LAYERKEY_UNSORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%unsorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4115 4172])
            ("LAYERKEY_SORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%sorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4173 4226])
            ("PLUGIN_PATH_NAME" variable (:constant-flag t) nil [4237 4253])
            ("DEFAULT_QRS_CHAIN" variable (:constant-flag t) nil [4274 4291])
            ("DEFAULT_DEBUG_QRS_CHAIN" variable (:constant-flag t) nil [4310 4333])
            ("DEFAULT_DEBUG_PROCESSOR" variable (:constant-flag t) nil [4380 4403])
            ("DEFAULT_DEBUG_RANK_PROFILE" variable (:constant-flag t) nil [4445 4471])
            ("DEFAULT_DEBUG_SCORER" variable (:constant-flag t) nil [4521 4541])
            ("DEFAULT_RANK_PROFILE" variable (:constant-flag t) nil [4583 4603])
            ("DEFAULT_SUMMARY_PROFILE" variable (:constant-flag t) nil [4630 4653])
            ("DEFAULT_CONFIG_DIR" variable (:constant-flag t) nil [4679 4697])
            ("LOCAL_URI_PREFIX" variable (:constant-flag t) nil [4722 4738])
            ("FETCHSUMMARY_GID_SEPERATOR" variable (:constant-flag t) nil [4758 4784])
            ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" variable (:constant-flag t) nil [4797 4834])
            ("STATUS_CHECK_PREFIX" variable (:constant-flag t) nil [5105 5124])
            ("HTTP_SUPPORT_PREFIX" variable (:constant-flag t) nil [5142 5161])
            ("LIST_CMD" variable (:constant-flag t) nil [5185 5193])
            ("GET_FILE_CONTENT_CMD" variable (:constant-flag t) nil [5207 5227])
            ("RESULT_FORMAT_XML" variable (:constant-flag t) nil [5244 5261])
            ("RESULT_FORMAT_PROTOBUF" variable (:constant-flag t) nil [5276 5298])
            ("LOCAL_USER_NAME_DEFAULT" variable (:constant-flag t) nil [5319 5342])
            ("LOCAL_SERVICE_NAME_DEFAULT" variable (:constant-flag t) nil [5356 5382])
            ("HEART_BEAT_META_INFO_KEY" variable (:constant-flag t) nil [5408 5432])
            ("HEART_BEAT_CLUSTER_NAME" variable (:constant-flag t) nil [5454 5477])
            ("RAW_DOCUMENT_FORMAT_HA3" variable (:constant-flag t) nil [5538 5561])
            ("RAW_DOCUMENT_FORMAT_ISEARCH" variable (:constant-flag t) nil [5576 5603])
            ("FSUTIL_BINARY" variable (:constant-flag t) nil [5623 5636])
            ("MAX_PARTITION_RANGE" variable
               (:constant-flag t
                :default-value "65535"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5652 5695])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "MAX_PARTITION_RANGE + 1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5696 5757])
            ("KEEP_INCREMENTAL_VERSION_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6155 6205])
            ("APP_ITERATOR_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6206 6255])
            ("BUILDER_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "500 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6328 6380])
            ("LOCAL_BUILDER_METRICS_STDOUT_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6389 6443])
            ("SERVER_TIMEOUT" variable
               (:constant-flag t
                :default-value "5 * 1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6542 6582])
            ("FETCHSUMMARY_GID_FIELD_SIZE" variable
               (:constant-flag t
                :default-value "5"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6590 6637])
            ("STATUS_CHECK_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "6"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6638 6681])
            ("HTTP_SUPPORT_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "12"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6682 6726])
            ("GET_FILE_SIZE_LIMIT" variable
               (:constant-flag t
                :default-value "100 * 1024"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6727 6774])
            ("DEFAULT_WORKER_RESOURCE" variable
               (:constant-flag t
                :default-value "100"
                :type "int")
                nil [6784 6824])
            ("DEFAULT_PARTITION_RESOURCE" variable
               (:constant-flag t
                :default-value "DEFAULT_WORKER_RESOURCE"
                :type "int")
                nil [6825 6888])
            ("HA3_REQUEST_VERSION" variable (:type "int") nil [7366 7386])
            ("DEFAULT_AMON_AGENT_PORT" variable
               (:constant-flag t
                :default-value "10086"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7449 7496])
            ("INVALID_SEARCHER_CACHE_EXPIRE_TIME" variable
               (:constant-flag t
                :default-value "uint32_t(-1)"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7498 7563])
            ("REALTIME_UNLIMIT_QPS" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7565 7605])
            ("DEFAULT_WORKER_CAPABILITY" variable
               (:constant-flag t
                :default-value "16"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7606 7652])
            ("HA3_VERSION" variable (:type "int") nil [7717 7729])
            ("DEFAULT_TASK_QUEUE_NAME" variable
               (:constant-flag t
                :default-value "\"__ha3_runtime_default_task_queue\""
                :type ("std::string" type (:type "class") nil nil))
                nil [7730 7809])
            ("HA3_EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [7811 7851])
            ("ONLINE_CONFIG_KEEP_COUNT" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [7853 7892])
            ("WARN_UNUSED_RESULT" variable (:constant-flag t) nil [8085 8103]))          
      :file "isearch.h"
      :pointmax 8148
      :fsize 8147
      :lastmodtime '(23678 17348 208413 329000)
      :unmatched-syntax '((thing 3733 . 3738) (thing 3739 . 3747) (thing 3748 . 3774) (thing 3775 . 3776) (thing 3777 . 3778) (thing 3779 . 3780) (thing 3781 . 3785) (thing 3786 . 3787) (thing 3788 . 3792) (thing 3792 . 3793) (thing 5758 . 5763) (thing 5764 . 5771) (thing 5772 . 5801) (thing 5802 . 5803) (thing 5804 . 5805) (thing 5806 . 5807) (thing 5808 . 5812) (thing 5813 . 5814) (thing 5815 . 5819) (thing 5819 . 5820) (thing 5827 . 5832) (thing 5833 . 5840) (thing 5841 . 5864) (thing 5865 . 5866) (thing 5867 . 5869) (thing 5870 . 5871) (thing 5872 . 5876) (thing 5877 . 5878) (thing 5879 . 5883) (thing 5883 . 5884) (thing 5892 . 5897) (thing 5898 . 5905) (thing 5906 . 5928) (thing 5929 . 5930) (thing 5931 . 5932) (thing 5933 . 5934) (thing 5935 . 5939) (thing 5940 . 5941) (thing 5942 . 5946) (thing 5946 . 5947) (thing 5954 . 5959) (thing 5960 . 5967) (thing 5968 . 5999) (thing 6000 . 6001) (thing 6002 . 6003) (thing 6004 . 6005) (thing 6006 . 6010) (thing 6011 . 6012) (thing 6013 . 6017) (thing 6017 . 6018) (thing 6025 . 6030) (thing 6031 . 6038) (thing 6039 . 6070) (thing 6071 . 6072) (thing 6073 . 6074) (thing 6075 . 6076) (thing 6077 . 6081) (thing 6082 . 6083) (thing 6084 . 6088) (thing 6088 . 6089) (thing 6096 . 6101) (thing 6102 . 6109) (thing 6110 . 6129) (thing 6130 . 6131) (thing 6132 . 6133) (thing 6134 . 6135) (thing 6136 . 6140) (thing 6141 . 6142) (thing 6143 . 6147) (thing 6147 . 6148) (thing 6265 . 6270) (thing 6271 . 6278) (thing 6279 . 6302) (thing 6303 . 6304) (thing 6305 . 6306) (thing 6307 . 6308) (thing 6309 . 6313) (thing 6314 . 6315) (thing 6316 . 6320) (thing 6320 . 6321) (thing 6478 . 6483) (thing 6484 . 6491) (thing 6492 . 6512) (thing 6513 . 6514) (thing 6515 . 6518) (thing 6519 . 6520) (thing 6521 . 6525) (thing 6526 . 6527) (thing 6528 . 6532) (thing 6532 . 6533) (thing 6889 . 6894) (thing 6895 . 6902) (thing 6903 . 6927) (thing 6928 . 6929) (thing 6930 . 6931) (thing 6932 . 6933) (thing 6934 . 6938) (thing 6939 . 6940) (thing 6941 . 6945) (thing 6945 . 6946) (thing 6954 . 6959) (thing 6960 . 6967) (thing 6968 . 6994) (thing 6995 . 6996) (thing 6997 . 7014) (thing 7015 . 7016) (thing 7017 . 7024) (thing 7068 . 7069) (thing 7070 . 7087) (thing 7088 . 7089) (thing 7090 . 7095) (thing 7139 . 7140) (thing 7141 . 7158) (thing 7159 . 7160) (thing 7161 . 7164) (thing 7208 . 7209) (thing 7210 . 7211) (thing 7211 . 7212) (thing 7269 . 7274) (thing 7275 . 7282) (thing 7283 . 7305) (thing 7306 . 7307) (thing 7308 . 7334) (thing 7335 . 7336) (thing 7337 . 7363) (thing 7364 . 7365) (thing 7654 . 7659) (thing 7660 . 7663) (thing 7663 . 7664) (thing 7664 . 7665) (thing 7665 . 7671) (thing 7672 . 7691) (thing 7692 . 7693) (thing 7694 . 7716) (thing 7893 . 7898) (thing 7899 . 7906) (thing 7907 . 7935) (thing 7936 . 7937) (thing 7938 . 7940) (thing 7941 . 7942) (thing 7943 . 7947) (thing 7948 . 7949) (thing 7950 . 7954) (thing 7954 . 7955))
      :lexical-table 
        '(("END_DOCID" . ((semantic-list "((docid_t)0x7FFFFFFF)" 638 . 659)))
          ("DEFAULT_DEBUG_QRS_CHAIN" . ((string "\"_@_build_in_DebugQueryMatchQrsChain\"" 4334 . 4371)))
          ("DEFAULT_CONFIG_DIR" . ((string "\"default_conf/\"" 4698 . 4713)))
          ("DEFAULT_DEBUG_PROCESSOR" . ((string "\"_@_build_in_MatchInfoProcessor\"" 4404 . 4436)))
          ("MAX_QUOTA" . ((semantic-list "((quota_t)-1)" 678 . 691)))
          ("NULL_CLUSTER" . ((string "\"\"" 3349 . 3351)))
          ("GET_FILE_CONTENT_CMD" . ((string "\"file\"" 5228 . 5234)))
          ("RESULT_FORMAT_XML" . ((string "\"xml\"" 5262 . 5267)))
          ("DOCID_PARTITION_MODE" . ((string "\"docid\"" 3320 . 3327)))
          ("DEFAULT_QRS_CHAIN" . ((string "\"DEFAULT\"" 4292 . 4301)))
          ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" . ((string "\"_\"" 4835 . 4838)))
          ("DEFAULT_DEBUG_RANK_PROFILE" . ((string "\"_@_build_in_DebugQueryMatchRankProfile\"" 4472 . 4512)))
          ("FETCHSUMMARY_GID_SEPERATOR" . ((string "\"|\"" 4785 . 4788)))
          ("LOCAL_USER_NAME_DEFAULT" . ((string "\"ha\"" 5343 . 5347)))
          ("RAW_DOCUMENT_FORMAT_ISEARCH" . ((string "\"isearch\"" 5604 . 5613)))
          ("ISEARCH_H_")
          ("DEFAULT_SUMMARY_PROFILE" . ((string "\"DefaultProfile\"" 4654 . 4670)))
          ("RESULT_FORMAT_PROTOBUF" . ((string "\"protobuf\"" 5299 . 5309)))
          ("LOCAL_SERVICE_NAME_DEFAULT" . ((string "\"local_service\"" 5383 . 5398)))
          ("HEART_BEAT_META_INFO_KEY" . ((string "\"WorkerInfo\"" 5433 . 5445)))
          ("HEART_BEAT_CLUSTER_NAME" . ((string "\"__ha3_admin_cluster_name_\"" 5478 . 5505)))
          ("PLUGIN_PATH_NAME" . ((string "\"plugins/\"" 4254 . 4264)))
          ("HTTP_SUPPORT_PREFIX" . ((string "\"httpsupport:\"" 5162 . 5176)))
          ("RAW_DOCUMENT_FORMAT_HA3" . ((string "\"ha3\"" 5562 . 5567)))
          ("FSUTIL_BINARY" . ((string "\"fs_util_bin\"" 5637 . 5650)))
          ("LIST_CMD" . ((string "\"ls\"" 5194 . 5198)))
          ("DEFAULT_RANK_PROFILE" . ((string "\"DefaultProfile\"" 4604 . 4620)))
          ("WARN_UNUSED_RESULT" . ((symbol "__attribute__" 8104 . 8117) (semantic-list "((warn_unused_result))" 8117 . 8139)))
          ("UNINITIALIZED_DOCID" . ((semantic-list "((docid_t)-2)" 720 . 733)))
          ("DEFAULT_DEBUG_SCORER" . ((string "\"_@_build_in_RecordInfoScorer\"" 4543 . 4573)))
          ("STATUS_CHECK_PREFIX" . ((string "\"status\"" 5125 . 5133)))
          ("LOCAL_URI_PREFIX" . ((string "\"file://\"" 4739 . 4748)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [24 38])
            ("os" include nil nil [24 38])
            ("Import" code nil nil [81 94])
            ("copy" include nil nil [95 106])
            ("env" variable nil nil [206 223])
            ("config_h_template" variable nil nil [225 502])
            ("config_cpp_template" variable nil nil [504 828])
            ("run" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [838 841]))              ) nil [830 1221])
            ("GenerateConfig" function nil nil [1222 2474])
            ("aGenConfig" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2490 2494])
                    ("args" variable nil (reparse-symbol function_parameters) [2496 2501])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2503 2511]))                  )
                nil [2475 2616])
            ("env" code nil nil [2616 2641])
            ("env" code nil nil [2642 2658])
            ("env" variable nil nil [2660 2691])
            ("if" code nil nil [2692 2806])
            ("if" code nil nil [2807 3118])
            ("ha3_cava_bc" variable nil nil [3119 4002])
            ("env" code nil nil [4003 4045])
            ("env" variable nil nil [4046 4078])
            ("env" code nil nil [4107 4124])
            ("env" code nil nil [4125 4142])
            ("env" code nil nil [4143 4162])
            ("env" code nil nil [4163 4180])
            ("env" code nil nil [4181 4199])
            ("env" code nil nil [4200 4224])
            ("env" code nil nil [4225 4244])
            ("env" code nil nil [4245 4265])
            ("env" code nil nil [4266 4286])
            ("env" code nil nil [4287 4306])
            ("env" code nil nil [4307 4327])
            ("env" code nil nil [4328 4346])
            ("env" code nil nil [4347 4365])
            ("env" code nil nil [4366 4385])
            ("env" code nil nil [4386 4402])
            ("env" code nil nil [4457 4485])
            ("env" code nil nil [4486 4505])
            ("env" code nil nil [4506 4525])
            ("env" code nil nil [4526 4545])
            ("env" code nil nil [4546 4563])
            ("env" code nil nil [4564 4580])
            ("libfake_entry" variable nil nil [4611 4729]))          
      :file "SConscript"
      :pointmax 4730
      :fsize 4729
      :lastmodtime '(23662 15086 583874 666000)
      :unmatched-syntax nil)
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ha3/config.h" include (:system-flag t) nil [54 77])
            ("autil/CommonMacros.h" include (:system-flag t) nil [78 109])
            ("BEGIN_HA3_NAMESPACE" variable (:constant-flag t) nil [119 138])
            ("END_HA3_NAMESPACE" variable (:constant-flag t) nil [184 201])
            ("USE_HA3_NAMESPACE" variable (:constant-flag t) nil [217 234])
            ("BEGIN_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [274 297])
            ("END_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [326 347])
            ("ALIAS_NAMESAPCE" variable (:constant-flag t) nil [359 374])
            ("HA3_NS" variable (:constant-flag t) nil [467 473])
            ("tr1/memory" include (:system-flag t) nil [489 510])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [519 534]))          
      :file "common.h"
      :pointmax 608
      :fsize 607
      :lastmodtime '(23621 34008 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BEGIN_ISEARCH_NAMESPACE" . 
              ((NAMESPACE "namespace" 298 . 307) (symbol "isearch" 308 . 315) (open-paren "{" 316 . 317)))
          ("USE_HA3_NAMESPACE" (spp-arg-list ("x") 234 . 237) . 
              ((USING "using" 238 . 243) (NAMESPACE "namespace" 244 . 253) (symbol "isearch" 254 . 261) (punctuation ":" 261 . 262) (punctuation ":" 262 . 263) (symbol "x" 263 . 264)))
          ("END_ISEARCH_NAMESPACE" . ((close-paren "}" 348 . 349)))
          ("ISEARCH_COMMON_H_")
          ("BEGIN_HA3_NAMESPACE" (spp-arg-list ("x") 138 . 141) . 
              ((NAMESPACE "namespace" 142 . 151) (symbol "isearch" 152 . 159) (open-paren "{" 160 . 161) (NAMESPACE "namespace" 162 . 171) (symbol "x" 172 . 173) (open-paren "{" 174 . 175)))
          ("ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 374 . 380) . 
              ((NAMESPACE "namespace" 381 . 390) (symbol "isearch" 391 . 398) (semantic-list "{ namespace x = y; }" 399 . 419)))
          ("HA3_TYPEDEF_PTR" (spp-arg-list ("x") 534 . 537) . 
              ((TYPEDEF "typedef" 538 . 545) (symbol "std" 546 . 549) (punctuation ":" 549 . 550) (punctuation ":" 550 . 551) (symbol "tr1" 551 . 554) (punctuation ":" 554 . 555) (punctuation ":" 555 . 556) (symbol "shared_ptr" 556 . 566) (punctuation "<" 566 . 567) (symbol "x" 567 . 568) (punctuation ">" 568 . 569) (spp-symbol-merge ((symbol "x" 570 . 571) (symbol "Ptr" 573 . 576)) 570 . 576) (punctuation ";" 576 . 577)))
          ("END_HA3_NAMESPACE" (spp-arg-list ("x") 201 . 204) . ((close-paren "}" 205 . 206) (close-paren "}" 207 . 208)))
          ("HA3_NS" (spp-arg-list ("x") 473 . 476) . 
              ((symbol "isearch" 477 . 484) (punctuation ":" 484 . 485) (punctuation ":" 485 . 486) (symbol "x" 486 . 487)))
          )
)
    (semanticdb-table "FakeEntry.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("suez/search/SearchManager.h" include (:system-flag t) nil [1 39])
            ("suez" type
               (:members 
                  ( ("FakeWorker" type
                       (:superclasses 
                          ( ("suez::SearchManager" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [107 114])
                            ("FakeWorker" function
                               (:constructor-flag t
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [119 139])
                            ("FakeWorker" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [144 165])
                            ("private" label nil (reparse-symbol classsubparts) [166 174])
                            ("FakeWorker" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FakeWorker" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190 209]))                                  
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [179 210])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FakeWorker" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [237 256]))                                  
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [215 257])
                            ("public" label nil (reparse-symbol classsubparts) [258 265]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [59 795])
                    ("createSearchManager" function
                       (:pointer 1
                        :type ("SearchManager" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [797 866]))                  
                :type "namespace")
                nil [41 869]))          
      :file "FakeEntry.cpp"
      :pointmax 870
      :fsize 869
      :lastmodtime '(23621 34008 0 0)
      :unmatched-syntax '((thing 785 . 792) (thing 776 . 784) (thing 773 . 775) (thing 763 . 773) (thing 758 . 762) (thing 746 . 753) (thing 737 . 745) (thing 734 . 736) (thing 723 . 734) (thing 718 . 722) (thing 659 . 713) (thing 650 . 658) (thing 644 . 649) (thing 641 . 643) (thing 627 . 641) (thing 619 . 626) (thing 618 . 619) (thing 617 . 618) (thing 613 . 617) (thing 612 . 613) (thing 611 . 612) (thing 605 . 611) (thing 604 . 605) (thing 603 . 604) (thing 598 . 603) (thing 564 . 593) (thing 551 . 559) (thing 281 . 550) (thing 275 . 281) (thing 270 . 274)))
    (semanticdb-table "config.h"
      :file "config.h"
      :fsize 216
      :lastmodtime '(23678 15954 914047 959000)))
  :file "!ha3_develop!search_test!temp!source_code!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
