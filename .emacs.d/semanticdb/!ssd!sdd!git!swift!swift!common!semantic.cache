;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "Common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_COMMON_H_" variable (:constant-flag t) nil [33 48])
            ("assert.h" include (:system-flag t) nil [50 69])
            ("SWIFT_BEGIN_NAMESPACE" variable (:constant-flag t) nil [146 167])
            ("SWIFT_END_NAMESPACE" variable (:constant-flag t) nil [212 231])
            ("SWIFT_USE_ROOT_NAMESPACE" variable (:constant-flag t) nil [248 272])
            ("SWIFT_USE_NAMESPACE" variable (:constant-flag t) nil [305 324])
            ("SWIFT_NS" variable (:constant-flag t) nil [362 370])
            ("SWIFT_ALIAS_NAMESAPCE" variable (:constant-flag t) nil [392 413])
            ("tr1/memory" include (:system-flag t) nil [458 479])
            ("SWIFT_TYPEDEF_PTR" variable (:constant-flag t) nil [488 505])
            ("COPY_CONSTRUCTOR" variable (:constant-flag t) nil [657 673])
            ("DISALLOW_COPY_AND_ASSIGN" variable (:constant-flag t) nil [737 761])
            ("DELETE" variable (:constant-flag t) nil [812 818])
            ("DELETE_ARRAY" variable (:constant-flag t) nil [1064 1076]))          
      :file "Common.h"
      :pointmax 1346
      :fsize 1345
      :lastmodtime '(22459 60166 850958 684000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_USE_NAMESPACE" (spp-arg-list ("x") 324 . 327) . 
              ((USING "using" 328 . 333) (NAMESPACE "namespace" 334 . 343) (symbol "swift" 344 . 349) (punctuation ":" 349 . 350) (punctuation ":" 350 . 351) (symbol "x" 351 . 352)))
          ("SWIFT_ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 413 . 419) . 
              ((NAMESPACE "namespace" 420 . 429) (symbol "swift" 430 . 435) (semantic-list "{ namespace x = y; }" 436 . 456)))
          ("DELETE_ARRAY" (spp-arg-list ("x") 1076 . 1079) . 
              ((DO "do" 1080 . 1082) (semantic-list "{             \\
        if(x){                                  \\
            delete [] x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 1083 . 1307) (WHILE "while" 1307 . 1312) (semantic-list "(0)" 1312 . 1315)))
          ("SWIFT_COMMON_H_")
          ("SWIFT_BEGIN_NAMESPACE" (spp-arg-list ("x") 167 . 170) . 
              ((NAMESPACE "namespace" 171 . 180) (symbol "swift" 181 . 186) (open-paren "{" 187 . 188) (NAMESPACE "namespace" 189 . 198) (symbol "x" 199 . 200) (open-paren "{" 200 . 201)))
          ("SWIFT_END_NAMESPACE" (spp-arg-list ("x") 231 . 234) . ((close-paren "}" 235 . 236) (close-paren "}" 237 . 238)))
          ("SWIFT_NS" (spp-arg-list ("x") 370 . 373) . 
              ((symbol "swift" 374 . 379) (punctuation ":" 379 . 380) (punctuation ":" 380 . 381) (symbol "x" 381 . 382)))
          ("SWIFT_TYPEDEF_PTR" (spp-arg-list ("x") 505 . 508) . 
              ((TYPEDEF "typedef" 509 . 516) (symbol "std" 517 . 520) (punctuation ":" 520 . 521) (punctuation ":" 521 . 522) (symbol "tr1" 522 . 525) (punctuation ":" 525 . 526) (punctuation ":" 526 . 527) (symbol "shared_ptr" 527 . 537) (punctuation "<" 537 . 538) (symbol "x" 538 . 539) (punctuation ">" 539 . 540) (spp-symbol-merge ((symbol "x" 541 . 542) (symbol "Ptr" 544 . 547)) 541 . 547)))
          ("DISALLOW_COPY_AND_ASSIGN" (spp-arg-list ("T") 761 . 764) . ((symbol "COPY_CONSTRUCTOR" 783 . 799) (semantic-list "(T)" 799 . 802)))
          ("DELETE" (spp-arg-list ("x") 818 . 821) . 
              ((DO "do" 822 . 824) (semantic-list "{             \\
        if(x){                                  \\
            delete x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 825 . 1046) (WHILE "while" 1046 . 1051) (semantic-list "(0)" 1051 . 1054)))
          ("SWIFT_USE_ROOT_NAMESPACE" . 
              ((USING "using" 273 . 278) (NAMESPACE "namespace" 279 . 288) (symbol "swift" 289 . 294) (punctuation ";" 294 . 295)))
          ("COPY_CONSTRUCTOR" (spp-arg-list ("T") 673 . 676) . 
              ((symbol "T" 683 . 684) (semantic-list "(const T &)" 684 . 695) (punctuation ";" 695 . 696) (symbol "T" 703 . 704) (punctuation "&" 705 . 706) (OPERATOR "operator" 707 . 715) (punctuation "=" 715 . 716) (semantic-list "(const T &)" 716 . 727)))
          )
)
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_LOG_H" variable (:constant-flag t) nil [29 40])
            ("iostream" include (:system-flag t) nil [42 61])
            ("alog/Logger.h" include (:system-flag t) nil [63 87])
            ("alog/Configurator.h" include (:system-flag t) nil [88 118])
            ("iostream" include (:system-flag t) nil [119 138])
            ("SWIFT_ROOT_LOG_CONFIG" variable (:constant-flag t) nil [148 169])
            ("SWIFT_LOG_CONFIG" variable (:constant-flag t) nil [222 238])
            ("SWIFT_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [765 793])
            ("SWIFT_ROOT_LOG_SETLEVEL" variable (:constant-flag t) nil [1446 1469])
            ("SWIFT_LOG_DECLARE" variable (:constant-flag t) nil [1589 1606])
            ("SWIFT_LOG_SETUP" variable (:constant-flag t) nil [1648 1663])
            ("SWIFT_LOG_SETUP_TEMPLATE" variable (:constant-flag t) nil [1758 1782])
            ("SWIFT_LOG_SETUP_TEMPLATE2" variable (:constant-flag t) nil [1942 1967])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" variable (:constant-flag t) nil [2153 2191])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" variable (:constant-flag t) nil [2360 2399])
            ("SWIFT_LOG" variable (:constant-flag t) nil [2609 2618])
            ("SWIFT_LOG_DECLARE_WITH_NAME" variable (:constant-flag t) nil [2711 2738])
            ("SWIFT_LOG_SETUP_WITH_NAME" variable (:constant-flag t) nil [2779 2804])
            ("SWIFT_LOG_WITH_NAME" variable (:constant-flag t) nil [2904 2923])
            ("SWIFT_LOG_FSLIB_ERROR" variable (:constant-flag t) nil [3018 3039])
            ("SWIFT_DECLARE_AND_SETUP_LOGGER" variable (:constant-flag t) nil [3317 3347])
            ("SWIFT_LOG_SHUTDOWN" variable (:constant-flag t) nil [3434 3452])
            ("SWIFT_LOG_FLUSH" variable (:constant-flag t) nil [3488 3503])
            ("SWIFT_INTERVAL_LOG_COUNT" variable (:constant-flag t) nil [3540 3564])
            ("SWIFT_INTERVAL_LOG2_TIME" variable (:constant-flag t) nil [4149 4173]))          
      :file "Log.h"
      :pointmax 4776
      :fsize 4775
      :lastmodtime '(22536 52071 784446 568000)
      :unmatched-syntax '((thing 3540 . 3564))
      :lexical-table 
        '(("SWIFT_LOG_H")
          ("SWIFT_LOG_SHUTDOWN" (spp-arg-list nil 3452 . 3454) . 
              ((symbol "alog" 3455 . 3459) (punctuation ":" 3459 . 3460) (punctuation ":" 3460 . 3461) (symbol "Logger" 3461 . 3467) (punctuation ":" 3467 . 3468) (punctuation ":" 3468 . 3469) (symbol "shutdown" 3469 . 3477) (semantic-list "()" 3477 . 3479)))
          ("SWIFT_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 793 . 802) . 
              ((DO "do" 803 . 805) (semantic-list "{                      \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"configure logger use [\"                       \\
                      << content<< \"] failed\"                           \\
                      << std::endl;                                     \\
            SWIFT_ROOT_LOG_CONFIG();                                    \\
        }                                                               \\
    }" 806 . 1428) (WHILE "while" 1428 . 1433) (semantic-list "(0)" 1433 . 1436)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" (spp-arg-list ("n" "c" "typename" "T") 2191 . 2209) . 
              ((TEMPLATE "template" 2210 . 2218) (punctuation "<" 2219 . 2220) (TYPENAME "typename" 2220 . 2228) (symbol "T" 2229 . 2230) (punctuation ">" 2230 . 2231) (symbol "alog" 2238 . 2242) (punctuation ":" 2242 . 2243) (punctuation ":" 2243 . 2244) (symbol "Logger" 2244 . 2250) (punctuation "*" 2251 . 2252) (symbol "c" 2252 . 2253) (punctuation "<" 2253 . 2254) (symbol "T" 2254 . 2255) (punctuation ">" 2255 . 2256) (punctuation ":" 2256 . 2257) (punctuation ":" 2257 . 2258) (symbol "_logger" 2258 . 2265) (punctuation "=" 2304 . 2305) (symbol "alog" 2306 . 2310) (punctuation ":" 2310 . 2311) (punctuation ":" 2311 . 2312) (symbol "Logger" 2312 . 2318) (punctuation ":" 2318 . 2319) (punctuation ":" 2319 . 2320) (symbol "getLogger" 2320 . 2329) (semantic-list "(\"swift.\" #n \".\"  #c)" 2329 . 2350)))
          ("SWIFT_ROOT_LOG_CONFIG" (spp-arg-list nil 169 . 171) . 
              ((symbol "alog" 172 . 176) (punctuation ":" 176 . 177) (punctuation ":" 177 . 178) (symbol "Configurator" 178 . 190) (punctuation ":" 190 . 191) (punctuation ":" 191 . 192) (symbol "configureRootLogger" 192 . 211) (semantic-list "()" 211 . 213)))
          ("SWIFT_LOG_SETUP_TEMPLATE" (spp-arg-list ("n" "c" "T") 1782 . 1790) . 
              ((TEMPLATE "template" 1791 . 1799) (punctuation "<" 1800 . 1801) (TYPENAME "typename" 1801 . 1809) (symbol "T" 1810 . 1811) (punctuation ">" 1811 . 1812) (symbol "alog" 1820 . 1824) (punctuation ":" 1824 . 1825) (punctuation ":" 1825 . 1826) (symbol "Logger" 1826 . 1832) (punctuation "*" 1833 . 1834) (symbol "c" 1834 . 1835) (punctuation "<" 1835 . 1836) (symbol "T" 1836 . 1837) (punctuation ">" 1837 . 1838) (punctuation ":" 1838 . 1839) (punctuation ":" 1839 . 1840) (symbol "_logger" 1840 . 1847) (punctuation "=" 1886 . 1887) (symbol "alog" 1888 . 1892) (punctuation ":" 1892 . 1893) (punctuation ":" 1893 . 1894) (symbol "Logger" 1894 . 1900) (punctuation ":" 1900 . 1901) (punctuation ":" 1901 . 1902) (symbol "getLogger" 1902 . 1911) (semantic-list "(\"swift.\" #n \".\"  #c)" 1911 . 1932)))
          ("SWIFT_DECLARE_AND_SETUP_LOGGER" (spp-arg-list ("n") 3347 . 3350) . 
              ((STATIC "static" 3351 . 3357) (symbol "alog" 3358 . 3362) (punctuation ":" 3362 . 3363) (punctuation ":" 3363 . 3364) (symbol "Logger" 3364 . 3370) (punctuation "*" 3371 . 3372) (symbol "_logger" 3372 . 3379) (punctuation "=" 3387 . 3388) (symbol "alog" 3389 . 3393) (punctuation ":" 3393 . 3394) (punctuation ":" 3394 . 3395) (symbol "Logger" 3395 . 3401) (punctuation ":" 3401 . 3402) (punctuation ":" 3402 . 3403) (symbol "getLogger" 3403 . 3412) (semantic-list "(\"swift.\" #n)" 3412 . 3425)))
          ("SWIFT_LOG_SETUP_TEMPLATE2" (spp-arg-list ("n" "c" "T1" "T2") 1967 . 1980) . 
              ((TEMPLATE "template" 1981 . 1989) (punctuation "<" 1990 . 1991) (TYPENAME "typename" 1991 . 1999) (symbol "T1" 2000 . 2002) (punctuation "," 2002 . 2003) (TYPENAME "typename" 2004 . 2012) (symbol "T2" 2013 . 2015) (punctuation ">" 2015 . 2016) (symbol "alog" 2023 . 2027) (punctuation ":" 2027 . 2028) (punctuation ":" 2028 . 2029) (symbol "Logger" 2029 . 2035) (punctuation "*" 2036 . 2037) (symbol "c" 2037 . 2038) (punctuation "<" 2038 . 2039) (symbol "T1" 2039 . 2041) (punctuation "," 2041 . 2042) (symbol "T2" 2043 . 2045) (punctuation ">" 2045 . 2046) (punctuation ":" 2046 . 2047) (punctuation ":" 2047 . 2048) (symbol "_logger" 2048 . 2055) (punctuation "=" 2097 . 2098) (symbol "alog" 2099 . 2103) (punctuation ":" 2103 . 2104) (punctuation ":" 2104 . 2105) (symbol "Logger" 2105 . 2111) (punctuation ":" 2111 . 2112) (punctuation ":" 2112 . 2113) (symbol "getLogger" 2113 . 2122) (semantic-list "(\"swift.\" #n \".\"  #c)" 2122 . 2143)))
          ("SWIFT_INTERVAL_LOG_COUNT" (spp-arg-list ("logInterval" "level" "format" "args...") 3564 . 3601) . 
              ((DO "do" 3610 . 3612) (semantic-list "{                                                                \\
        static int logCounter;                                          \\
        if (0 == logCounter) {                                          \\
            RS_LOG(level, format, ##args);                              \\
            logCounter = logInterval;                                   \\
        }                                                               \\
        logCounter--;                                                   \\
    }" 3613 . 4129) (WHILE "while" 4130 . 4135) (semantic-list "(0)" 4136 . 4139)))
          ("SWIFT_INTERVAL_LOG2_TIME" (spp-arg-list ("logInterval" "level" "format" "args...") 4173 . 4210) . 
              ((DO "do" 4224 . 4226) (semantic-list "{                                                                \\
        static int64_t logTimestamp;                                    \\
        int64_t now = autil::TimeUtility::currentTimeInSeconds();       \\
        if (now - logTimestamp > logInterval) {                         \\
            RS_LOG(level, format, ##args);                              \\
            logTimestamp = now;                                         \\
        }                                                               \\
    }" 4227 . 4743) (WHILE "while" 4744 . 4749) (semantic-list "(0)" 4750 . 4753)))
          ("SWIFT_LOG_DECLARE" (spp-arg-list nil 1606 . 1608) . 
              ((STATIC "static" 1609 . 1615) (symbol "alog" 1616 . 1620) (punctuation ":" 1620 . 1621) (punctuation ":" 1621 . 1622) (symbol "Logger" 1622 . 1628) (punctuation "*" 1629 . 1630) (symbol "_logger" 1630 . 1637)))
          ("SWIFT_LOG" (spp-arg-list ("level" "format" "args...") 2618 . 2642) . ((symbol "ALOG_LOG" 2643 . 2651) (semantic-list "(_logger, alog::LOG_LEVEL_##level, format, ##args)" 2651 . 2701)))
          ("SWIFT_LOG_WITH_NAME" (spp-arg-list ("name" "level" "format" "args...") 2923 . 2953) . ((symbol "ALOG_LOG" 2954 . 2962) (semantic-list "(name, alog::LOG_LEVEL_##level, format, ##args)" 2962 . 3009)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" (spp-arg-list ("n" "c" "typename1" "T1" "typename2" "T2") 2399 . 2434) . 
              ((TEMPLATE "template" 2435 . 2443) (punctuation "<" 2444 . 2445) (symbol "typename1" 2445 . 2454) (symbol "T1" 2455 . 2457) (punctuation "," 2457 . 2458) (symbol "typename2" 2459 . 2468) (symbol "T2" 2469 . 2471) (punctuation ">" 2471 . 2472) (symbol "alog" 2479 . 2483) (punctuation ":" 2483 . 2484) (punctuation ":" 2484 . 2485) (symbol "Logger" 2485 . 2491) (punctuation "*" 2492 . 2493) (symbol "c" 2493 . 2494) (punctuation "<" 2494 . 2495) (symbol "T1" 2495 . 2497) (punctuation "," 2497 . 2498) (symbol "T2" 2499 . 2501) (punctuation ">" 2501 . 2502) (punctuation ":" 2502 . 2503) (punctuation ":" 2503 . 2504) (symbol "_logger" 2504 . 2511) (punctuation "=" 2553 . 2554) (symbol "alog" 2555 . 2559) (punctuation ":" 2559 . 2560) (punctuation ":" 2560 . 2561) (symbol "Logger" 2561 . 2567) (punctuation ":" 2567 . 2568) (punctuation ":" 2568 . 2569) (symbol "getLogger" 2569 . 2578) (semantic-list "(\"swift.\" #n \".\"  #c)" 2578 . 2599)))
          ("SWIFT_LOG_DECLARE_WITH_NAME" (spp-arg-list ("name") 2738 . 2744) . 
              ((STATIC "static" 2745 . 2751) (symbol "alog" 2752 . 2756) (punctuation ":" 2756 . 2757) (punctuation ":" 2757 . 2758) (symbol "Logger" 2758 . 2764) (punctuation "*" 2765 . 2766) (symbol "name" 2766 . 2770)))
          ("SWIFT_LOG_CONFIG" (spp-arg-list ("filename") 238 . 248) . 
              ((DO "do" 249 . 251) (semantic-list "{                         \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"Error!!! Failed to configure logger\"  \\
                      << e.what() << std::endl;                 \\
            exit(-1);                                           \\
        }                                                       \\
    }" 252 . 747) (WHILE "while" 747 . 752) (semantic-list "(0)" 752 . 755)))
          ("SWIFT_ROOT_LOG_SETLEVEL" (spp-arg-list ("level") 1469 . 1476) . 
              ((symbol "alog" 1516 . 1520) (punctuation ":" 1520 . 1521) (punctuation ":" 1521 . 1522) (symbol "Logger" 1522 . 1528) (punctuation ":" 1528 . 1529) (punctuation ":" 1529 . 1530) (symbol "getRootLogger" 1530 . 1543) (semantic-list "()" 1543 . 1545) (punctuation "-" 1545 . 1546) (punctuation ">" 1546 . 1547) (symbol "setLevel" 1547 . 1555) (semantic-list "(alog::LOG_LEVEL_##level)" 1555 . 1580)))
          ("SWIFT_LOG_SETUP" (spp-arg-list ("n" "c") 1663 . 1668) . 
              ((symbol "alog" 1669 . 1673) (punctuation ":" 1673 . 1674) (punctuation ":" 1674 . 1675) (symbol "Logger" 1675 . 1681) (punctuation "*" 1682 . 1683) (symbol "c" 1683 . 1684) (punctuation ":" 1684 . 1685) (punctuation ":" 1685 . 1686) (symbol "_logger" 1686 . 1693) (punctuation "=" 1702 . 1703) (symbol "alog" 1704 . 1708) (punctuation ":" 1708 . 1709) (punctuation ":" 1709 . 1710) (symbol "Logger" 1710 . 1716) (punctuation ":" 1716 . 1717) (punctuation ":" 1717 . 1718) (symbol "getLogger" 1718 . 1727) (semantic-list "(\"swift.\" #n \".\"  #c)" 1727 . 1748)))
          ("SWIFT_LOG_SETUP_WITH_NAME" (spp-arg-list ("name" "n" "c") 2804 . 2816) . 
              ((symbol "alog" 2817 . 2821) (punctuation ":" 2821 . 2822) (punctuation ":" 2822 . 2823) (symbol "Logger" 2823 . 2829) (punctuation "*" 2830 . 2831) (symbol "c" 2831 . 2832) (punctuation ":" 2832 . 2833) (punctuation ":" 2833 . 2834) (symbol "name" 2834 . 2838) (punctuation "=" 2849 . 2850) (symbol "alog" 2851 . 2855) (punctuation ":" 2855 . 2856) (punctuation ":" 2856 . 2857) (symbol "Logger" 2857 . 2863) (punctuation ":" 2863 . 2864) (punctuation ":" 2864 . 2865) (symbol "getLogger" 2865 . 2874) (semantic-list "(\"swift.\" #n \".\"  #c)" 2874 . 2895)))
          ("SWIFT_LOG_FSLIB_ERROR" (spp-arg-list ("ec" "level") 3039 . 3050) . 
              ((DO "do" 3055 . 3057) (semantic-list "{                       \\
        SWIFT_LOG(level, \"fslib errorcode [%d], errormsg [%s]\",         \\
                  ec, fslib::fs::FileSystem::getErrorString(ec).c_str()); \\
    }" 3058 . 3239) (WHILE "while" 3240 . 3245) (semantic-list "(0)" 3246 . 3249)))
          ("SWIFT_LOG_FLUSH" (spp-arg-list nil 3503 . 3505) . 
              ((symbol "alog" 3506 . 3510) (punctuation ":" 3510 . 3511) (punctuation ":" 3511 . 3512) (symbol "Logger" 3512 . 3518) (punctuation ":" 3518 . 3519) (punctuation ":" 3519 . 3520) (symbol "flushAll" 3520 . 3528) (semantic-list "()" 3528 . 3530)))
          )
)
    (semanticdb-table "AccessLogger.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/common/AccessLogger.h" include (:system-flag t) nil [1 39])
            ("google/protobuf/message.h" include (:system-flag t) nil [40 76])
            ("google/protobuf/descriptor.h" include (:system-flag t) nil [77 116])
            ("google::protobuf" using (:type ("google::protobuf" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [117 150])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [174 181]))                  
                :type "int")
                nil [152 182])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [199 206])
                    ("" variable (:type ("AccessLogger" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [207 220]))                  
                :type "int")
                nil [183 221])
            ("AccessLogger" function
               (:constructor-flag t
                :parent "AccessLogger"
                :type ("AccessLogger" type (:type "class") nil nil))
                nil [223 256])
            ("AccessLogger" function
               (:destructor-flag t
                :parent "AccessLogger"
                :type "void")
                nil [258 292])
            ("getTopicName" function
               (:parent "AccessLogger"
                :arguments 
                  ( ("message" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Message" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [326 349])
                    ("topicName" variable
                       (:reference 1
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [350 368]))                  
                :type "bool")
                nil [294 850])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [873 880]))                  
                :type "int")
                nil [853 881]))          
      :file "AccessLogger.cpp"
      :pointmax 883
      :fsize 882
      :lastmodtime '(22495 38461 784488 803000)
      :unmatched-syntax nil)
    (semanticdb-table "AccessLogger.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_ACCESSLOGGER_H" variable (:constant-flag t) nil [38 58])
            ("swift/common/Common.h" include (:system-flag t) nil [60 92])
            ("swift/common/Log.h" include (:system-flag t) nil [93 122])
            ("arpc/ANetRPCController.h" include (:system-flag t) nil [123 158])
            ("swift/protocol/ErrCode.pb.h" include (:system-flag t) nil [159 197])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [221 228]))                  
                :type "int")
                nil [199 229])
            ("AccessLogger" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [252 259])
                    ("AccessLogger" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("AccessLogger" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [264 279])
                    ("AccessLogger" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [284 300])
                    ("private" label nil (reparse-symbol classsubparts) [301 309])
                    ("AccessLogger" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AccessLogger" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [327 348]))                          
                        :type ("AccessLogger" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [314 349])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AccessLogger" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [378 399]))                          
                        :type ("AccessLogger" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [354 400])
                    ("public" label nil (reparse-symbol classsubparts) [401 408])
                    ("logRequestInfo" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("controller" variable
                               (:pointer 1
                                :type ("google::protobuf::RpcController" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [468 512])
                            ("request" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [545 562])
                            ("ec" variable (:type ("protocol::ErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [563 586])
                            ("interval" variable
                               (:default-value "100"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [587 609]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [413 611])
                    ("logRequestInfo" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("request" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [669 686])
                            ("ec" variable (:type ("protocol::ErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [687 710])
                            ("interval" variable
                               (:default-value "100"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [711 733]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [616 735])
                    ("logRequestInfo" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("controller" variable
                               (:pointer 1
                                :type ("google::protobuf::RpcController" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [796 840])
                            ("request" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [873 890])
                            ("all" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [891 907])
                            ("interval" variable
                               (:default-value "100"
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [909 931]))                          
                        :typemodifiers ("static")
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [741 933])
                    ("private" label nil (reparse-symbol classsubparts) [934 942])
                    ("getTopicName" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("message" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("google::protobuf::Message" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [972 1013])
                            ("topicName" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1044 1067]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [947 1068])
                    ("private" label nil (reparse-symbol classsubparts) [1069 1077])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1082 1102]))                  
                :type "class")
                nil [231 1105])
            ("logRequestInfo" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("controller" variable
                       (:pointer 1
                        :type ("google::protobuf::RpcController" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1166 1210])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1246 1263])
                    ("ec" variable (:type ("protocol::ErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1264 1287])
                    ("interval" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1288 1306]))                  
                :parent "AccessLogger")
                nil [1108 2413])
            ("logRequestInfo" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2471 2488])
                    ("ec" variable (:type ("protocol::ErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2489 2512])
                    ("interval" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2513 2531]))                  
                :parent "AccessLogger")
                nil [2415 3291])
            ("logRequestInfo" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("controller" variable
                       (:pointer 1
                        :type ("google::protobuf::RpcController" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3351 3395])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3431 3448])
                    ("all" variable (:type "bool") (reparse-symbol arg-sub-list) [3449 3458])
                    ("interval" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3459 3477]))                  
                :parent "AccessLogger")
                nil [3293 4419])
            ("SWIFT_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("AccessLogger" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4440 4453]))                  
                :type "int")
                nil [4422 4454])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4476 4483]))                  
                :type "int")
                nil [4456 4484]))          
      :file "AccessLogger.h"
      :pointmax 4516
      :fsize 4515
      :lastmodtime '(22536 53201 58985 942000)
      :unmatched-syntax '((thing 795 . 796) (thing 794 . 795) (thing 467 . 468) (thing 466 . 467) (thing 1164 . 1165) (thing 1165 . 1166) (thing 3349 . 3350) (thing 3350 . 3351))
      :lexical-table 
        '(("SWIFT_ACCESSLOGGER_H")
          )
))
  :file "!ssd!sdd!git!swift!swift!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
