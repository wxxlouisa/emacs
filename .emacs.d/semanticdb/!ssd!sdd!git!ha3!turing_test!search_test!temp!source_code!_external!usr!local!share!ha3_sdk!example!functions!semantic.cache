;; Object functions/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "functions/"
  :tables
  (list
    (semanticdb-table "PostageFunction.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3_sdk/example/functions/PostageFunction.h" include (:system-flag t) nil [1 55])
            ("ha3/search/ArgumentAttributeExpression.h" include (:system-flag t) nil [56 107])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [109 129])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [149 156]))                  
                :type "int")
                nil [131 157])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [176 183]))                  
                :type "int")
                nil [158 184])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [203 210]))                  
                :type "int")
                nil [185 211])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("func_expression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [233 249]))                  
                :type "int")
                nil [213 250])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("func_expression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [265 281])
                    ("" variable (:type ("PostageFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [282 298]))                  
                :type "int")
                nil [251 299])
            ("init" function
               (:parent "PostageFunctionCreatorImpl"
                :arguments 
                  ( ("funcParameter" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyValueMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [340 373])
                    ("resourceReader" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResourceReaderPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [412 452]))                  
                :type "bool")
                nil [302 834])
            ("createFunction" function
               (:pointer 1
                :parent "PostageFunctionCreatorImpl"
                :arguments 
                  ( ("funcSubExprVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("FunctionSubExprVec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [907 948]))                  
                :type ("FunctionInterface" type (:type "class") nil nil))
                nil [836 1548])
            ("PostageFunction" function
               (:constructor-flag t
                :parent "PostageFunction"
                :arguments 
                  ( ("sellerCityAttrExpr" variable
                       (:pointer 1
                        :type ("AttributeExpressionTyped" type
                             (:template-specifier 
                                ( ("int32_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1658 1712])
                    ("buyerCity" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1746 1764])
                    ("postageMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("PostageMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1765 1794]))                  
                :type ("PostageFunction" type (:type "class") nil nil))
                nil [1625 1951])
            ("PostageFunction" function
               (:destructor-flag t
                :parent "PostageFunction"
                :type "void")
                nil [1953 1992])
            ("beginRequest" function
               (:parent "PostageFunction"
                :arguments 
                  ( ("dataProvider" variable
                       (:pointer 1
                        :type ("DataProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2029 2056]))                  
                :type "bool")
                nil [1994 2403])
            ("evaluate" function
               (:parent "PostageFunction"
                :arguments 
                  ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2438 2466]))                  
                :type "double")
                nil [2405 3033])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("func_expression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3053 3069]))                  
                :type "int")
                nil [3035 3070]))          
      :file "PostageFunction.cpp"
      :pointmax 3072
      :fsize 3071
      :lastmodtime '(23225 58425 205924 939000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!_external!usr!local!share!ha3_sdk!example!functions!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
