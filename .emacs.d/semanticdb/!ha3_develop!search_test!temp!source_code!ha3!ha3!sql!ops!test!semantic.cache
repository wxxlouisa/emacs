;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "OpTestBase.h"
      :major-mode 'c++-mode
      :tags 
        '( ("HA3_SQL_OP_TEST_BASE_H" variable (:constant-flag t) nil [40 62])
            ("unittest/unittest.h" include (:system-flag t) nil [64 94])
            ("autil/StringUtil.h" include (:system-flag t) nil [95 124])
            ("autil/MultiValueCreator.h" include (:system-flag t) nil [125 161])
            ("autil/MultiValueType.h" include (:system-flag t) nil [162 195])
            ("private" variable (:constant-flag t) nil [204 211])
            ("protected" variable (:constant-flag t) nil [227 236])
            ("suez/turing/common/SessionResource.h" include nil nil [244 291])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [292 339])
            ("basic_ops/variant/KvPairVariant.h" include nil nil [340 384])
            ("indexlib/storage/file_system_wrapper.h" include nil nil [385 434])
            ("indexlib/index/schema_adapter.h" include nil nil [435 477])
            ("indexlib/index/testlib/indexlib_partition_creator.h" include nil nil [478 540])
            ("suez/turing/expression/util/TableInfoConfigurator.h" include nil nil [541 603])
            ("suez/search/ServiceInfo.h" include nil nil [604 640])
            ("ha3/sql/resource/SqlBizResource.h" include (:system-flag t) nil [641 685])
            ("ha3/sql/resource/SqlQueryResource.h" include (:system-flag t) nil [686 732])
            ("ha3/sql/data/Table.h" include (:system-flag t) nil [733 764])
            ("matchdoc/MatchDocAllocator.h" include (:system-flag t) nil [765 804])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [806 835])
            ("suez" using (:type ("suez" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [836 857])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [858 878])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [899 903]))                  
                :type "int")
                nil [879 904])
            ("OpTestBase" type
               (:superclasses 
                  ( ("TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [943 950])
                    ("OpTestBase" function
                       (:constructor-flag t
                        :type ("OpTestBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [955 970])
                    ("OpTestBase" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [975 1004])
                    ("getRunId" function (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1471 1515])
                    ("prepareIndex" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1520 1797])
                    ("prepareUserIndex" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1803 1874])
                    ("makeIndexPartitionForEmbeddingTable" function
                       (:arguments 
                          ( ("indexPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1964 1988])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1989 2013])
                            ("schemaPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2014 2039])
                            ("schemaFileName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2048 2077])
                            ("dataPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2078 2101])
                            ("pluginPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2102 2127])
                            ("ttl" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2136 2148]))                          
                        :type ("IndexPartitionPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1901 2927])
                    ("setPartitionReader" function
                       (:typemodifiers ("virtual")
                        :arguments 
                          ( ("queryResource" variable
                               (:reference 1
                                :type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2973 3017]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2933 3132])
                    ("makeIndexPartitionForIndexTable" function
                       (:arguments 
                          ( ("rootPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3217 3240])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3241 3265])
                            ("fieldInfos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3306 3331])
                            ("indexInfos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3332 3357])
                            ("attrInfos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3398 3422])
                            ("summaryInfos" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3423 3450])
                            ("docStrs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3491 3513]))                          
                        :type ("IndexPartitionPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3159 4015])
                    ("prepareResource" function
                       (:arguments 
                          ( ("needExprResource" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [4042 4071]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4021 4353])
                    ("clearResource" function (:type "void") (reparse-symbol classsubparts) [4359 4479])
                    ("prepareInvertedTable" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [4485 5172])
                    ("prepareInvertedTableData" function
                       (:typemodifiers ("virtual")
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5216 5234])
                            ("fields" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5247 5262])
                            ("indexes" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5263 5279])
                            ("attributes" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5280 5299])
                            ("summarys" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5312 5329])
                            ("truncateProfileStr" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5330 5357])
                            ("docs" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5370 5383])
                            ("ttl" variable
                               (:reference 1
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5384 5397]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5178 6035])
                    ("makeIndexPartitionForInvertedTable" function
                       (:arguments 
                          ( ("rootPath" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6128 6151])
                            ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6152 6176])
                            ("fields" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6189 6210])
                            ("indexes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6211 6233])
                            ("attributes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6246 6271])
                            ("summarys" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6272 6295])
                            ("truncateProfileStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6308 6341])
                            ("docs" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6342 6361])
                            ("ttl" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6374 6386]))                          
                        :type ("IndexPartitionPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6062 7062])
                    ("prepareQueryResource" function
                       (:arguments 
                          ( ("needExprResource" variable (:type "bool") (reparse-symbol arg-sub-list) [7120 7142]))                          
                        :type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7070 7880])
                    ("clearQueryResource" function (:type "void") (reparse-symbol classsubparts) [7886 8071])
                    ("createQueryResource" function (:type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8087 8264])
                    ("prepareExprQueryResource" function
                       (:arguments 
                          ( ("queryResource" variable (:type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8302 8345]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8270 8422])
                    ("prepareSessionResource" function
                       (:arguments 
                          ( ("needExprResource" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [8456 8485]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [8428 9109])
                    ("createSessionResource" function
                       (:arguments 
                          ( ("maxOutstandingCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9191 9220]))                          
                        :type ("tensorflow::SessionResourcePtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9125 9389])
                    ("prepareExprSessionResource" function (:type "void") (reparse-symbol classsubparts) [9395 9837])
                    ("getQueryResource" function (:type ("tensorflow::QueryResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9843 9952])
                    ("prepareSqlResource" function (:type "void") (reparse-symbol classsubparts) [9957 10352])
                    ("clearSqlResource" function (:type "void") (reparse-symbol classsubparts) [10358 10487])
                    ("getTable" function
                       (:arguments 
                          ( ("data" variable (:type ("navi::DataPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10511 10530]))                          
                        :type ("TablePtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10493 10620])
                    ("getColumnData" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("ColumnData" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TablePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10680 10702])
                            ("colName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10703 10725]))                          )
                        (reparse-symbol classsubparts) [10626 10914])
                    ("getMatchDocs" function
                       (:arguments 
                          ( ("allocator" variable
                               (:reference 1
                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10960 11002])
                            ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11003 11015]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [10920 11140])
                    ("extendMatchDocAllocator" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11201 11242])
                            ("docs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("matchdoc::MatchDoc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [11276 11308])
                            ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11342 11366])
                            ("values" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11400 11424]))                          )
                        (reparse-symbol classsubparts) [11146 11718])
                    ("extendMatchDocAllocator" function
                       (:arguments 
                          ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11753 11794])
                            ("docs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("matchdoc::MatchDoc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [11828 11860])
                            ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11894 11918])
                            ("values" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11952 11981]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11724 12428])
                    ("extendMultiValueMatchDocAllocator" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12512 12553])
                            ("docs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("matchdoc::MatchDoc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [12566 12598])
                            ("fieldName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12611 12635])
                            ("values" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("vector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12648 12680]))                          )
                        (reparse-symbol classsubparts) [12434 13061])
                    ("checkOutputColumn" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TablePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13115 13137])
                            ("columnName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13165 13190])
                            ("expects" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13218 13243]))                          )
                        (reparse-symbol classsubparts) [13067 13618])
                    ("checkOutputColumn" function
                       (:arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TablePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13647 13669])
                            ("columnName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13697 13722])
                            ("expects" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13750 13780]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13624 14333])
                    ("checkOutputMultiColumn" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TablePtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14392 14414])
                            ("columnName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14447 14472])
                            ("expects" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("vector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14505 14538]))                          )
                        (reparse-symbol classsubparts) [14339 15060])
                    ("createTable" function
                       (:arguments 
                          ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15092 15133])
                            ("docs" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("matchdoc::MatchDoc" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [15159 15191]))                          
                        :type ("navi::DataPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15066 15307])
                    ("public" label nil (reparse-symbol classsubparts) [15309 15316])
                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15321 15349])
                    ("_testPath" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15354 15371])
                    ("_tableName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15376 15394])
                    ("_sessionResource" variable (:type ("tensorflow::SessionResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15401 15449])
                    ("_sqlBizResource" variable (:type ("SqlBizResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15454 15488])
                    ("_sqlQueryResource" variable (:type ("SqlQueryResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15493 15531])
                    ("_resourceMap" variable (:type ("map" type
                         (:template-specifier 
                            ( ("string" type nil nil nil)
                              ("navi::Resource" type (:pointer 1) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [15536 15578])
                    ("_indexPartitionMap" variable (:type ("IndexApplication::IndexPartitionMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15604 15659])
                    ("_indexApp" variable (:type ("IndexApplicationPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15685 15715])
                    ("_bizInfo" variable (:type ("BizInfoPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15720 15740])
                    ("_metricReporter" variable (:type ("unique_ptr" type
                         (:template-specifier 
                            ( ("BizMetrics" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [15745 15784])
                    ("_needBuildIndex" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [15789 15818])
                    ("_needExprResource" variable
                       (:default-value "false"
                        :type "bool")
                        (reparse-symbol classsubparts) [15823 15854])
                    ("_needTracer" variable
                       (:default-value "true"
                        :type "bool")
                        (reparse-symbol classsubparts) [15859 15883])
                    ("_needTerminator" variable
                       (:default-value "true"
                        :type "bool")
                        (reparse-symbol classsubparts) [15888 15916])
                    ("_inputs" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("pair" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [15921 15963])
                    ("_outputs" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("pair" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [15968 16011])
                    ("_attributeMap" variable (:type ("map" type
                         (:template-specifier 
                            ( ("string" type nil nil nil)
                              ("string" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [16016 16050]))                  
                :type "class")
                nil [906 16053])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16073 16077]))                  
                :type "int")
                nil [16055 16078]))          
      :file "OpTestBase.h"
      :pointmax 16114
      :fsize 16113
      :lastmodtime '(23654 33973 536712 488000)
      :unmatched-syntax '((thing 1317 . 1466) (thing 1308 . 1316) (thing 1305 . 1307) (thing 1297 . 1305) (thing 1292 . 1296) (thing 1031 . 1286) (thing 1022 . 1030) (thing 1019 . 1021) (thing 1014 . 1019) (thing 1009 . 1013) (thing 1880 . 1892) (thing 1892 . 1899) (thing 1899 . 1900) (thing 1900 . 1901) (thing 2965 . 2970) (thing 2971 . 2972) (thing 2972 . 2973) (thing 3138 . 3150) (thing 3150 . 3157) (thing 3157 . 3158) (thing 3158 . 3159) (thing 6041 . 6053) (thing 6053 . 6060) (thing 6060 . 6061) (thing 6061 . 6062) (thing 7068 . 7069) (thing 7069 . 7070) (thing 8077 . 8084) (thing 8085 . 8086) (thing 8086 . 8087) (thing 8300 . 8301) (thing 8301 . 8302) (thing 9115 . 9122) (thing 9123 . 9124) (thing 9124 . 9125) (thing 15399 . 15400) (thing 15400 . 15401) (thing 15583 . 15595) (thing 15595 . 15602) (thing 15602 . 15603) (thing 15603 . 15604) (thing 15664 . 15676) (thing 15676 . 15683) (thing 15683 . 15684) (thing 15684 . 15685))
      :lexical-table 
        '(("HA3_SQL_OP_TEST_BASE_H")
          ("private" . ((PUBLIC "public" 212 . 218)))
          ("protected" . ((PUBLIC "public" 237 . 243)))
          )
))
  :file "!ha3_develop!search_test!temp!source_code!ha3!ha3!sql!ops!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
