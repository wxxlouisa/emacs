;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "isearch.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_H_" variable (:constant-flag t) nil [28 38])
            ("stdint.h" include (:system-flag t) nil [40 59])
            ("map" include (:system-flag t) nil [60 74])
            ("string" include (:system-flag t) nil [75 92])
            ("indexlib/indexlib.h" include (:system-flag t) nil [93 123])
            ("tr1/memory" include (:system-flag t) nil [124 145])
            ("autil/LongHashValue.h" include (:system-flag t) nil [146 178])
            ("ha3/config.h" include (:system-flag t) nil [179 202])
            ("matchdoc/ValueType.h" include (:system-flag t) nil [203 234])
            ("primarykey_t" type
               (:typedef ("autil::uint128_t" type (:type "class") nil nil)
                :type "typedef")
                nil [236 274])
            ("fieldboost_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [276 305])
            ("fieldbitmap_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [307 338])
            ("INVALID_FIELDBITMAP" variable
               (:constant-flag t
                :default-value "(fieldbitmap_t)0xFFFFFFFF"
                :type ("fieldbitmap_t" type (:type "class") nil nil))
                nil [339 407])
            ("score_t" type
               (:typedef ("double")
                :type "typedef")
                nil [409 432])
            ("operation_id_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [434 465])
            ("FullIndexVersion" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [466 500])
            ("quota_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [501 526])
            ("INVALID_OPERATION_ID" variable
               (:constant-flag t
                :default-value "-1"
                :type ("operation_id_t" type (:type "class") nil nil))
                nil [528 575])
            ("END_DOCID" variable (:constant-flag t) nil [585 594])
            ("MAX_QUOTA" variable (:constant-flag t) nil [625 634])
            ("UNINITIALIZED_DOCID" variable (:constant-flag t) nil [657 676])
            ("VariableType" type
               (:typedef ("matchdoc::BuiltinType" type (:type "class") nil nil)
                :type "typedef")
                nil [692 735])
            ("TYPE_CONVERT_HELPER" variable (:constant-flag t) nil [745 764])
            ("matchdoc::bt_unknown" variable (:type "int") nil [881 909])
            ("matchdoc::bt_int8" variable (:type "int") nil [911 936])
            ("matchdoc::bt_int16" variable (:type "int") nil [938 964])
            ("matchdoc::bt_int32" variable (:type "int") nil [966 992])
            ("matchdoc::bt_int64" variable (:type "int") nil [994 1020])
            ("matchdoc::bt_uint8" variable (:type "int") nil [1022 1048])
            ("matchdoc::bt_uint16" variable (:type "int") nil [1050 1077])
            ("matchdoc::bt_uint32" variable (:type "int") nil [1079 1106])
            ("matchdoc::bt_uint64" variable (:type "int") nil [1108 1135])
            ("matchdoc::bt_float" variable (:type "int") nil [1137 1163])
            ("matchdoc::bt_double" variable (:type "int") nil [1165 1192])
            ("matchdoc::bt_string" variable (:type "int") nil [1194 1221])
            ("matchdoc::bt_bool" variable (:type "int") nil [1223 1248])
            ("matchdoc::bt_hash_128" variable (:type "int") nil [1250 1279])
            ("matchdoc::bt_user_type1" variable (:type "int") nil [1336 1360])
            ("matchdoc::bt_max" variable (:type "int") nil [1412 1429])
            ("VRGroupKey" type
               (:members 
                  ( ("FOR_DISTINCT" variable
                       (:constant-flag t
                        :default-value (1575 1576)
                        :type "int")
                        (reparse-symbol enumsubparts) [1481 1497])
                    ("FOR_ATTRIBUTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1546 1560])
                    ("FOR_USER_DATA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1609 1623]))                  
                :type "enum")
                nil [1459 1670])
            ("QueryTermType" type
               (:members 
                  ( ("AND_TERM" variable
                       (:constant-flag t
                        :default-value (1787 1788)
                        :type "int")
                        (reparse-symbol enumsubparts) [1697 1709])
                    ("OR_TERM" variable
                       (:constant-flag t
                        :default-value (1804 1805)
                        :type "int")
                        (reparse-symbol enumsubparts) [1715 1726])
                    ("ANDNOT_TERM" variable
                       (:constant-flag t
                        :default-value (1825 1826)
                        :type "int")
                        (reparse-symbol enumsubparts) [1732 1747])
                    ("RANK_TERM" variable
                       (:constant-flag t
                        :default-value (1844 1845)
                        :type "int")
                        (reparse-symbol enumsubparts) [1753 1766]))                  
                :type "enum")
                nil [1672 1770])
            ("JoinType" type
               (:members 
                  ( ("DEFAULT_JOIN" variable
                       (:constant-flag t
                        :default-value (1886 1887)
                        :type "int")
                        (reparse-symbol enumsubparts) [1792 1808])
                    ("WEAK_JOIN" variable
                       (:constant-flag t
                        :default-value (1905 1906)
                        :type "int")
                        (reparse-symbol enumsubparts) [1814 1827])
                    ("STRONG_JOIN" variable
                       (:constant-flag t
                        :default-value (1926 1927)
                        :type "int")
                        (reparse-symbol enumsubparts) [1833 1848]))                  
                :type "enum")
                nil [1772 1851])
            ("SubDocDisplayType" type
               (:members 
                  ( ("SUB_DOC_DISPLAY_NO" variable
                       (:constant-flag t
                        :default-value (1982 1983)
                        :type "int")
                        (reparse-symbol enumsubparts) [1882 1904])
                    ("SUB_DOC_DISPLAY_FLAT" variable
                       (:constant-flag t
                        :default-value (2012 2013)
                        :type "int")
                        (reparse-symbol enumsubparts) [1910 1934])
                    ("SUB_DOC_DISPLAY_GROUP" variable
                       (:constant-flag t
                        :default-value (2043 2044)
                        :type "int")
                        (reparse-symbol enumsubparts) [1940 1965]))                  
                :type "enum")
                nil [1853 1968])
            ("TermType" type
               (:members 
                  ( ("TT_STRING" variable
                       (:constant-flag t
                        :default-value (2081 2082)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2003])
                    ("TT_NUMBER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2009 2020]))                  
                :type "enum")
                nil [1970 2021])
            ("QueryType" type
               (:members 
                  ( ("TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (2136 2137)
                        :type "int")
                        (reparse-symbol enumsubparts) [2044 2058])
                    ("NUMBER_QUERY" variable
                       (:constant-flag t
                        :default-value (2158 2159)
                        :type "int")
                        (reparse-symbol enumsubparts) [2064 2080])
                    ("PHRASE_QUERY" variable
                       (:constant-flag t
                        :default-value (2180 2181)
                        :type "int")
                        (reparse-symbol enumsubparts) [2086 2102])
                    ("AND_QUERY" variable
                       (:constant-flag t
                        :default-value (2199 2200)
                        :type "int")
                        (reparse-symbol enumsubparts) [2108 2121])
                    ("OR_QUERY" variable
                       (:constant-flag t
                        :default-value (2217 2218)
                        :type "int")
                        (reparse-symbol enumsubparts) [2127 2139])
                    ("RANK_QUERY" variable
                       (:constant-flag t
                        :default-value (2237 2238)
                        :type "int")
                        (reparse-symbol enumsubparts) [2145 2159])
                    ("ANDNOT_QUERY" variable
                       (:constant-flag t
                        :default-value (2259 2260)
                        :type "int")
                        (reparse-symbol enumsubparts) [2165 2181])
                    ("MULTI_TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (2285 2286)
                        :type "int")
                        (reparse-symbol enumsubparts) [2187 2207]))                  
                :type "enum")
                nil [2023 2211])
            ("MatchDataLevel" type
               (:members 
                  ( ("MDL_NONE" variable
                       (:constant-flag t
                        :default-value (2329 2330)
                        :type "int")
                        (reparse-symbol enumsubparts) [2239 2251])
                    ("MDL_TERM" variable
                       (:constant-flag t
                        :default-value (2347 2348)
                        :type "int")
                        (reparse-symbol enumsubparts) [2257 2269])
                    ("MDL_SUB_QUERY" variable
                       (:constant-flag t
                        :default-value (2370 2371)
                        :type "int")
                        (reparse-symbol enumsubparts) [2275 2292]))                  
                :type "enum")
                nil [2213 2296])
            ("SyntaxExprType" type
               (:members 
                  ( ("SYNTAX_EXPR_TYPE_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2324 2349])
                    ("SYNTAX_EXPR_TYPE_CONST_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2354 2383])
                    ("SYNTAX_EXPR_TYPE_ATOMIC_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2388 2417])
                    ("SYNTAX_EXPR_TYPE_VIRTUAL_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2422 2452])
                    ("SYNTAX_EXPR_TYPE_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2457 2480])
                    ("SYNTAX_EXPR_TYPE_ADD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2485 2506])
                    ("SYNTAX_EXPR_TYPE_DIV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2511 2532])
                    ("SYNTAX_EXPR_TYPE_MUL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2537 2558])
                    ("SYNTAX_EXPR_TYPE_EQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2563 2586])
                    ("SYNTAX_EXPR_TYPE_NOTEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2591 2617])
                    ("SYNTAX_EXPR_TYPE_LESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2622 2644])
                    ("SYNTAX_EXPR_TYPE_GREATERTHAN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2649 2678])
                    ("SYNTAX_EXPR_TYPE_LESSEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2683 2710])
                    ("SYNTAX_EXPR_TYPE_GREATEREQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2715 2745])
                    ("SYNTAX_EXPR_TYPE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2750 2771])
                    ("SYNTAX_EXPR_TYPE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2776 2796])
                    ("SYNTAX_EXPR_TYPE_RANK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2801 2823])
                    ("SYNTAX_EXPR_TYPE_BITAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2828 2852])
                    ("SYNTAX_EXPR_TYPE_BITOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2857 2880])
                    ("SYNTAX_EXPR_TYPE_BITXOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2885 2909])
                    ("SYNTAX_EXPR_TYPE_FUNC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2914 2936])
                    ("SYNTAX_EXPR_TYPE_FUNC_ARGUMENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2941 2972]))                  
                :type "enum")
                nil [2298 2975])
            ("AtomicSyntaxExprType" type
               (:members 
                  ( ("UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3009 3017])
                    ("INTEGER_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3022 3036])
                    ("FLOAT_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3041 3053])
                    ("STRING_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3058 3071])
                    ("ATTRIBUTE_NAME" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3076 3091]))                  
                :type "enum")
                nil [2977 3094])
            ("FuncActionScopeType" type
               (:members 
                  ( ("FUNC_ACTION_SCOPE_MAIN_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3127 3154])
                    ("FUNC_ACTION_SCOPE_SUB_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3159 3185])
                    ("FUNC_ACTION_SCOPE_ADAPTER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3190 3216]))                  
                :type "enum")
                nil [3096 3219])
            ("HaCompressType" type
               (:members 
                  ( ("INVALID_COMPRESS_TYPE" variable
                       (:constant-flag t
                        :default-value (3350 3351)
                        :type "int")
                        (reparse-symbol enumsubparts) [3247 3272])
                    ("NO_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3278 3290])
                    ("Z_SPEED_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3295 3312])
                    ("Z_DEFAULT_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3317 3336])
                    ("SNAPPY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3341 3348])
                    ("LZ4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3353 3357]))                  
                :type "enum")
                nil [3221 3360])
            ("QueryOperator" type
               (:members 
                  ( ("OP_UNKNOWN" variable
                       (:constant-flag t
                        :default-value (3479 3480)
                        :type "int")
                        (reparse-symbol enumsubparts) [3387 3401])
                    ("OP_AND" variable
                       (:constant-flag t
                        :default-value (3495 3496)
                        :type "int")
                        (reparse-symbol enumsubparts) [3407 3417])
                    ("OP_OR" variable
                       (:constant-flag t
                        :default-value (3510 3511)
                        :type "int")
                        (reparse-symbol enumsubparts) [3423 3432])
                    ("OP_WEAKAND" variable
                       (:constant-flag t
                        :default-value (3530 3531)
                        :type "int")
                        (reparse-symbol enumsubparts) [3438 3452]))                  
                :type "enum")
                nil [3362 3456])
            ("ResultFormatType" type
               (:members 
                  ( ("RF_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3486 3497])
                    ("RF_XML" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3502 3509])
                    ("RF_PROTOBUF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3514 3527]))                  
                :type "enum")
                nil [3458 3528])
            ("FetchSummaryType" type
               (:members 
                  ( ("BY_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3558 3569])
                    ("BY_DOCID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3574 3583])
                    ("BY_PK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3588 3594])
                    ("BY_RAWPK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3599 3609]))                  
                :type "enum")
                nil [3530 3610])
            ("QuotaMode" type
               (:members 
                  ( ("QM_PER_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3633 3644])
                    ("QM_PER_LAYER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3649 3662])
                    ("QM_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3667 3678]))                  
                :type "enum")
                nil [3612 3681])
            ("QuotaType" type
               (:members 
                  ( ("QT_PROPOTION" variable
                       (:constant-flag t
                        :default-value (3798 3799)
                        :type "int")
                        (reparse-symbol enumsubparts) [3704 3720])
                    ("QT_AVERAGE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3773 3784])
                    ("QT_QUOTA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3800 3809])
                    ("QT_UNKNOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3814 3825]))                  
                :type "enum")
                nil [3683 3826])
            ("DispatchType" type
               (:members 
                  ( ("DISPATCH_BY_PARTITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3852 3874])
                    ("DISPATCH_BY_REPLICA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3879 3900]))                  
                :type "enum")
                nil [3828 3901])
            ("MergeInStep" type
               (:members 
                  ( ("MERGE_IN_STEP_FULL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3925 3944])
                    ("MERGE_IN_STEP_BEGIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3949 3969])
                    ("MERGE_IN_STEP_DOING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3974 3994])
                    ("MERGE_IN_STEP_END" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3999 4018]))                  
                :type "enum")
                nil [3903 4019])
            ("SEARCH_PHASE_ONE" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4020 4056])
            ("SEARCH_PHASE_TWO" variable
               (:constant-flag t
                :default-value "2"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4057 4093])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [4095 4150])
            ("getValueFromKeyValueMap" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("keyValueMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4203 4257])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4266 4289])
                    ("defaultValue" variable
                       (:reference 1
                        :constant-flag t
                        :default-value "\"\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4298 4334]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [4151 4498])
            ("MAX_AGGREGATE_GROUP_COUNT" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4500 4548])
            ("DOCID_PARTITION_MODE" variable (:constant-flag t) nil [4558 4578])
            ("NULL_CLUSTER" variable (:constant-flag t) nil [4595 4607])
            ("BuildMode" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4627 4657])
            ("BuildPhase" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4658 4689])
            ("hashid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4751 4777])
            ("clusterid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4778 4807])
            ("INVALID_CLUSTERID" variable
               (:constant-flag t
                :default-value "(clusterid_t)-1"
                :type ("clusterid_t" type (:type "class") nil nil))
                nil [4808 4862])
            ("DEFAULT_BOOST_VALUE" variable
               (:constant-flag t
                :default-value "100"
                :type ("int32_t" type (:type "class") nil nil))
                nil [4864 4904])
            ("MAX_RERANK_SIZE" variable
               (:constant-flag t
                :default-value "1000000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4905 4946])
            ("MIN_INDEX_SWITCH_LIMIT" variable
               (:constant-flag t
                :default-value "150"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4947 4991])
            ("NULL_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5054 5096])
            ("DYNAMIC_CUT_SEPARATOR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\\x1B\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5097 5153])
            ("LAYERKEY_DOCID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%docid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5154 5205])
            ("LAYERKEY_OTHER" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%other\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5206 5257])
            ("LAYERKEY_SEGMENTID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%segmentid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5258 5317])
            ("LAYERKEY_PERCENT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%percent\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5318 5373])
            ("LAYERKEY_UNSORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%unsorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5374 5431])
            ("LAYERKEY_SORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%sorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [5432 5485])
            ("PLUGIN_PATH_NAME" variable (:constant-flag t) nil [5496 5512])
            ("DEFAULT_QRS_CHAIN" variable (:constant-flag t) nil [5533 5550])
            ("DEFAULT_DEBUG_QRS_CHAIN" variable (:constant-flag t) nil [5569 5592])
            ("DEFAULT_DEBUG_PROCESSOR" variable (:constant-flag t) nil [5639 5662])
            ("DEFAULT_DEBUG_RANK_PROFILE" variable (:constant-flag t) nil [5704 5730])
            ("DEFAULT_DEBUG_SCORER" variable (:constant-flag t) nil [5780 5800])
            ("DEFAULT_RANK_PROFILE" variable (:constant-flag t) nil [5842 5862])
            ("DEFAULT_SUMMARY_PROFILE" variable (:constant-flag t) nil [5889 5912])
            ("DEFAULT_CONFIG_DIR" variable (:constant-flag t) nil [5938 5956])
            ("LOCAL_URI_PREFIX" variable (:constant-flag t) nil [5981 5997])
            ("FETCHSUMMARY_GID_SEPERATOR" variable (:constant-flag t) nil [6017 6043])
            ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" variable (:constant-flag t) nil [6056 6093])
            ("BUILD_IN_REFERENCE_PREFIX" variable (:constant-flag t) nil [6107 6132])
            ("PROVIDER_VAR_NAME_PREFIX" variable (:constant-flag t) nil [6156 6180])
            ("ISEARCH_BUILD_IN_JOIN_DOCID_REF_PREIX" variable (:constant-flag t) nil [6205 6242])
            ("ISEARCH_BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [6268 6320])
            ("ISEARCH_BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [6346 6401])
            ("STATUS_CHECK_PREFIX" variable (:constant-flag t) nil [6430 6449])
            ("HTTP_SUPPORT_PREFIX" variable (:constant-flag t) nil [6467 6486])
            ("LIST_CMD" variable (:constant-flag t) nil [6510 6518])
            ("GET_FILE_CONTENT_CMD" variable (:constant-flag t) nil [6532 6552])
            ("RESULT_FORMAT_XML" variable (:constant-flag t) nil [6569 6586])
            ("RESULT_FORMAT_PROTOBUF" variable (:constant-flag t) nil [6601 6623])
            ("LOCAL_USER_NAME_DEFAULT" variable (:constant-flag t) nil [6644 6667])
            ("LOCAL_SERVICE_NAME_DEFAULT" variable (:constant-flag t) nil [6681 6707])
            ("HEART_BEAT_META_INFO_KEY" variable (:constant-flag t) nil [6733 6757])
            ("HEART_BEAT_CLUSTER_NAME" variable (:constant-flag t) nil [6779 6802])
            ("RAW_DOCUMENT_FORMAT_HA3" variable (:constant-flag t) nil [6863 6886])
            ("RAW_DOCUMENT_FORMAT_ISEARCH" variable (:constant-flag t) nil [6901 6928])
            ("FSUTIL_BINARY" variable (:constant-flag t) nil [6948 6961])
            ("MAX_PARTITION_RANGE" variable
               (:constant-flag t
                :default-value "65535"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6977 7020])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "MAX_PARTITION_RANGE + 1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7021 7082])
            ("KEEP_INCREMENTAL_VERSION_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7480 7530])
            ("APP_ITERATOR_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7531 7580])
            ("BUILDER_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "500 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7653 7705])
            ("LOCAL_BUILDER_METRICS_STDOUT_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7714 7768])
            ("SERVER_TIMEOUT" variable
               (:constant-flag t
                :default-value "5 * 1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7867 7907])
            ("FETCHSUMMARY_GID_FIELD_SIZE" variable
               (:constant-flag t
                :default-value "5"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7915 7962])
            ("STATUS_CHECK_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "6"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7963 8006])
            ("HTTP_SUPPORT_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "12"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8007 8051])
            ("GET_FILE_SIZE_LIMIT" variable
               (:constant-flag t
                :default-value "100 * 1024"
                :type ("int64_t" type (:type "class") nil nil))
                nil [8052 8099])
            ("DEFAULT_WORKER_RESOURCE" variable
               (:constant-flag t
                :default-value "100"
                :type "int")
                nil [8109 8149])
            ("DEFAULT_PARTITION_RESOURCE" variable
               (:constant-flag t
                :default-value "DEFAULT_WORKER_RESOURCE"
                :type "int")
                nil [8150 8213])
            ("HA3_REQUEST_VERSION" variable (:type "int") nil [8691 8711])
            ("DEFAULT_AMON_AGENT_PORT" variable
               (:constant-flag t
                :default-value "10086"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8774 8821])
            ("INVALID_SEARCHER_CACHE_EXPIRE_TIME" variable
               (:constant-flag t
                :default-value "uint32_t(-1)"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8823 8888])
            ("REALTIME_UNLIMIT_QPS" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8890 8930])
            ("DEFAULT_WORKER_CAPABILITY" variable
               (:constant-flag t
                :default-value "16"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8931 8977])
            ("HA3_VERSION" variable (:type "int") nil [9042 9054])
            ("DEFAULT_TASK_QUEUE_NAME" variable
               (:constant-flag t
                :default-value "\"__ha3_runtime_default_task_queue\""
                :type ("std::string" type (:type "class") nil nil))
                nil [9055 9134])
            ("HA3_EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [9136 9176])
            ("ONLINE_CONFIG_KEEP_COUNT" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [9178 9217]))          
      :file "isearch.h"
      :pointmax 9295
      :fsize 9294
      :lastmodtime '(23244 23383 363773 694000)
      :unmatched-syntax '((thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1430 . 1430) (thing 1410 . 1411) (thing 1396 . 1409) (thing 1384 . 1395) (thing 1383 . 1384) (thing 1382 . 1383) (thing 1374 . 1382) (thing 1368 . 1373) (thing 1361 . 1367) (thing 1334 . 1335) (thing 1317 . 1333) (thing 1305 . 1316) (thing 1304 . 1305) (thing 1303 . 1304) (thing 1295 . 1303) (thing 1289 . 1294) (thing 1282 . 1288) (thing 1279 . 1280) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1250 . 1279) (thing 1248 . 1249) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1223 . 1248) (thing 1221 . 1222) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1194 . 1221) (thing 1192 . 1193) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1165 . 1192) (thing 1163 . 1164) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1137 . 1163) (thing 1135 . 1136) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1108 . 1135) (thing 1106 . 1107) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1079 . 1106) (thing 1077 . 1078) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1050 . 1077) (thing 1048 . 1049) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1022 . 1048) (thing 1020 . 1021) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 994 . 1020) (thing 992 . 993) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 966 . 992) (thing 964 . 965) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 938 . 964) (thing 936 . 937) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 911 . 936) (thing 909 . 910) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 881 . 909) (thing 4992 . 4997) (thing 4998 . 5006) (thing 5007 . 5033) (thing 5034 . 5035) (thing 5036 . 5037) (thing 5038 . 5039) (thing 5040 . 5044) (thing 5045 . 5046) (thing 5047 . 5051) (thing 5051 . 5052) (thing 7083 . 7088) (thing 7089 . 7096) (thing 7097 . 7126) (thing 7127 . 7128) (thing 7129 . 7130) (thing 7131 . 7132) (thing 7133 . 7137) (thing 7138 . 7139) (thing 7140 . 7144) (thing 7144 . 7145) (thing 7152 . 7157) (thing 7158 . 7165) (thing 7166 . 7189) (thing 7190 . 7191) (thing 7192 . 7194) (thing 7195 . 7196) (thing 7197 . 7201) (thing 7202 . 7203) (thing 7204 . 7208) (thing 7208 . 7209) (thing 7217 . 7222) (thing 7223 . 7230) (thing 7231 . 7253) (thing 7254 . 7255) (thing 7256 . 7257) (thing 7258 . 7259) (thing 7260 . 7264) (thing 7265 . 7266) (thing 7267 . 7271) (thing 7271 . 7272) (thing 7279 . 7284) (thing 7285 . 7292) (thing 7293 . 7324) (thing 7325 . 7326) (thing 7327 . 7328) (thing 7329 . 7330) (thing 7331 . 7335) (thing 7336 . 7337) (thing 7338 . 7342) (thing 7342 . 7343) (thing 7350 . 7355) (thing 7356 . 7363) (thing 7364 . 7395) (thing 7396 . 7397) (thing 7398 . 7399) (thing 7400 . 7401) (thing 7402 . 7406) (thing 7407 . 7408) (thing 7409 . 7413) (thing 7413 . 7414) (thing 7421 . 7426) (thing 7427 . 7434) (thing 7435 . 7454) (thing 7455 . 7456) (thing 7457 . 7458) (thing 7459 . 7460) (thing 7461 . 7465) (thing 7466 . 7467) (thing 7468 . 7472) (thing 7472 . 7473) (thing 7590 . 7595) (thing 7596 . 7603) (thing 7604 . 7627) (thing 7628 . 7629) (thing 7630 . 7631) (thing 7632 . 7633) (thing 7634 . 7638) (thing 7639 . 7640) (thing 7641 . 7645) (thing 7645 . 7646) (thing 7803 . 7808) (thing 7809 . 7816) (thing 7817 . 7837) (thing 7838 . 7839) (thing 7840 . 7843) (thing 7844 . 7845) (thing 7846 . 7850) (thing 7851 . 7852) (thing 7853 . 7857) (thing 7857 . 7858) (thing 8214 . 8219) (thing 8220 . 8227) (thing 8228 . 8252) (thing 8253 . 8254) (thing 8255 . 8256) (thing 8257 . 8258) (thing 8259 . 8263) (thing 8264 . 8265) (thing 8266 . 8270) (thing 8270 . 8271) (thing 8279 . 8284) (thing 8285 . 8292) (thing 8293 . 8319) (thing 8320 . 8321) (thing 8322 . 8339) (thing 8340 . 8341) (thing 8342 . 8349) (thing 8393 . 8394) (thing 8395 . 8412) (thing 8413 . 8414) (thing 8415 . 8420) (thing 8464 . 8465) (thing 8466 . 8483) (thing 8484 . 8485) (thing 8486 . 8489) (thing 8533 . 8534) (thing 8535 . 8536) (thing 8536 . 8537) (thing 8594 . 8599) (thing 8600 . 8607) (thing 8608 . 8630) (thing 8631 . 8632) (thing 8633 . 8659) (thing 8660 . 8661) (thing 8662 . 8688) (thing 8689 . 8690) (thing 8979 . 8984) (thing 8985 . 8988) (thing 8988 . 8989) (thing 8989 . 8990) (thing 8990 . 8996) (thing 8997 . 9016) (thing 9017 . 9018) (thing 9019 . 9041) (thing 9218 . 9223) (thing 9224 . 9231) (thing 9232 . 9260) (thing 9261 . 9262) (thing 9263 . 9265) (thing 9266 . 9267) (thing 9268 . 9272) (thing 9273 . 9274) (thing 9275 . 9279) (thing 9279 . 9280))
      :lexical-table 
        '(("END_DOCID" . ((semantic-list "((docid_t)0x7FFFFFFF)" 595 . 616)))
          ("DEFAULT_DEBUG_QRS_CHAIN" . ((string "\"_@_build_in_DebugQueryMatchQrsChain\"" 5672 . 5709)))
          ("DEFAULT_CONFIG_DIR" . ((string "\"default_conf/\"" 6036 . 6051)))
          ("ISEARCH_BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_subjoin_docid_\"" 6481 . 6500)))
          ("DEFAULT_DEBUG_PROCESSOR" . ((string "\"_@_build_in_MatchInfoProcessor\"" 5742 . 5774)))
          ("MAX_QUOTA" . ((semantic-list "((quota_t)-1)" 635 . 648)))
          ("NULL_CLUSTER" . ((string "\"\"" 4687 . 4689)))
          ("BUILD_IN_REFERENCE_PREFIX" . ((string "\"_@_build_in_\"" 6212 . 6226)))
          ("GET_FILE_CONTENT_CMD" . ((string "\"file\"" 6632 . 6638)))
          ("RESULT_FORMAT_XML" . ((string "\"xml\"" 6666 . 6671)))
          ("DOCID_PARTITION_MODE" . ((string "\"docid\"" 4658 . 4665)))
          ("DEFAULT_QRS_CHAIN" . ((string "\"DEFAULT\"" 5630 . 5639)))
          ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" . ((string "\"_\"" 6173 . 6176)))
          ("DEFAULT_DEBUG_RANK_PROFILE" . ((string "\"_@_build_in_DebugQueryMatchRankProfile\"" 5810 . 5850)))
          ("FETCHSUMMARY_GID_SEPERATOR" . ((string "\"|\"" 6123 . 6126)))
          ("LOCAL_USER_NAME_DEFAULT" . ((string "\"ha\"" 6747 . 6751)))
          ("RAW_DOCUMENT_FORMAT_ISEARCH" . ((string "\"isearch\"" 7008 . 7017)))
          ("ISEARCH_BUILD_IN_JOIN_DOCID_REF_PREIX" . ((string "\"_@_join_docid_\"" 6322 . 6338)))
          ("ISEARCH_BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_join_docid_\"" 6400 . 6416)))
          ("ISEARCH_H_")
          ("DEFAULT_SUMMARY_PROFILE" . ((string "\"DefaultProfile\"" 5992 . 6008)))
          ("PROVIDER_VAR_NAME_PREFIX" . ((string "\"_@_user_data_\"" 6260 . 6275)))
          ("RESULT_FORMAT_PROTOBUF" . ((string "\"protobuf\"" 6703 . 6713)))
          ("LOCAL_SERVICE_NAME_DEFAULT" . ((string "\"local_service\"" 6787 . 6802)))
          ("HEART_BEAT_META_INFO_KEY" . ((string "\"WorkerInfo\"" 6837 . 6849)))
          ("HEART_BEAT_CLUSTER_NAME" . ((string "\"__ha3_admin_cluster_name_\"" 6882 . 6909)))
          ("PLUGIN_PATH_NAME" . ((string "\"plugins/\"" 5592 . 5602)))
          ("HTTP_SUPPORT_PREFIX" . ((string "\"httpsupport:\"" 6566 . 6580)))
          ("RAW_DOCUMENT_FORMAT_HA3" . ((string "\"ha3\"" 6966 . 6971)))
          ("FSUTIL_BINARY" . ((string "\"fs_util_bin\"" 7041 . 7054)))
          ("LIST_CMD" . ((string "\"ls\"" 6598 . 6602)))
          ("DEFAULT_RANK_PROFILE" . ((string "\"DefaultProfile\"" 5942 . 5958)))
          ("UNINITIALIZED_DOCID" . ((semantic-list "((docid_t)-2)" 677 . 690)))
          ("DEFAULT_DEBUG_SCORER" . ((string "\"_@_build_in_RecordInfoScorer\"" 5881 . 5911)))
          ("STATUS_CHECK_PREFIX" . ((string "\"status\"" 6529 . 6537)))
          ("LOCAL_URI_PREFIX" . ((string "\"file://\"" 6077 . 6086)))
          )
)
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ha3/config.h" include (:system-flag t) nil [54 77])
            ("autil/CommonMacros.h" include (:system-flag t) nil [78 109])
            ("BEGIN_HA3_NAMESPACE" variable (:constant-flag t) nil [119 138])
            ("END_HA3_NAMESPACE" variable (:constant-flag t) nil [184 201])
            ("USE_HA3_NAMESPACE" variable (:constant-flag t) nil [217 234])
            ("BEGIN_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [274 297])
            ("END_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [326 347])
            ("ALIAS_NAMESAPCE" variable (:constant-flag t) nil [359 374])
            ("HA3_NS" variable (:constant-flag t) nil [467 473])
            ("tr1/memory" include (:system-flag t) nil [489 510])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [519 534]))          
      :file "common.h"
      :pointmax 608
      :fsize 607
      :lastmodtime '(23208 53501 775111 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_COMMON_H_")
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [24 38])
            ("os" include nil nil [24 38])
            ("Import" code nil nil [81 94])
            ("copy" include nil nil [95 106])
            ("env" variable nil nil [206 223])
            ("env" code nil nil [224 294])
            ("config_h_template" variable nil nil [296 573])
            ("config_cpp_template" variable nil nil [575 899])
            ("run" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [909 912]))              ) nil [901 1292])
            ("GenerateConfig" function nil nil [1293 2545])
            ("aGenConfig" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2561 2565])
                    ("args" variable nil (reparse-symbol function_parameters) [2567 2572])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2574 2582]))                  )
                nil [2546 2687])
            ("env" code nil nil [2687 2712])
            ("env" code nil nil [2713 2729])
            ("env" variable nil nil [2731 2762])
            ("if" code nil nil [2763 2877])
            ("if" code nil nil [2878 3189])
            ("env" code nil nil [3217 3234])
            ("env" code nil nil [3235 3252])
            ("env" code nil nil [3253 3272])
            ("env" code nil nil [3273 3290])
            ("env" code nil nil [3291 3309])
            ("env" code nil nil [3310 3334])
            ("env" code nil nil [3335 3354])
            ("env" code nil nil [3355 3375])
            ("env" code nil nil [3376 3396])
            ("env" code nil nil [3397 3416])
            ("env" code nil nil [3417 3437])
            ("env" code nil nil [3438 3456])
            ("env" code nil nil [3457 3475])
            ("env" code nil nil [3476 3495])
            ("env" code nil nil [3496 3512])
            ("env" code nil nil [3542 3566])
            ("env" code nil nil [3567 3595])
            ("env" code nil nil [3596 3615])
            ("env" code nil nil [3616 3635])
            ("env" code nil nil [3636 3655])
            ("libfake_entry" variable nil nil [3657 3775]))          
      :file "SConscript"
      :pointmax 3776
      :fsize 3775
      :lastmodtime '(23208 53775 230140 774000)
      :unmatched-syntax nil)
    (semanticdb-table "config.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/config.h" include (:system-flag t) nil [2 25])
            ("ha3/common.h" include (:system-flag t) nil [26 49])
            ("string" include (:system-flag t) nil [50 67])
            ("ha3_version" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"ha3-debug-3.0.1-nightly_201803161545\""
                :type ("std::string" type (:type "class") nil nil))
                nil [94 172])
            ("current_git_status" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"On branch feature/turing_merge\\nChanges not staged for commit:\\n  (use \\\"git add <file>...\\\" to update what will be committed)\\n  (use \\\"git checkout -- <file>...\\\" to discard changes in working directory)\\n\\n	modified:   ../../../ha3/common/DataProvider.cpp\\n	modified:   ../../../ha3/common/DataProvider.h\\n	modified:   ../../../ha3/common/SConscript\\n	modified:   ../../../ha3/turing/ops/Ha3SearcherPrepareOp.cpp\\n	modified:   ../../../ha3/turing/ops/Ha3SeekOp.cpp\\n	modified:   ../../../ha3/turing/ops/SearcherQueryResource.h\\n	modified:   ../../../ha3/turing/searcher/SearcherBiz.cpp\\n\\nUntracked files:\\n  (use \\\"git add <file>...\\\" to include in what will be committed)\\n\\n	../../../ha3/common/GlobalVariableManager.cpp\\n	../../../ha3/common/GlobalVariableManager.h\\n\\nno changes added to commit (use \\\"git add\\\" and/or \\\"git commit -a\\\")\\n\""
                :type ("std::string" type (:type "class") nil nil))
                nil [173 1069])
            ("current_git_log" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"commit e289b86dd9842772db92b08aa1dee542c69d1c81\\nMerge: 8e97158 6657e55\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Thu Mar 15 19:19:23 2018 +0800\\n\\n    Merge branch \\'feature/new_matchdoc\\' into feature/turing_merge\\n\\ncommit 6657e55d0d0c69969f0b1c73ba5c29560683874c\\nAuthor: zhang7 <zq103303@alibaba-inc.com>\\nDate:   Tue Mar 13 18:24:08 2018 +0800\\n\\n    fix mem pool\\n\\ncommit 8e971584328b3d603d7f8ea58cbab2e53c619c43\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Tue Mar 13 17:14:17 2018 +0800\\n\\n    modify local_search_starter\\n\\ncommit 69ac5e0d917972d4d15a580e41170c1e30accff8\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Tue Mar 13 11:42:13 2018 +0800\\n\\n    fix searcher cache bug\\n\\ncommit 408df8701845294274918d0657fc073a8c2efce3\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Mon Mar 12 20:03:28 2018 +0800\\n\\n    add searcher cache op\\n\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1070 1997]))          
      :file "config.cpp"
      :pointmax 2021
      :fsize 1579
      :lastmodtime '(23244 23387 898779 136000)
      :unmatched-syntax '((thing 1999 . 2020) (thing 69 . 92))))
  :file "!ssd!sdd!git!ha3!turing!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
