;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "MemPoolFactory.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MEMPOOLFACTORY_H" variable (:constant-flag t) nil [42 66])
            ("sys/syscall.h" include (:system-flag t) nil [68 92])
            ("ha3/common.h" include (:system-flag t) nil [93 116])
            ("ha3/isearch.h" include (:system-flag t) nil [117 141])
            ("ha3/util/Log.h" include (:system-flag t) nil [142 167])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [168 200])
            ("autil/Lock.h" include (:system-flag t) nil [201 224])
            ("tr1/unordered_map" include (:system-flag t) nil [225 253])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275 280]))                  
                :type "int")
                nil [255 281])
            ("MemPoolFactory" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [306 313])
                    ("PoolType" type
                       (:typedef ("autil::mem_pool::Pool" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [318 357])
                    ("PoolMap" type
                       (:typedef ("std::tr1::unordered_map" type
                             (:template-specifier 
                                ( ("pthread_t" type nil nil nil)
                                  ("PoolType" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [362 424])
                    ("public" label nil (reparse-symbol classsubparts) [425 432])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [437 454])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [459 477])
                    ("private" label nil (reparse-symbol classsubparts) [478 486])
                    ("MemPoolFactory" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemPoolFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [506 529]))                          
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [491 530])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MemPoolFactory" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [561 584]))                          
                        :type ("MemPoolFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [535 585])
                    ("public" label nil (reparse-symbol classsubparts) [586 593])
                    ("getMemPool" function
                       (:pointer 1
                        :type ("PoolType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [598 1017])
                    ("public" label nil (reparse-symbol classsubparts) [1018 1025])
                    ("getPoolCount" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1045 1104])
                    ("private" label nil (reparse-symbol classsubparts) [1105 1113])
                    ("_lock" variable (:type ("autil::ReadWriteLock" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1118 1145])
                    ("_pools" variable (:type ("PoolMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1150 1165])
                    ("private" label nil (reparse-symbol classsubparts) [1166 1174])
                    ("MemPoolFactoryTest" friend nil (reparse-symbol classsubparts) [1179 1210])
                    ("private" label nil (reparse-symbol classsubparts) [1212 1220])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1225 1243]))                  
                :type "class")
                nil [283 1246])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MemPoolFactory" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1264 1279]))                  
                :type "int")
                nil [1248 1280])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1300 1305]))                  
                :type "int")
                nil [1282 1306]))          
      :file "MemPoolFactory.h"
      :pointmax 1342
      :fsize 1341
      :lastmodtime '(22505 58235 937897 303000)
      :unmatched-syntax '((thing 1210 . 1211))
      :lexical-table 
        '(("ISEARCH_MEMPOOLFACTORY_H")
          )
))
  :file "!ssd!sdd!git!ha3_suez!online2!ha3!ha3!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
