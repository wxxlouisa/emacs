;; Object variant/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "variant/"
  :tables
  (list
    (semanticdb-table "MatchDocsVariant.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("basic_ops/variant/MatchDocsVariant.h" include nil nil [1 48])
            ("tensorflow/core/framework/variant_op_registry.h" include nil nil [49 107])
            ("suez/turing/common/CommonDefine.h" include nil nil [108 152])
            ("autil/DataBuffer.h" include (:system-flag t) nil [153 182])
            ("basic_ops/common/RtpCommon.h" include nil nil [183 222])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [224 244])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [245 270])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [271 298])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [299 321])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [322 354])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("AUTIL_LOG_SETUP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408 415])
                                    ("" variable (:type ("MatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [416 433]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [392 434])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [436 539])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [576 604]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [541 709])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [746 787])
                                    ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [823 851]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [711 994])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1356 1386]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1321 1669])
                            ("=" function
                               (:operator-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1717 1747]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1671 2103])
                            ("MatchDocsVariant" function
                               (:destructor-flag t
                                :parent "MatchDocsVariant"
                                :type "void")
                                (reparse-symbol namespacesubparts) [2105 2191])
                            ("getFromContext" function
                               (:pointer 1
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("ctx" variable
                                       (:pointer 1
                                        :type ("OpKernelContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2244 2265])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [2266 2276]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2193 2392])
                            ("Encode" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2424 2448]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2394 2781])
                            ("Decode" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2813 2843]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [2783 2966])
                            ("addAliasField" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("aliasName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3005 3029])
                                    ("srcName" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3030 3052]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2968 3574])
                            ("addAliasFields" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("aliasMap" variable (:type ("MatchDocAllocator::ReferenceAliasMapPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3614 3663]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3576 3804])
                            ("merge" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3835 3865]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [3806 4834])
                            ("construct" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("outPool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4870 4901]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [4837 5569])
                            ("fillSortMetas" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("sortMetas" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("SortExprMeta" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [5608 5640]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [5571 6196])
                            ("addSortMeta" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6232 6251]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [6197 6450])
                            ("addSortMeta" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6486 6505])
                                    ("ref" variable
                                       (:pointer 1
                                        :type ("ReferenceBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6506 6525])
                                    ("isAsc" variable (:type "bool") (reparse-symbol arg-sub-list) [6526 6537]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6451 6603])
                            ("addSortMetas" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("sortExprMetas" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("SortExprMeta" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [6641 6688]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6605 6785])
                            ("cloneWithoutMatchDocs" function
                               (:parent "MatchDocsVariant"
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6787 6957])
                            ("printSortMetas" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("sortMetas" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("SortExprMeta" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [6997 7035])
                                    ("ss" variable
                                       (:reference 1
                                        :type ("stringstream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7074 7091]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6959 7218])
                            ("newMatchDocAllocator" function
                               (:parent "MatchDocsVariant"
                                :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7220 7428])
                            ("GetShapeFromMatchDocsVariant" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("matchDocs" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7493 7527])
                                    ("s" variable
                                       (:pointer 1
                                        :type ("TensorShape" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7536 7551]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7430 7751])
                            ("declareTrace" function
                               (:pointer 1
                                :parent "MatchDocsVariant"
                                :type ("Reference" type
                                     (:template-specifier 
                                        ( ("Tracer" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [7753 8155])
                            ("REGISTER_UNARY_VARIANT_DECODE_FUNCTION" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("MatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8196 8213]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8157 8227])
                            ("REGISTER_UNARY_VARIANT_SHAPE_FUNCTION" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("MatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8266 8283])
                                    ("" variable (:type ("MatchDocsVariant::GetShapeFromMatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8335 8382]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8228 8383]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [373 8385]))                  
                :type "namespace")
                nil [356 8408]))          
      :file "MatchDocsVariant.cpp"
      :pointmax 8428
      :fsize 8387
      :lastmodtime '(23393 40489 412533 406000)
      :unmatched-syntax '((thing 4805 . 4806) (thing 4834 . 4835) (thing 8185 . 8196) (thing 8214 . 8225) (thing 8255 . 8266) (thing 8284 . 8295)))
    (semanticdb-table "MatchDocsVariant.h"
      :file "MatchDocsVariant.h"
      :fsize 7523
      :lastmodtime '(23393 9650 467978 879000))
    (semanticdb-table "SampleBatchVariant.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SUEZ_TURING_SAMPLEBATCHVARIANT_H" variable (:constant-flag t) nil [58 98])
            ("autil/Log.h" include (:system-flag t) nil [100 122])
            ("tensorflow/core/framework/variant.h" include (:system-flag t) nil [123 169])
            ("tensorflow/core/framework/variant_encode_decode.h" include (:system-flag t) nil [170 230])
            ("basic_ops/variant/proto/Sample.pb.h" include nil nil [231 277])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("SampleBatchVariant" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [343 350])
                                    ("SampleBatchVariant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :type ("SampleBatchVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [355 376])
                                    ("SampleBatchVariant" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [381 403])
                                    ("public" label nil (reparse-symbol classsubparts) [405 412])
                                    ("Encode" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [429 465]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [417 472])
                                    ("Decode" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [490 532]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [478 533])
                                    ("DebugString" function
                                       (:prototype-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [539 571])
                                    ("TypeName" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [577 636])
                                    ("get" function
                                       (:pointer 1
                                        :type ("SampleBatch" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [642 698])
                                    ("get" function
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("SampleBatch" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [704 772])
                                    ("private" label nil (reparse-symbol classsubparts) [774 782])
                                    ("_sampleBatch" variable (:type ("SampleBatch" type (:type "class") nil nil)) (reparse-symbol classsubparts) [787 812])
                                    ("private" label nil (reparse-symbol classsubparts) [814 822])
                                    ("AUTIL_LOG_DECLARE" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [827 847]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [316 850]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [296 854]))                  
                :type "namespace")
                nil [279 856]))          
      :file "SampleBatchVariant.h"
      :pointmax 907
      :fsize 906
      :lastmodtime '(23394 27200 249779 806000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_SUEZ_TURING_SAMPLEBATCHVARIANT_H")
          )
))
  :file "!ssd!sdd!git!test!turing_ha3_compile!basic_ops!build!release64!basic_ops!variant!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
