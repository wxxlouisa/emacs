;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "OpConstructContext.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SQL_OPCONSTRUCTCONTEXT_H" variable (:constant-flag t) nil [50 82])
            ("ha3/common.h" include (:system-flag t) nil [84 107])
            ("ha3/sql/resource/ResourceBase.h" include (:system-flag t) nil [108 150])
            ("ha3/sql/resource/SqlBizResource.h" include (:system-flag t) nil [151 195])
            ("ha3/sql/resource/SqlQueryResource.h" include (:system-flag t) nil [196 242])
            ("memory" include (:system-flag t) nil [243 260])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [282 286]))                  
                :type "int")
                nil [262 287])
            ("OpConstructContext" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [316 323])
                    ("getResource" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("resourceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [369 401]))                          
                        :pointer 1
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [328 408])
                    ("getResouceBase" function
                       (:prototype-flag t
                        :arguments 
                          ( ("resourceName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [445 477]))                          
                        :type ("ResourceBasePtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [414 484])
                    ("getAttribute" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("attrName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [534 562])
                            ("attrVal" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [563 574]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [490 581]))                  
                :type "class")
                nil [289 584])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sql" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 608]))                  
                :type "int")
                nil [586 609]))          
      :file "OpConstructContext.h"
      :pointmax 653
      :fsize 652
      :lastmodtime '(23606 42186 755881 926000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_SQL_OPCONSTRUCTCONTEXT_H")
          )
))
  :file "!ha3_develop!search_test!temp!source_code!ha3!build!release64!ha3!sql!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
