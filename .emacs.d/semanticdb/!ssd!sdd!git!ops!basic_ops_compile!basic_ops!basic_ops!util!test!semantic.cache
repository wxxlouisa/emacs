;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [26 39])
            ("env" variable nil nil [40 57])
            ("env" code nil nil [58 107]))          
      :file "SConscript"
      :pointmax 298
      :fsize 297
      :lastmodtime '(23353 59582 23960 538000)
      :unmatched-syntax nil)
    (semanticdb-table "TableUtilTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("map" include (:system-flag t) nil [1 15])
            ("vector" include (:system-flag t) nil [16 33])
            ("unittest/unittest.h" include (:system-flag t) nil [34 64])
            ("autil/mem_pool/Pool.h" include nil nil [65 97])
            ("autil/MultiValueCreator.h" include nil nil [98 134])
            ("matchdoc/MatchDocAllocator.h" include nil nil [135 174])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [175 222])
            ("basic_ops/util/TableUtil.h" include nil nil [223 260])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [262 282])
            ("testing" using (:type ("testing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [283 307])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [308 333])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("TableUtilTest" type
                               (:superclasses 
                                  ( ("TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [412 419])
                                    ("setUp" function (:type "void") (reparse-symbol classsubparts) [424 439])
                                    ("tearDown" function (:type "void") (reparse-symbol classsubparts) [444 462])
                                    ("getRefSize" function
                                       (:arguments 
                                          ( ("allocator" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MatchDocAllocatorPtr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [482 520]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [467 708])
                                    ("public" label nil (reparse-symbol classsubparts) [710 717])
                                    ("_extendFields" variable
                                       (:default-value "{\"extend1\", \"extend2\"}"
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [722 776])
                                    ("_pool" variable (:type ("autil::mem_pool::Pool" type (:type "class") nil nil)) (reparse-symbol classsubparts) [781 809]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [372 812])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("TableUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [853 867])
                                    ("" variable (:type ("testDeclareExtendVariable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [868 894]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [846 2889])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("TableUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2925 2939])
                                    ("" variable (:type ("testFillExtendFields" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2940 2961]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2918 5580])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("TableUtilTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5589 5603])
                                    ("" variable (:type ("testFillExtendFieldsBatch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5604 5630]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5582 8431]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [352 8435]))                  
                :type "namespace")
                nil [335 8458]))          
      :file "TableUtilTest.cpp"
      :pointmax 8478
      :fsize 8477
      :lastmodtime '(23359 16256 461380 535000)
      :unmatched-syntax '((thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 8478 . 8478) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1031 . 1033) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 1011 . 1014) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 961 . 969) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943) (thing 940 . 943))))
  :file "!ssd!sdd!git!ops!basic_ops_compile!basic_ops!basic_ops!util!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
