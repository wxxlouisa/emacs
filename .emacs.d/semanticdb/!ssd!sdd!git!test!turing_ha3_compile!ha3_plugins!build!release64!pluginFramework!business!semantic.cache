;; Object business/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "business/"
  :tables
  (list
    (semanticdb-table "BitMap.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BitMap.h" include nil nil [1 20])
            ("string.h" include (:system-flag t) nil [21 40])
            ("DistanceUtil.h" include nil nil [41 66])
            ("DistanceDef.h" include nil nil [67 91])
            ("BitMap::BITMASK" variable
               (:dereference 1
                :constant-flag t
                :default-value "{
    0x01, 0x02, 0x04, 0x08,
    0x10, 0x20, 0x40, 0x80
}"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [125 227])
            ("BitMap" function
               (:constructor-flag t
                :parent "BitMap"
                :arguments 
                  ( ("bitNum" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [244 260])
                    ("setBit" variable (:type "bool") (reparse-symbol arg-sub-list) [261 273]))                  
                :type ("BitMap" type (:type "class") nil nil))
                nil [229 537])
            ("BitMap" function
               (:constructor-flag t
                :parent "BitMap"
                :arguments 
                  ( ("bitNum" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [554 570])
                    ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("uint8_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [571 591])
                    ("slotNum" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [592 609]))                  
                :type ("BitMap" type (:type "class") nil nil))
                nil [539 950])
            ("BitMap" function
               (:destructor-flag t
                :parent "BitMap"
                :type "void")
                nil [952 973])
            ("isSet" function
               (:parent "BitMap"
                :arguments 
                  ( ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [994 1007]))                  
                :type "bool")
                nil [975 1286])
            ("setBit" function
               (:parent "BitMap"
                :arguments 
                  ( ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1308 1321]))                  
                :type "void")
                nil [1288 1571])
            ("toString" function
               (:parent "BitMap"
                :arguments 
                  ( ("output" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1595 1615]))                  
                :type "bool")
                nil [1573 2190])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("business" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2211 2220]))                  
                :type "int")
                nil [2192 2221]))          
      :file "BitMap.cpp"
      :pointmax 2222
      :fsize 2221
      :lastmodtime '(23389 9368 556665 807000)
      :unmatched-syntax '((thing 113 . 123) (thing 93 . 113)))
    (semanticdb-table "BitMap.h"
      :file "BitMap.h"
      :fsize 1814
      :lastmodtime '(23389 9368 556665 807000))
    (semanticdb-table "DistanceUtil.h"
      :file "DistanceUtil.h"
      :fsize 6549
      :lastmodtime '(23389 10477 16589 682000))
    (semanticdb-table "DistanceDef.h"
      :file "DistanceDef.h"
      :fsize 445
      :lastmodtime '(23389 9368 557665 769000)))
  :file "!ssd!sdd!git!test!turing_ha3_compile!ha3_plugins!build!release64!pluginFramework!business!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
