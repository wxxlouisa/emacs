;; Object slave/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "slave/"
  :tables
  (list
    (semanticdb-table "AppData.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("slave/AppData.h" include nil nil [1 27])
            ("fslib/fslib.h" include (:system-flag t) nil [28 52])
            ("autil/StringUtil.h" include (:system-flag t) nil [53 82])
            ("util/PathUtil.h" include nil nil [83 109])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [111 131])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [132 154])
            ("fslib" using (:type ("fslib" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [155 177])
            ("USE_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [199 204]))                  
                :type "int")
                nil [179 205])
            ("BEGIN_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("slave" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [228 234]))                  
                :type "int")
                nil [206 235])
            ("HIPPO_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("slave" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [253 259])
                    ("" variable (:type ("AppData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [260 268]))                  
                :type "int")
                nil [237 269])
            ("DATA_RETRY_INTERVAL_MIN" variable (:constant-flag t) nil [279 302])
            ("DATA_RETRY_INTERVAL_MAX" variable (:constant-flag t) nil [331 354])
            ("AppData" function
               (:constructor-flag t
                :parent "AppData"
                :arguments 
                  ( ("appId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [396 421])
                    ("dataName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [422 450])
                    ("dataSrc" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [468 495])
                    ("dataDst" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [496 523])
                    ("appWorkDir" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [542 567])
                    ("dataManagerPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("DataManagerPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [568 605]))                  
                :type ("AppData" type (:type "class") nil nil))
                nil [379 1148])
            ("AppData" function
               (:destructor-flag t
                :parent "AppData"
                :type "void")
                nil [1150 1257])
            ("update" function
               (:parent "AppData"
                :arguments 
                  ( ("dataInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("proto::DataInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1280 1312]))                  
                :type "void")
                nil [1259 2684])
            ("getReferenceCb" function
               (:parent "AppData"
                :type ("RefCallback" type (:type "class") nil nil))
                nil [2686 2744])
            ("cancel" function
               (:parent "AppData"
                :type "void")
                nil [2746 2816])
            ("getStatus" function
               (:parent "AppData"
                :type ("proto::DataStatus::DeployStatus" type (:type "class") nil nil))
                nil [2818 2928])
            ("fillDataStatus" function
               (:parent "AppData"
                :arguments 
                  ( ("dataStatus" variable
                       (:pointer 1
                        :type ("proto::DataStatus" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2959 2989]))                  
                :type "void")
                nil [2930 3451])
            ("changed" function
               (:parent "AppData"
                :arguments 
                  ( ("dataInfo" variable
                       (:reference 1
                        :constant-flag t
                        :type ("proto::DataInfo" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3475 3507]))                  
                :type "bool")
                nil [3453 3592])
            ("monitor" function
               (:parent "AppData"
                :type "void")
                nil [3594 4427])
            ("retryFailed" function
               (:parent "AppData"
                :type "void")
                nil [4429 5093])
            ("genLinkName" function
               (:parent "AppData"
                :type ("string" type (:type "class") nil nil))
                nil [5095 5234])
            ("doCancel" function
               (:parent "AppData"
                :type "void")
                nil [5236 5413])
            ("END_HIPPO_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("slave" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5435 5441]))                  
                :type "int")
                nil [5415 5442]))          
      :file "AppData.cpp"
      :pointmax 5444
      :fsize 5443
      :lastmodtime '(22587 52479 192652 608000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DATA_RETRY_INTERVAL_MAX" . ((semantic-list "(3 * 60 * 1000 * 1000)" 355 . 377)))
          ("DATA_RETRY_INTERVAL_MIN" . ((semantic-list "(10 * 1000 * 1000)" 303 . 321)))
          )
))
  :file "!ssd!sdd!git!hippo!src!slave!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
