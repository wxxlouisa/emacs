;; Object worker/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "worker/"
  :tables
  (list
    (semanticdb-table "HaProtoJsonizer.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/worker/HaProtoJsonizer.h" include (:system-flag t) nil [1 40])
            ("ha3/proto/QrsService.pb.h" include (:system-flag t) nil [41 77])
            ("suez/turing/proto/Search.pb.h" include (:system-flag t) nil [78 118])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [120 140])
            ("google::protobuf" variable (:type "int") nil [159 176])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [177 199])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [200 230])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [231 267])
            ("isearch::proto" using (:type ("isearch::proto" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [268 299])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [321 328]))                  
                :type "int")
                nil [301 329])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [344 351])
                    ("" variable (:type ("HaProtoJsonizer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [352 368]))                  
                :type "int")
                nil [330 369])
            ("HaProtoJsonizer" function
               (:constructor-flag t
                :parent "HaProtoJsonizer"
                :type ("HaProtoJsonizer" type (:type "class") nil nil))
                nil [371 410])
            ("HaProtoJsonizer" function
               (:destructor-flag t
                :parent "HaProtoJsonizer"
                :type "void")
                nil [412 452])
            ("fromJson" function
               (:parent "HaProtoJsonizer"
                :arguments 
                  ( ("jsonStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [485 507])
                    ("message" variable
                       (:pointer 1
                        :type ("Message" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [508 525]))                  
                :type "bool")
                nil [454 1413])
            ("toJson" function
               (:parent "HaProtoJsonizer"
                :arguments 
                  ( ("message" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Message" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1446 1469]))                  
                :type ("string" type (:type "class") nil nil))
                nil [1415 1873])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1893 1900]))                  
                :type "int")
                nil [1875 1901]))          
      :file "HaProtoJsonizer.cpp"
      :pointmax 1903
      :fsize 1902
      :lastmodtime '(23621 34008 0 0)
      :unmatched-syntax '((thing 158 . 159) (thing 141 . 146))))
  :file "!ha3_develop!search_test!temp!source_code!ha3!ha3!worker!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
