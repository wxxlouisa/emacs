;; Object monitor/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "monitor/"
  :tables
  (list
    (semanticdb-table "monitor.h"
      :major-mode 'c++-mode
      :tags 
        '( ("__INDEXLIB_MONITOR_H" variable (:constant-flag t) nil [38 58])
            ("amonitor/client/MetricSampler.h" include (:system-flag t) nil [60 102])
            ("amonitor/client/MetricProvider.h" include (:system-flag t) nil [103 146])
            ("indexlib/monitor/indexlib_metric_control.h" include nil nil [147 200])
            ("amonitor::client::INPUT_METRIC" using (:type ("amonitor::client::INPUT_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [202 239])
            ("amonitor::client::QPS_METRIC" using (:type ("amonitor::client::QPS_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [240 275])
            ("amonitor::client::STATUS_METRIC" using (:type ("amonitor::client::STATUS_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [276 314])
            ("IE_DECLARE_METRIC" variable (:constant-flag t) nil [324 341])
            ("IE_DECLARE_REACHABLE_METRIC" variable (:constant-flag t) nil [451 478])
            ("IE_DECLARE_PARAM_METRIC" variable (:constant-flag t) nil [786 809])
            ("IE_INIT_METRIC_GROUP" variable (:constant-flag t) nil [1557 1577])
            ("IE_REPORT_METRIC" variable (:constant-flag t) nil [2839 2855])
            ("IE_INCREASE_QPS" variable (:constant-flag t) nil [3146 3161]))          
      :file "monitor.h"
      :pointmax 3437
      :fsize 3436
      :lastmodtime '(23410 40783 472941 448000)
      :unmatched-syntax nil
      :lexical-table 
        '(("IE_DECLARE_PARAM_METRIC" (spp-arg-list ("ParamType" "metric") 809 . 828) . 
              ((PUBLIC "public" 836 . 842) (punctuation ":" 842 . 843) (symbol "ParamType" 893 . 902) (spp-symbol-merge ((symbol "m" 903 . 904) (symbol "metric" 906 . 912)) 903 . 912) (punctuation "=" 913 . 914) (number "0" 915 . 916) (punctuation ";" 916 . 917) (symbol "amonitor" 959 . 967) (punctuation ":" 967 . 968) (punctuation ":" 968 . 969) (symbol "client" 969 . 975) (punctuation ":" 975 . 976) (punctuation ":" 976 . 977) (symbol "MetricSampler" 977 . 990) (punctuation "*" 990 . 991) (spp-symbol-merge ((spp-symbol-merge ((symbol "m" 992 . 993) (symbol "metric" 995 . 1001)) 992 . 1001) (symbol "Metric" 1003 . 1009)) 992 . 1009) (punctuation "=" 1010 . 1011) (symbol "nullptr" 1012 . 1019) (punctuation ";" 1019 . 1020) (PUBLIC "public" 1025 . 1031) (punctuation ":" 1031 . 1032) (VOID "void" 1083 . 1087) (spp-symbol-merge ((spp-symbol-merge ((symbol "Increase" 1088 . 1096) (symbol "metric" 1098 . 1104)) 1088 . 1104) (symbol "Value" 1106 . 1111)) 1088 . 1111) (semantic-list "(ParamType incValue)" 1111 . 1131) (semantic-list "{ m##metric += incValue; }" 1141 . 1167) (VOID "void" 1199 . 1203) (spp-symbol-merge ((spp-symbol-merge ((symbol "Decrease" 1204 . 1212) (symbol "metric" 1214 . 1220)) 1204 . 1220) (symbol "Value" 1222 . 1227)) 1204 . 1227) (semantic-list "(ParamType decValue)" 1227 . 1247) (semantic-list "{ m##metric -= decValue; }" 1257 . 1283) (symbol "ParamType" 1315 . 1324) (spp-symbol-merge ((spp-symbol-merge ((symbol "Get" 1325 . 1328) (symbol "metric" 1330 . 1336)) 1325 . 1336) (symbol "Value" 1338 . 1343)) 1325 . 1343) (semantic-list "()" 1343 . 1345) (CONST "const" 1346 . 1351) (semantic-list "{ return m##metric; }" 1373 . 1394) (VOID "void" 1431 . 1435) (spp-symbol-merge ((spp-symbol-merge ((symbol "Set" 1436 . 1439) (symbol "metric" 1441 . 1447)) 1436 . 1447) (symbol "Value" 1449 . 1454)) 1436 . 1454) (semantic-list "(ParamType value)" 1454 . 1471) (semantic-list "{ m##metric = value; }" 1489 . 1511)))
          ("IE_REPORT_METRIC" (spp-arg-list ("metric" "count") 2855 . 2870) . 
              ((DO "do" 2893 . 2895) (semantic-list "{                                                \\
        if ((m##metric##Metric)) {                      \\
            (m##metric##Metric)->reportMetric((count)); \\
        }                                               \\
    }" 2896 . 3126) (WHILE "while" 3127 . 3132) (semantic-list "(0)" 3133 . 3136)))
          ("__INDEXLIB_MONITOR_H")
          ("IE_DECLARE_METRIC" (spp-arg-list ("metric") 341 . 349) . 
              ((symbol "amonitor" 381 . 389) (punctuation ":" 389 . 390) (punctuation ":" 390 . 391) (symbol "client" 391 . 397) (punctuation ":" 397 . 398) (punctuation ":" 398 . 399) (symbol "MetricSampler" 399 . 412) (punctuation "*" 412 . 413) (spp-symbol-merge ((spp-symbol-merge ((symbol "m" 414 . 415) (symbol "metric" 417 . 423)) 414 . 423) (symbol "Metric" 425 . 431)) 414 . 431) (punctuation "=" 432 . 433) (symbol "nullptr" 434 . 441)))
          ("IE_DECLARE_REACHABLE_METRIC" (spp-arg-list ("metric") 478 . 486) . 
              ((symbol "amonitor" 513 . 521) (punctuation ":" 521 . 522) (punctuation ":" 522 . 523) (symbol "client" 523 . 529) (punctuation ":" 529 . 530) (punctuation ":" 530 . 531) (symbol "MetricSampler" 531 . 544) (punctuation "*" 544 . 545) (spp-symbol-merge ((spp-symbol-merge ((symbol "m" 546 . 547) (symbol "metric" 549 . 555)) 546 . 555) (symbol "Metric" 557 . 563)) 546 . 563) (punctuation "=" 564 . 565) (symbol "nullptr" 566 . 573) (punctuation ";" 573 . 574) (PUBLIC "public" 579 . 585) (punctuation ":" 585 . 586) (symbol "amonitor" 645 . 653) (punctuation ":" 653 . 654) (punctuation ":" 654 . 655) (symbol "client" 655 . 661) (punctuation ":" 661 . 662) (punctuation ":" 662 . 663) (symbol "MetricSampler" 663 . 676) (punctuation "*" 676 . 677) (spp-symbol-merge ((spp-symbol-merge ((symbol "Get" 678 . 681) (symbol "metric" 683 . 689)) 678 . 689) (symbol "Metric" 691 . 697)) 678 . 697) (semantic-list "()" 697 . 699) (CONST "const" 700 . 705) (semantic-list "{ return m##metric##Metric; }" 711 . 740)))
          ("IE_INIT_METRIC_GROUP" (spp-arg-list ("metricProvider" "metric" "metricName" "metricType" "unit") 1577 . 1631) . 
              ((DO "do" 1638 . 1640) (semantic-list "{                                                                \\
        m##metric##Metric = NULL;                                       \\
        if (!(metricProvider)) {                                        \\
            break;                                                      \\
        }                                                               \\
        std::string declareMetricName = string(\"indexlib/\") + metricName; \\
        IE_NAMESPACE(monitor)::IndexlibMetricControl::Status status = IE_NAMESPACE(monitor)::IndexlibMetricControl::GetInstance()->Get(declareMetricName); \\
        if (status.prohibit) {                                          \\
            break;                                                      \\
        }                                                               \\
        m##metric##Metric = (metricProvider)->declareMetric(declareMetricName, metricType, unit, \"\", status.gatherId); \\
        if (!m##metric##Metric) {                                       \\
            IE_LOG(ERROR, \"register metric[%s] failed\", declareMetricName.c_str()); \\
        }                                                               \\
    }" 1641 . 2819) (WHILE "while" 2820 . 2825) (semantic-list "(0)" 2826 . 2829)))
          ("IE_INCREASE_QPS" (spp-arg-list ("metric") 3161 . 3169) . 
              ((DO "do" 3195 . 3197) (semantic-list "{                                        \\
        if ((m##metric##Metric)) {              \\
            (m##metric##Metric)->increaseQps(); \\
        }                                       \\
    }" 3198 . 3396) (WHILE "while" 3397 . 3402) (semantic-list "(0)" 3402 . 3405)))
          )
)
    (semanticdb-table "indexlib_metric_control.h"
      :file "indexlib_metric_control.h"
      :fsize 2142
      :lastmodtime '(23410 40783 472941 448000)))
  :file "!ssd!sdd!git!turing_ha3_compile!source_code!indexlib!indexlib!monitor!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
