;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "IGraphClientTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("basic_ops/ops/igraph/IGraphClient.h" include nil nil [32 78])
            ("fslib/fs/FileSystem.h" include nil nil [79 111])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [113 133])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [134 156])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [157 187])
            ("testing" variable (:type "int") nil [206 214])
            ("igraph" using (:type ("igraph" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [215 238])
            ("igraph::client_search" using (:type ("igraph::client_search" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [239 277])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("IGraphClientTest" type
                               (:superclasses 
                                  ( ("TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [316 360])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphClientTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [369 386])
                                    ("" variable (:type ("testInitClientConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [387 408]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [362 1002]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [296 1004]))                  
                :type "namespace")
                nil [279 1006]))          
      :file "IGraphClientTest.cpp"
      :pointmax 1007
      :fsize 1006
      :lastmodtime '(23347 20020 210860 952000)
      :unmatched-syntax '((thing 188 . 193) (thing 205 . 206)))
    (semanticdb-table "IGraphFieldExtractorTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("basic_ops/ops/igraph/IGraphFieldExtractor.h" include nil nil [32 86])
            ("basic_ops/ops/igraph/test/FakeIGraphResult.h" include nil nil [87 142])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [144 164])
            ("testing" variable (:type "int") nil [183 191])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [192 214])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [215 242])
            ("igraph::client_search" using (:type ("igraph::client_search" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [243 281])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("IGraphFieldExtractorTest" type
                               (:superclasses 
                                  ( ("TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [320 372])
                            ("EXTRACT_SINGLE_VALUE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [382 402])
                            ("ASSERT_INT_RESULT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [850 867])
                            ("CHECK_SINGLE_VALUE_INT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [965 987])
                            ("CHECK_SINGLE_VALUE_UINT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1357 1380])
                            ("CHECK_SINGLE_VALUE_DOUBLE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1754 1779])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2800 2825])
                                    ("" variable (:type ("testSingleValue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2826 2842]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2793 3471])
                            ("CHECK_MULTI_VALUE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3481 3498])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5287 5312])
                                    ("" variable (:type ("testMultiValue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5313 5328]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5280 5697]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [300 5699]))                  
                :type "namespace")
                nil [283 5701]))          
      :file "IGraphFieldExtractorTest.cpp"
      :pointmax 5702
      :fsize 5701
      :lastmodtime '(23347 20042 545773 726000)
      :unmatched-syntax '((thing 165 . 170) (thing 182 . 183))
      :lexical-table 
        '(("CHECK_SINGLE_VALUE_UINT" (spp-arg-list ("dtType") 1373 . 1381) . ((semantic-list "{                                                                       \\
        FakeResultPtr result(FakeResult::createResult(\"f1:uint\", \"1#2#3\")); \\
        EXTRACT_SINGLE_VALUE(dtType, result);                               \\
        ASSERT_INT_RESULT();                                                \\
    }" 1424 . 1737)))
          ("CHECK_SINGLE_VALUE_DOUBLE" (spp-arg-list ("dtType") 1772 . 1780) . ((semantic-list "{                                                                         \\
        FakeResultPtr result(FakeResult::createResult(\"f1:double\", \"1#2#3\")); \\
        EXTRACT_SINGLE_VALUE(dtType, result);                                 \\
        if (dtType == DT_FLOAT) {                                             \\
            ASSERT_FLOAT_EQ(1.0, f(0));                                       \\
            ASSERT_FLOAT_EQ(2.0, f(1));                                       \\
            ASSERT_FLOAT_EQ(3.0, f(2));                                       \\
        } else if (dtType == DT_DOUBLE) {                                     \\
            ASSERT_DOUBLE_EQ(1.0, f(0));                                      \\
            ASSERT_DOUBLE_EQ(2.0, f(1));                                      \\
            ASSERT_DOUBLE_EQ(3.0, f(2));                                      \\
        }                                                                     \\
    }" 1823 . 2784)))
          ("CHECK_SINGLE_VALUE_INT" (spp-arg-list ("dtType") 980 . 988) . ((semantic-list "{                                                                      \\
        FakeResultPtr result(FakeResult::createResult(\"f1:int\", \"1#2#3\")); \\
        EXTRACT_SINGLE_VALUE(dtType, result);                              \\
        ASSERT_INT_RESULT();                                               \\
    }" 1031 . 1340)))
          ("ASSERT_INT_RESULT" (spp-arg-list nil 860 . 862) . 
              ((symbol "ASSERT_EQ" 869 . 878) (semantic-list "(1, f(0))" 878 . 887) (punctuation ";" 887 . 888) (symbol "ASSERT_EQ" 899 . 908) (semantic-list "(2, f(1))" 908 . 917) (punctuation ";" 917 . 918) (symbol "ASSERT_EQ" 929 . 938) (semantic-list "(3, f(2))" 938 . 947) (punctuation ";" 947 . 948)))
          ("EXTRACT_SINGLE_VALUE" (spp-arg-list ("dtType" "result") 395 . 411) . 
              ((symbol "Tensor" 457 . 463) (symbol "tensor" 464 . 470) (semantic-list "(dtType, TensorShape({3}))" 470 . 496) (punctuation ";" 496 . 497) (TYPEDEF "typedef" 543 . 550) (symbol "EnumToDataType" 551 . 565) (punctuation "<" 565 . 566) (symbol "dtType" 566 . 572) (punctuation ">" 572 . 573) (punctuation ":" 573 . 574) (punctuation ":" 574 . 575) (symbol "Type" 575 . 579) (symbol "CppType" 580 . 587) (punctuation ";" 587 . 588) (symbol "IGraphFieldExtractorTyped" 629 . 654) (punctuation "<" 654 . 655) (symbol "CppType" 655 . 662) (punctuation ">" 662 . 663) (symbol "extractor" 664 . 673) (punctuation ";" 673 . 674) (symbol "ASSERT_TRUE" 715 . 726) (semantic-list "(extractor.extractFieldSingleToTensor(result.get(), \"f1\", &tensor))" 726 . 793) (punctuation ";" 793 . 794) (symbol "auto" 801 . 805) (symbol "f" 806 . 807) (punctuation "=" 808 . 809) (symbol "tensor" 810 . 816) (punctuation "." 816 . 817) (symbol "flat" 817 . 821) (punctuation "<" 821 . 822) (symbol "CppType" 822 . 829) (punctuation ">" 829 . 830) (semantic-list "()" 830 . 832) (punctuation ";" 832 . 833)))
          ("CHECK_MULTI_VALUE" (spp-arg-list ("ft" "vt") 3491 . 3499) . ((semantic-list "{                                                                                   \\
        FakeResultPtr result(FakeResult::createResult(\"f1:\" #ft, \"1,2,3#4,5,6#7,8,9\")); \\
        Tensor tensor(DT_VARIANT, TensorShape({}));                                     \\
        IGraphFieldExtractorTyped<vt> extractor;                                        \\
        ASSERT_TRUE(extractor.extractFieldMultiToTensor(result.get(), \"f1\", &tensor));  \\
        const Variant &v = tensor.scalar<Variant>()();                                  \\
        const MultiValueVariant *value = v.get<MultiValueVariant>();                    \\
        ASSERT_TRUE(value != NULL);                                                     \\
        for (int i = 0; i < 3; i++) {                                                   \\
            auto mv = value->get<typename TfType2ExprType<vt>::type>(i);                \\
            ASSERT_EQ((size_t)3, mv->size());                                           \\
            for (int j = 0; j < 3; j++) {                                               \\
                if (#ft == string(\"double\")) {                                          \\
                    ASSERT_DOUBLE_EQ((double)(j + 1 + i * 3), (double)((*mv)[j]));      \\
                } else {                                                                \\
                    ASSERT_EQ(j + 1 + i * 3, (*mv)[j]);                                 \\
                }                                                                       \\
            }                                                                           \\
        }                                                                               \\
    }" 3560 . 5271)))
          )
)
    (semanticdb-table "IGraphVisitorTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("string" include (:system-flag t) nil [1 18])
            ("unittest/unittest.h" include (:system-flag t) nil [19 49])
            ("autil/Log.h" include (:system-flag t) nil [50 72])
            ("private" variable (:constant-flag t) nil [81 88])
            ("basic_ops/ops/igraph/IGraphVisitor.h" include nil nil [96 143])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [145 165])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [166 196])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("public" label nil (reparse-symbol namespacesubparts) [260 268])
                            ("testing::Test" variable (:type "int") (reparse-symbol namespacesubparts) [269 457])
                            ("AUTIL_LOG_SETUP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("turing" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [475 482])
                                    ("" variable (:type ("IGraphVisitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [483 501]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [459 502])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphVisitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [511 529])
                                    ("" variable (:type ("TestInitIGraphClientConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [530 557]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [504 2307])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphVisitorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2316 2334])
                                    ("" variable (:type ("TestIGraphQueryConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2335 2357]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2309 5534]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [215 5537]))                  
                :type "namespace")
                nil [198 5539]))          
      :file "IGraphVisitorTest.cpp"
      :pointmax 5540
      :fsize 5539
      :lastmodtime '(23347 20056 24117 710000)
      :unmatched-syntax '((thing 268 . 269) (thing 258 . 259) (thing 240 . 257) (thing 234 . 239))
      :lexical-table 
        '(("private" . ((PUBLIC "public" 89 . 95)))
          )
)
    (semanticdb-table "IGraphAccessOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("basic_ops/ops/test/OpTestBase.h" include nil nil [1 43])
            ("basic_ops/variant/MatchDocsVariant.h" include nil nil [44 91])
            ("basic_ops/ops/igraph/IGraphAccessOp.h" include nil nil [92 140])
            ("basic_ops/ops/igraph/test/MockIGraphVisitor.h" include nil nil [141 197])
            ("autil/StringUtil.h" include (:system-flag t) nil [198 227])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [229 249])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [250 272])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [273 298])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [299 326])
            ("suez" using (:type ("suez" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [327 348])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("IGraphAccessOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [386 435])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphAccessOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [444 463])
                                    ("" variable (:type ("testBadResourceReader" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [464 486]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [437 866])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphAccessOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [875 894])
                                    ("" variable (:type ("testNotExistQueryConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [895 919]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [868 1550])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphAccessOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1559 1578])
                                    ("" variable (:type ("testNotExistClientConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1579 1604]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1552 2234])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphAccessOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2243 2262])
                                    ("" variable (:type ("testInitClientFailed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2263 2284]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2236 2908]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [367 4168]))                  
                :type "namespace")
                nil [350 4170]))          
      :file "IGraphAccessOpTest.cpp"
      :pointmax 4171
      :fsize 4170
      :lastmodtime '(23347 20082 759816 613000)
      :unmatched-syntax nil)
    (semanticdb-table "IGraphFieldExtractOpTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("basic_ops/ops/test/OpTestBase.h" include nil nil [1 43])
            ("basic_ops/ops/igraph/test/FakeIGraphResult.h" include nil nil [44 99])
            ("basic_ops/ops/igraph/IGraphClient.h" include nil nil [100 146])
            ("basic_ops/ops/igraph/IGraphResultMapVariant.h" include nil nil [147 203])
            ("basic_ops/variant/MultiValueVariant.h" include nil nil [204 252])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [254 274])
            ("testing" variable (:type "int") nil [293 301])
            ("tensorflow" variable (:type "int") nil [320 331])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("IGraphFieldExtractOpTest" type
                               (:superclasses 
                                  ( ("OpTestBase" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [423 433])
                                    ("MakeOp" function
                                       (:arguments 
                                          ( ("type" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("DataType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [450 471])
                                            ("tableName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [472 496])
                                            ("fieldName" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [497 521])
                                            ("dtype" variable (:type ("tensorflow::DataType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [538 565])
                                            ("isMulti" variable
                                               (:default-value "false"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [566 586]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [438 1077])
                                    ("private" label nil (reparse-symbol classsubparts) [1078 1086])
                                    ("prepareIGraphResultVariant" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("fieldsStr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1126 1150])
                                            ("str" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1151 1169]))                                          
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1091 1170])
                                    ("private" label nil (reparse-symbol classsubparts) [1172 1180])
                                    ("_resultPtr" variable (:type ("shared_ptr" type
                                         (:template-specifier 
                                            ( ("igraph::client_search::Result" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [1185 1238]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [370 1241])
                            ("prepareIGraphResultVariant" function
                               (:parent "IGraphFieldExtractOpTest"
                                :arguments 
                                  ( ("fieldsStr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1304 1328])
                                    ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1329 1347]))                                  
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1243 1556])
                            ("TEST_SINGLE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1566 1577])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2242 2275])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2277 2312])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2314 2349])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2351 2396])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2399 2435])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2437 2475])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2477 2515])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2517 2565])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_FLOAT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2568 2604])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_DOUBLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2606 2644])
                            ("TEST_MULTI" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2655 2665])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4270 4302])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4304 4338])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4340 4374])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_INT64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4376 4420])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4423 4458])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4460 4497])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4499 4536])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_UINT64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4538 4585])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_FLOAT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4588 4623])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test_multi_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("DT_DOUBLE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4625 4662])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("IGraphFieldExtractOpTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4672 4697])
                                    ("" variable (:type ("testString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4698 4709]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4665 5112]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [350 5114]))                  
                :type "namespace")
                nil [333 5116]))          
      :file "IGraphFieldExtractOpTest.cpp"
      :pointmax 5117
      :fsize 5116
      :lastmodtime '(23347 20124 278796 511000)
      :unmatched-syntax '((thing 275 . 280) (thing 292 . 293) (thing 302 . 307) (thing 319 . 320) (thing 2275 . 2276) (thing 2312 . 2313) (thing 2349 . 2350) (thing 2396 . 2397) (thing 2435 . 2436) (thing 2475 . 2476) (thing 2515 . 2516) (thing 2565 . 2566) (thing 2604 . 2605) (thing 2644 . 2645) (thing 4302 . 4303) (thing 4338 . 4339) (thing 4374 . 4375) (thing 4420 . 4421) (thing 4458 . 4459) (thing 4497 . 4498) (thing 4536 . 4537) (thing 4585 . 4586) (thing 4623 . 4624) (thing 4662 . 4663))
      :lexical-table 
        '(("TEST_SINGLE" (spp-arg-list ("ft" "dt" "ct") 1581 . 1593) . 
              ((symbol "TEST_F" 1640 . 1646) (semantic-list "(IGraphFieldExtractOpTest, test##dt)" 1646 . 1682) (semantic-list "{                        \\
        MakeOp(dt, \"table1\", \"f1\", dt);                                 \\
        Variant variant = prepareIGraphResultVariant(\"f1:\" #ft, \"1#2#3\"); \\
        AddInputFromArray<Variant>(TensorShape({}), {variant});                  \\
        TF_ASSERT_OK(RunOpKernel());                                    \\
        Tensor expected(dt, TensorShape({3}));                          \\
        test::FillValues<ct>(&expected, {1, 2, 3});                     \\
        test::ExpectTensorEqual<ct>(expected, *GetOutput(0));           \\
    }" 1683 . 2244)))
          ("TEST_MULTI" (spp-arg-list ("ft" "dt" "ct") 2669 . 2681) . 
              ((symbol "TEST_F" 2732 . 2738) (semantic-list "(IGraphFieldExtractOpTest, test_multi_##dt)" 2738 . 2781) (semantic-list "{                    \\
        MakeOp(dt, \"table1\", \"f1\", DT_VARIANT, true);                      \\
        Variant variant = prepareIGraphResultVariant(\"f1:\" #ft, \"1,1#2,2#3,3\"); \\
        AddInputFromArray<Variant>(TensorShape({}), {variant});         \\
        TF_ASSERT_OK(RunOpKernel());                                    \\
        Tensor actual = *GetOutput(0);                                     \\
        const Variant &v = actual.scalar<Variant>()();                     \\
        const MultiValueVariant *value = v.get<MultiValueVariant>();       \\
        ASSERT_TRUE(value != NULL);                                        \\
        for (int i = 0; i < 3; i++) {                                      \\
            auto mv = value->get<typename TfType2ExprType<ct>::type>(i);   \\
            ASSERT_EQ((size_t)2, mv->size());                              \\
            for (int j = 0; j < 2; j++) {                                  \\
                if (#ct == string(\"double\")) {                             \\
                    ASSERT_DOUBLE_EQ((double)(i + 1), (double)((*mv)[j])); \\
                } else {                                                   \\
                    ASSERT_EQ(i + 1, (*mv)[j]);                            \\
                }                                                          \\
            }                                                              \\
        }                                                                  \\
    }" 2782 . 4272)))
          )
))
  :file "!ssd!sdd!git!turing_be!basic_ops_compile!basic_ops!build!release64!basic_ops!ops!igraph!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
