;; Object proxy/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "proxy/"
  :tables
  (list
    (semanticdb-table "Merger.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/proxy/Merger.h" include (:system-flag t) nil [1 30])
            ("ha3/search/AttributeExpression.h" include (:system-flag t) nil [31 74])
            ("ha3/proxy/AggFunResultMerger.h" include (:system-flag t) nil [75 116])
            ("ha3/search/Filter.h" include (:system-flag t) nil [117 147])
            ("algorithm" include (:system-flag t) nil [148 168])
            ("assert.h" include (:system-flag t) nil [169 188])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [189 221])
            ("ha3/search/AttributeExpressionFactory.h" include (:system-flag t) nil [222 272])
            ("ha3/proxy/MatchDocDeduper.h" include (:system-flag t) nil [273 311])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [312 332])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [333 365])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [385 392]))                  
                :type "int")
                nil [367 393])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("rank" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [412 417]))                  
                :type "int")
                nil [394 418])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [437 442]))                  
                :type "int")
                nil [419 443])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [462 469]))                  
                :type "int")
                nil [444 470])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("sorter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [489 496]))                  
                :type "int")
                nil [471 497])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [519 525]))                  
                :type "int")
                nil [499 526])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [541 547])
                    ("" variable (:type ("Merger" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [548 555]))                  
                :type "int")
                nil [527 556])
            ("Merger" function
               (:constructor-flag t
                :parent "Merger"
                :type ("Merger" type (:type "class") nil nil))
                nil [558 578])
            ("Merger" function
               (:destructor-flag t
                :parent "Merger"
                :type "void")
                nil [580 601])
            ("mergeResult" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:reference 1
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [628 652])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [678 716])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [742 765])
                    ("sorterWrapper" variable
                       (:pointer 1
                        :type ("SorterWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [791 820])
                    ("sl" variable (:type ("SorterLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [846 864]))                  
                :type "void")
                nil [603 948])
            ("mergeResults" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [976 997])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1024 1062])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1089 1112])
                    ("sorterWrapper" variable
                       (:pointer 1
                        :type ("SorterWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1139 1168])
                    ("sl" variable (:type ("SorterLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1195 1213]))                  
                :type "void")
                nil [950 2064])
            ("mergePhaseOneSearchInfos" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2104 2125])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2164 2202]))                  
                :type "void")
                nil [2066 2735])
            ("mergeMatchDocs" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2765 2786])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2815 2853])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2882 2905])
                    ("sorterWrapper" variable
                       (:pointer 1
                        :type ("SorterWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2934 2963])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [2992 3005])
                    ("sl" variable (:type ("SorterLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3034 3052]))                  
                :type "void")
                nil [2737 6767])
            ("doMergeMatchDocsMeta" function
               (:parent "Merger"
                :arguments 
                  ( ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6839 6877])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [6886 6899])
                    ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6900 6944])
                    ("matchDocVect" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6953 6998])
                    ("sl" variable (:type ("SorterLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7007 7025]))                  
                :type ("Merger::MergeMatchDocResultMeta" type (:type "class") nil nil))
                nil [6769 7974])
            ("mergeAggResults" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8005 8026])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8056 8094])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8124 8147]))                  
                :type "void")
                nil [7976 9377])
            ("mergeOneAggregateResult" function
               (:parent "Merger"
                :arguments 
                  ( ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9439 9472])
                    ("aggOffset" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9473 9490])
                    ("maxGroupCount" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9499 9521])
                    ("groupExprStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9522 9549]))                  
                :type ("AggregateResultPtr" type (:type "class") nil nil))
                nil [9379 11775])
            ("checkAggResults" function
               (:parent "Merger"
                :arguments 
                  ( ("aggClause" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("AggregateClause" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11806 11839])
                    ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11869 11902]))                  
                :type "bool")
                nil [11777 12335])
            ("checkAggResult" function
               (:parent "Merger"
                :arguments 
                  ( ("resultPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12365 12392])
                    ("expectSize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12421 12439]))                  
                :type "bool")
                nil [12337 12759])
            ("mergeCoveredRanges" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [12793 12814])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12847 12885]))                  
                :type "void")
                nil [12761 14453])
            ("mergeGlobalVariables" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14489 14510])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14545 14583]))                  
                :type "void")
                nil [14455 14781])
            ("findFirstNoneEmptyResult" function
               (:parent "Merger"
                :arguments 
                  ( ("results" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14826 14859])
                    ("allMatchDocsSize" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14868 14895]))                  
                :type ("ResultPtr" type (:type "class") nil nil))
                nil [14783 15360])
            ("mergeHits" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15385 15406])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [15430 15468])
                    ("doDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [15492 15505]))                  
                :type "void")
                nil [15362 16274])
            ("mergeErrors" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16301 16322])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16348 16386]))                  
                :type "void")
                nil [16276 16669])
            ("mergeTracer" function
               (:parent "Merger"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16696 16719])
                    ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16745 16766])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResultPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16792 16830]))                  
                :type "void")
                nil [16671 17277])
            ("mergeTracer" function
               (:parent "Merger"
                :arguments 
                  ( ("tracer" variable
                       (:pointer 1
                        :type ("Tracer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17304 17319])
                    ("resultPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17320 17347]))                  
                :type "void")
                nil [17279 17451])
            ("createAggFunResultMerger" function
               (:pointer 1
                :parent "Merger"
                :arguments 
                  ( ("funNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17515 17546])
                    ("allocatorPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17555 17606]))                  
                :type ("AggFunResultMerger" type (:type "class") nil nil))
                nil [17453 18207])
            ("mergeSummary" function
               (:parent "Merger"
                :arguments 
                  ( ("outputResult" variable
                       (:pointer 1
                        :type ("Result" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18239 18260])
                    ("inputResults" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ResultPtrVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18291 18327])
                    ("allowLackOfSummary" variable (:type "bool") (reparse-symbol arg-sub-list) [18358 18382]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [18209 19690])
            ("fillSorterResourceInfo" function
               (:parent "Merger"
                :arguments 
                  ( ("sorterResource" variable
                       (:reference 1
                        :type ("SorterResource" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19728 19759])
                    ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19796 19819])
                    ("topK" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19856 19871])
                    ("exprCreator" variable
                       (:pointer 1
                        :type ("AttributeExpressionCreatorBase" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19908 19952])
                    ("sortExprCreator" variable
                       (:pointer 1
                        :type ("SortExpressionCreator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19989 20028])
                    ("allocator" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Ha3MatchDocAllocatorPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20065 20106])
                    ("dataProvider" variable
                       (:pointer 1
                        :type ("DataProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20143 20170])
                    ("compCreator" variable
                       (:pointer 1
                        :type ("ComparatorCreator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20207 20238])
                    ("globalVariables" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("AttributeItemMapPtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20275 20326])
                    ("pool" variable
                       (:pointer 1
                        :type ("Pool" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20363 20374])
                    ("resultSourceNum" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20411 20436])
                    ("sl" variable (:type ("SorterLocation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20473 20491])
                    ("requestTracer" variable
                       (:pointer 1
                        :type ("Tracer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20528 20550]))                  
                :type "void")
                nil [19692 21409])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21429 21435]))                  
                :type "int")
                nil [21411 21436]))          
      :file "Merger.cpp"
      :pointmax 21437
      :fsize 21436
      :lastmodtime '(23246 47977 562662 703000)
      :unmatched-syntax nil)
    (semanticdb-table "MatchDocDeduper.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/proxy/MatchDocDeduper.h" include (:system-flag t) nil [1 39])
            ("ha3/common/VariableTypeTraits.h" include (:system-flag t) nil [40 82])
            ("ha3/common/CommonDef.h" include (:system-flag t) nil [83 116])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [118 138])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [139 161])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [162 194])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [214 221]))                  
                :type "int")
                nil [196 222])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [243 249]))                  
                :type "int")
                nil [223 250])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [266 272])
                    ("" variable (:type ("MatchDocDeduper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [273 289]))                  
                :type "int")
                nil [252 290])
            ("MatchDocDeduper" function
               (:constructor-flag t
                :parent "MatchDocDeduper"
                :arguments 
                  ( ("allocator" variable
                       (:pointer 1
                        :type ("common::Ha3MatchDocAllocator" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [324 364])
                    ("needDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [398 413]))                  
                :type ("MatchDocDeduper" type (:type "class") nil nil))
                nil [291 494])
            ("MatchDocDeduper" function
               (:destructor-flag t
                :parent "MatchDocDeduper"
                :type "void")
                nil [496 536])
            ("dedup" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [571 614])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [643 691]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [538 2135])
            ("canDedup" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2168 2211]))                  
                :type "bool")
                nil [2137 2286])
            ("noDedupMeger" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2328 2371])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2407 2455]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [2288 2893])
            ("typedDedup" function
               (:template 
                  ( ("PKType" type (:type "class") nil nil))                  
                :type ("ErrorCode" type (:type "class") nil nil)
                :arguments 
                  ( ("toDedup" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("common::MatchDocs" type (:pointer 1) nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2960 3003])
                    ("resultMatchDocs" variable
                       (:reference 1
                        :type ("PoolVector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3037 3085]))                  
                :parent "MatchDocDeduper")
                nil [2895 5034])
            ("mergeMatchDocAllocator" function
               (:parent "MatchDocDeduper"
                :arguments 
                  ( ("matchDocs" variable
                       (:pointer 1
                        :type ("common::MatchDocs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5090 5119])
                    ("matchDocVect" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("matchdoc::MatchDoc" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5128 5169]))                  
                :type "bool")
                nil [5036 5610])
            ("initReference" function
               (:parent "MatchDocDeduper"
                :type "void")
                nil [5612 6028])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6048 6054]))                  
                :type "int")
                nil [6030 6055]))          
      :file "MatchDocDeduper.cpp"
      :pointmax 6057
      :fsize 6056
      :lastmodtime '(23246 47977 561662 703000)
      :unmatched-syntax nil)
    (semanticdb-table "MatchDocDeduper.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MATCHDOCDEDUPER_H" variable (:constant-flag t) nil [43 68])
            ("ha3/common.h" include (:system-flag t) nil [70 93])
            ("ha3/isearch.h" include (:system-flag t) nil [94 118])
            ("ha3/util/Log.h" include (:system-flag t) nil [119 144])
            ("ha3/common/MatchDocs.h" include (:system-flag t) nil [145 178])
            ("ha3/common/ErrorDefine.h" include (:system-flag t) nil [179 214])
            ("autil/mem_pool/PoolVector.h" include (:system-flag t) nil [215 253])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [275 281]))                  
                :type "int")
                nil [255 282])
            ("MatchDocDeduper" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [308 315])
                    ("MatchDocDeduper" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("allocator" variable
                               (:pointer 1
                                :type ("common::Ha3MatchDocAllocator" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [336 376])
                            ("needDedup" variable (:type "bool") (reparse-symbol arg-sub-list) [377 392]))                          
                        :type ("MatchDocDeduper" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [320 393])
                    ("MatchDocDeduper" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [398 417])
                    ("private" label nil (reparse-symbol classsubparts) [418 426])
                    ("MatchDocDeduper" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MatchDocDeduper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [447 471]))                          
                        :type ("MatchDocDeduper" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [431 472])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MatchDocDeduper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [504 528]))                          
                        :type ("MatchDocDeduper" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [477 529])
                    ("public" label nil (reparse-symbol classsubparts) [530 537])
                    ("dedup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("toDedup" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("common::MatchDocs" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [558 606])
                            ("resultMatchDocs" variable
                               (:reference 1
                                :type ("autil::mem_pool::PoolVector" type
                                     (:template-specifier 
                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [622 687]))                          
                        :type ("ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [542 688])
                    ("private" label nil (reparse-symbol classsubparts) [689 697])
                    ("initReference" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [702 723])
                    ("noDedupMeger" function
                       (:prototype-flag t
                        :arguments 
                          ( ("toDedup" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("common::MatchDocs" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [751 799])
                            ("resultMatchDocs" variable
                               (:reference 1
                                :type ("autil::mem_pool::PoolVector" type
                                     (:template-specifier 
                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [822 887]))                          
                        :type ("ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [728 888])
                    ("typedDedup" function
                       (:template 
                          ( ("PKType" type (:type "class") nil nil))                          
                        :type ("ErrorCode" type (:type "class") nil nil)
                        :arguments 
                          ( ("toDedup" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("common::MatchDocs" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [945 993])
                            ("resultMatchDocs" variable
                               (:reference 1
                                :type ("autil::mem_pool::PoolVector" type
                                     (:template-specifier 
                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1019 1084]))                          
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [893 1085])
                    ("canDedup" function
                       (:prototype-flag t
                        :arguments 
                          ( ("toDedup" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("common::MatchDocs" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1104 1152]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1090 1153])
                    ("mergeMatchDocAllocator" function
                       (:prototype-flag t
                        :arguments 
                          ( ("matchDocs" variable
                               (:pointer 1
                                :type ("common::MatchDocs" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1186 1215])
                            ("matchDocVect" variable
                               (:reference 1
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1248 1294]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1158 1295])
                    ("private" label nil (reparse-symbol classsubparts) [1296 1304])
                    ("_allocator" variable
                       (:pointer 1
                        :type ("common::Ha3MatchDocAllocator" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1309 1350])
                    ("_needDedup" variable (:type "bool") (reparse-symbol classsubparts) [1355 1371])
                    ("_clusterIdRef" variable
                       (:pointer 1
                        :type ("matchdoc::Reference" type
                             (:template-specifier 
                                ( ("clusterid_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [1376 1424])
                    ("_fullVersionRef" variable
                       (:pointer 1
                        :type ("matchdoc::Reference" type
                             (:template-specifier 
                                ( ("FullIndexVersion" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [1429 1484])
                    ("_primaryKeyRef" variable
                       (:pointer 1
                        :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1489 1529])
                    ("private" label nil (reparse-symbol classsubparts) [1530 1538])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1543 1561]))                  
                :type "class")
                nil [284 1564])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proxy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1584 1590]))                  
                :type "int")
                nil [1566 1591]))          
      :file "MatchDocDeduper.h"
      :pointmax 1628
      :fsize 1627
      :lastmodtime '(23246 47977 561662 703000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_MATCHDOCDEDUPER_H")
          )
))
  :file "!ssd!sdd!git!ha3!turing_test!sdd!ha3!ha3!proxy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
