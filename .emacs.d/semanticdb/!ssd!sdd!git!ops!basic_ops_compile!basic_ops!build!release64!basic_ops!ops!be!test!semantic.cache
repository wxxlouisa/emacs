;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "BeProxyClosureTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("basic_ops/ops/test/OpTestBase.h" include nil nil [32 74])
            ("basic_ops/ops/be/BeProxyClosure.h" include nil nil [75 119])
            ("suez/turing/search/RemoteResponse.h" include nil nil [120 166])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [167 199])
            ("matchdoc/MatchDocAllocator.h" include nil nil [200 239])
            ("basic_ops/variant/TracerVariant.h" include nil nil [240 284])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [286 306])
            ("testing" variable (:type "int") nil [325 333])
            ("multi_call" using (:type ("multi_call" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [334 361])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [362 387])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [388 415])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [416 438])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("BeProxyClosureTest" type
                               (:superclasses 
                                  ( ("TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [552 562])
                                    ("params" variable (:type ("BeProxyParams" type (:type "class") nil nil)) (reparse-symbol classsubparts) [567 588]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [477 591]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [457 594]))                  
                :type "namespace")
                nil [440 617]))          
      :file "BeProxyClosureTest.cpp"
      :pointmax 637
      :fsize 636
      :lastmodtime '(23364 12632 280968 881000)
      :unmatched-syntax '((thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 637 . 637) (thing 583 . 637) (thing 583 . 637) (thing 583 . 637) (thing 574 . 582) (thing 574 . 582) (thing 574 . 582) (thing 554 . 573) (thing 554 . 573) (thing 554 . 573) (thing 542 . 554) (thing 542 . 554) (thing 542 . 554) (thing 548 . 550) (thing 539 . 547) (thing 540 . 541) (thing 540 . 541) (thing 540 . 541) (thing 529 . 540) (thing 529 . 540) (thing 529 . 540) (thing 536 . 538) (thing 531 . 536) (thing 526 . 530) (thing 528 . 529) (thing 528 . 529) (thing 528 . 529) (thing 522 . 528) (thing 522 . 528) (thing 522 . 528) (thing 324 . 325) (thing 324 . 325) (thing 324 . 325) (thing 324 . 325) (thing 307 . 312) (thing 307 . 312) (thing 307 . 312) (thing 307 . 312)))
    (semanticdb-table "BeProxyRequestGeneratorTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("autil/HashFuncFactory.h" include (:system-flag t) nil [32 66])
            ("tensorflow/core/framework/fake_input.h" include nil nil [67 116])
            ("tensorflow/core/kernels/ops_testutil.h" include nil nil [117 166])
            ("basic_ops/ops/be/BeProxyRequestGenerator.h" include nil nil [167 220])
            ("basic_ops/util/OpUtil.h" include nil nil [221 255])
            ("basic_ops/common/NodeDefine.h" include nil nil [256 296])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [298 318])
            ("testing" variable (:type "int") nil [337 345])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [346 373])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [374 396])
            ("multi_call" using (:type ("multi_call" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [397 424])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("BeProxyRequestGeneratorTest" type
                               (:superclasses 
                                  ( ("TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [517 524]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [463 655])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("BeProxyRequestGeneratorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [664 692])
                                    ("" variable (:type ("testGenerateGraphRequest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [693 718]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [657 2162])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("BeProxyRequestGeneratorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2171 2199])
                                    ("" variable (:type ("testGenerateGraphRequestWithTracer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2200 2235]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2164 3787])
                            ("testSplitTensorHelper" function
                               (:template 
                                  ( ("Type" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("partCnt" variable (:type ("PartIdTy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3841 3858])
                                    ("fromValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("Type" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3859 3889])
                                    ("shape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("int64" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3917 3944])
                                    ("expectValue" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("vector" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3945 3986])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("vector" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4035 4048])
                                    ("" variable (:type ("pair" type
                                         (:template-specifier 
                                            ( ("string" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [4048 4062]))                                  )
                                (reparse-symbol namespacesubparts) [3789 5238])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("BeProxyRequestGeneratorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5247 5275])
                                    ("" variable (:type ("testSingleSplitTensor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5276 5298]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5240 5731])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("BeProxyRequestGeneratorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5740 5768])
                                    ("" variable (:type ("testZoomParams" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5769 5784]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5733 7576]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [443 7578]))                  
                :type "namespace")
                nil [426 7601]))          
      :file "BeProxyRequestGeneratorTest.cpp"
      :pointmax 7621
      :fsize 7544
      :lastmodtime '(23356 18824 555470 164000)
      :unmatched-syntax '((thing 615 . 652) (thing 606 . 614) (thing 603 . 605) (thing 595 . 603) (thing 590 . 594) (thing 551 . 585) (thing 542 . 550) (thing 539 . 541) (thing 534 . 539) (thing 529 . 533) (thing 336 . 337) (thing 319 . 324) (thing 4047 . 4048))))
  :file "!ssd!sdd!git!ops!basic_ops_compile!basic_ops!build!release64!basic_ops!ops!be!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
