;; Object redgreen/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "redgreen/"
  :tables
  (list
    (semanticdb-table "RedGreenFunction.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("RedGreenFunction.h" include nil nil [1 30])
            ("ha3/search/ArgumentAttributeExpression.h" include (:system-flag t) nil [31 82])
            ("math.h" include (:system-flag t) nil [83 100])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("redgreen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [122 131]))                  
                :type "int")
                nil [101 132])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [152 159]))                  
                :type "int")
                nil [134 160])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [179 186]))                  
                :type "int")
                nil [161 187])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("func_expression" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [206 222]))                  
                :type "int")
                nil [188 223])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [242 249]))                  
                :type "int")
                nil [224 250])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [267 276])
                    ("" variable (:type ("RedGreenFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [277 294]))                  
                :type "int")
                nil [252 295])
            ("RedGreenFunction::PARAM_CURRENT_TIME" variable
               (:constant-flag t
                :default-value "\"currenttime\""
                :type ("std::string" type (:type "class") nil nil))
                nil [296 367])
            ("RedGreenFunction::PARAM_START_TIME" variable
               (:constant-flag t
                :default-value "\"starttime\""
                :type ("std::string" type (:type "class") nil nil))
                nil [368 435])
            ("RedGreenFunction::PARAM_END_TIME" variable
               (:constant-flag t
                :default-value "\"endtime\""
                :type ("std::string" type (:type "class") nil nil))
                nil [436 499])
            ("beginRequest" function
               (:parent "RedGreenFunction"
                :arguments 
                  ( ("request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Request" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [537 560])
                    ("dataProvider" variable
                       (:pointer 1
                        :type ("DataProvider" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [561 588]))                  
                :type "bool")
                nil [501 1869])
            ("evaluate" function
               (:parent "RedGreenFunction"
                :arguments 
                  ( ("matchDoc" variable (:type ("matchdoc::MatchDoc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1905 1933]))                  
                :type ("int8_t" type (:type "class") nil nil))
                nil [1871 2843])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2860 2869])
                    ("" variable (:type ("RedGreenFunctionCreatorImpl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2870 2898]))                  
                :type "int")
                nil [2845 2899])
            ("init" function
               (:parent "RedGreenFunctionCreatorImpl"
                :arguments 
                  ( ("funcParameter" variable
                       (:reference 1
                        :constant-flag t
                        :type ("KeyValueMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2939 2973])
                    ("" variable
                       (:constant-flag t
                        :type ("HA3_NS" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3018 3038])
                    ("resourceReader" variable
                       (:reference 1
                        :type ("ResourceReaderPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3040 3075]))                  
                :type "bool")
                nil [2900 3096])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("redgreen" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3117 3126]))                  
                :type "int")
                nil [3098 3127]))          
      :file "RedGreenFunction.cpp"
      :pointmax 3128
      :fsize 3127
      :lastmodtime '(23219 41705 610618 426000)
      :unmatched-syntax '((thing 3030 . 3038) (thing 3038 . 3039) (thing 3039 . 3040))))
  :file "!ssd!sdd!git!ha3!turing!ha3_plugins!pluginFramework!ha3!app!redgreen!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
