;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("WHAT" variable (:default-value ("unix")) nil [645 657])
            ("SHELL" variable (:default-value ("/bin/sh")) nil [657 671])
            ("all" function (:arguments ("all-$(WHAT)")) nil [672 689])
            ("clean" function (:arguments ("clean-$(WHAT)")) nil [690 711])
            ("distclean" function (:arguments ("distclean-$(WHAT)")) nil [712 741])
            ("install" function (:arguments ("install-$(WHAT)")) nil [742 767])
            ("check" function (:arguments ("check-$(WHAT)")) nil [768 789])
            ("install-headers" function (:arguments ("install-headers-$(WHAT)")) nil [790 831])
            ("all-unix" function (:arguments ("all-postrecurse")) nil [1898 1924])
            ("all-postrecurse" function (:arguments ("all-recurse")) nil [1924 1953])
            ("all-recurse" function (:arguments ("all-prerecurse")) nil [1953 1981])
            ("all-prerecurse" function nil nil [1982 1998])
            ("all-postrecurse" function nil nil [1998 2015])
            ("clean-unix" function (:arguments ("clean-postrecurse")) nil [2016 2047])
            ("clean-postrecurse" function (:arguments ("clean-recurse")) nil [2047 2080])
            ("clean-recurse" function (:arguments ("clean-prerecurse")) nil [2080 2112])
            ("clean-prerecurse" function nil nil [2113 2131])
            ("clean-postrecurse" function nil nil [2131 2150])
            ("distclean-unix" function (:arguments ("distclean-postrecurse")) nil [2151 2189])
            ("distclean-postrecurse" function (:arguments ("distclean-recurse")) nil [2189 2230])
            ("distclean-recurse" function (:arguments ("distclean-prerecurse")) nil [2230 2270])
            ("distclean-prerecurse" function nil nil [2271 2293])
            ("distclean-postrecurse" function nil nil [2293 2316])
            ("install-unix" function (:arguments ("install-postrecurse")) nil [2317 2351])
            ("install-postrecurse" function (:arguments ("install-recurse")) nil [2351 2388])
            ("install-recurse" function (:arguments ("install-prerecurse")) nil [2388 2424])
            ("install-prerecurse" function nil nil [2425 2445])
            ("install-postrecurse" function nil nil [2445 2466])
            ("install-headers-unix" function (:arguments ("install-headers-postrecurse")) nil [2467 2517])
            ("install-headers-postrecurse" function (:arguments ("install-headers-recurse")) nil [2517 2570])
            ("install-headers-recurse" function (:arguments ("install-headers-prerecurse")) nil [2570 2622])
            ("install-headers-prerecurse" function nil nil [2623 2651])
            ("install-headers-postrecurse" function nil nil [2651 2680])
            ("check-unix" function (:arguments ("check-postrecurse")) nil [2681 2711])
            ("check-postrecurse" function (:arguments ("check-recurse")) nil [2711 2744])
            ("check-recurse" function (:arguments ("check-prerecurse")) nil [2744 2776])
            ("check-prerecurse" function nil nil [2777 2795])
            ("check-postrecurse" function nil nil [2795 2814])
            ("Makefiles" function (:arguments ("Makefiles-postrecurse")) nil [2815 2848])
            ("Makefiles-postrecurse" function (:arguments ("Makefiles-recurse")) nil [2848 2889])
            ("Makefiles-recurse" function (:arguments ("Makefiles-prerecurse")) nil [2889 2929])
            ("Makefiles-prerecurse" function nil nil [2930 2952])
            ("Makefiles-postrecurse" function nil nil [2952 2975])
            ("generate-files-mac" function (:arguments ("generate-files-mac-postrecurse")) nil [2976 3027])
            ("generate-files-mac-postrecurse" function (:arguments ("generate-files-mac-recurse")) nil [3027 3086])
            ("generate-files-mac-recurse" function (:arguments ("generate-files-mac-prerecurse")) nil [3086 3144])
            ("generate-files-mac-prerecurse" function nil nil [3144 3175])
            ("REL" variable nil nil [3283 3288])
            ("C" variable (:default-value ("./")) nil [3362 3367])
            ("S" variable (:default-value ("/")) nil [3407 3411])
            ("srcdir" variable (:default-value (".")) nil [3414 3425])
            ("top_srcdir" variable (:default-value (".")) nil [3425 3440])
            ("CONFIG_RELTOPDIR" variable (:default-value (".")) nil [3441 3462])
            ("ALL_CFLAGS" variable (:default-value ("$(DEFS)" "$(DEFINES)" "$(KRB_INCLUDES)" "$(LOCALINCLUDES)" "-DKRB5_DEPRECATED=1" "-DKRB5_PRIVATE" "$(CPPFLAGS)" "$(CFLAGS)" "$(WARN_CFLAGS)" "$(PTHREAD_CFLAGS)" "$(ASAN_FLAGS)")) nil [3890 4068])
            ("ALL_CXXFLAGS" variable (:default-value ("$(DEFS)" "$(DEFINES)" "$(KRB_INCLUDES)" "$(LOCALINCLUDES)" "-DKRB5_DEPRECATED=1" "-DKRB5_PRIVATE" "$(CPPFLAGS)" "$(CXXFLAGS)" "$(WARN_CXXFLAGS)" "$(PTHREAD_CFLAGS)" "$(ASAN_FLAGS)")) nil [4068 4255])
            ("CFLAGS" variable (:default-value ("-g" "-O2")) nil [4256 4272])
            ("CXXFLAGS" variable (:default-value ("-g" "-O2")) nil [4272 4290])
            ("WARN_CFLAGS" variable (:default-value ("-Wall" "-Wcast-align" "-Wshadow" "-Wmissing-prototypes" "-Wno-format-zero-length" "-Woverflow" "-Wstrict-overflow" "-Wmissing-format-attribute" "-Wmissing-prototypes" "-Wreturn-type" "-Wmissing-braces" "-Wparentheses" "-Wswitch" "-Wunused-function" "-Wunused-label" "-Wunused-variable" "-Wunused-value" "-Wunknown-pragmas" "-Wsign-compare" "-Werror=uninitialized" "-Werror=pointer-arith" "-Werror=declaration-after-statement" "-Werror-implicit-function-declaration")) nil [4290 4726])
            ("WARN_CXXFLAGS" variable (:default-value ("-Wall" "-Wcast-align" "-Wshadow")) nil [4726 4771])
            ("ASAN_FLAGS" variable nil nil [4771 4785])
            ("PTHREAD_CFLAGS" variable (:default-value ("-pthread")) nil [4785 4811])
            ("PTHREAD_LIBS" variable nil nil [4811 4827])
            ("THREAD_LINKOPTS" variable (:default-value ("$(PTHREAD_CFLAGS)" "$(PTHREAD_LIBS)")) nil [4827 4879])
            ("CPPFLAGS" variable nil nil [4879 4891])
            ("DEFS" variable (:default-value ("-DHAVE_CONFIG_H")) nil [4891 4914])
            ("CC" variable (:default-value ("gcc")) nil [4914 4923])
            ("CXX" variable (:default-value ("g++")) nil [4923 4933])
            ("LD" variable (:default-value ("$(PURE)" "gcc")) nil [4933 4950])
            ("KRB_INCLUDES" variable (:default-value ("-I$(BUILDTOP)/include" "-I$(top_srcdir)/include")) nil [4950 5011])
            ("LDFLAGS" variable nil nil [5011 5022])
            ("LIBS" variable (:default-value ("-lkeyutils" "-lresolv")) nil [5022 5050])
            ("INSTALL" variable (:default-value ("/usr/bin//install" "-c")) nil [5051 5080])
            ("INSTALL_STRIP" variable nil nil [5080 5095])
            ("INSTALL_PROGRAM" variable (:default-value ("${INSTALL}" "$(INSTALL_STRIP)")) nil [5095 5139])
            ("INSTALL_SCRIPT" variable (:default-value ("${INSTALL}")) nil [5139 5165])
            ("INSTALL_DATA" variable (:default-value ("${INSTALL}" "-m" "644")) nil [5165 5196])
            ("INSTALL_SHLIB" variable (:default-value ("$(INSTALL_DATA)")) nil [5196 5226])
            ("INSTALL_SETUID" variable (:default-value ("$(INSTALL)" "$(INSTALL_STRIP)" "-m" "4755" "-o" "root")) nil [5226 5285])
            ("prefix" variable (:default-value ("/usr/local")) nil [5372 5390])
            ("INSTALL_PREFIX" variable (:default-value ("$(prefix)")) nil [5390 5415])
            ("INSTALL_EXEC_PREFIX" variable (:default-value ("${prefix}")) nil [5415 5445])
            ("exec_prefix" variable (:default-value ("${prefix}")) nil [5445 5467])
            ("datarootdir" variable (:default-value ("${prefix}/share")) nil [5467 5495])
            ("datadir" variable (:default-value ("${datarootdir}")) nil [5496 5521])
            ("EXAMPLEDIR" variable (:default-value ("$(datadir)/examples/krb5")) nil [5521 5559])
            ("KRB5MANROOT" variable (:default-value ("${datarootdir}/man")) nil [5560 5593])
            ("ADMIN_BINDIR" variable (:default-value ("${exec_prefix}/sbin")) nil [5593 5628])
            ("SERVER_BINDIR" variable (:default-value ("${exec_prefix}/sbin")) nil [5628 5664])
            ("CLIENT_BINDIR" variable (:default-value ("${exec_prefix}/bin")) nil [5664 5698])
            ("PKGCONFIG_DIR" variable (:default-value ("${exec_prefix}/lib/pkgconfig")) nil [5698 5743])
            ("ADMIN_MANDIR" variable (:default-value ("$(KRB5MANROOT)/man8")) nil [5743 5778])
            ("SERVER_MANDIR" variable (:default-value ("$(KRB5MANROOT)/man8")) nil [5778 5814])
            ("CLIENT_MANDIR" variable (:default-value ("$(KRB5MANROOT)/man1")) nil [5814 5850])
            ("FILE_MANDIR" variable (:default-value ("$(KRB5MANROOT)/man5")) nil [5850 5884])
            ("ADMIN_CATDIR" variable (:default-value ("$(KRB5MANROOT)/cat8")) nil [5884 5919])
            ("SERVER_CATDIR" variable (:default-value ("$(KRB5MANROOT)/cat8")) nil [5919 5955])
            ("CLIENT_CATDIR" variable (:default-value ("$(KRB5MANROOT)/cat1")) nil [5955 5991])
            ("FILE_CATDIR" variable (:default-value ("$(KRB5MANROOT)/cat5")) nil [5991 6025])
            ("KRB5_LIBDIR" variable (:default-value ("${exec_prefix}/lib")) nil [6025 6058])
            ("KRB5_INCDIR" variable (:default-value ("${prefix}/include")) nil [6058 6090])
            ("MODULE_DIR" variable (:default-value ("${exec_prefix}/lib/krb5/plugins")) nil [6090 6135])
            ("KRB5_DB_MODULE_DIR" variable (:default-value ("$(MODULE_DIR)/kdb")) nil [6135 6174])
            ("KRB5_PA_MODULE_DIR" variable (:default-value ("$(MODULE_DIR)/preauth")) nil [6174 6217])
            ("KRB5_AD_MODULE_DIR" variable (:default-value ("$(MODULE_DIR)/authdata")) nil [6217 6261])
            ("KRB5_LIBKRB5_MODULE_DIR" variable (:default-value ("$(MODULE_DIR)/libkrb5")) nil [6261 6309])
            ("KRB5_TLS_MODULE_DIR" variable (:default-value ("$(MODULE_DIR)/tls")) nil [6309 6349])
            ("KRB5_LOCALEDIR" variable (:default-value ("${datarootdir}/locale")) nil [6349 6388])
            ("GSS_MODULE_DIR" variable (:default-value ("${exec_prefix}/lib/gss")) nil [6388 6428])
            ("KRB5_INCSUBDIRS" variable (:default-value ("$(KRB5_INCDIR)/kadm5" "$(KRB5_INCDIR)/krb5" "$(KRB5_INCDIR)/gssapi" "$(KRB5_INCDIR)/gssrpc")) nil [6428 6543])
            ("SKIPTESTS" variable (:default-value ("$(BUILDTOP)/skiptests")) nil [6650 6684])
            ("TESTDIR" variable (:default-value ("$(BUILDTOP)/kadmin/testing")) nil [6684 6722])
            ("STESTDIR" variable (:default-value ("$(top_srcdir)/kadmin/testing")) nil [6722 6762])
            ("ENV_SETUP" variable (:default-value ("$(TESTDIR)/scripts/env-setup.sh")) nil [6762 6806])
            ("CLNTTCL" variable (:default-value ("$(TESTDIR)/util/kadm5_clnt_tcl")) nil [6806 6848])
            ("SRVTCL" variable (:default-value ("$(TESTDIR)/util/kadm5_srv_tcl")) nil [6848 6888])
            ("host" variable (:default-value ("x86_64-pc-linux-gnu")) nil [7068 7093])
            ("DEJAFLAGS" variable (:default-value ("--debug" "--srcdir" "$(srcdir)" "--host" "$(host)")) nil [7093 7147])
            ("RUNTEST" variable (:default-value ("runtest" "$(DEJAFLAGS)")) nil [7147 7179])
            ("RUNPYTEST" variable (:default-value ("PYTHONPATH=$(top_srcdir)/util" "VALGRIND=\"$(VALGRIND)\"" "$(PYTHON)")) nil [7180 7260])
            ("START_SERVERS" variable (:default-value ("$(STESTDIR)/scripts/start_servers" "$(TEST_SERVER)" "$(TEST_PATH)")) nil [7261 7339])
            ("START_SERVERS_LOCAL" variable (:default-value ("$(STESTDIR)/scripts/start_servers_local")) nil [7339 7401])
            ("STOP_SERVERS" variable (:default-value ("$(STESTDIR)/scripts/stop_servers" "$(TEST_SERVER)" "$(TEST_PATH)")) nil [7402 7478])
            ("STOP_SERVERS_LOCAL" variable (:default-value ("$(STESTDIR)/scripts/stop_servers_local")) nil [7478 7538])
            ("transform" variable (:default-value ("s,x,x,")) nil [7591 7610])
            ("RM" variable (:default-value ("rm" "-f")) nil [7611 7622])
            ("CP" variable (:default-value ("cp")) nil [7622 7630])
            ("MV" variable (:default-value ("mv" "-f")) nil [7630 7641])
            ("RANLIB" variable (:default-value ("ranlib")) nil [7641 7657])
            ("AWK" variable (:default-value ("gawk")) nil [7657 7668])
            ("YACC" variable (:default-value ("bison" "-y")) nil [7668 7684])
            ("PERL" variable (:default-value ("perl")) nil [7684 7696])
            ("PYTHON" variable (:default-value ("python")) nil [7696 7712])
            ("AUTOCONF" variable (:default-value ("autoconf")) nil [7712 7732])
            ("AUTOCONFFLAGS" variable nil nil [7732 7748])
            ("AUTOHEADER" variable (:default-value ("autoheader")) nil [7748 7772])
            ("AUTOHEADERFLAGS" variable nil nil [7772 7790])
            ("MOVEIFCHANGED" variable (:default-value ("$(top_srcdir)/config/move-if-changed")) nil [7790 7843])
            ("TOPLIBD" variable (:default-value ("$(BUILDTOP)/lib")) nil [7844 7870])
            ("OBJEXT" variable (:default-value ("o")) nil [7871 7882])
            ("EXEEXT" variable nil nil [7882 7891])
            ("CC_LINK" variable (:default-value ("$(CC)" "$(PROG_LIBPATH)" "$(PROG_RPATH_FLAGS)" "$(CFLAGS)" "$(LDFLAGS)" "$(ASAN_FLAGS)")) nil [8129 8214])
            ("CXX_LINK" variable (:default-value ("$(CXX)" "$(PROG_LIBPATH)" "$(PROG_RPATH_FLAGS)" "$(CXXFLAGS)" "$(LDFLAGS)" "$(ASAN_FLAGS)")) nil [8214 8303])
            ("PROG_LIBPATH" variable (:default-value ("-L$(TOPLIBD)")) nil [8533 8559])
            ("PROG_RPATH" variable (:default-value ("$(KRB5_LIBDIR)")) nil [8559 8585])
            ("SHLIB_DIRS" variable (:default-value ("-L$(TOPLIBD)")) nil [8802 8826])
            ("SHLIB_RDIRS" variable (:default-value ("$(KRB5_LIBDIR)")) nil [8826 8853])
            ("STOBJLISTS" variable (:default-value ("OBJS.ST")) nil [8962 8981])
            ("RPATH_FLAG" variable (:default-value ("-Wl,--enable-new-dtags" "-Wl,-rpath" "-Wl,")) nil [9035 9085])
            ("PROG_RPATH_FLAGS" variable (:default-value ("$(RPATH_FLAG)$(PROG_RPATH)")) nil [9130 9174])
            ("DEPLIBEXT" variable (:default-value (".so")) nil [9303 9317])
            ("KDB5_PLUGIN_DEPLIBS" variable nil nil [9318 9341])
            ("KDB5_PLUGIN_LIBS" variable nil nil [9341 9361])
            ("KADMCLNT_DEPLIB" variable (:default-value ("$(TOPLIBD)/libkadm5clnt_mit$(DEPLIBEXT)")) nil [9362 9420])
            ("KADMSRV_DEPLIB" variable (:default-value ("$(TOPLIBD)/libkadm5srv_mit$(DEPLIBEXT)")) nil [9420 9476])
            ("KDB5_DEPLIB" variable (:default-value ("$(TOPLIBD)/libkdb5$(DEPLIBEXT)")) nil [9476 9521])
            ("GSSRPC_DEPLIB" variable (:default-value ("$(TOPLIBD)/libgssrpc$(DEPLIBEXT)")) nil [9521 9570])
            ("GSS_DEPLIB" variable (:default-value ("$(TOPLIBD)/libgssapi_krb5$(DEPLIBEXT)")) nil [9570 9621])
            ("KRB5_DEPLIB" variable (:default-value ("$(TOPLIBD)/libkrb5$(DEPLIBEXT)")) nil [9621 9666])
            ("CRYPTO_DEPLIB" variable (:default-value ("$(TOPLIBD)/libk5crypto$(DEPLIBEXT)")) nil [9666 9717])
            ("COM_ERR_DEPLIB" variable (:default-value ("$(COM_ERR_DEPLIB-k5)")) nil [9717 9755])
            ("COM_ERR_DEPLIB-sys" variable nil nil [9755 9784])
            ("COM_ERR_DEPLIB-intlsys" variable nil nil [9784 9817])
            ("COM_ERR_DEPLIB-k5" variable (:default-value ("$(TOPLIBD)/libcom_err$(DEPLIBEXT)")) nil [9817 9871])
            ("SUPPORT_LIBNAME" variable (:default-value ("krb5support")) nil [9871 9899])
            ("SUPPORT_DEPLIB" variable (:default-value ("$(TOPLIBD)/lib$(SUPPORT_LIBNAME)$(DEPLIBEXT)")) nil [9899 9961])
            ("SS_DEPLIB" variable (:default-value ("$(SS_DEPLIB-k5)")) nil [10047 10075])
            ("SS_DEPLIB-k5" variable (:default-value ("$(TOPLIBD)/libss.a")) nil [10075 10109])
            ("SS_DEPLIB-sys" variable nil nil [10109 10125])
            ("APPUTILS_DEPLIB" variable (:default-value ("$(TOPLIBD)/libapputils.a")) nil [10125 10168])
            ("KRB5_BASE_DEPLIBS" variable (:default-value ("$(KRB5_DEPLIB)" "$(CRYPTO_DEPLIB)" "$(COM_ERR_DEPLIB)" "$(SUPPORT_DEPLIB)")) nil [10169 10257])
            ("KDB5_DEPLIBS" variable (:default-value ("$(KDB5_DEPLIB)" "$(KDB5_PLUGIN_DEPLIBS)")) nil [10257 10311])
            ("GSS_DEPLIBS" variable (:default-value ("$(GSS_DEPLIB)")) nil [10311 10340])
            ("GSSRPC_DEPLIBS" variable (:default-value ("$(GSSRPC_DEPLIB)" "$(GSS_DEPLIBS)")) nil [10340 10390])
            ("KADM_COMM_DEPLIBS" variable (:default-value ("$(GSSRPC_DEPLIBS)" "$(KDB5_DEPLIBS)" "$(GSSRPC_DEPLIBS)")) nil [10390 10462])
            ("KADMSRV_DEPLIBS" variable (:default-value ("$(KADMSRV_DEPLIB)" "$(KDB5_DEPLIBS)" "$(KADM_COMM_DEPLIBS)")) nil [10462 10536])
            ("KADMCLNT_DEPLIBS" variable (:default-value ("$(KADMCLNT_DEPLIB)" "$(KADM_COMM_DEPLIBS)")) nil [10536 10595])
            ("COM_ERR_VERSION" variable (:default-value ("k5")) nil [10768 10789])
            ("COM_ERR_DEPS" variable (:default-value ("$(COM_ERR_DEPS-k5)")) nil [10789 10823])
            ("COM_ERR_DEPS-sys" variable nil nil [10823 10842])
            ("COM_ERR_DEPS-intlsys" variable nil nil [10842 10865])
            ("COM_ERR_DEPS-k5" variable (:default-value ("$(BUILDTOP)/include/com_err.h")) nil [10865 10913])
            ("SS_VERSION" variable (:default-value ("k5")) nil [10913 10929])
            ("SS_DEPS" variable (:default-value ("$(SS_DEPS-k5)")) nil [10929 10954])
            ("SS_DEPS-sys" variable nil nil [10954 10968])
            ("SS_DEPS-k5" variable (:default-value ("$(BUILDTOP)/include/ss/ss.h" "$(BUILDTOP)/include/ss/ss_err.h")) nil [10968 11041])
            ("VERTO_VERSION" variable (:default-value ("sys")) nil [11041 11061])
            ("VERTO_DEPS" variable (:default-value ("$(VERTO_DEPS-sys)")) nil [11061 11092])
            ("VERTO_DEPS-sys" variable nil nil [11092 11109])
            ("VERTO_DEPS-k5" variable (:default-value ("$(BUILDTOP)/include/verto.h")) nil [11109 11153])
            ("GEN_LIB" variable nil nil [11245 11257])
            ("RL_CFLAGS" variable nil nil [11302 11315])
            ("RL_LIBS" variable nil nil [11315 11327])
            ("SS_LIB" variable (:default-value ("$(SS_LIB-k5)")) nil [11328 11351])
            ("SS_LIB-sys" variable nil nil [11351 11365])
            ("SS_LIB-k5" variable (:default-value ("$(TOPLIBD)/libss.a" "$(RL_LIBS)")) nil [11365 11407])
            ("KDB5_LIB" variable (:default-value ("-lkdb5" "$(KDB5_PLUGIN_LIBS)")) nil [11407 11445])
            ("VERTO_DEPLIB" variable (:default-value ("$(VERTO_DEPLIB-sys)")) nil [11446 11481])
            ("VERTO_DEPLIB-sys" variable nil nil [11481 11508])
            ("VERTO_DEPLIB-k5" variable (:default-value ("$(TOPLIBD)/libverto$(DEPLIBEXT)")) nil [11508 11558])
            ("VERTO_CFLAGS" variable nil nil [11558 11575])
            ("VERTO_LIBS" variable (:default-value ("-lverto")) nil [11575 11598])
            ("DL_LIB" variable (:default-value ("-ldl")) nil [11599 11614])
            ("CMOCKA_LIBS" variable nil nil [11615 11630])
            ("LDAP_LIBS" variable nil nil [11630 11643])
            ("KRB5_LIB" variable (:default-value ("-lkrb5")) nil [11644 11664])
            ("K5CRYPTO_LIB" variable (:default-value ("-lk5crypto")) nil [11664 11692])
            ("COM_ERR_LIB" variable (:default-value ("-lcom_err")) nil [11692 11718])
            ("GSS_KRB5_LIB" variable (:default-value ("-lgssapi_krb5")) nil [11718 11749])
            ("SUPPORT_LIB" variable (:default-value ("-l$(SUPPORT_LIBNAME)")) nil [11749 11786])
            ("HESIOD_LIBS" variable nil nil [11816 11831])
            ("KRB5_BASE_LIBS" variable (:default-value ("$(KRB5_LIB)" "$(K5CRYPTO_LIB)" "$(COM_ERR_LIB)" "$(SUPPORT_LIB)" "$(GEN_LIB)" "$(LIBS)" "$(DL_LIB)")) nil [11832 11936])
            ("KDB5_LIBS" variable (:default-value ("$(KDB5_LIB)" "$(GSSRPC_LIBS)")) nil [11936 11975])
            ("GSS_LIBS" variable (:default-value ("$(GSS_KRB5_LIB)")) nil [11975 12002])
            ("GSSRPC_LIBS" variable (:default-value ("-lgssrpc" "$(GSS_LIBS)")) nil [12043 12078])
            ("KADM_COMM_LIBS" variable (:default-value ("$(GSSRPC_LIBS)")) nil [12078 12110])
            ("KADMSRV_LIBS" variable (:default-value ("-lkadm5srv_mit" "$(HESIOD_LIBS)" "$(KDB5_LIBS)" "$(KADM_COMM_LIBS)")) nil [12150 12226])
            ("KADMCLNT_LIBS" variable (:default-value ("-lkadm5clnt_mit" "$(KADM_COMM_LIBS)")) nil [12226 12276])
            ("APPUTILS_LIB" variable (:default-value ("-lapputils")) nil [12392 12418])
            ("RUN_SETUP" variable (:default-value ("LD_LIBRARY_PATH=`echo $(PROG_LIBPATH) | sed -e \"s/-L//g\" -e \"s/ /:/g\"`")) nil [12492 12573])
            ("RUN_VARS" variable (:default-value ("LD_LIBRARY_PATH")) nil [12573 12598])
            ("RUN_TEST" variable (:default-value ("$(RUN_SETUP)" "KRB5_CONFIG=$(top_srcdir)/config-files/krb5.conf" "LC_ALL=C" "$(VALGRIND)")) nil [12785 12883])
            ("TCL_LIBS" variable nil nil [12914 12926])
            ("TCL_LIBPATH" variable nil nil [12926 12941])
            ("TCL_RPATH" variable nil nil [12941 12954])
            ("TCL_MAYBE_RPATH" variable nil nil [12954 12973])
            ("TCL_INCLUDES" variable nil nil [12973 12989])
            ("CRYPTO_IMPL" variable (:default-value ("builtin")) nil [13028 13050])
            ("PRNG_ALG" variable (:default-value ("fortuna")) nil [13050 13069])
            ("PKINIT_CRYPTO_IMPL" variable (:default-value ("openssl")) nil [13119 13149])
            ("PKINIT_CRYPTO_IMPL_CFLAGS" variable nil nil [13149 13178])
            ("PKINIT_CRYPTO_IMPL_LIBS" variable (:default-value ("-lcrypto")) nil [13178 13214])
            ("TLS_IMPL" variable (:default-value ("openssl")) nil [13246 13265])
            ("TLS_IMPL_CFLAGS" variable nil nil [13265 13284])
            ("TLS_IMPL_LIBS" variable (:default-value ("-lssl" "-lcrypto")) nil [13284 13315])
            ("HAVE_SASL" variable nil nil [13379 13392])
            ("HAVE_RESOLV_WRAPPER" variable (:default-value ("0")) nil [13451 13475])
            ("COMPILE_ET" variable (:default-value ("$(COMPILE_ET-k5)")) nil [13577 13606])
            ("COMPILE_ET-sys" variable (:default-value ("compile_et")) nil [13606 13633])
            ("COMPILE_ET-intlsys" variable (:default-value ("compile_et" "--textdomain" "mit-krb5")) nil [13633 13686])
            ("COMPILE_ET-k5" variable (:default-value ("$(BUILDTOP)/util/et/compile_et" "-d" "$(top_srcdir)/util/et" "--textdomain" "mit-krb5")) nil [13686 13782])
            (".SUFFIXES" function (:arguments (".h" ".c" ".et" ".ct")) nil [13783 13809])
            (".et.h" function nil nil [14193 14335])
            (".et.c" function nil nil [14335 14477])
            (".SUFFIXES" function (:arguments (".cpp" ".c" ".o")) nil [14508 14530])
            (".c.o" function nil nil [14530 14563])
            (".cpp.o" function nil nil [14730 14768])
            ("MAKE_COMMANDS" variable (:default-value ("$(MAKE_COMMANDS-k5)")) nil [14796 14831])
            ("MAKE_COMMANDS-sys" variable (:default-value ("mk_cmds")) nil [14831 14858])
            ("MAKE_COMMANDS-k5" variable (:default-value ("$(BUILDTOP)/util/ss/mk_cmds")) nil [14858 14904])
            (".ct.c" function nil nil [14905 14933])
            ("LN_S" variable (:default-value ("ln" "-s")) nil [15313 15324])
            ("AR" variable (:default-value ("ar")) nil [15324 15330])
            ("LIBLIST" variable (:default-value ("lib$(LIBBASE)$(SHLIBEXT)" "lib$(LIBBASE)$(SHLIBSEXT)")) nil [15475 15534])
            ("LIBLINKS" variable (:default-value ("$(TOPLIBD)/lib$(LIBBASE)$(SHLIBEXT)" "$(TOPLIBD)/lib$(LIBBASE)$(SHLIBVEXT)" "$(TOPLIBD)/lib$(LIBBASE)$(SHLIBSEXT)")) nil [15602 15721])
            ("PLUGIN" variable (:default-value ("$(LIBBASE)$(DYNOBJEXT)")) nil [15794 15824])
            ("PLUGINLINK" variable (:default-value ("../$(PLUGIN)")) nil [15897 15921])
            ("LIBINSTLIST" variable (:default-value ("install-shlib-soname")) nil [15980 16013])
            ("PLUGININST" variable (:default-value ("install-plugin")) nil [16049 16075])
            ("STLIBEXT" variable (:default-value (".a")) nil [16223 16235])
            ("SHLIBVEXT" variable (:default-value (".so.$(LIBMAJOR).$(LIBMINOR)")) nil [16274 16312])
            ("SHLIBSEXT" variable (:default-value (".so.$(LIBMAJOR)")) nil [16375 16401])
            ("SHLIBEXT" variable (:default-value (".so")) nil [16416 16429])
            ("PFLIBEXT" variable (:default-value ("_p.a")) nil [16445 16459])
            ("DYNOBJEXT" variable (:default-value ("$(SHLIBEXT)")) nil [16462 16484])
            ("MAKE_DYNOBJ_COMMAND" variable (:default-value ("$(MAKE_SHLIB_COMMAND)")) nil [16484 16526])
            ("DYNOBJ_EXPDEPS" variable (:default-value ("$(SHLIB_EXPDEPS)")) nil [16526 16558])
            ("DYNOBJ_EXPFLAGS" variable (:default-value ("$(SHLIB_EXPFLAGS)")) nil [16558 16592])
            ("UNDEF_CHECK" variable (:default-value ("-Wl,--no-undefined")) nil [16731 16762])
            ("SHLIB_EXPORT_FILE" variable (:default-value ("$(srcdir)/$(LIBPREFIX)$(LIBBASE).exports")) nil [16860 16919])
            ("SHLIB_EXPORT_FILE_DEP" variable (:default-value ("binutils.versions")) nil [17103 17143])
            ("EXPORT_CHECK_CMD" variable (:default-value ("&&" "$(PERL)" "-w" "$(top_srcdir)/util/export-check.pl" "$(SHLIB_EXPORT_FILE)" "$@")) nil [17257 17352])
            ("EXPORT_CHECK" variable nil nil [17352 17389])
            ("MAKE_SHLIB_COMMAND" variable (:default-value ("$(CC)" "-shared" "-fPIC" "-Wl,-h,$(LIBPREFIX)$(LIBBASE)$(SHLIBSEXT)" "$(UNDEF_CHECK)" "-o" "$@" "$$objlist" "$(SHLIB_EXPFLAGS)" "$(LDFLAGS)" "-Wl,--version-script" "binutils.versions" "$(EXPORT_CHECK)")) nil [17563 17759])
            ("SHLIB_RPATH_FLAGS" variable (:default-value ("$(RPATH_FLAG)$(SHLIB_RDIRS)")) nil [17849 17895])
            ("SHLIB_EXPFLAGS" variable (:default-value ("$(SHLIB_RPATH_FLAGS)" "$(SHLIB_DIRS)" "$(SHLIB_EXPLIBS)")) nil [18021 18088])
            ("OBJLISTS" variable (:default-value ("OBJS.SH")) nil [18273 18290])
            ("SHLIBOBJS" variable (:default-value ("$(STLIBOBJS:.o=.so)")) nil [18415 18445])
            ("PFLIBOBJS" variable (:default-value ("$(STLIBOBJS:.o=.po)")) nil [18445 18475])
            ("PICFLAGS" variable (:default-value ("-fPIC")) nil [18526 18541])
            ("PROFFLAGS" variable (:default-value ("-pg")) nil [18541 18555])
            ("EXTRA_FILES" variable nil nil [18620 18633])
            ("VALGRIND" variable nil nil [18634 18644])
            ("VALGRIND_LOGDIR" variable (:default-value ("`cd $(BUILDTOP)&&pwd`")) nil [18748 18788])
            ("VALGRIND1" variable (:default-value ("valgrind" "--tool=memcheck" "--log-file=$(VALGRIND_LOGDIR)/vg.%p" "--trace-children=yes" "--leak-check=yes" "--suppressions=`cd $(top_srcdir)&&pwd`/util/valgrind-suppressions")) nil [18788 18965])
            ("OFFLINE" variable (:default-value ("no")) nil [19294 19305])
            ("PYTESTFLAGS" variable nil nil [19340 19353])
            ("datadir" variable (:default-value ("${datarootdir}")) nil [19435 19458])
            ("mydir" variable (:default-value (".")) nil [19459 19467])
            ("BUILDTOP" variable (:default-value ("$(REL).")) nil [20142 20159])
            ("SRCS" variable nil nil [20160 20169])
            ("HDRS" variable nil nil [20169 20177])
            ("generate-files-mac-prerecurse" function (:arguments ("update-autoconf-h")) nil [20590 20654])
            ("all-prerecurse" function (:arguments ("update-autoconf-h")) nil [20590 20654])
            ("update-autoconf-h" function nil nil [20654 20718])
            ("config.status" function (:arguments ("$(top_srcdir)/config/shlib.conf")) nil [20803 20850])
            ("all-windows" function (:arguments ("maybe-awk" "Makefile-windows")) nil [20865 20905])
            ("world" function nil nil [20906 20945])
            ("INSTALLMKDIRS" variable (:default-value ("$(KRB5ROOT)" "$(KRB5MANROOT)" "$(KRB5OTHERMKDIRS)" "$(ADMIN_BINDIR)" "$(SERVER_BINDIR)" "$(CLIENT_BINDIR)" "$(ADMIN_MANDIR)" "$(SERVER_MANDIR)" "$(CLIENT_MANDIR)" "$(FILE_MANDIR)" "$(ADMIN_CATDIR)" "$(SERVER_CATDIR)" "$(CLIENT_CATDIR)" "$(FILE_CATDIR)" "$(KRB5_LIBDIR)" "$(KRB5_INCDIR)" "$(KRB5_DB_MODULE_DIR)" "$(KRB5_PA_MODULE_DIR)" "$(KRB5_AD_MODULE_DIR)" "$(KRB5_LIBKRB5_MODULE_DIR)" "$(KRB5_TLS_MODULE_DIR)" "${prefix}/var" "${prefix}/var/krb5kdc" "${prefix}/var/run" "${prefix}/var/run/krb5kdc" "$(KRB5_INCSUBDIRS)" "$(datadir)" "$(EXAMPLEDIR)" "$(PKGCONFIG_DIR)")) nil [20946 21527])
            ("install-strip" function nil nil [21528 21577])
            ("install-recurse" function (:arguments ("install-mkdirs")) nil [21578 21610])
            ("install-mkdirs" function nil nil [21611 21717])
            ("install-headers-mkdirs" function nil nil [21718 21927])
            ("install-headers-prerecurse" function (:arguments ("install-headers-mkdirs")) nil [21927 21978])
            ("clean-" function (:arguments ("clean-windows")) nil [21979 22002])
            ("clean-unix" function nil nil [22002 22041])
            ("config-windows" function (:arguments ("Makefile-windows")) nil [22082 22115])
            ("clean-windows" function (:arguments ("Makefile-windows")) nil [31109 31142])
            ("ren2long" function nil nil [31211 31242])
            ("TOPLEVEL" variable (:default-value ("dummy")) nil [31278 31293])
            ("AWK" variable (:default-value ("awk")) nil [31336 31346])
            ("AH" variable (:default-value ("util/et/et_h.awk")) nil [31346 31369])
            ("AC" variable (:default-value ("util/et/et_c.awk")) nil [31369 31392])
            ("INC" variable (:default-value ("include/")) nil [31392 31407])
            ("ET" variable (:default-value ("lib/krb5/error_tables/")) nil [31407 31436])
            ("GG" variable (:default-value ("lib/gssapi/generic/")) nil [31436 31462])
            ("GK" variable (:default-value ("lib/gssapi/krb5/")) nil [31462 31485])
            ("PR" variable (:default-value ("util/profile/")) nil [31485 31505])
            ("CE" variable (:default-value ("util/et/")) nil [31505 31520])
            ("CCL" variable (:default-value ("ccapi/lib/")) nil [31520 31537])
            ("ETOUT" variable (:default-value ("$(INC)asn1_err.h" "$(ET)asn1_err.c" "$(INC)kdb5_err.h" "$(ET)kdb5_err.c" "$(INC)krb5_err.h" "$(ET)krb5_err.c" "$(INC)k5e1_err.h" "$(ET)k5e1_err.c" "$(INC)kv5m_err.h" "$(ET)kv5m_err.c" "$(INC)krb524_err.h" "$(ET)krb524_err.c" "$(PR)prof_err.h" "$(PR)prof_err.c" "$(GG)gssapi_err_generic.h" "$(GG)gssapi_err_generic.c" "$(GK)gssapi_err_krb5.h" "$(GK)gssapi_err_krb5.c" "$(CCL)ccapi_err.h" "$(CCL)ccapi_err.c")) nil [31538 31944])
            ("HOUT" variable (:default-value ("$(INC)krb5/krb5.h" "$(GG)gssapi.h" "$(PR)profile.h")) nil [31945 31999])
            ("CLEANUP" variable (:default-value ("Makefile" "$(ETOUT)" "$(HOUT)" "include/profile.h" "include/osconf.h")) nil [32000 32073])
            ("dos-Makefile" function nil nil [32075 32228])
            ("prep-windows" function (:arguments ("dos-Makefile" "awk-windows-mac")) nil [32229 32272])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)asn1_err.et")) nil [32274 32360])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)kdb5_err.et")) nil [32360 32446])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)krb5_err.et")) nil [32446 32532])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)k5e1_err.et")) nil [32532 32618])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)kv5m_err.et")) nil [32618 32704])
            ("$(INC)" function (:arguments ("$(AH)" "$(ET)krb524_err.et")) nil [32704 32796])
            ("$(PR)" function (:arguments ("$(AH)" "$(PR)prof_err.et")) nil [32796 32881])
            ("$(GG)" function (:arguments ("$(AH)" "$(GG)gssapi_err_generic.et")) nil [32881 32996])
            ("$(GK)" function (:arguments ("$(AH)" "$(GK)gssapi_err_krb5.et")) nil [32996 33102])
            ("$(CCL)" function (:arguments ("$(AH)" "$(CCL)ccapi_err.et")) nil [33102 33193])
            ("$(CE)" function (:arguments ("$(AH)" "$(CE)test1.et")) nil [33193 33269])
            ("$(CE)" function (:arguments ("$(AH)" "$(CE)test2.et")) nil [33269 33345])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)asn1_err.et")) nil [33346 33431])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)kdb5_err.et")) nil [33431 33516])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)krb5_err.et")) nil [33516 33601])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)k5e1_err.et")) nil [33601 33686])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)kv5m_err.et")) nil [33686 33771])
            ("$(ET)" function (:arguments ("$(AC)" "$(ET)krb524_err.et")) nil [33771 33862])
            ("$(PR)" function (:arguments ("$(AC)" "$(PR)prof_err.et")) nil [33862 33947])
            ("$(GG)" function (:arguments ("$(AC)" "$(GG)gssapi_err_generic.et")) nil [33947 34062])
            ("$(GK)" function (:arguments ("$(AC)" "$(GK)gssapi_err_krb5.et")) nil [34062 34168])
            ("$(CCL)" function (:arguments ("$(AC)" "$(CCL)ccapi_err.et")) nil [34168 34259])
            ("$(CE)" function (:arguments ("$(AC)" "$(CE)test1.et")) nil [34259 34335])
            ("$(CE)" function (:arguments ("$(AC)" "$(CE)test2.et")) nil [34335 34411])
            ("KRBHDEP" variable (:default-value ("$(INC)krb5/krb5.hin" "$(INC)krb5_err.h" "$(INC)k5e1_err.h" "$(INC)kdb5_err.h" "$(INC)kv5m_err.h" "$(INC)krb524_err.h" "$(INC)asn1_err.h")) nil [34412 34549])
            ("$(INC)" function (:arguments ("$(KRBHDEP)")) nil [34550 34611])
            ("$(PR)" function (:arguments ("$(PR)profile.hin" "$(PR)prof_err.h")) nil [34611 34713])
            ("$(GG)" function (:arguments ("$(GG)gssapi.hin")) nil [34713 34780])
            ("awk-windows-mac" function (:arguments ("$(ETOUT)" "$(HOUT)")) nil [34781 34815])
            ("clean-windows-mac" function nil nil [35023 35060])
            ("distclean-windows" function nil nil [35061 35235])
            ("install-windows" function nil nil [35324 37655])
            ("check-prerecurse" function (:arguments ("runenv.py")) nil [40054 40122])
            ("check-unix" function nil nil [40123 40153])
            ("check-pytests-no" function (:arguments ("check-postrecurse")) nil [40154 40277])
            ("check-cmocka-no" function (:arguments ("check-postrecurse")) nil [40278 40401])
            ("testrealm" function (:arguments ("runenv.py")) nil [40583 40689])
            ("pyrunenv.vals" function (:arguments ("Makefile")) nil [40758 40971])
            ("runenv.py" function (:arguments ("pyrunenv.vals")) nil [40972 41044])
            ("clean-unix" function nil nil [41045 41100])
            ("COV_BUILD" variable (:default-value ("cov-build")) nil [41101 41122])
            ("COV_ANALYZE" variable (:default-value ("cov-analyze")) nil [41122 41147])
            ("COV_COMMIT" variable (:default-value ("cov-commit-defects" "--product" "\"$(COV_PRODUCT)\"" "--user" "\"$(COV_USER)\"" "--target" "\"$(COV_TARGET)\"" "--description" "\"$(COV_DESC)\"")) nil [41147 41279])
            ("COV_MAKE_LIB" variable (:default-value ("cov-make-library")) nil [41279 41310])
            ("COV_PRODUCT" variable (:default-value ("krb5")) nil [41311 41329])
            ("COV_USER" variable (:default-value ("admin")) nil [41329 41345])
            ("COV_DATADIR" variable nil nil [41345 41358])
            ("COV_TARGET" variable (:default-value ("$(host)")) nil [41358 41378])
            ("COV_DESC" variable nil nil [41378 41388])
            ("COV_ANALYSES" variable nil nil [41430 41444])
            ("COV_TEMPDIR" variable (:default-value ("cov-temp")) nil [41507 41529])
            ("COV_MODELS" variable (:default-value ("$(top_srcdir)/util/coverity-models/threads.c")) nil [41592 41651])
            ("prevent" function (:arguments ("Makefiles")) nil [41767 42094])
            ("coverity" function (:arguments ("Makefiles")) nil [41767 42094])
            ("FIND" variable (:default-value ("find")) nil [42095 42107])
            ("XARGS" variable (:default-value ("xargs")) nil [42107 42121])
            ("EMACS" variable (:default-value ("emacs")) nil [42121 42135])
            ("PYTHON" variable (:default-value ("python")) nil [42135 42151])
            ("BSDFILES" variable (:default-value ("kadmin/cli/strftime.c" "kadmin/server/ipropd_svc.c" "kadmin/server/kadm_rpc_svc.c" "lib/apputils/daemon.c" "lib/kadm5/admin_xdr.h" "lib/kadm5/clnt/client_rpc.c" "lib/kadm5/kadm_rpc.h" "lib/kadm5/kadm_rpc_xdr.c" "lib/kadm5/srv/adb_xdr.c" "lib/krb5/krb/strftime.c" "lib/krb5/krb/strptime.c" "slave/kpropd_rpc.c" "util/support/getopt.c" "util/support/getopt_long.c" "util/support/mkstemp.c" "util/support/strlcpy.c")) nil [42343 42784])
            ("OTHEREXCLUDES" variable (:default-value ("include/iprop.h" "include/k5-platform.h" "include/gssrpc" "lib/apputils/dummy.c" "lib/crypto/crypto_tests/camellia-test.c" "lib/crypto/builtin/aes" "lib/crypto/builtin/camellia" "lib/crypto/builtin/sha2" "lib/gssapi/generic/gssapiP_generic.h" "lib/gssapi/generic/gssapi_ext.h" "lib/gssapi/krb5/gssapiP_krb5.h" "lib/gssapi/mechglue" "lib/gssapi/spnego" "lib/krb5/krb/deltat.c" "lib/krb5/unicode" "plugins/kdb/db2/libdb2" "plugins/kdb/db2/pol_xdr.c" "plugins/kdb/ldap/libkdb_ldap/princ_xdr.c" "plugins/kdb/ldap/libkdb_ldap/princ_xdr.h" "plugins/preauth/pkinit/pkcs11.h" "plugins/preauth/pkinit/pkinit_accessor.h" "plugins/preauth/pkinit/pkinit_crypto.h" "plugins/preauth/pkinit/pkinit.h" "plugins/preauth/pkinit/pkinit_crypto_openssl.h" "tests/asn.1/ktest.h" "tests/asn.1/ktest_equal.h" "tests/asn.1/utility.h" "tests/gss-threads/gss-misc.c" "tests/gss-threads/gss-misc.h" "tests/hammer/kdc5_hammer.c" "util/et/com_err.h" "util/profile/prof_int.h" "util/profile/profile.hin" "util/profile/profile_tcl.c" "util/support/fnmatch.c" "util/verto" "util/k5ev" "util/wshelper")) nil [42785 43908])
            ("EXCLUDES" variable (:default-value ("`for i in $(BSDFILES) $(OTHEREXCLUDES); do echo $$i; done | $(AWK) '{ print \"-path\", $$1, \"-o\" }'`" "-path" "/dev/null")) nil [43909 44035])
            ("FIND_REINDENT" variable (:default-value ("cd" "$(top_srcdir)" "&&" "$(FIND)" "$(INDENTDIRS)" "\\( $(EXCLUDES) \\)" "-prune" "-o" "\\( -name '*.[ch]' -o -name '*.hin' -o -name '*.[ch].in' \\)")) nil [44036 44187])
            ("show-reindentfiles" function nil nil [44188 44235])
            ("reindent" function nil nil [44236 44371])
            ("mark-cstyle" function (:arguments ("mark-cstyle-krb5" "mark-cstyle-bsd")) nil [44372 44418])
            ("mark-cstyle-krb5" function nil nil [44419 44608])
            ("mark-cstyle-bsd" function nil nil [44609 44742])
            ("check-copyright" function nil nil [44743 44895])
            ("tags" function (:arguments ("FORCE")) nil [44896 45144])
            ("FORCE" function nil nil [45144 45151])
            (".PHONY" function (:arguments ("FORCE" "tags")) nil [45151 45170])
            ("distclean-unix" function nil nil [45171 45213])
            ("all" function nil nil [45373 45378])
            ("check-windows" function nil nil [45379 45394])
            ("depend" function (:arguments ("depend-postrecurse")) nil [45453 45480])
            ("depend-postrecurse" function (:arguments ("depend-recurse")) nil [45480 45515])
            ("depend-recurse" function (:arguments ("depend-prerecurse")) nil [45515 45549])
            ("depend-prerecurse" function nil nil [45550 45569])
            ("depend-postrecurse" function nil nil [45569 45589])
            ("depend-postrecurse" function (:arguments ("depend-update-makefile")) nil [45590 45633])
            ("ALL_DEP_SRCS" variable (:default-value ("$(SRCS)" "$(EXTRADEPSRCS)")) nil [45634 45672])
            ("$(BUILDTOP)" function nil nil [45774 46393])
            ("$(BUILDTOP)" function (:arguments ("depend-verify-et-$(COM_ERR_VERSION)")) nil [46393 46460])
            ("depend-verify-et-k5" function nil nil [46460 46592])
            ("depend-verify-et-intlsys" function nil nil [46592 46717])
            ("depend-verify-et-sys" function nil nil [46592 46717])
            ("$(BUILDTOP)" function (:arguments ("depend-verify-ss-$(SS_VERSION)")) nil [46717 46779])
            ("depend-verify-ss-k5" function nil nil [46779 46911])
            ("depend-verify-ss-sys" function nil nil [46911 47011])
            ("$(BUILDTOP)" function (:arguments ("depend-verify-verto-$(VERTO_VERSION)")) nil [47011 47082])
            ("depend-verify-verto-k5" function nil nil [47082 47223])
            ("depend-verify-verto-sys" function nil nil [47223 47386])
            ("$(BUILDTOP)" function (:arguments ("depend-verify-gcc-yes")) nil [47386 47440])
            ("depend-verify-gcc-yes" function nil nil [47440 47576])
            ("depend-verify-gcc-no" function nil nil [47576 47741])
            ("DEP_CFG_VERIFY" variable (:default-value ("$(BUILDTOP)/.depend-verify-srcdir" "$(BUILDTOP)/.depend-verify-et" "$(BUILDTOP)/.depend-verify-ss" "$(BUILDTOP)/.depend-verify-verto")) nil [47742 47892])
            ("DEP_VERIFY" variable (:default-value ("$(DEP_CFG_VERIFY)" "$(BUILDTOP)/.depend-verify-gcc")) nil [47892 47954])
            (".d" function (:arguments ("$(ALL_DEP_SRCS)" "$(DEP_CFG_VERIFY)" "depend-dependencies")) nil [47955 48136])
            ("depend-dependencies" function nil nil [48264 48285])
            (".dtmp" function (:arguments ("$(ALL_DEP_SRCS)")) nil [48473 48540])
            (".depend" function (:arguments (".d" "$(top_srcdir)/util/depfix.pl")) nil [48734 48897])
            ("depend-update-makefile" function (:arguments (".depend" "depend-recurse")) nil [49070 49536])
            ("DEPTARGETS" variable (:default-value (".depend" ".d" ".dtmp" "$(DEP_VERIFY)")) nil [49537 49581])
            ("DEPTARGETS_CLEAN" variable (:default-value (".depend" ".d" ".dtmp" "$(DEPTARGETS_._.)")) nil [49581 49635])
            ("DEPTARGETS_._." variable (:default-value ("$(DEP_VERIFY)")) nil [49635 49666])
            ("undepend" function (:arguments ("undepend-postrecurse")) nil [49802 49833])
            ("undepend-recurse" function nil nil [49833 49851])
            ("undepend-postrecurse" function (:arguments ("undepend-recurse")) nil [49851 50288])
            ("check-unix" function (:arguments ("check-pytests-yes")) nil [50366 50396])
            ("check-pytests-yes" function (:arguments ("check-pytests")) nil [50470 50503])
            ("check-pytests-no" function nil nil [50503 50521])
            ("check-pytests" function nil nil [50521 50536])
            ("check-unix" function (:arguments ("check-cmocka-no")) nil [50552 50580])
            ("check-cmocka-yes" function (:arguments ("check-cmocka")) nil [50581 50612])
            ("check-cmocka-no" function nil nil [50612 50629])
            ("check-cmocka" function nil nil [50629 50643])
            ("clean" function (:arguments ("clean-$(WHAT)")) nil [50644 50665])
            ("clean-unix" function nil nil [50666 50791])
            ("clean-windows" function nil nil [50792 50849])
            ("distclean" function (:arguments ("distclean-$(WHAT)")) nil [50850 50879])
            ("distclean-normal-clean" function nil nil [50880 50934])
            ("distclean-prerecurse" function (:arguments ("distclean-normal-clean")) nil [50934 50979])
            ("distclean-nuke-configure-state" function nil nil [50979 51065])
            ("distclean-postrecurse" function (:arguments ("distclean-nuke-configure-state")) nil [51065 51119])
            ("Makefiles-prerecurse" function (:arguments ("Makefile")) nil [51120 51151])
            ("Makefile" function (:arguments ("$(srcdir)/Makefile.in" "$(srcdir)/deps" "$(BUILDTOP)/config.status" "$(top_srcdir)/config/pre.in" "$(top_srcdir)/config/post.in")) nil [51202 51398])
            ("$(BUILDTOP)" function (:arguments ("$(top_srcdir)/configure")) nil [51398 51503])
            ("$(top_srcdir)" function nil nil [51503 51707])
            ("RECURSE_TARGETS" variable (:default-value ("all-recurse" "clean-recurse" "distclean-recurse" "install-recurse" "generate-files-mac-recurse" "check-recurse" "depend-recurse" "undepend-recurse" "Makefiles-recurse" "install-headers-recurse")) nil [51708 51908])
            ("$(RECURSE_TARGETS)" function nil nil [52365 53045]))          
      :file "Makefile"
      :pointmax 53128
      :fsize 53127
      :lastmodtime '(22877 64214 720928 425000)
      :unmatched-syntax '((thing 42337 . 42341) (thing 42328 . 42333) (thing 42319 . 42324) (thing 42306 . 42315) (thing 42295 . 42302) (thing 42283 . 42291) (thing 42272 . 42279) (thing 42259 . 42268) (thing 42245 . 42255) (thing 42231 . 42241) (thing 42215 . 42227) (thing 42208 . 42211) (thing 42198 . 42204) (thing 42187 . 42194) (thing 42176 . 42183) (thing 42168 . 42172) (thing 42163 . 42164) (thing 42152 . 42162) (thing 42152 . 42152) (thing 39971 . 40052) (thing 39970 . 39970) (thing 39888 . 39969) (thing 39887 . 39887) (thing 39805 . 39886) (thing 39804 . 39804) (thing 39722 . 39803) (thing 39721 . 39721) (thing 39637 . 39720) (thing 39636 . 39636) (thing 39558 . 39635) (thing 39557 . 39557) (thing 39479 . 39556) (thing 39478 . 39478) (thing 39402 . 39477) (thing 39401 . 39401) (thing 39307 . 39400) (thing 39306 . 39306) (thing 39237 . 39305) (thing 39236 . 39236) (thing 39167 . 39235) (thing 39166 . 39166) (thing 39097 . 39165) (thing 39096 . 39096) (thing 39027 . 39095) (thing 39026 . 39026) (thing 38955 . 39025) (thing 38954 . 38954) (thing 38889 . 38953) (thing 38888 . 38888) (thing 38823 . 38887) (thing 38822 . 38822) (thing 38759 . 38821) (thing 38758 . 38758) (thing 38677 . 38757) (thing 38676 . 38676) (thing 38610 . 38675) (thing 38609 . 38609) (thing 38521 . 38608) (thing 38520 . 38520) (thing 38445 . 38519) (thing 38444 . 38444) (thing 38364 . 38443) (thing 38363 . 38363) (thing 38296 . 38362) (thing 38295 . 38295) (thing 38228 . 38294) (thing 38227 . 38227) (thing 38150 . 38226) (thing 38149 . 38149) (thing 38085 . 38148) (thing 38084 . 38084) (thing 38020 . 38083) (thing 38019 . 38019) (thing 37955 . 38018) (thing 37954 . 37954) (thing 37879 . 37939) (thing 37878 . 37878) (thing 37817 . 37877) (thing 37816 . 37816) (thing 37742 . 37815) (thing 37741 . 37741) (thing 37680 . 37740) (thing 37679 . 37679) (thing 24173 . 24181) (thing 24172 . 24173) (thing 24164 . 24172) (thing 24163 . 24164) (thing 24158 . 24163) (thing 24157 . 24158) (thing 24150 . 24157) (thing 24138 . 24146) (thing 24137 . 24138) (thing 24132 . 24137) (thing 24131 . 24132) (thing 24124 . 24131) (thing 24115 . 24123) (thing 24114 . 24115) (thing 24106 . 24114) (thing 24105 . 24106) (thing 24098 . 24105) (thing 24086 . 24094) (thing 24085 . 24086) (thing 24077 . 24085) (thing 24076 . 24077) (thing 24069 . 24076) (thing 24060 . 24068) (thing 24059 . 24060) (thing 24053 . 24059) (thing 24052 . 24053) (thing 24045 . 24052) (thing 24033 . 24041) (thing 24032 . 24033) (thing 24026 . 24032) (thing 24025 . 24026) (thing 24018 . 24025) (thing 24009 . 24017) (thing 24008 . 24009) (thing 24005 . 24008) (thing 24004 . 24005) (thing 23997 . 24004) (thing 23985 . 23993) (thing 23984 . 23985) (thing 23981 . 23984) (thing 23980 . 23981) (thing 23973 . 23980) (thing 23964 . 23972) (thing 23963 . 23964) (thing 23956 . 23963) (thing 23944 . 23952) (thing 23943 . 23944) (thing 23935 . 23943) (thing 23934 . 23935) (thing 23930 . 23934) (thing 23918 . 23926) (thing 23917 . 23918) (thing 23910 . 23917) (thing 23909 . 23910) (thing 23905 . 23909) (thing 23893 . 23901) (thing 23892 . 23893) (thing 23885 . 23892) (thing 23884 . 23885) (thing 23880 . 23884) (thing 23868 . 23876) (thing 23867 . 23868) (thing 23860 . 23867) (thing 23859 . 23860) (thing 23852 . 23859) (thing 23851 . 23852) (thing 23847 . 23851) (thing 23838 . 23846) (thing 23837 . 23838) (thing 23830 . 23837) (thing 23829 . 23830) (thing 23825 . 23829) (thing 23816 . 23824) (thing 23815 . 23816) (thing 23813 . 23815) (thing 23812 . 23813) (thing 23808 . 23812) (thing 23796 . 23804) (thing 23795 . 23796) (thing 23791 . 23795) (thing 23779 . 23787) (thing 23778 . 23779) (thing 23771 . 23778) (thing 23770 . 23771) (thing 23766 . 23770) (thing 23765 . 23766) (thing 23762 . 23765) (thing 23750 . 23758) (thing 23749 . 23750) (thing 23743 . 23749) (thing 23742 . 23743) (thing 23738 . 23742) (thing 23737 . 23738) (thing 23734 . 23737) (thing 23722 . 23730) (thing 23721 . 23722) (thing 23716 . 23721) (thing 23715 . 23716) (thing 23711 . 23715) (thing 23710 . 23711) (thing 23707 . 23710) (thing 23698 . 23706) (thing 23697 . 23698) (thing 23695 . 23697) (thing 23694 . 23695) (thing 23690 . 23694) (thing 23689 . 23690) (thing 23686 . 23689) (thing 23674 . 23682) (thing 23673 . 23674) (thing 23670 . 23673) (thing 23669 . 23670) (thing 23665 . 23669) (thing 23664 . 23665) (thing 23661 . 23664) (thing 23649 . 23657) (thing 23648 . 23649) (thing 23642 . 23648) (thing 23641 . 23642) (thing 23637 . 23641) (thing 23636 . 23637) (thing 23633 . 23636) (thing 23621 . 23629) (thing 23620 . 23621) (thing 23608 . 23620) (thing 23607 . 23608) (thing 23603 . 23607) (thing 23602 . 23603) (thing 23599 . 23602) (thing 23587 . 23595) (thing 23586 . 23587) (thing 23581 . 23586) (thing 23580 . 23581) (thing 23574 . 23580) (thing 23573 . 23574) (thing 23569 . 23573) (thing 23568 . 23569) (thing 23565 . 23568) (thing 23553 . 23561) (thing 23552 . 23553) (thing 23546 . 23552) (thing 23545 . 23546) (thing 23541 . 23545) (thing 23540 . 23541) (thing 23537 . 23540) (thing 23528 . 23536) (thing 23527 . 23528) (thing 23522 . 23527) (thing 23521 . 23522) (thing 23517 . 23521) (thing 23516 . 23517) (thing 23513 . 23516) (thing 23501 . 23509) (thing 23500 . 23501) (thing 23496 . 23500) (thing 23495 . 23496) (thing 23492 . 23495) (thing 23480 . 23488) (thing 23479 . 23480) (thing 23473 . 23479) (thing 23472 . 23473) (thing 23466 . 23472) (thing 23465 . 23466) (thing 23462 . 23465) (thing 23450 . 23458) (thing 23449 . 23450) (thing 23441 . 23449) (thing 23440 . 23441) (thing 23434 . 23440) (thing 23433 . 23434) (thing 23430 . 23433) (thing 23421 . 23429) (thing 23420 . 23421) (thing 23416 . 23420) (thing 23415 . 23416) (thing 23409 . 23415) (thing 23408 . 23409) (thing 23405 . 23408) (thing 23393 . 23401) (thing 23392 . 23393) (thing 23385 . 23392) (thing 23384 . 23385) (thing 23378 . 23384) (thing 23377 . 23378) (thing 23374 . 23377) (thing 23365 . 23373) (thing 23364 . 23365) (thing 23358 . 23364) (thing 23357 . 23358) (thing 23354 . 23357) (thing 23342 . 23350) (thing 23341 . 23342) (thing 23329 . 23341) (thing 23328 . 23329) (thing 23322 . 23328) (thing 23321 . 23322) (thing 23318 . 23321) (thing 23306 . 23314) (thing 23305 . 23306) (thing 23301 . 23305) (thing 23300 . 23301) (thing 23293 . 23300) (thing 23292 . 23293) (thing 23286 . 23292) (thing 23285 . 23286) (thing 23282 . 23285) (thing 23273 . 23281) (thing 23272 . 23273) (thing 23268 . 23272) (thing 23267 . 23268) (thing 23260 . 23267) (thing 23259 . 23260) (thing 23253 . 23259) (thing 23252 . 23253) (thing 23249 . 23252) (thing 23237 . 23245) (thing 23236 . 23237) (thing 23223 . 23236) (thing 23222 . 23223) (thing 23215 . 23222) (thing 23214 . 23215) (thing 23208 . 23214) (thing 23207 . 23208) (thing 23204 . 23207) (thing 23192 . 23200) (thing 23191 . 23192) (thing 23188 . 23191) (thing 23187 . 23188) (thing 23180 . 23187) (thing 23179 . 23180) (thing 23173 . 23179) (thing 23172 . 23173) (thing 23169 . 23172) (thing 23160 . 23168) (thing 23159 . 23160) (thing 23151 . 23159) (thing 23150 . 23151) (thing 23143 . 23150) (thing 23142 . 23143) (thing 23136 . 23142) (thing 23135 . 23136) (thing 23132 . 23135) (thing 23120 . 23128) (thing 23119 . 23120) (thing 23116 . 23119) (thing 23115 . 23116) (thing 23108 . 23115) (thing 23107 . 23108) (thing 23101 . 23107) (thing 23100 . 23101) (thing 23097 . 23100) (thing 23088 . 23096) (thing 23087 . 23088) (thing 23084 . 23087) (thing 23083 . 23084) (thing 23076 . 23083) (thing 23075 . 23076) (thing 23069 . 23075) (thing 23068 . 23069) (thing 23065 . 23068) (thing 23053 . 23061) (thing 23052 . 23053) (thing 23040 . 23052) (thing 23039 . 23040) (thing 23032 . 23039) (thing 23031 . 23032) (thing 23025 . 23031) (thing 23024 . 23025) (thing 23021 . 23024) (thing 23009 . 23017) (thing 23008 . 23009) (thing 23005 . 23008) (thing 23004 . 23005) (thing 22997 . 23004) (thing 22996 . 22997) (thing 22990 . 22996) (thing 22989 . 22990) (thing 22986 . 22989) (thing 22977 . 22985) (thing 22976 . 22977) (thing 22969 . 22976) (thing 22968 . 22969) (thing 22962 . 22968) (thing 22961 . 22962) (thing 22958 . 22961) (thing 22946 . 22954) (thing 22945 . 22946) (thing 22942 . 22945) (thing 22941 . 22942) (thing 22935 . 22941) (thing 22934 . 22935) (thing 22931 . 22934) (thing 22922 . 22930) (thing 22921 . 22922) (thing 22915 . 22921) (thing 22914 . 22915) (thing 22911 . 22914) (thing 22902 . 22910) (thing 22901 . 22902) (thing 22898 . 22901) (thing 22886 . 22894) (thing 22885 . 22886) (thing 22878 . 22885) (thing 22866 . 22874) (thing 22865 . 22866) (thing 22858 . 22865) (thing 22857 . 22858) (thing 22850 . 22857) (thing 22838 . 22846) (thing 22837 . 22838) (thing 22830 . 22837) (thing 22829 . 22830) (thing 22822 . 22829) (thing 22813 . 22821) (thing 22812 . 22813) (thing 22805 . 22812) (thing 22804 . 22805) (thing 22797 . 22804) (thing 22785 . 22793) (thing 22784 . 22785) (thing 22780 . 22784) (thing 22779 . 22780) (thing 22772 . 22779) (thing 22763 . 22771) (thing 22762 . 22763) (thing 22755 . 22762) (thing 22754 . 22755) (thing 22747 . 22754) (thing 22735 . 22743) (thing 22734 . 22735) (thing 22729 . 22734) (thing 22728 . 22729) (thing 22721 . 22728) (thing 22712 . 22720) (thing 22711 . 22712) (thing 22706 . 22711) (thing 22705 . 22706) (thing 22698 . 22705) (thing 22686 . 22694) (thing 22685 . 22686) (thing 22677 . 22685) (thing 22676 . 22677) (thing 22669 . 22676) (thing 22660 . 22668) (thing 22659 . 22660) (thing 22652 . 22659) (thing 22640 . 22648) (thing 22639 . 22640) (thing 22635 . 22639) (thing 22634 . 22635) (thing 22629 . 22634) (thing 22617 . 22625) (thing 22616 . 22617) (thing 22613 . 22616) (thing 22612 . 22613) (thing 22606 . 22612) (thing 22605 . 22606) (thing 22600 . 22605) (thing 22588 . 22596) (thing 22587 . 22588) (thing 22584 . 22587) (thing 22583 . 22584) (thing 22580 . 22583) (thing 22579 . 22580) (thing 22574 . 22579) (thing 22562 . 22570) (thing 22561 . 22562) (thing 22556 . 22561) (thing 22544 . 22552) (thing 22543 . 22544) (thing 22533 . 22543) (thing 22532 . 22533) (thing 22528 . 22532) (thing 22519 . 22527) (thing 22518 . 22519) (thing 22514 . 22518) (thing 22502 . 22510) (thing 22501 . 22502) (thing 22489 . 22501) (thing 22489 . 22489) (thing 20137 . 20141) (thing 20129 . 20136) (thing 20121 . 20128) (thing 20115 . 20120) (thing 20111 . 20114) (thing 20106 . 20110) (thing 20098 . 20105) (thing 20097 . 20098) (thing 20087 . 20097) (thing 20087 . 20087) (thing 19664 . 20086) (thing 19663 . 19663) (thing 19661 . 19662) (thing 19653 . 19656) (thing 19645 . 19652) (thing 19640 . 19644) (thing 19639 . 19640) (thing 19632 . 19639) (thing 19632 . 19632))))
  :file "!home!sdd!tmp!krb5-1.15.1!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
