;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_LOG_H" variable (:constant-flag t) nil [29 40])
            ("iostream" include (:system-flag t) nil [42 61])
            ("alog/Logger.h" include nil nil [63 87])
            ("alog/Configurator.h" include nil nil [88 118])
            ("iostream" include (:system-flag t) nil [119 138])
            ("SWIFT_ROOT_LOG_CONFIG" variable (:constant-flag t) nil [148 169])
            ("SWIFT_LOG_CONFIG" variable (:constant-flag t) nil [222 238])
            ("SWIFT_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [765 793])
            ("SWIFT_ROOT_LOG_SETLEVEL" variable (:constant-flag t) nil [1446 1469])
            ("SWIFT_LOG_DECLARE" variable (:constant-flag t) nil [1589 1606])
            ("SWIFT_LOG_SETUP" variable (:constant-flag t) nil [1648 1663])
            ("SWIFT_LOG_SETUP_TEMPLATE" variable (:constant-flag t) nil [1758 1782])
            ("SWIFT_LOG_SETUP_TEMPLATE2" variable (:constant-flag t) nil [1942 1967])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" variable (:constant-flag t) nil [2153 2191])
            ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" variable (:constant-flag t) nil [2360 2399])
            ("SWIFT_LOG" variable (:constant-flag t) nil [2609 2618])
            ("SWIFT_LOG_DECLARE_WITH_NAME" variable (:constant-flag t) nil [2711 2738])
            ("SWIFT_LOG_SETUP_WITH_NAME" variable (:constant-flag t) nil [2779 2804])
            ("SWIFT_LOG_WITH_NAME" variable (:constant-flag t) nil [2904 2923])
            ("SWIFT_LOG_FSLIB_ERROR" variable (:constant-flag t) nil [3018 3039])
            ("SWIFT_DECLARE_AND_SETUP_LOGGER" variable (:constant-flag t) nil [3317 3347])
            ("SWIFT_LOG_SHUTDOWN" variable (:constant-flag t) nil [3434 3452])
            ("SWIFT_LOG_FLUSH" variable (:constant-flag t) nil [3488 3503])
            ("SWIFT_INTERVAL_LOG_COUNT" variable (:constant-flag t) nil [3540 3564])
            ("SWIFT_INTERVAL_LOG_TIME" variable (:constant-flag t) nil [4152 4175]))          
      :file "Log.h"
      :pointmax 4781
      :fsize 4780
      :lastmodtime '(22894 47848 125701 410000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_LOG_H")
          ("SWIFT_LOG_SHUTDOWN" (spp-arg-list nil 3452 . 3454) . 
              ((symbol "alog" 3455 . 3459) (punctuation ":" 3459 . 3460) (punctuation ":" 3460 . 3461) (symbol "Logger" 3461 . 3467) (punctuation ":" 3467 . 3468) (punctuation ":" 3468 . 3469) (symbol "shutdown" 3469 . 3477) (semantic-list "()" 3477 . 3479)))
          ("SWIFT_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 793 . 802) . 
              ((DO "do" 803 . 805) (semantic-list "{                      \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"configure logger use [\"                       \\
                      << content<< \"] failed\"                           \\
                      << std::endl;                                     \\
            SWIFT_ROOT_LOG_CONFIG();                                    \\
        }                                                               \\
    }" 806 . 1428) (WHILE "while" 1428 . 1433) (semantic-list "(0)" 1433 . 1436)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME" (spp-arg-list ("n" "c" "typename" "T") 2191 . 2209) . 
              ((TEMPLATE "template" 2210 . 2218) (punctuation "<" 2219 . 2220) (TYPENAME "typename" 2220 . 2228) (symbol "T" 2229 . 2230) (punctuation ">" 2230 . 2231) (symbol "alog" 2238 . 2242) (punctuation ":" 2242 . 2243) (punctuation ":" 2243 . 2244) (symbol "Logger" 2244 . 2250) (punctuation "*" 2251 . 2252) (symbol "c" 2252 . 2253) (punctuation "<" 2253 . 2254) (symbol "T" 2254 . 2255) (punctuation ">" 2255 . 2256) (punctuation ":" 2256 . 2257) (punctuation ":" 2257 . 2258) (symbol "_logger" 2258 . 2265) (punctuation "=" 2304 . 2305) (symbol "alog" 2306 . 2310) (punctuation ":" 2310 . 2311) (punctuation ":" 2311 . 2312) (symbol "Logger" 2312 . 2318) (punctuation ":" 2318 . 2319) (punctuation ":" 2319 . 2320) (symbol "getLogger" 2320 . 2329) (semantic-list "(\"swift.\" #n \".\"  #c)" 2329 . 2350)))
          ("SWIFT_INTERVAL_LOG_TIME" (spp-arg-list ("logInterval" "level" "format" "args...") 4175 . 4212) . 
              ((DO "do" 4226 . 4228) (semantic-list "{                                                                \\
        static int64_t logTimestamp;                                    \\
        int64_t now = autil::TimeUtility::currentTimeInSeconds();       \\
        if (now - logTimestamp > logInterval) {                         \\
            SWIFT_LOG(level, format, ##args);                              \\
            logTimestamp = now;                                         \\
        }                                                               \\
    }" 4229 . 4748) (WHILE "while" 4749 . 4754) (semantic-list "(0)" 4755 . 4758)))
          ("SWIFT_ROOT_LOG_CONFIG" (spp-arg-list nil 169 . 171) . 
              ((symbol "alog" 172 . 176) (punctuation ":" 176 . 177) (punctuation ":" 177 . 178) (symbol "Configurator" 178 . 190) (punctuation ":" 190 . 191) (punctuation ":" 191 . 192) (symbol "configureRootLogger" 192 . 211) (semantic-list "()" 211 . 213)))
          ("SWIFT_LOG_SETUP_TEMPLATE" (spp-arg-list ("n" "c" "T") 1782 . 1790) . 
              ((TEMPLATE "template" 1791 . 1799) (punctuation "<" 1800 . 1801) (TYPENAME "typename" 1801 . 1809) (symbol "T" 1810 . 1811) (punctuation ">" 1811 . 1812) (symbol "alog" 1820 . 1824) (punctuation ":" 1824 . 1825) (punctuation ":" 1825 . 1826) (symbol "Logger" 1826 . 1832) (punctuation "*" 1833 . 1834) (symbol "c" 1834 . 1835) (punctuation "<" 1835 . 1836) (symbol "T" 1836 . 1837) (punctuation ">" 1837 . 1838) (punctuation ":" 1838 . 1839) (punctuation ":" 1839 . 1840) (symbol "_logger" 1840 . 1847) (punctuation "=" 1886 . 1887) (symbol "alog" 1888 . 1892) (punctuation ":" 1892 . 1893) (punctuation ":" 1893 . 1894) (symbol "Logger" 1894 . 1900) (punctuation ":" 1900 . 1901) (punctuation ":" 1901 . 1902) (symbol "getLogger" 1902 . 1911) (semantic-list "(\"swift.\" #n \".\"  #c)" 1911 . 1932)))
          ("SWIFT_DECLARE_AND_SETUP_LOGGER" (spp-arg-list ("n") 3347 . 3350) . 
              ((STATIC "static" 3351 . 3357) (symbol "alog" 3358 . 3362) (punctuation ":" 3362 . 3363) (punctuation ":" 3363 . 3364) (symbol "Logger" 3364 . 3370) (punctuation "*" 3371 . 3372) (symbol "_logger" 3372 . 3379) (punctuation "=" 3387 . 3388) (symbol "alog" 3389 . 3393) (punctuation ":" 3393 . 3394) (punctuation ":" 3394 . 3395) (symbol "Logger" 3395 . 3401) (punctuation ":" 3401 . 3402) (punctuation ":" 3402 . 3403) (symbol "getLogger" 3403 . 3412) (semantic-list "(\"swift.\" #n)" 3412 . 3425)))
          ("SWIFT_LOG_SETUP_TEMPLATE2" (spp-arg-list ("n" "c" "T1" "T2") 1967 . 1980) . 
              ((TEMPLATE "template" 1981 . 1989) (punctuation "<" 1990 . 1991) (TYPENAME "typename" 1991 . 1999) (symbol "T1" 2000 . 2002) (punctuation "," 2002 . 2003) (TYPENAME "typename" 2004 . 2012) (symbol "T2" 2013 . 2015) (punctuation ">" 2015 . 2016) (symbol "alog" 2023 . 2027) (punctuation ":" 2027 . 2028) (punctuation ":" 2028 . 2029) (symbol "Logger" 2029 . 2035) (punctuation "*" 2036 . 2037) (symbol "c" 2037 . 2038) (punctuation "<" 2038 . 2039) (symbol "T1" 2039 . 2041) (punctuation "," 2041 . 2042) (symbol "T2" 2043 . 2045) (punctuation ">" 2045 . 2046) (punctuation ":" 2046 . 2047) (punctuation ":" 2047 . 2048) (symbol "_logger" 2048 . 2055) (punctuation "=" 2097 . 2098) (symbol "alog" 2099 . 2103) (punctuation ":" 2103 . 2104) (punctuation ":" 2104 . 2105) (symbol "Logger" 2105 . 2111) (punctuation ":" 2111 . 2112) (punctuation ":" 2112 . 2113) (symbol "getLogger" 2113 . 2122) (semantic-list "(\"swift.\" #n \".\"  #c)" 2122 . 2143)))
          ("SWIFT_INTERVAL_LOG_COUNT" (spp-arg-list ("logInterval" "level" "format" "args...") 3564 . 3601) . 
              ((DO "do" 3610 . 3612) (semantic-list "{                                                                \\
        static int logCounter;                                          \\
        if (0 == logCounter) {                                          \\
            SWIFT_LOG(level, format, ##args);                              \\
            logCounter = logInterval;                                   \\
        }                                                               \\
        logCounter--;                                                   \\
    }" 3613 . 4132) (WHILE "while" 4133 . 4138) (semantic-list "(0)" 4139 . 4142)))
          ("SWIFT_LOG_DECLARE" (spp-arg-list nil 1606 . 1608) . 
              ((STATIC "static" 1609 . 1615) (symbol "alog" 1616 . 1620) (punctuation ":" 1620 . 1621) (punctuation ":" 1621 . 1622) (symbol "Logger" 1622 . 1628) (punctuation "*" 1629 . 1630) (symbol "_logger" 1630 . 1637)))
          ("SWIFT_LOG" (spp-arg-list ("level" "format" "args...") 2618 . 2642) . ((symbol "ALOG_LOG" 2643 . 2651) (semantic-list "(_logger, alog::LOG_LEVEL_##level, format, ##args)" 2651 . 2701)))
          ("SWIFT_LOG_WITH_NAME" (spp-arg-list ("name" "level" "format" "args...") 2923 . 2953) . ((symbol "ALOG_LOG" 2954 . 2962) (semantic-list "(name, alog::LOG_LEVEL_##level, format, ##args)" 2962 . 3009)))
          ("SWIFT_LOG_SETUP_TEMPLATE_WITH_TYPENAME2" (spp-arg-list ("n" "c" "typename1" "T1" "typename2" "T2") 2399 . 2434) . 
              ((TEMPLATE "template" 2435 . 2443) (punctuation "<" 2444 . 2445) (symbol "typename1" 2445 . 2454) (symbol "T1" 2455 . 2457) (punctuation "," 2457 . 2458) (symbol "typename2" 2459 . 2468) (symbol "T2" 2469 . 2471) (punctuation ">" 2471 . 2472) (symbol "alog" 2479 . 2483) (punctuation ":" 2483 . 2484) (punctuation ":" 2484 . 2485) (symbol "Logger" 2485 . 2491) (punctuation "*" 2492 . 2493) (symbol "c" 2493 . 2494) (punctuation "<" 2494 . 2495) (symbol "T1" 2495 . 2497) (punctuation "," 2497 . 2498) (symbol "T2" 2499 . 2501) (punctuation ">" 2501 . 2502) (punctuation ":" 2502 . 2503) (punctuation ":" 2503 . 2504) (symbol "_logger" 2504 . 2511) (punctuation "=" 2553 . 2554) (symbol "alog" 2555 . 2559) (punctuation ":" 2559 . 2560) (punctuation ":" 2560 . 2561) (symbol "Logger" 2561 . 2567) (punctuation ":" 2567 . 2568) (punctuation ":" 2568 . 2569) (symbol "getLogger" 2569 . 2578) (semantic-list "(\"swift.\" #n \".\"  #c)" 2578 . 2599)))
          ("SWIFT_LOG_DECLARE_WITH_NAME" (spp-arg-list ("name") 2738 . 2744) . 
              ((STATIC "static" 2745 . 2751) (symbol "alog" 2752 . 2756) (punctuation ":" 2756 . 2757) (punctuation ":" 2757 . 2758) (symbol "Logger" 2758 . 2764) (punctuation "*" 2765 . 2766) (symbol "name" 2766 . 2770)))
          ("SWIFT_LOG_CONFIG" (spp-arg-list ("filename") 238 . 248) . 
              ((DO "do" 249 . 251) (semantic-list "{                         \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"Error!!! Failed to configure logger\"  \\
                      << e.what() << std::endl;                 \\
            exit(-1);                                           \\
        }                                                       \\
    }" 252 . 747) (WHILE "while" 747 . 752) (semantic-list "(0)" 752 . 755)))
          ("SWIFT_ROOT_LOG_SETLEVEL" (spp-arg-list ("level") 1469 . 1476) . 
              ((symbol "alog" 1516 . 1520) (punctuation ":" 1520 . 1521) (punctuation ":" 1521 . 1522) (symbol "Logger" 1522 . 1528) (punctuation ":" 1528 . 1529) (punctuation ":" 1529 . 1530) (symbol "getRootLogger" 1530 . 1543) (semantic-list "()" 1543 . 1545) (punctuation "-" 1545 . 1546) (punctuation ">" 1546 . 1547) (symbol "setLevel" 1547 . 1555) (semantic-list "(alog::LOG_LEVEL_##level)" 1555 . 1580)))
          ("SWIFT_LOG_SETUP" (spp-arg-list ("n" "c") 1663 . 1668) . 
              ((symbol "alog" 1669 . 1673) (punctuation ":" 1673 . 1674) (punctuation ":" 1674 . 1675) (symbol "Logger" 1675 . 1681) (punctuation "*" 1682 . 1683) (symbol "c" 1683 . 1684) (punctuation ":" 1684 . 1685) (punctuation ":" 1685 . 1686) (symbol "_logger" 1686 . 1693) (punctuation "=" 1702 . 1703) (symbol "alog" 1704 . 1708) (punctuation ":" 1708 . 1709) (punctuation ":" 1709 . 1710) (symbol "Logger" 1710 . 1716) (punctuation ":" 1716 . 1717) (punctuation ":" 1717 . 1718) (symbol "getLogger" 1718 . 1727) (semantic-list "(\"swift.\" #n \".\"  #c)" 1727 . 1748)))
          ("SWIFT_LOG_SETUP_WITH_NAME" (spp-arg-list ("name" "n" "c") 2804 . 2816) . 
              ((symbol "alog" 2817 . 2821) (punctuation ":" 2821 . 2822) (punctuation ":" 2822 . 2823) (symbol "Logger" 2823 . 2829) (punctuation "*" 2830 . 2831) (symbol "c" 2831 . 2832) (punctuation ":" 2832 . 2833) (punctuation ":" 2833 . 2834) (symbol "name" 2834 . 2838) (punctuation "=" 2849 . 2850) (symbol "alog" 2851 . 2855) (punctuation ":" 2855 . 2856) (punctuation ":" 2856 . 2857) (symbol "Logger" 2857 . 2863) (punctuation ":" 2863 . 2864) (punctuation ":" 2864 . 2865) (symbol "getLogger" 2865 . 2874) (semantic-list "(\"swift.\" #n \".\"  #c)" 2874 . 2895)))
          ("SWIFT_LOG_FSLIB_ERROR" (spp-arg-list ("ec" "level") 3039 . 3050) . 
              ((DO "do" 3055 . 3057) (semantic-list "{                       \\
        SWIFT_LOG(level, \"fslib errorcode [%d], errormsg [%s]\",         \\
                  ec, fslib::fs::FileSystem::getErrorString(ec).c_str()); \\
    }" 3058 . 3239) (WHILE "while" 3240 . 3245) (semantic-list "(0)" 3246 . 3249)))
          ("SWIFT_LOG_FLUSH" (spp-arg-list nil 3503 . 3505) . 
              ((symbol "alog" 3506 . 3510) (punctuation ":" 3510 . 3511) (punctuation ":" 3511 . 3512) (symbol "Logger" 3512 . 3518) (punctuation ":" 3518 . 3519) (punctuation ":" 3519 . 3520) (symbol "flushAll" 3520 . 3528) (semantic-list "()" 3528 . 3530)))
          )
)
    (semanticdb-table "Common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_COMMON_H_" variable (:constant-flag t) nil [33 48])
            ("assert.h" include (:system-flag t) nil [50 69])
            ("SWIFT_BEGIN_NAMESPACE" variable (:constant-flag t) nil [145 166])
            ("SWIFT_END_NAMESPACE" variable (:constant-flag t) nil [211 230])
            ("SWIFT_USE_ROOT_NAMESPACE" variable (:constant-flag t) nil [247 271])
            ("SWIFT_USE_NAMESPACE" variable (:constant-flag t) nil [304 323])
            ("SWIFT_NS" variable (:constant-flag t) nil [361 369])
            ("SWIFT_ALIAS_NAMESAPCE" variable (:constant-flag t) nil [391 412])
            ("tr1/memory" include (:system-flag t) nil [457 478])
            ("SWIFT_TYPEDEF_PTR" variable (:constant-flag t) nil [487 504])
            ("COPY_CONSTRUCTOR" variable (:constant-flag t) nil [656 672])
            ("DISALLOW_COPY_AND_ASSIGN" variable (:constant-flag t) nil [736 760])
            ("DELETE" variable (:constant-flag t) nil [811 817])
            ("DELETE_ARRAY" variable (:constant-flag t) nil [1063 1075]))          
      :file "Common.h"
      :pointmax 1345
      :fsize 1344
      :lastmodtime '(22646 63696 849698 681000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_USE_NAMESPACE" (spp-arg-list ("x") 323 . 326) . 
              ((USING "using" 327 . 332) (NAMESPACE "namespace" 333 . 342) (symbol "swift" 343 . 348) (punctuation ":" 348 . 349) (punctuation ":" 349 . 350) (symbol "x" 350 . 351)))
          ("SWIFT_ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 412 . 418) . 
              ((NAMESPACE "namespace" 419 . 428) (symbol "swift" 429 . 434) (semantic-list "{ namespace x = y; }" 435 . 455)))
          ("DELETE_ARRAY" (spp-arg-list ("x") 1075 . 1078) . 
              ((DO "do" 1079 . 1081) (semantic-list "{             \\
        if(x){                                  \\
            delete [] x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 1082 . 1306) (WHILE "while" 1306 . 1311) (semantic-list "(0)" 1311 . 1314)))
          ("SWIFT_COMMON_H_")
          ("SWIFT_BEGIN_NAMESPACE" (spp-arg-list ("x") 166 . 169) . 
              ((NAMESPACE "namespace" 170 . 179) (symbol "swift" 180 . 185) (open-paren "{" 186 . 187) (NAMESPACE "namespace" 188 . 197) (symbol "x" 198 . 199) (open-paren "{" 199 . 200)))
          ("SWIFT_END_NAMESPACE" (spp-arg-list ("x") 230 . 233) . ((close-paren "}" 234 . 235) (close-paren "}" 236 . 237)))
          ("SWIFT_NS" (spp-arg-list ("x") 369 . 372) . 
              ((symbol "swift" 373 . 378) (punctuation ":" 378 . 379) (punctuation ":" 379 . 380) (symbol "x" 380 . 381)))
          ("SWIFT_TYPEDEF_PTR" (spp-arg-list ("x") 504 . 507) . 
              ((TYPEDEF "typedef" 508 . 515) (symbol "std" 516 . 519) (punctuation ":" 519 . 520) (punctuation ":" 520 . 521) (symbol "tr1" 521 . 524) (punctuation ":" 524 . 525) (punctuation ":" 525 . 526) (symbol "shared_ptr" 526 . 536) (punctuation "<" 536 . 537) (symbol "x" 537 . 538) (punctuation ">" 538 . 539) (spp-symbol-merge ((symbol "x" 540 . 541) (symbol "Ptr" 543 . 546)) 540 . 546)))
          ("DISALLOW_COPY_AND_ASSIGN" (spp-arg-list ("T") 760 . 763) . ((symbol "COPY_CONSTRUCTOR" 782 . 798) (semantic-list "(T)" 798 . 801)))
          ("DELETE" (spp-arg-list ("x") 817 . 820) . 
              ((DO "do" 821 . 823) (semantic-list "{             \\
        if(x){                                  \\
            delete x;                           \\
            x = NULL;                           \\
        }                                       \\
    }" 824 . 1045) (WHILE "while" 1045 . 1050) (semantic-list "(0)" 1050 . 1053)))
          ("SWIFT_USE_ROOT_NAMESPACE" . 
              ((USING "using" 272 . 277) (NAMESPACE "namespace" 278 . 287) (symbol "swift" 288 . 293) (punctuation ";" 293 . 294)))
          ("COPY_CONSTRUCTOR" (spp-arg-list ("T") 672 . 675) . 
              ((symbol "T" 682 . 683) (semantic-list "(const T &)" 683 . 694) (punctuation ";" 694 . 695) (symbol "T" 702 . 703) (punctuation "&" 704 . 705) (OPERATOR "operator" 706 . 714) (punctuation "=" 714 . 715) (semantic-list "(const T &)" 715 . 726)))
          )
))
  :file "!ssd!sdd!git!swift!test!swift!swift!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
