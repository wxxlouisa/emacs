;; Object fslib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "fslib/"
  :tables
  (list
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("FSLIB_HTTP_PLUGIN_COMMON_H" variable (:constant-flag t) nil [44 70])
            ("autil/Log.h" include (:system-flag t) nil [72 94])
            ("autil/Lock.h" include (:system-flag t) nil [95 118])
            ("fslib/fs/File.h" include nil nil [119 145])
            ("fslib/fs/FileLock.h" include nil nil [146 176])
            ("fslib/common/common_define.h" include nil nil [177 216])
            ("fslib/common/common_type.h" include nil nil [217 254])
            ("FSLIB_PLUGIN_BEGIN_NAMESPACE" variable (:constant-flag t) nil [264 292])
            ("FSLIB_PLUGIN_END_NAMESPACE" variable (:constant-flag t) nil [357 383])
            ("FSLIB_PLUGIN_USING_NAMESPACE" variable (:constant-flag t) nil [401 429])
            ("CALL_WITH_CHECK" variable (:constant-flag t) nil [471 486]))          
      :file "common.h"
      :pointmax 1109
      :fsize 1108
      :lastmodtime '(22718 22779 879859 295000)
      :unmatched-syntax nil
      :lexical-table 
        '(("FSLIB_PLUGIN_BEGIN_NAMESPACE" (spp-arg-list ("x") 292 . 295) . 
              ((NAMESPACE "namespace" 296 . 305) (symbol "fslib" 306 . 311) (open-paren "{" 312 . 313) (NAMESPACE "namespace" 314 . 323) (symbol "fs" 324 . 326) (open-paren "{" 333 . 334) (NAMESPACE "namespace" 335 . 344) (symbol "x" 345 . 346) (open-paren "{" 347 . 348)))
          ("FSLIB_PLUGIN_END_NAMESPACE" (spp-arg-list ("x") 383 . 386) . 
              ((close-paren "}" 387 . 388) (close-paren "}" 389 . 390) (close-paren "}" 391 . 392)))
          ("FSLIB_PLUGIN_USING_NAMESPACE" (spp-arg-list ("x") 429 . 432) . 
              ((USING "using" 433 . 438) (NAMESPACE "namespace" 439 . 448) (symbol "fslib" 449 . 454) (punctuation ":" 454 . 455) (punctuation ":" 455 . 456) (symbol "fs" 456 . 458) (punctuation ":" 458 . 459) (punctuation ":" 459 . 460) (symbol "x" 460 . 461)))
          ("FSLIB_HTTP_PLUGIN_COMMON_H")
          ("CALL_WITH_CHECK" (spp-arg-list ("funcName" "...") 486 . 501) . 
              ((DO "do" 541 . 543) (semantic-list "{                                                                \\
        CURLcode res;                                                   \\
        res = funcName(__VA_ARGS__);                                    \\
        if (res != CURLE_OK) {                                          \\
            AUTIL_LOG(ERROR, \"error when call \" #funcName \": [%s]\",     \\
                      curl_easy_strerror(res));                         \\
        }                                                               \\
    }" 544 . 1060) (WHILE "while" 1061 . 1066) (semantic-list "(0)" 1067 . 1070)))
          )
))
  :file "!ssd!sdd!git!fs_lib!fslib_http_plugin!fslib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
