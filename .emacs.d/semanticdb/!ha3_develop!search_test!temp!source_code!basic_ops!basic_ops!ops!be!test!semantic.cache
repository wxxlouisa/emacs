;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "MockSearchService.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_SUEZ_TURING_MOCKSEARCHSERVICE_H" variable (:constant-flag t) nil [57 96])
            ("private" variable (:constant-flag t) nil [106 113])
            ("multi_call/interface/SearchService.h" include nil nil [121 168])
            ("multi_call/interface/Reply.h" include nil nil [169 208])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("MockSearchService" type
                               (:superclasses 
                                  ( ("multi_call::SearchService" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [308 315])
                                    ("MOCK_METHOD2" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [333 338])
                                            ("" variable (:type "bool") (reparse-symbol arg-sub-list) [356 434]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [320 436])
                                    ("MOCK_METHOD2" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("updateFlowConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [454 471])
                                            ("" variable (:type "bool") (reparse-symbol arg-sub-list) [472 535]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [441 537])
                                    ("MOCK_METHOD2" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [555 562])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [563 624]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [542 626])
                                    ("MOCK_METHOD0" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("getCm2ConfigStr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [644 660])
                                            ("" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [661 674]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [631 676])
                                    ("MOCK_METHOD0" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("getBizNames" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [694 706])
                                            ("" variable (:type ("std::vector" type
                                                 (:template-specifier 
                                                    ( ("std::string" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [707 733]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [681 735]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [247 738])
                            ("StrictMockSearchService" variable (:type ("testing::StrictMock" type
                                 (:template-specifier 
                                    ( ("MockSearchService" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [749 812])
                            ("NiceMockSearchService" variable (:type ("testing::NiceMock" type
                                 (:template-specifier 
                                    ( ("MockSearchService" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [823 882]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [227 884]))                  
                :type "namespace")
                nil [210 907]))          
      :file "MockSearchService.h"
      :pointmax 978
      :fsize 977
      :lastmodtime '(23516 9078 0 0)
      :unmatched-syntax '((thing 822 . 823) (thing 821 . 822) (thing 813 . 820) (thing 748 . 749) (thing 747 . 748) (thing 739 . 746) (thing 731 . 733) (thing 672 . 674) (thing 567 . 624) (thing 476 . 535) (thing 360 . 434))
      :lexical-table 
        '(("private" . ((PUBLIC "public" 114 . 120)))
          ("ISEARCH_SUEZ_TURING_MOCKSEARCHSERVICE_H")
          )
))
  :file "!ha3_develop!search_test!temp!source_code!basic_ops!basic_ops!ops!be!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
