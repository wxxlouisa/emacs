;; Object grp_topic_operation/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "grp_topic_operation/"
  :tables
  (list
    (semanticdb-table "sut_topic_operation.py"
      :major-mode 'python-mode
      :tags 
        '( ("time" include nil nil [43 61])
            ("sys" include nil nil [43 61])
            ("os" include nil nil [43 61])
            ("common_utils.log_util" include nil nil [62 102])
            ("common_utils.process" include nil nil [104 144])
            ("swift_systemtest_lib.swifttest_lib.common_define" include nil nil [145 207])
            ("swift_systemtest_lib.swifttest_lib.swift_test_base" include nil nil [208 284])
            ("swift_systemtest_lib.common_lib.fsutil_wrapper" include nil nil [285 357])
            ("swift_systemtest_lib.swifttest_lib.swift_client_wrapper" include nil nil [358 444])
            ("TopicOperationTest" type
               (:superclasses ("SwiftTestBase")
                :members 
                  ( ("suiteSetup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [506 510]))                          )
                        (reparse-symbol indented_block_body) [491 646])
                    ("suiteTeardown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [669 673]))                          )
                        (reparse-symbol indented_block_body) [651 689])
                    ("caseSetup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [708 712]))                          )
                        (reparse-symbol indented_block_body) [694 728])
                    ("caseTeardown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [750 754]))                          )
                        (reparse-symbol indented_block_body) [733 843])
                    ("assertTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [868 872])
                            ("topic_info_dict" variable nil (reparse-symbol function_parameters) [874 889])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [891 901])
                            ("partition_count" variable nil (reparse-symbol function_parameters) [903 918]))                          )
                        (reparse-symbol indented_block_body) [848 1642])
                    ("do_test_add_one_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1674 1678])
                            ("name" variable nil (reparse-symbol function_parameters) [1680 1684])
                            ("count_num" variable nil (reparse-symbol function_parameters) [1692 1701])
                            ("buffer_size" variable nil (reparse-symbol function_parameters) [1705 1716])
                            ("resource" variable nil (reparse-symbol function_parameters) [1720 1728])
                            ("limit" variable nil (reparse-symbol function_parameters) [1735 1740]))                          )
                        (reparse-symbol indented_block_body) [1648 3089])
                    ("test_add_one_topic_partition_buffer_size_setting" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3147 3151]))                          )
                        (reparse-symbol indented_block_body) [3094 3319])
                    ("test_add_one_topic_restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3355 3359]))                          
                        :documentation "
        添加一天topic stop start swift admin/broker检查topic的信息保存正常
        ")
                        (reparse-symbol indented_block_body) [3324 4137])
                    ("test_add_two_topics_restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4174 4178]))                          )
                        (reparse-symbol indented_block_body) [4142 6749])
                    ("test_add_two_topics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6778 6782]))                          
                        :documentation "
        添加多个topic，topic1 partition count=1，buffer size=30，resource=50
                       topic2 partition count=2, buffer size=30, resource=50
        检查两个partion的borker地址相同
        ")
                        (reparse-symbol indented_block_body) [6754 8830])
                    ("test_add_existed_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8862 8866]))                          
                        :documentation "
        添加topic1 partition count为4 每个partition占用的resource为25
        添加一个已经存在的topic，swift报错，提示该topic已经存在
        检查topic1的4个partition都处于running状态
        ")
                        (reparse-symbol indented_block_body) [8835 10136])
                    ("test_delete_topic_restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10171 10175]))                          
                        :documentation "
        添加topic，删除topic，检查topic删除操作成功
        stop swift后再start检查topic删除操作成功，以删除的topic不会重新获取到
        ")
                        (reparse-symbol indented_block_body) [10141 11784])
                    ("test_delete_topics_restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11820 11824]))                          
                        :documentation "
        添加topic，删除topic，检查topic删除操作成功
        stop swift后再start检查topic删除操作成功，以删除的topic不会重新获取到
        ")
                        (reparse-symbol indented_block_body) [11789 14523])
                    ("test_delete_unexist_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14559 14563]))                          
                        :documentation "
        删除不存在的topic时，返回报错，该topic不存在
        ")
                        (reparse-symbol indented_block_body) [14529 15925])
                    ("test_add_topic_with_error_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15972 15976]))                          
                        :documentation "
        partition buffer size最小值大于0，最大值为256*1024M 一个buffer size单位为1M
        partition resouce list 有效值范围为1到100
        partition count list有效值范围为1 到100000
        ")
                        (reparse-symbol indented_block_body) [15931 19033])
                    ("test_partition_source_100" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19068 19072]))                          
                        :documentation "
        创建一个topic 包含两个partition，每个partition的resource要求是50
        检查这两个partion的状态为running
        创建第二个topic，包含一个partition，要求resource是10，检查该partition的状态为waiting
        删除第一个topic，检查第二个topic的状态改变为running
        再添加一个topic，包含5个partition，每个partition要求resouce是20，检查有4个partion处于running状态，一个partition处于waiting状态
        ")
                        (reparse-symbol indented_block_body) [19038 21742])
                    ("do_check_msg_response" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21773 21777])
                            ("expect_list" variable nil (reparse-symbol function_parameters) [21779 21790])
                            ("actual_list" variable nil (reparse-symbol function_parameters) [21792 21803]))                          
                        :documentation "
        expect_list is the message list which be used in ./swift sm
        expect_list = [\"msg1\",\"msg2\"]
        actual_list is a dict, be returned by getMessage()
        the function will compare the expect_list with the actual_list['messages'] list
        success: return true
        fail: return false
        ")
                        (reparse-symbol indented_block_body) [21747 22611])
                    ("test_add_del_topic_with_msg_increase" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22657 22661]))                          
                        :documentation "
        单机操作环境，add topic news--send message--检查message获取正常
        delete topic news---add topic news---get message获取之前添加的message
        正常，send message 检查message id在原来的基础上递增
        ")
                        (reparse-symbol indented_block_body) [22616 24680])
                    ("do_check_topic_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24708 24712])
                            ("topic_info" variable nil (reparse-symbol function_parameters) [24713 24723])
                            ("compare_topic" variable nil (reparse-symbol function_parameters) [24724 24737])
                            ("equal_flag" variable nil (reparse-symbol function_parameters) [24738 24748]))                          
                        :documentation "
        topic_info is a topic info string, which returned by self.swift.getTopicInfo()
        compare_topic is a topic name, the function will get this topic's info as topic_compare_info
        and compare topic_info's broker address with topic_compare_info's broker address
        ")
                        (reparse-symbol indented_block_body) [24684 25904])
                    ("test_add_delete_topic_same_broker" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25947 25951]))                          
                        :documentation "
        add the topic to broker1, delete the topic
        add the same topic to the broker1,check topic info correct
        delete the topic, then add the topic to broker2
        check topic info is correct
        ")
                        (reparse-symbol indented_block_body) [25909 28196])
                    ("test_gti_unexist_topic_msg_operation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28242 28246]))                          
                        :documentation "
        add topic-----send message-------check message info is correct
        delete topic---------get message-----check broker return error
        ")
                        (reparse-symbol indented_block_body) [28201 30028])
                    ("test_add_topic_to_leader_admin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30070 30074]))                          
                        :documentation "
        启动swift后，向leader admin发送addTopic,
        getTopicNames和getTopicInfo应该正常
        ")
                        (reparse-symbol indented_block_body) [30035 31268])
                    ("test_add_topic_to_not_leader_admin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31313 31317]))                          
                        :documentation "
        启动swift后，向非leader admin发送addTopic,
        getTopicNames和getTopicInfo应该出错
        ")
                        (reparse-symbol indented_block_body) [31274 33207])
                    ("__assertTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33234 33238])
                            ("topic_info_dict" variable nil (reparse-symbol function_parameters) [33240 33255])
                            ("topic_name" variable nil (reparse-symbol function_parameters) [33257 33267])
                            ("partition_count" variable nil (reparse-symbol function_parameters) [33269 33284])
                            ("status" variable nil (reparse-symbol function_parameters) [33286 33292]))                          )
                        (reparse-symbol indented_block_body) [33212 34644])
                    ("test_operate_topic_after_broker_disconnect_zk" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34699 34703]))                          )
                        (reparse-symbol indented_block_body) [34649 36723])
                    ("test_operate_topic_after_broker_killed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36771 36775]))                          )
                        (reparse-symbol indented_block_body) [36728 38924])
                    ("test_add_topic_with_partition_limit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38969 38973]))                          )
                        (reparse-symbol indented_block_body) [38929 39132])
                    ("test_modify_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39159 39163]))                          )
                        (reparse-symbol indented_block_body) [39137 41263])
                    ("test_modify_topic_more_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41302 41306]))                          )
                        (reparse-symbol indented_block_body) [41268 44259])
                    ("test_modify_topic_partitioncount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44302 44306]))                          )
                        (reparse-symbol indented_block_body) [44265 47950])
                    ("test_topic_force_unload" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47983 47987]))                          )
                        (reparse-symbol indented_block_body) [47955 50010])
                    ("test_add_security_topic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50043 50047]))                          )
                        (reparse-symbol indented_block_body) [50015 51264])
                    ("test_delete_topics_expired_time" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51305 51309]))                          )
                        (reparse-symbol indented_block_body) [51269 52220]))                  
                :type "class")
                nil [446 52220]))          
      :file "sut_topic_operation.py"
      :pointmax 52220
      :fsize 53123
      :lastmodtime '(23967 65295 430233 702000)
      :unmatched-syntax '((thing 14525 . 52220) (thing 31270 . 52220)))
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags nil
      :file "__init__.py"
      :pointmax 1
      :fsize 0
      :lastmodtime '(23963 42851 799399 531000)
      :unmatched-syntax nil))
  :file "!swift_develop!swift_func_test!grp_topic_operation!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
