;; Object common/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "common/"
  :tables
  (list
    (semanticdb-table "DocIdClause.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/common/DocIdClause.h" include (:system-flag t) nil [1 36])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [38 58])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80 87]))                  
                :type "int")
                nil [60 88])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103 110])
                    ("" variable (:type ("DocIdClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [111 123]))                  
                :type "int")
                nil [89 124])
            ("getGlobalIdVector" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("hashIdRange" variable
                       (:reference 1
                        :constant-flag t
                        :type ("proto::Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [162 194])
                    ("fullVersion" variable (:type ("FullIndexVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [231 260])
                    ("gids" variable
                       (:reference 1
                        :type ("GlobalIdVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [297 318]))                  
                :type "void")
                nil [126 745])
            ("getGlobalIdVector" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("hashIdRange" variable
                       (:reference 1
                        :constant-flag t
                        :type ("proto::Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [783 815])
                    ("gids" variable
                       (:reference 1
                        :type ("GlobalIdVector" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [852 873]))                  
                :type "void")
                nil [747 1224])
            ("getGlobalIdVectorMap" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("hashIdRange" variable
                       (:reference 1
                        :constant-flag t
                        :type ("proto::Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1265 1297])
                    ("fullVersion" variable (:type ("FullIndexVersion" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1337 1366])
                    ("globalIdVectorMap" variable
                       (:reference 1
                        :type ("GlobalIdVectorMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1406 1443]))                  
                :type "void")
                nil [1226 1963])
            ("addGlobalId" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("globalId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GlobalIdentifier" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1995 2028]))                  
                :type "void")
                nil [1965 2073])
            ("getHashidVersionSet" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("hashidVersionSet" variable
                       (:reference 1
                        :type ("HashidVersionSet" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2113 2148]))                  
                :type "void")
                nil [2075 2468])
            ("getHashidVector" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("hashids" variable
                       (:reference 1
                        :type ("vector" type
                             (:template-specifier 
                                ( ("hashid_t" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2504 2530]))                  
                :type "void")
                nil [2470 2727])
            ("serialize" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("dataBuffer" variable
                       (:reference 1
                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2757 2787]))                  
                :type "void")
                nil [2729 2984])
            ("deserialize" function
               (:parent "DocIdClause"
                :arguments 
                  ( ("dataBuffer" variable
                       (:reference 1
                        :type ("autil::DataBuffer" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3016 3046]))                  
                :type "void")
                nil [2986 3232])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3252 3259]))                  
                :type "int")
                nil [3234 3260]))          
      :file "DocIdClause.cpp"
      :pointmax 3261
      :fsize 3260
      :lastmodtime '(23497 43657 265177 869000)
      :unmatched-syntax nil))
  :file "!ha3_develop!search_test!temp!turing_ha3_compile!source_code!ha3!ha3!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
