;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "JoinCountFunctionTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("JoinCountFunctionTest.h" include nil nil [1 35])
            ("cppunit/TestAssert.h" include (:system-flag t) nil [36 67])
            ("autil/mem_pool/Pool.h" include (:system-flag t) nil [68 100])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [102 122])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [123 145])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [164 171]))                  
                :type "int")
                nil [146 172])
            ("BEGIN_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("join_count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [195 206]))                  
                :type "int")
                nil [174 207])
            ("PLUG_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [224 233])
                    ("" variable (:type ("JoinCountFunctionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [234 256]))                  
                :type "int")
                nil [209 257])
            ("CPPUNIT_TEST_SUITE_REGISTRATION" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("JoinCountFunctionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [291 313]))                  
                :type "int")
                nil [259 314])
            ("setUp" function
               (:parent "JoinCountFunctionTest"
                :type "void")
                nil [316 434])
            ("tearDown" function
               (:parent "JoinCountFunctionTest"
                :type "void")
                nil [436 543])
            ("testProcess" function
               (:parent "JoinCountFunctionTest"
                :type "void")
                nil [545 3234])
            ("testGroupDimType" function
               (:template 
                  ( ("bool" type nil nil nil)
                    ("bool" type nil nil nil))                  
                :type "void"
                :arguments 
                  ( ("groupKeyAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3320 3347])
                    ("firResAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3351 3376])
                    ("expValueVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3377 3420]))                  
                :parent "JoinCountFunctionTest")
                nil [3236 4276])
            ("testTwoDimType" function
               (:template 
                  ( ("bool" type nil nil nil)
                    ("bool" type nil nil nil)
                    ("GT" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("groupKeyAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4373 4400])
                    ("firResAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4404 4429])
                    ("expValueVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4430 4473]))                  
                :parent "JoinCountFunctionTest")
                nil [4278 5468])
            ("runJoinCountFunctionTest" function
               (:template 
                  ( ("bool" type nil nil nil)
                    ("bool" type nil nil nil)
                    ("GT" type (:type "class") nil nil)
                    ("FT" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("groupKeyAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5588 5615])
                    ("firResAttr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5619 5644])
                    ("expValueVec" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5645 5688]))                  
                :parent "JoinCountFunctionTest")
                nil [5470 6617])
            ("generateJoinString" function
               (:parent "JoinCountFunctionTest"
                :arguments 
                  ( ("joinResult" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6666 6699])
                    ("joinStr" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [6700 6714]))                  
                :type "void")
                nil [6619 7115])
            ("END_PLUG_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("join_count" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7136 7147]))                  
                :type "int")
                nil [7117 7148]))          
      :file "JoinCountFunctionTest.cpp"
      :pointmax 7149
      :fsize 7148
      :lastmodtime '(23235 18478 174841 491000)
      :unmatched-syntax nil)
    (semanticdb-table "JoinCountFunctionTest.h"
      :file "JoinCountFunctionTest.h"
      :fsize 1470
      :lastmodtime '(23235 18478 174841 491000)))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!ha3_plugins!pluginFramework!ha3!app!join_count!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
