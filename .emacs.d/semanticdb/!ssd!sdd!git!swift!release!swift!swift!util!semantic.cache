;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "LogClosure.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SWIFT_LOGCLOSURE_H" variable (:constant-flag t) nil [36 54])
            ("autil/TimeUtility.h" include nil nil [55 85])
            ("swift/protocol/BrokerRequestResponse.pb.h" include nil nil [86 138])
            ("swift/common/Common.h" include nil nil [139 171])
            ("swift/common/Log.h" include nil nil [172 201])
            ("arpc/RPCServerClosure.h" include nil nil [202 236])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [260 265]))                  
                :type "int")
                nil [238 266])
            ("LogClosure" type
               (:template 
                  ( ("REQUEST" type (:type "class") nil nil)
                    ("RESPONSE" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [333 340])
                    ("LogClosure" function
                       (:constructor-flag t
                        :arguments 
                          ( ("request" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("REQUEST" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [356 379])
                            ("response" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("RESPONSE" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [395 420])
                            ("done" variable
                               (:pointer 1
                                :type ("google::protobuf::Closure" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [421 453])
                            ("methodName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [469 492])
                            ("count" variable
                               (:default-value "100"
                                :type ("int32_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [493 512]))                          
                        :type ("LogClosure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [345 745])
                    ("LogClosure" function
                       (:destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [751 980])
                    ("private" label nil (reparse-symbol classsubparts) [981 989])
                    ("LogClosure" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LogClosure" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1005 1024]))                          
                        :type ("LogClosure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [994 1025])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LogClosure" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1052 1071]))                          
                        :type ("LogClosure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1030 1072])
                    ("public" label nil (reparse-symbol classsubparts) [1073 1080])
                    ("setAutoDone" function
                       (:arguments 
                          ( ("flag" variable (:type "bool") (reparse-symbol arg-sub-list) [1102 1112]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1085 1146])
                    ("private" label nil (reparse-symbol classsubparts) [1147 1155])
                    ("doLog" function (:type "void") (reparse-symbol classsubparts) [1160 1428])
                    ("doAccessLog" function
                       (:typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [1433 2344])
                    ("getClientAddress" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2350 3082])
                    ("private" label nil (reparse-symbol classsubparts) [3083 3091])
                    ("_request" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("REQUEST" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3096 3120])
                    ("_response" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("RESPONSE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3125 3151])
                    ("_done" variable
                       (:pointer 1
                        :type ("google::protobuf::Closure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3156 3189])
                    ("_methodName" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3194 3218])
                    ("_autoDone" variable (:type "bool") (reparse-symbol classsubparts) [3223 3238])
                    ("_count" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3243 3258])
                    ("_beginTime" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3263 3282])
                    ("private" label nil (reparse-symbol classsubparts) [3283 3291])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [3296 3316]))                  )
                nil [268 3319])
            ("SWIFT_LOG_SETUP_TEMPLATE2" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3347 3352])
                    ("" variable (:type ("LogClosure" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3353 3364])
                    ("" variable (:type ("REQUEST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3365 3373])
                    ("" variable (:type ("RESPONSE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3374 3383]))                  
                :type "int")
                nil [3321 3384])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3406 3411]))                  
                :type "int")
                nil [3386 3412]))          
      :file "LogClosure.h"
      :pointmax 3442
      :fsize 3441
      :lastmodtime '(22868 27154 297458 102000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SWIFT_LOGCLOSURE_H")
          )
))
  :file "!ssd!sdd!git!swift!release!swift!swift!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
