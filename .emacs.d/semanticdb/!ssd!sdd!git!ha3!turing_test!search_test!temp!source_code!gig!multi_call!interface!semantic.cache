;; Object interface/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "interface/"
  :tables
  (list
    (semanticdb-table "Reply.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MULTI_CALL_REPLY_H" variable (:constant-flag t) nil [44 70])
            ("multi_call/common/common.h" include nil nil [72 109])
            ("multi_call/interface/Response.h" include nil nil [110 152])
            ("multi_call" type
               (:members 
                  ( ("ChildNodeReply" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [177 198])
                    ("Reply" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [214 221])
                            ("Reply" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("Reply" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [226 234])
                            ("Reply" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [239 248])
                            ("private" label nil (reparse-symbol classsubparts) [249 257])
                            ("Reply" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Reply" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [268 282]))                                  
                                :type ("Reply" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [262 283])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Reply" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [305 319]))                                  
                                :type ("Reply" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [288 320])
                            ("public" label nil (reparse-symbol classsubparts) [321 328])
                            ("getResponses" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("lackCount" variable
                                       (:reference 1
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [401 419]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("ResponsePtr" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [355 420])
                            ("getResponseMap" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("lackCount" variable
                                       (:reference 1
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [496 514]))                                  
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil)
                                          ("std::vector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [425 515])
                            ("reportMetrics" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [520 541])
                            ("setChildNodeReply" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("reply" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::tr1::shared_ptr" type
                                             (:template-specifier 
                                                ( ("ChildNodeReply" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [569 619]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [546 620])
                            ("public" label nil (reparse-symbol classsubparts) [621 628])
                            ("getErrorMessage" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("ec" variable (:type ("MultiCallErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [668 690]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [633 691])
                            ("private" label nil (reparse-symbol classsubparts) [692 700])
                            ("_childNodeReply" variable (:type ("std::tr1::shared_ptr" type
                                 (:template-specifier 
                                    ( ("ChildNodeReply" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [705 758])
                            ("private" label nil (reparse-symbol classsubparts) [759 767])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [772 792]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [200 795])
                    ("MULTI_CALL_TYPEDEF_PTR" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("Reply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [820 826]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [797 827]))                  
                :type "namespace")
                nil [154 829]))          
      :file "Reply.h"
      :pointmax 867
      :fsize 866
      :lastmodtime '(23220 43229 106797 710000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_MULTI_CALL_REPLY_H")
          )
)
    (semanticdb-table "Reply.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("multi_call/interface/Reply.h" include nil nil [1 40])
            ("multi_call/service/ChildNodeReply.h" include nil nil [41 87])
            ("multi_call/service/ConnectionManager.h" include nil nil [88 137])
            ("autil/StringUtil.h" include (:system-flag t) nil [138 167])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [169 189])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [190 212])
            ("multi_call" type
               (:members 
                  ( ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("multi_call" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [253 264])
                            ("" variable (:type ("Reply" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [265 271]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [237 272])
                    ("Reply" function
                       (:constructor-flag t
                        :parent "Reply"
                        :type ("Reply" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [274 292])
                    ("Reply" function
                       (:destructor-flag t
                        :parent "Reply"
                        :type "void")
                        (reparse-symbol namespacesubparts) [294 313])
                    ("getResponses" function
                       (:parent "Reply"
                        :arguments 
                          ( ("lackCount" variable
                               (:reference 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [355 373]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("ResponsePtr" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [315 531])
                    ("getResponseMap" function
                       (:parent "Reply"
                        :arguments 
                          ( ("lackCount" variable
                               (:reference 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [588 606]))                          
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [533 850])
                    ("reportMetrics" function
                       (:parent "Reply"
                        :type "void")
                        (reparse-symbol namespacesubparts) [852 958])
                    ("setChildNodeReply" function
                       (:parent "Reply"
                        :arguments 
                          ( ("reply" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ChildNodeReplyPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [990 1021]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [960 1054])
                    ("getErrorMessage" function
                       (:parent "Reply"
                        :arguments 
                          ( ("ec" variable (:type ("MultiCallErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1091 1113]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1056 1152]))                  
                :type "namespace")
                nil [213 1155]))          
      :file "Reply.cpp"
      :pointmax 1156
      :fsize 1155
      :lastmodtime '(23220 43229 106797 710000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!gig!multi_call!interface!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
