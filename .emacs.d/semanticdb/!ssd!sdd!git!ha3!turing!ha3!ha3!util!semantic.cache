;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "RangeUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_RANGEUTIL_H" variable (:constant-flag t) nil [37 56])
            ("ha3/common.h" include (:system-flag t) nil [58 81])
            ("ha3/isearch.h" include (:system-flag t) nil [82 106])
            ("ha3/util/Log.h" include (:system-flag t) nil [107 132])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154 159]))                  
                :type "int")
                nil [134 160])
            ("PartitionRange" type
               (:typedef ("std::pair" type
                     (:template-specifier 
                        ( ("uint16_t" type nil nil nil)
                          ("uint16_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [162 215])
            ("RangeVec" type
               (:typedef ("std::vector" type
                     (:template-specifier 
                        ( ("PartitionRange" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [216 262])
            ("RangeUtil" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [282 289])
                    ("RangeUtil" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("RangeUtil" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [294 306])
                    ("RangeUtil" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [311 324])
                    ("private" label nil (reparse-symbol classsubparts) [325 333])
                    ("RangeUtil" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RangeUtil" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [348 366]))                          
                        :type ("RangeUtil" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [338 367])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RangeUtil" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [393 411]))                          
                        :type ("RangeUtil" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [372 412])
                    ("public" label nil (reparse-symbol classsubparts) [413 420])
                    ("splitRange" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("rangeFrom" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [452 471])
                            ("rangeTo" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472 489])
                            ("partitionCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [521 545]))                          
                        :type ("RangeVec" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [425 546])
                    ("private" label nil (reparse-symbol classsubparts) [547 555])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [560 578]))                  
                :type "class")
                nil [264 581])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("RangeUtil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [599 609]))                  
                :type "int")
                nil [583 610])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [630 635]))                  
                :type "int")
                nil [612 636]))          
      :file "RangeUtil.h"
      :pointmax 667
      :fsize 666
      :lastmodtime '(23161 28254 429722 924000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_RANGEUTIL_H")
          )
)
    (semanticdb-table "TimeStamp.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TIMESTAMP_H" variable (:constant-flag t) nil [37 56])
            ("ha3/common.h" include (:system-flag t) nil [58 81])
            ("ha3/isearch.h" include (:system-flag t) nil [82 106])
            ("ha3/util/Log.h" include (:system-flag t) nil [107 132])
            ("sys/time.h" include (:system-flag t) nil [133 154])
            ("CLOCKS_PER_SECOND" variable (:constant-flag t) nil [190 207])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [244 249]))                  
                :type "int")
                nil [224 250])
            ("TimeStamp" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [270 277])
                    ("TimeStamp" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [282 294])
                    ("TimeStamp" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("timeStamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [309 327]))                          
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [299 328])
                    ("TimeStamp" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("second" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [343 358])
                            ("us" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [359 370]))                          
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [333 371])
                    ("TimeStamp" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [376 389])
                    ("public" label nil (reparse-symbol classsubparts) [391 398])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("l" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [432 451])
                            ("r" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [483 502]))                          
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [405 503])
                    ("==" function
                       (:prototype-flag t
                        :operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("l" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [533 552])
                            ("r" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [582 601]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [508 602])
                    ("!=" function
                       (:prototype-flag t
                        :operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("l" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [632 651])
                            ("r" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [681 700]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [607 701])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("out" variable
                               (:reference 1
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [740 758])
                            ("timeStamp" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TimeStamp" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [772 799]))                          
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [706 800])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("atime" variable
                               (:reference 1
                                :constant-flag t
                                :type ("timeval" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [829 850]))                          
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [806 851])
                    ("setCurrentTimeStamp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [859 886])
                    ("getTime" function (:type ("timeval" type (:type "class") nil nil)) (reparse-symbol classsubparts) [891 924])
                    ("getFormatTime" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [929 957])
                    ("getFormatTime" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("timeStamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1014]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [963 1015])
                    ("private" label nil (reparse-symbol classsubparts) [1016 1024])
                    ("_time" variable (:type ("timeval" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1029 1043])
                    ("private" label nil (reparse-symbol classsubparts) [1045 1053])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1058 1076]))                  
                :type "class")
                nil [252 1079])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1099 1104]))                  
                :type "int")
                nil [1081 1105]))          
      :file "TimeStamp.h"
      :pointmax 1136
      :fsize 1135
      :lastmodtime '(23190 19729 863524 668000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CLOCKS_PER_SECOND" . ((number "1000000" 208 . 215)))
          ("ISEARCH_TIMESTAMP_H")
          )
)
    (semanticdb-table "TimeStamp.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/util/TimeStamp.h" include (:system-flag t) nil [1 32])
            ("iostream" include (:system-flag t) nil [33 52])
            ("sstream" include (:system-flag t) nil [53 71])
            ("stdio.h" include (:system-flag t) nil [72 90])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [92 112])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133 138]))                  
                :type "int")
                nil [113 139])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [155 160])
                    ("" variable (:type ("TimeStamp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [161 171]))                  
                :type "int")
                nil [141 172])
            ("TimeStamp" function
               (:constructor-flag t
                :parent "TimeStamp"
                :type ("TimeStamp" type (:type "class") nil nil))
                nil [174 239])
            ("TimeStamp" function
               (:constructor-flag t
                :parent "TimeStamp"
                :arguments 
                  ( ("timeStamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [262 280]))                  
                :type ("TimeStamp" type (:type "class") nil nil))
                nil [241 388])
            ("TimeStamp" function
               (:constructor-flag t
                :parent "TimeStamp"
                :arguments 
                  ( ("second" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [411 426])
                    ("us" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [427 438]))                  
                :type ("TimeStamp" type (:type "class") nil nil))
                nil [390 493])
            ("TimeStamp" function
               (:destructor-flag t
                :parent "TimeStamp"
                :type "void")
                nil [495 523])
            ("-" function
               (:operator-flag t
                :arguments 
                  ( ("l" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [558 577])
                    ("r" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [584 603]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [538 734])
            ("==" function
               (:operator-flag t
                :arguments 
                  ( ("l" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [754 773])
                    ("r" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [792 811]))                  
                :type "bool")
                nil [736 906])
            ("!=" function
               (:operator-flag t
                :arguments 
                  ( ("l" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [926 945])
                    ("r" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [964 983]))                  
                :type "bool")
                nil [908 1078])
            ("=" function
               (:operator-flag t
                :parent "TimeStamp"
                :arguments 
                  ( ("atime" variable
                       (:reference 1
                        :constant-flag t
                        :type ("timeval" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1114 1135]))                  
                :type ("TimeStamp" type (:type "class") nil nil))
                nil [1080 1225])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("out" variable
                       (:reference 1
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1249 1262])
                    ("timeStamp" variable
                       (:reference 1
                        :constant-flag t
                        :type ("TimeStamp" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1263 1290]))                  
                :type ("ostream" type (:type "class") nil nil))
                nil [1227 1378])
            ("setCurrentTimeStamp" function
               (:parent "TimeStamp"
                :type "void")
                nil [1380 1452])
            ("getFormatTime" function
               (:parent "TimeStamp"
                :type ("string" type (:type "class") nil nil))
                nil [1454 1881])
            ("getFormatTime" function
               (:parent "TimeStamp"
                :arguments 
                  ( ("timeStamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1920 1938]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [1883 2002])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2022 2027]))                  
                :type "int")
                nil [2004 2028]))          
      :file "TimeStamp.cpp"
      :pointmax 2030
      :fsize 2029
      :lastmodtime '(23190 19705 526526 156000)
      :unmatched-syntax nil)
    (semanticdb-table "Log.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_LOG_H_" variable (:constant-flag t) nil [32 46])
            ("alog/Logger.h" include (:system-flag t) nil [48 72])
            ("alog/Configurator.h" include (:system-flag t) nil [73 103])
            ("iostream" include (:system-flag t) nil [104 123])
            ("ALOG_CONF_FILE" variable (:constant-flag t) nil [133 147])
            ("HA3_LOG_SETUP" variable (:constant-flag t) nil [173 186])
            ("HA3_LOG_SETUP_TEMPLATE" variable (:constant-flag t) nil [277 299])
            ("HA3_LOG_SETUP_TEMPLATE_2" variable (:constant-flag t) nil [457 481])
            ("HA3_LOG_SETUP_TEMPLATE_3" variable (:constant-flag t) nil [656 680])
            ("HA3_ROOT_LOG_CONFIG" variable (:constant-flag t) nil [901 920])
            ("HA3_LOG_CONFIG" variable (:constant-flag t) nil [973 987])
            ("HA3_LOG_CONFIG_FROM_STRING" variable (:constant-flag t) nil [1582 1608])
            ("HA3_ROOT_LOG_SETLEVEL" variable (:constant-flag t) nil [2263 2284])
            ("HA3_LOG_DECLARE" variable (:constant-flag t) nil [2405 2420])
            ("ENSURE_STRING_LITERAL" variable (:constant-flag t) nil [2461 2482])
            ("HA3_LOG" variable (:constant-flag t) nil [2540 2547])
            ("HA3_DECLARE_AND_SETUP_LOGGER" variable (:constant-flag t) nil [2965 2993])
            ("HA3_LOG_SHUTDOWN" variable (:constant-flag t) nil [3081 3097])
            ("HA3_LOG_FLUSH" variable (:constant-flag t) nil [3134 3147]))          
      :file "Log.h"
      :pointmax 3183
      :fsize 3182
      :lastmodtime '(23161 28254 428722 924000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ALOG_CONF_FILE" . ((string "\"ha3_alog.conf\"" 148 . 163)))
          ("HA3_DECLARE_AND_SETUP_LOGGER" (spp-arg-list ("c") 2993 . 2996) . 
              ((STATIC "static" 2997 . 3003) (symbol "alog" 3004 . 3008) (punctuation ":" 3008 . 3009) (punctuation ":" 3009 . 3010) (symbol "Logger" 3010 . 3016) (punctuation "*" 3017 . 3018) (symbol "_logger" 3018 . 3025) (punctuation "=" 3035 . 3036) (symbol "alog" 3037 . 3041) (punctuation ":" 3041 . 3042) (punctuation ":" 3042 . 3043) (symbol "Logger" 3043 . 3049) (punctuation ":" 3049 . 3050) (punctuation ":" 3050 . 3051) (symbol "getLogger" 3051 . 3060) (semantic-list "(\"ha3.\" #c)" 3060 . 3071)))
          ("HA3_LOG_SHUTDOWN" (spp-arg-list nil 3097 . 3099) . 
              ((symbol "alog" 3100 . 3104) (punctuation ":" 3104 . 3105) (punctuation ":" 3105 . 3106) (symbol "Logger" 3106 . 3112) (punctuation ":" 3112 . 3113) (punctuation ":" 3113 . 3114) (symbol "shutdown" 3114 . 3122) (semantic-list "()" 3122 . 3124)))
          ("HA3_LOG_SETUP" (spp-arg-list ("n" "c") 186 . 192) . 
              ((symbol "alog" 194 . 198) (punctuation ":" 198 . 199) (punctuation ":" 199 . 200) (symbol "Logger" 200 . 206) (punctuation "*" 207 . 208) (symbol "c" 208 . 209) (punctuation ":" 209 . 210) (punctuation ":" 210 . 211) (symbol "_logger" 211 . 218) (punctuation "=" 225 . 226) (symbol "alog" 227 . 231) (punctuation ":" 231 . 232) (punctuation ":" 232 . 233) (symbol "Logger" 233 . 239) (punctuation ":" 239 . 240) (punctuation ":" 240 . 241) (symbol "getLogger" 241 . 250) (semantic-list "(\"ha3.\"#n \".\" #c)" 250 . 267)))
          ("HA3_LOG_FLUSH" (spp-arg-list nil 3147 . 3149) . 
              ((symbol "alog" 3150 . 3154) (punctuation ":" 3154 . 3155) (punctuation ":" 3155 . 3156) (symbol "Logger" 3156 . 3162) (punctuation ":" 3162 . 3163) (punctuation ":" 3163 . 3164) (symbol "flushAll" 3164 . 3172) (semantic-list "()" 3172 . 3174)))
          ("HA3_LOG_CONFIG_FROM_STRING" (spp-arg-list ("content") 1608 . 1617) . 
              ((DO "do" 1618 . 1620) (semantic-list "{                        \\
        try {                                                           \\
            alog::Configurator::configureLoggerFromString(content);     \\
        } catch(std::exception &e) {                                    \\
            std::cerr << \"WARN! Failed to configure logger!\"            \\
                      << e.what() << \",use default log conf.\"           \\
                      << std::endl;                                     \\
            HA3_ROOT_LOG_CONFIG();                                      \\
        }                                                               \\
    }" 1621 . 2245) (WHILE "while" 2245 . 2250) (semantic-list "(0)" 2250 . 2253)))
          ("HA3_LOG_SETUP_TEMPLATE_2" (spp-arg-list ("n" "c" "T1" "T2") 481 . 494) . 
              ((TEMPLATE "template" 495 . 503) (punctuation "<" 504 . 505) (TYPENAME "typename" 505 . 513) (symbol "T1" 514 . 516) (punctuation "," 516 . 517) (TYPENAME "typename" 518 . 526) (symbol "T2" 527 . 529) (punctuation ">" 529 . 530) (symbol "alog" 537 . 541) (punctuation ":" 541 . 542) (punctuation ":" 542 . 543) (symbol "Logger" 543 . 549) (punctuation "*" 550 . 551) (symbol "c" 551 . 552) (punctuation "<" 552 . 553) (symbol "T1" 553 . 555) (punctuation "," 555 . 556) (symbol "T2" 557 . 559) (punctuation ">" 559 . 560) (punctuation ":" 560 . 561) (punctuation ":" 561 . 562) (symbol "_logger" 562 . 569) (punctuation "=" 602 . 603) (symbol "alog" 604 . 608) (punctuation ":" 608 . 609) (punctuation ":" 609 . 610) (symbol "Logger" 610 . 616) (punctuation ":" 616 . 617) (punctuation ":" 617 . 618) (symbol "getLogger" 618 . 627) (semantic-list "(\"ha3.\" #n \".\"  #c)" 627 . 646)))
          ("HA3_LOG_CONFIG" (spp-arg-list ("filename") 987 . 997) . 
              ((DO "do" 998 . 1000) (semantic-list "{                           \\
        try {                                                   \\
            alog::Configurator::configureLogger(filename);      \\
        } catch(std::exception &e) {                            \\
            std::cerr << \"WARN! Failed to configure logger!\"    \\
                      << e.what() << \",use default log conf.\"   \\
                      << std::endl;                             \\
            HA3_ROOT_LOG_CONFIG();                              \\
        }                                                       \\
    }" 1001 . 1564) (WHILE "while" 1564 . 1569) (semantic-list "(0)" 1569 . 1572)))
          ("HA3_LOG_SETUP_TEMPLATE_3" (spp-arg-list ("n" "c" "T1" "T2" "T3") 680 . 697) . 
              ((TEMPLATE "template" 717 . 725) (punctuation "<" 726 . 727) (TYPENAME "typename" 727 . 735) (symbol "T1" 736 . 738) (punctuation "," 738 . 739) (TYPENAME "typename" 740 . 748) (symbol "T2" 749 . 751) (punctuation "," 751 . 752) (TYPENAME "typename" 753 . 761) (symbol "T3" 762 . 764) (punctuation ">" 764 . 765) (symbol "alog" 782 . 786) (punctuation ":" 786 . 787) (punctuation ":" 787 . 788) (symbol "Logger" 788 . 794) (punctuation "*" 795 . 796) (symbol "c" 796 . 797) (punctuation "<" 797 . 798) (symbol "T1" 798 . 800) (punctuation "," 800 . 801) (symbol "T2" 802 . 804) (punctuation "," 804 . 805) (symbol "T3" 806 . 808) (punctuation ">" 808 . 809) (punctuation ":" 809 . 810) (punctuation ":" 810 . 811) (symbol "_logger" 811 . 818) (punctuation "=" 847 . 848) (symbol "alog" 849 . 853) (punctuation ":" 853 . 854) (punctuation ":" 854 . 855) (symbol "Logger" 855 . 861) (punctuation ":" 861 . 862) (punctuation ":" 862 . 863) (symbol "getLogger" 863 . 872) (semantic-list "(\"ha3.\" #n \".\"  #c)" 872 . 891)))
          ("ISEARCH_LOG_H_")
          ("HA3_ROOT_LOG_SETLEVEL" (spp-arg-list ("level") 2284 . 2291) . 
              ((symbol "alog" 2331 . 2335) (punctuation ":" 2335 . 2336) (punctuation ":" 2336 . 2337) (symbol "Logger" 2337 . 2343) (punctuation ":" 2343 . 2344) (punctuation ":" 2344 . 2345) (symbol "getRootLogger" 2345 . 2358) (semantic-list "()" 2358 . 2360) (punctuation "-" 2360 . 2361) (punctuation ">" 2361 . 2362) (symbol "setLevel" 2362 . 2370) (semantic-list "(alog::LOG_LEVEL_##level)" 2370 . 2395)))
          ("HA3_LOG_DECLARE" (spp-arg-list nil 2420 . 2422) . 
              ((STATIC "static" 2423 . 2429) (symbol "alog" 2430 . 2434) (punctuation ":" 2434 . 2435) (punctuation ":" 2435 . 2436) (symbol "Logger" 2436 . 2442) (punctuation "*" 2443 . 2444) (symbol "_logger" 2444 . 2451)))
          ("ENSURE_STRING_LITERAL" (spp-arg-list ("x") 2482 . 2485) . 
              ((DO "do" 2487 . 2489) (semantic-list "{ (void) x \"\"; }" 2490 . 2506) (WHILE "while" 2507 . 2512) (semantic-list "(0)" 2512 . 2515)))
          ("HA3_LOG_SETUP_TEMPLATE" (spp-arg-list ("n" "c" "T") 299 . 308) . 
              ((TEMPLATE "template" 309 . 317) (punctuation "<" 318 . 319) (TYPENAME "typename" 319 . 327) (symbol "T" 328 . 329) (punctuation ">" 329 . 330) (symbol "alog" 339 . 343) (punctuation ":" 343 . 344) (punctuation ":" 344 . 345) (symbol "Logger" 345 . 351) (punctuation "*" 352 . 353) (symbol "c" 353 . 354) (punctuation "<" 354 . 355) (symbol "T" 355 . 356) (punctuation ">" 356 . 357) (punctuation ":" 357 . 358) (punctuation ":" 358 . 359) (symbol "_logger" 359 . 366) (punctuation "=" 405 . 406) (symbol "alog" 407 . 411) (punctuation ":" 411 . 412) (punctuation ":" 412 . 413) (symbol "Logger" 413 . 419) (punctuation ":" 419 . 420) (punctuation ":" 420 . 421) (symbol "getLogger" 421 . 430) (semantic-list "(\"ha3.\"#n \".\" #c)" 430 . 447)))
          ("HA3_ROOT_LOG_CONFIG" (spp-arg-list nil 920 . 922) . 
              ((symbol "alog" 923 . 927) (punctuation ":" 927 . 928) (punctuation ":" 928 . 929) (symbol "Configurator" 929 . 941) (punctuation ":" 941 . 942) (punctuation ":" 942 . 943) (symbol "configureRootLogger" 943 . 962) (semantic-list "()" 962 . 964)))
          ("HA3_LOG" (spp-arg-list ("level" "format" "args...") 2547 . 2571) . 
              ((DO "do" 2610 . 2612) (semantic-list "{                                                                \\
        ENSURE_STRING_LITERAL(format);                                  \\
        ALOG_LOG(_logger, alog::LOG_LEVEL_##level, format, ##args);     \\
    }" 2613 . 2833) (WHILE "while" 2834 . 2839) (semantic-list "(0)" 2840 . 2843)))
          )
))
  :file "!ssd!sdd!git!ha3!turing!ha3!ha3!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
