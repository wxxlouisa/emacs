;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SuezWorkerTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 31])
            ("ha3/test/test.h" include (:system-flag t) nil [32 58])
            ("ha3/worker/SuezWorker.h" include nil nil [59 93])
            ("ha3/worker/test/FakeSuezWorker.h" include nil nil [94 137])
            ("ha3/proto/BasicDefs.pb.h" include (:system-flag t) nil [138 173])
            ("arpc/ANetRPCController.h" include (:system-flag t) nil [174 209])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [211 231])
            ("suez" using (:type ("suez" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [232 253])
            ("multi_call" using (:type ("multi_call" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [254 281])
            ("testing" using (:type ("testing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [282 306])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [307 329])
            ("arpc" using (:type ("arpc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [330 351])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [352 382])
            ("autil::legacy::json" using (:type ("autil::legacy::json" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [383 419])
            ("amonitor::client" using (:type ("amonitor::client" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [420 453])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [472 478]))                  
                :type "int")
                nil [454 479])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [501 508]))                  
                :type "int")
                nil [481 509])
            ("SuezWorkerTest" type
               (:superclasses 
                  ( ("TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [552 559])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [564 577])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [582 598])
                    ("private" label nil (reparse-symbol classsubparts) [599 607])
                    ("isEqualJsonMap" function
                       (:prototype-flag t
                        :arguments 
                          ( ("current" variable
                               (:reference 1
                                :constant-flag t
                                :type ("JsonMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [632 655])
                            ("target" variable
                               (:reference 1
                                :constant-flag t
                                :type ("JsonMap" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [656 678]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [612 679])
                    ("private" label nil (reparse-symbol classsubparts) [680 688])
                    ("_indexProvider" variable (:type ("IndexProvider" type (:type "class") nil nil)) (reparse-symbol classsubparts) [693 722])
                    ("_resource" variable (:type ("ZoneResourcePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [727 753])
                    ("_searchService" variable (:type ("SearchServicePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [758 790])
                    ("_metricGather" variable (:type ("MetricGatherPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [795 825])
                    ("_workerMetricProvider" variable (:type ("MetricProviderPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [830 870])
                    ("private" label nil (reparse-symbol classsubparts) [871 879])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [884 902]))                  
                :type "class")
                nil [511 905])
            ("MockWorkerResource" type
               (:superclasses 
                  ( ("WorkerResource" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [958 965])
                    ("MOCK_CONST_METHOD0" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("getSessionPoolSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [989 1008])
                            ("" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1009 1019]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [970 1021])
                    ("MOCK_METHOD0" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("getRequestQueueSize" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1039 1059])
                            ("" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1060 1070]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1026 1072]))                  
                :type "class")
                nil [907 1075])
            ("HA3_TYPEDEF_PTR" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MockWorkerResource" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1093 1112]))                  
                :type "int")
                nil [1077 1113])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1129 1136])
                    ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1137 1152]))                  
                :type "int")
                nil [1115 1153])
            ("setUp" function
               (:parent "SuezWorkerTest"
                :type "void")
                nil [1155 1938])
            ("tearDown" function
               (:parent "SuezWorkerTest"
                :type "void")
                nil [1940 1975])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1984 1999])
                    ("" variable (:type ("testCheckTarget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2000 2016]))                  
                :type "int")
                nil [1977 2322])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2331 2346])
                    ("" variable (:type ("testNeedUpdateBizTarget" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2347 2371]))                  
                :type "int")
                nil [2324 6060])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6069 6084])
                    ("" variable (:type ("testUpdateCurrent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6085 6103]))                  
                :type "int")
                nil [6062 6354])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6363 6378])
                    ("" variable (:type ("testFillCurrent" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6379 6395]))                  
                :type "int")
                nil [6356 7334])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7343 7358])
                    ("" variable (:type ("testWeight" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7359 7370]))                  
                :type "int")
                nil [7336 7885])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7894 7909])
                    ("" variable (:type ("testTopoInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7910 7923]))                  
                :type "int")
                nil [7887 8276])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SuezWorkerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8285 8300])
                    ("" variable (:type ("testHealthCheck" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8301 8317]))                  
                :type "int")
                nil [8278 8733])
            ("isEqualJsonMap" function
               (:parent "SuezWorkerTest"
                :arguments 
                  ( ("current" variable
                       (:reference 1
                        :constant-flag t
                        :type ("JsonMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8771 8794])
                    ("target" variable
                       (:reference 1
                        :constant-flag t
                        :type ("JsonMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8795 8817]))                  
                :type "bool")
                nil [8735 9069])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :type "int")
                nil [9071 9091]))          
      :file "SuezWorkerTest.cpp"
      :pointmax 9092
      :fsize 9091
      :lastmodtime '(22505 58265 509847 924000)
      :unmatched-syntax '((thing 1017 . 1019) (thing 1068 . 1070)))
    (semanticdb-table "FakeSuezWorker.h"
      :file "FakeSuezWorker.h"
      :fsize 774
      :lastmodtime '(22505 58265 508847 926000)))
  :file "!ssd!sdd!git!ha3_suez!online2!ha3!ha3!worker!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
