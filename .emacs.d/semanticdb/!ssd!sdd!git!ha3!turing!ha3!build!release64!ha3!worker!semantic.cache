;; Object worker/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "worker/"
  :tables
  (list
    (semanticdb-table "WorkerParam.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/worker/WorkerParam.h" include (:system-flag t) nil [1 36])
            ("ha3/util/NetFunction.h" include (:system-flag t) nil [37 70])
            ("ha3/util/FileUtil.h" include (:system-flag t) nil [71 101])
            ("ha3/common/HaPathDefs.h" include (:system-flag t) nil [102 136])
            ("sap/util/environ_util.h" include (:system-flag t) nil [137 171])
            ("autil/StringUtil.h" include (:system-flag t) nil [172 201])
            ("unistd.h" include (:system-flag t) nil [202 221])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [223 243])
            ("sap" using (:type ("sap" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [244 264])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [265 287])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [288 318])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("proto" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [338 344]))                  
                :type "int")
                nil [320 345])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [364 369]))                  
                :type "int")
                nil [346 370])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [389 396]))                  
                :type "int")
                nil [371 397])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [419 426]))                  
                :type "int")
                nil [399 427])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [442 449])
                    ("" variable (:type ("WorkerParam" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [450 462]))                  
                :type "int")
                nil [428 463])
            ("WorkerParam::IP" variable
               (:constant-flag t
                :default-value "\"ip\""
                :type ("string" type (:type "class") nil nil))
                nil [465 501])
            ("WorkerParam::PORT" variable
               (:constant-flag t
                :default-value "\"port\""
                :type ("string" type (:type "class") nil nil))
                nil [502 542])
            ("WorkerParam::USER_NAME" variable
               (:constant-flag t
                :default-value "\"userName\""
                :type ("string" type (:type "class") nil nil))
                nil [543 592])
            ("WorkerParam::SERVICE_NAME" variable
               (:constant-flag t
                :default-value "\"serviceName\""
                :type ("string" type (:type "class") nil nil))
                nil [593 648])
            ("WorkerParam::ROLE_TYPE" variable
               (:constant-flag t
                :default-value "\"roleType\""
                :type ("string" type (:type "class") nil nil))
                nil [649 698])
            ("WorkerParam::EXTRA_TASK_QUEUE_CONFIG" variable
               (:constant-flag t
                :default-value "\"extraTaskQueues\""
                :type ("string" type (:type "class") nil nil))
                nil [699 769])
            ("WorkerParam::THREAD_NUMBER" variable
               (:constant-flag t
                :default-value "\"threadNum\""
                :type ("string" type (:type "class") nil nil))
                nil [770 824])
            ("WorkerParam::QUEUE_SIZE" variable
               (:constant-flag t
                :default-value "\"queueSize\""
                :type ("string" type (:type "class") nil nil))
                nil [825 876])
            ("WorkerParam::AMONITOR_PATH" variable
               (:constant-flag t
                :default-value "\"amonitorPath\""
                :type ("string" type (:type "class") nil nil))
                nil [877 934])
            ("WorkerParam::FLOW_CONTROL_THRESHOLD" variable
               (:constant-flag t
                :default-value "\"flowControlThreshold\""
                :type ("string" type (:type "class") nil nil))
                nil [935 1009])
            ("WorkerParam::WORKER_CONFIG_VERSION" variable
               (:constant-flag t
                :default-value "\"workerConfigVersion\""
                :type ("string" type (:type "class") nil nil))
                nil [1010 1082])
            ("WorkerParam::HEALTH_CHECK_PATH" variable
               (:constant-flag t
                :default-value "\"healthCheckPath\""
                :type ("string" type (:type "class") nil nil))
                nil [1083 1147])
            ("WorkerParam::IO_THREAD_NUM" variable
               (:constant-flag t
                :default-value "\"ioThreadNum\""
                :type ("string" type (:type "class") nil nil))
                nil [1148 1204])
            ("WorkerParam::IO_QUEUE_SIZE" variable
               (:constant-flag t
                :default-value "\"ioQueueSize\""
                :type ("string" type (:type "class") nil nil))
                nil [1205 1261])
            ("WorkerParam::DEFAULT_QUEUE_SIZE" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [1263 1317])
            ("WorkerParam::DEFAULT_FLOW_CONTROL_THRESHOLD" variable
               (:constant-flag t
                :default-value "10"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [1318 1382])
            ("getRoleType" function
               (:parent "WorkerParam"
                :type ("RoleType" type (:type "class") nil nil))
                nil [1384 1667])
            ("getWorkerParam" function
               (:parent "WorkerParam"
                :type ("WorkerParam" type (:type "class") nil nil))
                nil [1669 3780])
            ("validate" function
               (:parent "WorkerParam"
                :type "bool")
                nil [3782 4653])
            ("getIp" function
               (:parent "WorkerParam"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4655 4732])
            ("Jsonize" function
               (:parent "WorkerParam"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("autil::legacy::Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4760 4805]))                  
                :type "void")
                nil [4734 5364])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("worker" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5384 5391]))                  
                :type "int")
                nil [5366 5392]))          
      :file "WorkerParam.cpp"
      :pointmax 5393
      :fsize 5392
      :lastmodtime '(23208 53501 936111 40000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3!turing!ha3!build!release64!ha3!worker!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
