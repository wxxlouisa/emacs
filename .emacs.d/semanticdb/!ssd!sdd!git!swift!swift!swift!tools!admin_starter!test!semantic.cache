;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "HippoHelperTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/test/unittest.h" include nil nil [1 33])
            ("swift/tools/admin_starter/HippoHelper.h" include nil nil [34 84])
            ("swift/tools/admin_starter/test/MockHippoClient.h" include nil nil [85 144])
            ("hippo/proto/Common.pb.h" include (:system-flag t) nil [145 179])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [181 201])
            ("testing" using (:type ("testing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [202 226])
            ("fslib::fs" using (:type ("fslib::fs" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [227 253])
            ("swift" type
               (:members 
                  ( ("tools" type
                       (:members 
                          ( ("HippoHelperTest" type
                               (:superclasses 
                                  ( ("SWIFT_TESTBASE" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [339 346])
                                    ("setUp" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [351 364])
                                    ("tearDown" function
                                       (:prototype-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [369 385]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [291 388])
                            ("setUp" function
                               (:parent "HippoHelperTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [390 423])
                            ("tearDown" function
                               (:parent "HippoHelperTest"
                                :type "void")
                                (reparse-symbol namespacesubparts) [425 461])
                            ("ACTION_P2" function
                               (:arguments 
                                  ( ("" variable (:type ("SET_ERROR_INFO" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [473 488])
                                    ("" variable (:type ("errorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [489 499])
                                    ("" variable (:type ("errorMsg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [500 509]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [463 705])
                            ("HIPPO_HELPER_TEST_CALL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [715 737])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("stopApp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1696 1744])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("updateAdminConf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1746 1802])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("test" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("getAppStatus" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1804 1854])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1864 1880])
                                    ("" variable (:type ("testWriteVersionFile" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1881 1902]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1857 2256])
                            ("TEST_F" function
                               (:arguments 
                                  ( ("" variable (:type ("HippoHelperTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2265 2281])
                                    ("" variable (:type ("testStartApp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2282 2295]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2258 3169]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [272 3172]))                  
                :type "namespace")
                nil [254 3175]))          
      :file "HippoHelperTest.cpp"
      :pointmax 3177
      :fsize 3176
      :lastmodtime '(22583 51407 574077 580000)
      :unmatched-syntax '((thing 1744 . 1745) (thing 1802 . 1803) (thing 1854 . 1855) (thing 3172 . 3173) (thing 3175 . 3176))
      :lexical-table 
        '(("HIPPO_HELPER_TEST_CALL" (spp-arg-list ("helperMethod" "clientMethod") 773 . 801) . 
              ((symbol "TEST_F" 821 . 827) (semantic-list "(HippoHelperTest, test##helperMethod)" 827 . 864) (semantic-list "{                       \\
        string configPath = TEST_DATA_PATH\"/hippo_helper_test/\";        \\
        HippoHelper hippoHelper;                                        \\
        ASSERT_TRUE(hippoHelper.init(configPath));                      \\
        hippoHelper.writeVersionFile();                                 \\
        hippo::MockHippoClient *hippoClient = ASSERT_CAST_AND_RETURN(   \\
                hippo::MockHippoClient, hippoHelper._hippoClient);      \\
        EXPECT_CALL(*hippoClient, clientMethod(_, _))                   \\
            .WillOnce(SET_ERROR_INFO(hippo::proto::ERROR_NONE, \"\"))     \\
            .WillOnce(SET_ERROR_INFO(hippo::proto::ERROR_MASTER_NOT_LEADER, \"not leader\")); \\
        EXPECT_TRUE(hippoHelper.helperMethod());                        \\
        EXPECT_FALSE(hippoHelper.helperMethod());                       \\
    }" 865 . 1730)))
          )
)
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("Import" code nil nil [25 38])
            ("env" variable nil nil [39 56])
            ("libsname" variable nil nil [179 287]))          
      :file "SConscript"
      :pointmax 476
      :fsize 475
      :lastmodtime '(22583 51947 622278 272000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!swift!swift!tools!admin_starter!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
