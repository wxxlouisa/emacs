;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "SConscript"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [24 38])
            ("os" include nil nil [24 38])
            ("Import" code nil nil [81 94])
            ("copy" include nil nil [95 106])
            ("env" variable nil nil [206 223])
            ("config_cpp_template" variable nil nil [504 828])
            ("run" function (:arguments 
              ( ("cmd" variable nil (reparse-symbol function_parameters) [838 841]))              ) nil [830 1221])
            ("GenerateConfig" function nil nil [1222 2474])
            ("aGenConfig" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2490 2494])
                    ("args" variable nil (reparse-symbol function_parameters) [2496 2501])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2503 2511]))                  )
                nil [2475 2616])
            ("env" code nil nil [2616 2641])
            ("env" code nil nil [2642 2658])
            ("env" variable nil nil [2660 2691])
            ("if" code nil nil [2692 2806])
            ("if" code nil nil [2807 3118])
            ("env" code nil nil [3146 3163])
            ("env" code nil nil [3164 3181])
            ("env" code nil nil [3182 3201])
            ("env" code nil nil [3202 3219])
            ("env" code nil nil [3220 3238])
            ("env" code nil nil [3239 3263])
            ("env" code nil nil [3264 3283])
            ("env" code nil nil [3284 3304])
            ("env" code nil nil [3305 3325])
            ("env" code nil nil [3326 3345])
            ("env" code nil nil [3346 3366])
            ("env" code nil nil [3367 3385])
            ("env" code nil nil [3386 3404])
            ("env" code nil nil [3405 3424])
            ("env" code nil nil [3425 3441])
            ("env" code nil nil [3471 3495])
            ("env" code nil nil [3496 3524])
            ("env" code nil nil [3525 3544])
            ("env" code nil nil [3545 3564])
            ("libfake_entry" variable nil nil [3566 3684]))          
      :file "SConscript"
      :pointmax 3685
      :fsize 3684
      :lastmodtime '(22507 10557 798362 943000)
      :unmatched-syntax nil)
    (semanticdb-table "FakeEntry.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("suez/search/SearchManager.h" include (:system-flag t) nil [1 39])
            ("suez" type
               (:members 
                  ( ("FakeWorker" type
                       (:superclasses 
                          ( ("suez::SearchManager" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [107 114])
                            ("FakeWorker" function
                               (:constructor-flag t
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [119 139])
                            ("FakeWorker" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [144 165])
                            ("private" label nil (reparse-symbol classsubparts) [166 174])
                            ("FakeWorker" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FakeWorker" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [190 209]))                                  
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [179 210])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("FakeWorker" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [237 256]))                                  
                                :type ("FakeWorker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [215 257])
                            ("public" label nil (reparse-symbol classsubparts) [258 265])
                            ("update" function
                               (:arguments 
                                  ( ("indexProvider" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("suez::IndexProvider" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [297 338])
                                    ("target" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [370 413]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [285 447])
                            ("fillCurrent" function
                               (:arguments 
                                  ( ("current" variable
                                       (:reference 1
                                        :type ("autil::legacy::json::JsonMap" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [484 522]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [467 552])
                            ("stopService" function (:type "void") (reparse-symbol classsubparts) [572 598])
                            ("stopWorker" function (:type "void") (reparse-symbol classsubparts) [618 643])
                            ("remove" function
                               (:arguments 
                                  ( ("pid" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("suez::PartitionId" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [675 704]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [663 712]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [59 715])
                    ("createSearchManager" function
                       (:pointer 1
                        :type ("SearchManager" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [717 786]))                  
                :type "namespace")
                nil [41 789]))          
      :file "FakeEntry.cpp"
      :pointmax 790
      :fsize 789
      :lastmodtime '(22507 7237 10666 560000)
      :unmatched-syntax nil)
    (semanticdb-table "isearch.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_H_" variable (:constant-flag t) nil [28 38])
            ("stdint.h" include (:system-flag t) nil [40 59])
            ("map" include (:system-flag t) nil [60 74])
            ("string" include (:system-flag t) nil [75 92])
            ("indexlib/indexlib.h" include (:system-flag t) nil [93 123])
            ("tr1/memory" include (:system-flag t) nil [124 145])
            ("autil/LongHashValue.h" include (:system-flag t) nil [146 178])
            ("ha3/config.h" include (:system-flag t) nil [179 202])
            ("primarykey_t" type
               (:typedef ("autil::uint128_t" type (:type "class") nil nil)
                :type "typedef")
                nil [204 242])
            ("fieldboost_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [244 273])
            ("fieldbitmap_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [275 306])
            ("INVALID_FIELDBITMAP" variable
               (:constant-flag t
                :default-value "(fieldbitmap_t)0xFFFFFFFF"
                :type ("fieldbitmap_t" type (:type "class") nil nil))
                nil [307 375])
            ("score_t" type
               (:typedef ("double")
                :type "typedef")
                nil [377 400])
            ("operation_id_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [402 433])
            ("FullIndexVersion" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [434 468])
            ("quota_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [469 494])
            ("INVALID_OPERATION_ID" variable
               (:constant-flag t
                :default-value "-1"
                :type ("operation_id_t" type (:type "class") nil nil))
                nil [496 543])
            ("END_DOCID" variable (:constant-flag t) nil [553 562])
            ("MAX_QUOTA" variable (:constant-flag t) nil [593 602])
            ("UNINITIALIZED_DOCID" variable (:constant-flag t) nil [625 644])
            ("VariableType" type
               (:members 
                  ( ("vt_unknown" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [684 695])
                    ("vt_int8" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [700 708])
                    ("vt_int16" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [713 722])
                    ("vt_int32" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [727 736])
                    ("vt_int64" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [741 750])
                    ("vt_uint8" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [755 764])
                    ("vt_uint16" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [769 779])
                    ("vt_uint32" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [784 794])
                    ("vt_uint64" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [799 809])
                    ("vt_float" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [814 823])
                    ("vt_double" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [828 838])
                    ("vt_string" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [843 853])
                    ("vt_bool" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [858 866])
                    ("vt_hash_128" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [871 883])
                    ("vt_tracer" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [888 898])
                    ("vt_docidentifier" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [903 920])
                    ("vt_extradocidentifier" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [925 947])
                    ("vt_globalid" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [952 964])
                    ("vt_matchdata" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [969 982])
                    ("vt_simplematchdata" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [987 1006])
                    ("vt_distinctinfo" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1011 1027])
                    ("vt_func_template" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1032 1049])
                    ("vt_type_count" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1054 1068]))                  
                :type "enum")
                nil [660 1071])
            ("VRGroupKey" type
               (:members 
                  ( ("FOR_DISTINCT" variable
                       (:constant-flag t
                        :default-value (1110 1111)
                        :type "int")
                        (reparse-symbol enumsubparts) [1095 1111])
                    ("FOR_ATTRIBUTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1160 1174])
                    ("FOR_USER_DATA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1223 1237]))                  
                :type "enum")
                nil [1073 1284])
            ("QueryTermType" type
               (:members 
                  ( ("AND_TERM" variable
                       (:constant-flag t
                        :default-value (1322 1323)
                        :type "int")
                        (reparse-symbol enumsubparts) [1311 1323])
                    ("OR_TERM" variable
                       (:constant-flag t
                        :default-value (1339 1340)
                        :type "int")
                        (reparse-symbol enumsubparts) [1329 1340])
                    ("ANDNOT_TERM" variable
                       (:constant-flag t
                        :default-value (1360 1361)
                        :type "int")
                        (reparse-symbol enumsubparts) [1346 1361])
                    ("RANK_TERM" variable
                       (:constant-flag t
                        :default-value (1379 1380)
                        :type "int")
                        (reparse-symbol enumsubparts) [1367 1380]))                  
                :type "enum")
                nil [1286 1384])
            ("JoinType" type
               (:members 
                  ( ("DEFAULT_JOIN" variable
                       (:constant-flag t
                        :default-value (1421 1422)
                        :type "int")
                        (reparse-symbol enumsubparts) [1406 1422])
                    ("WEAK_JOIN" variable
                       (:constant-flag t
                        :default-value (1440 1441)
                        :type "int")
                        (reparse-symbol enumsubparts) [1428 1441])
                    ("STRONG_JOIN" variable
                       (:constant-flag t
                        :default-value (1461 1462)
                        :type "int")
                        (reparse-symbol enumsubparts) [1447 1462]))                  
                :type "enum")
                nil [1386 1465])
            ("SubDocDisplayType" type
               (:members 
                  ( ("SUB_DOC_DISPLAY_NO" variable
                       (:constant-flag t
                        :default-value (1517 1518)
                        :type "int")
                        (reparse-symbol enumsubparts) [1496 1518])
                    ("SUB_DOC_DISPLAY_FLAT" variable
                       (:constant-flag t
                        :default-value (1547 1548)
                        :type "int")
                        (reparse-symbol enumsubparts) [1524 1548])
                    ("SUB_DOC_DISPLAY_GROUP" variable
                       (:constant-flag t
                        :default-value (1578 1579)
                        :type "int")
                        (reparse-symbol enumsubparts) [1554 1579]))                  
                :type "enum")
                nil [1467 1582])
            ("TermType" type
               (:members 
                  ( ("TT_STRING" variable
                       (:constant-flag t
                        :default-value (1616 1617)
                        :type "int")
                        (reparse-symbol enumsubparts) [1604 1617])
                    ("TT_NUMBER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1623 1634]))                  
                :type "enum")
                nil [1584 1635])
            ("QueryType" type
               (:members 
                  ( ("TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (1671 1672)
                        :type "int")
                        (reparse-symbol enumsubparts) [1658 1672])
                    ("NUMBER_QUERY" variable
                       (:constant-flag t
                        :default-value (1693 1694)
                        :type "int")
                        (reparse-symbol enumsubparts) [1678 1694])
                    ("PHRASE_QUERY" variable
                       (:constant-flag t
                        :default-value (1715 1716)
                        :type "int")
                        (reparse-symbol enumsubparts) [1700 1716])
                    ("AND_QUERY" variable
                       (:constant-flag t
                        :default-value (1734 1735)
                        :type "int")
                        (reparse-symbol enumsubparts) [1722 1735])
                    ("OR_QUERY" variable
                       (:constant-flag t
                        :default-value (1752 1753)
                        :type "int")
                        (reparse-symbol enumsubparts) [1741 1753])
                    ("RANK_QUERY" variable
                       (:constant-flag t
                        :default-value (1772 1773)
                        :type "int")
                        (reparse-symbol enumsubparts) [1759 1773])
                    ("ANDNOT_QUERY" variable
                       (:constant-flag t
                        :default-value (1794 1795)
                        :type "int")
                        (reparse-symbol enumsubparts) [1779 1795]))                  
                :type "enum")
                nil [1637 1799])
            ("MatchDataLevel" type
               (:members 
                  ( ("MDL_NONE" variable
                       (:constant-flag t
                        :default-value (1838 1839)
                        :type "int")
                        (reparse-symbol enumsubparts) [1827 1839])
                    ("MDL_TERM" variable
                       (:constant-flag t
                        :default-value (1856 1857)
                        :type "int")
                        (reparse-symbol enumsubparts) [1845 1857])
                    ("MDL_SUB_QUERY" variable
                       (:constant-flag t
                        :default-value (1879 1880)
                        :type "int")
                        (reparse-symbol enumsubparts) [1863 1880]))                  
                :type "enum")
                nil [1801 1884])
            ("SyntaxExprType" type
               (:members 
                  ( ("SYNTAX_EXPR_TYPE_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1912 1937])
                    ("SYNTAX_EXPR_TYPE_CONST_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1942 1971])
                    ("SYNTAX_EXPR_TYPE_ATOMIC_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1976 2005])
                    ("SYNTAX_EXPR_TYPE_VIRTUAL_ATTR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2010 2040])
                    ("SYNTAX_EXPR_TYPE_MINUS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2045 2068])
                    ("SYNTAX_EXPR_TYPE_ADD" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2073 2094])
                    ("SYNTAX_EXPR_TYPE_DIV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2099 2120])
                    ("SYNTAX_EXPR_TYPE_MUL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2125 2146])
                    ("SYNTAX_EXPR_TYPE_EQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2151 2174])
                    ("SYNTAX_EXPR_TYPE_NOTEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2179 2205])
                    ("SYNTAX_EXPR_TYPE_LESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2210 2232])
                    ("SYNTAX_EXPR_TYPE_GREATERTHAN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2237 2266])
                    ("SYNTAX_EXPR_TYPE_LESSEQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2271 2298])
                    ("SYNTAX_EXPR_TYPE_GREATEREQUAL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2303 2333])
                    ("SYNTAX_EXPR_TYPE_AND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2338 2359])
                    ("SYNTAX_EXPR_TYPE_OR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2364 2384])
                    ("SYNTAX_EXPR_TYPE_RANK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2389 2411])
                    ("SYNTAX_EXPR_TYPE_BITAND" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2416 2440])
                    ("SYNTAX_EXPR_TYPE_BITOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2445 2468])
                    ("SYNTAX_EXPR_TYPE_BITXOR" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2473 2497])
                    ("SYNTAX_EXPR_TYPE_FUNC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2502 2524])
                    ("SYNTAX_EXPR_TYPE_FUNC_ARGUMENT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2529 2560]))                  
                :type "enum")
                nil [1886 2563])
            ("AtomicSyntaxExprType" type
               (:members 
                  ( ("UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2597 2605])
                    ("INTEGER_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2610 2624])
                    ("FLOAT_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2629 2641])
                    ("STRING_VALUE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2646 2659])
                    ("ATTRIBUTE_NAME" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2664 2679]))                  
                :type "enum")
                nil [2565 2682])
            ("FuncActionScopeType" type
               (:members 
                  ( ("FUNC_ACTION_SCOPE_MAIN_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2715 2742])
                    ("FUNC_ACTION_SCOPE_SUB_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2747 2773])
                    ("FUNC_ACTION_SCOPE_ADAPTER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2778 2804]))                  
                :type "enum")
                nil [2684 2807])
            ("HaCompressType" type
               (:members 
                  ( ("INVALID_COMPRESS_TYPE" variable
                       (:constant-flag t
                        :default-value (2859 2860)
                        :type "int")
                        (reparse-symbol enumsubparts) [2835 2860])
                    ("NO_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2866 2878])
                    ("Z_SPEED_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2883 2900])
                    ("Z_DEFAULT_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2905 2924])
                    ("SNAPPY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2929 2937]))                  
                :type "enum")
                nil [2809 2938])
            ("QueryOperator" type
               (:members 
                  ( ("OP_UNKNOWN" variable
                       (:constant-flag t
                        :default-value (2978 2979)
                        :type "int")
                        (reparse-symbol enumsubparts) [2965 2979])
                    ("OP_AND" variable
                       (:constant-flag t
                        :default-value (2994 2995)
                        :type "int")
                        (reparse-symbol enumsubparts) [2985 2995])
                    ("OP_OR" variable
                       (:constant-flag t
                        :default-value (3009 3010)
                        :type "int")
                        (reparse-symbol enumsubparts) [3001 3010]))                  
                :type "enum")
                nil [2940 3014])
            ("ResultFormatType" type
               (:members 
                  ( ("RF_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3044 3055])
                    ("RF_XML" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3060 3067])
                    ("RF_PROTOBUF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3072 3085]))                  
                :type "enum")
                nil [3016 3086])
            ("FetchSummaryType" type
               (:members 
                  ( ("BY_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3116 3127])
                    ("BY_DOCID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3132 3141])
                    ("BY_PK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3146 3152])
                    ("BY_RAWPK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3157 3167]))                  
                :type "enum")
                nil [3088 3168])
            ("QuotaMode" type
               (:members 
                  ( ("QM_PER_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3191 3202])
                    ("QM_PER_LAYER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3207 3220])
                    ("QM_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3225 3236]))                  
                :type "enum")
                nil [3170 3239])
            ("DispatchType" type
               (:members 
                  ( ("DISPATCH_BY_PARTITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3265 3287])
                    ("DISPATCH_BY_REPLICA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3292 3313]))                  
                :type "enum")
                nil [3241 3314])
            ("MergeInStep" type
               (:members 
                  ( ("MERGE_IN_STEP_FULL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3338 3357])
                    ("MERGE_IN_STEP_BEGIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3362 3382])
                    ("MERGE_IN_STEP_DOING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3387 3407])
                    ("MERGE_IN_STEP_END" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3412 3431]))                  
                :type "enum")
                nil [3316 3432])
            ("SEARCH_PHASE_ONE" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3433 3469])
            ("SEARCH_PHASE_TWO" variable
               (:constant-flag t
                :default-value "2"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3470 3506])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [3508 3563])
            ("getValueFromKeyValueMap" function
               (:typemodifiers ("inline")
                :constant-flag t
                :arguments 
                  ( ("keyValueMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3623 3677])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3686 3709])
                    ("defaultValue" variable
                       (:reference 1
                        :constant-flag t
                        :default-value "\"\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3718 3754]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [3564 3918])
            ("MAX_AGGREGATE_GROUP_COUNT" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3920 3968])
            ("DOCID_PARTITION_MODE" variable (:constant-flag t) nil [3978 3998])
            ("NULL_CLUSTER" variable (:constant-flag t) nil [4015 4027])
            ("BuildMode" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4047 4077])
            ("BuildPhase" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [4078 4109])
            ("hashid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4171 4197])
            ("clusterid_t" type
               (:typedef ("uint8_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4198 4226])
            ("INVALID_CLUSTERID" variable
               (:constant-flag t
                :default-value "(clusterid_t)-1"
                :type ("clusterid_t" type (:type "class") nil nil))
                nil [4227 4281])
            ("DEFAULT_BOOST_VALUE" variable
               (:constant-flag t
                :default-value "100"
                :type ("int32_t" type (:type "class") nil nil))
                nil [4283 4323])
            ("MAX_RERANK_SIZE" variable
               (:constant-flag t
                :default-value "1000000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4324 4365])
            ("MIN_INDEX_SWITCH_LIMIT" variable
               (:constant-flag t
                :default-value "150"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [4366 4410])
            ("NULL_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4473 4515])
            ("DYNAMIC_CUT_SEPARATOR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\\x1B\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4516 4572])
            ("LAYERKEY_DOCID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%docid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4573 4624])
            ("LAYERKEY_OTHER" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%other\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4625 4676])
            ("LAYERKEY_SEGMENTID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%segmentid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4677 4736])
            ("LAYERKEY_PERCENT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%percent\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4737 4792])
            ("LAYERKEY_UNSORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%unsorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4793 4850])
            ("LAYERKEY_SORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%sorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4851 4904])
            ("PLUGIN_PATH_NAME" variable (:constant-flag t) nil [4915 4931])
            ("DEFAULT_QRS_CHAIN" variable (:constant-flag t) nil [4952 4969])
            ("DEFAULT_DEBUG_QRS_CHAIN" variable (:constant-flag t) nil [4988 5011])
            ("DEFAULT_DEBUG_PROCESSOR" variable (:constant-flag t) nil [5058 5081])
            ("DEFAULT_DEBUG_RANK_PROFILE" variable (:constant-flag t) nil [5123 5149])
            ("DEFAULT_DEBUG_SCORER" variable (:constant-flag t) nil [5199 5219])
            ("DEFAULT_RANK_PROFILE" variable (:constant-flag t) nil [5261 5281])
            ("DEFAULT_SUMMARY_PROFILE" variable (:constant-flag t) nil [5308 5331])
            ("DEFAULT_CONFIG_DIR" variable (:constant-flag t) nil [5357 5375])
            ("LOCAL_URI_PREFIX" variable (:constant-flag t) nil [5400 5416])
            ("FETCHSUMMARY_GID_SEPERATOR" variable (:constant-flag t) nil [5436 5462])
            ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" variable (:constant-flag t) nil [5475 5512])
            ("BUILD_IN_REFERENCE_PREFIX" variable (:constant-flag t) nil [5526 5551])
            ("PROVIDER_VAR_NAME_PREFIX" variable (:constant-flag t) nil [5575 5599])
            ("BUILD_IN_JOIN_DOCID_REF_PREIX" variable (:constant-flag t) nil [5624 5653])
            ("BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [5679 5723])
            ("BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" variable (:constant-flag t) nil [5749 5796])
            ("STATUS_CHECK_PREFIX" variable (:constant-flag t) nil [5825 5844])
            ("HTTP_SUPPORT_PREFIX" variable (:constant-flag t) nil [5862 5881])
            ("LIST_CMD" variable (:constant-flag t) nil [5905 5913])
            ("GET_FILE_CONTENT_CMD" variable (:constant-flag t) nil [5927 5947])
            ("RESULT_FORMAT_XML" variable (:constant-flag t) nil [5964 5981])
            ("RESULT_FORMAT_PROTOBUF" variable (:constant-flag t) nil [5996 6018])
            ("LOCAL_USER_NAME_DEFAULT" variable (:constant-flag t) nil [6039 6062])
            ("LOCAL_SERVICE_NAME_DEFAULT" variable (:constant-flag t) nil [6076 6102])
            ("HEART_BEAT_META_INFO_KEY" variable (:constant-flag t) nil [6128 6152])
            ("HEART_BEAT_CLUSTER_NAME" variable (:constant-flag t) nil [6174 6197])
            ("RAW_DOCUMENT_FORMAT_HA3" variable (:constant-flag t) nil [6258 6281])
            ("RAW_DOCUMENT_FORMAT_ISEARCH" variable (:constant-flag t) nil [6296 6323])
            ("FSUTIL_BINARY" variable (:constant-flag t) nil [6343 6356])
            ("MAX_PARTITION_RANGE" variable
               (:constant-flag t
                :default-value "65535"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6372 6415])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "MAX_PARTITION_RANGE + 1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6416 6477])
            ("KEEP_INCREMENTAL_VERSION_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6875 6925])
            ("APP_ITERATOR_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6926 6975])
            ("BUILDER_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "500 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7048 7100])
            ("LOCAL_BUILDER_METRICS_STDOUT_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7109 7163])
            ("SERVER_TIMEOUT" variable
               (:constant-flag t
                :default-value "5 * 1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [7262 7302])
            ("FETCHSUMMARY_GID_FIELD_SIZE" variable
               (:constant-flag t
                :default-value "5"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7310 7357])
            ("STATUS_CHECK_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "6"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7358 7401])
            ("HTTP_SUPPORT_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "12"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7402 7446])
            ("GET_FILE_SIZE_LIMIT" variable
               (:constant-flag t
                :default-value "100 * 1024"
                :type ("int64_t" type (:type "class") nil nil))
                nil [7447 7494])
            ("DEFAULT_WORKER_RESOURCE" variable
               (:constant-flag t
                :default-value "100"
                :type "int")
                nil [7504 7544])
            ("DEFAULT_PARTITION_RESOURCE" variable
               (:constant-flag t
                :default-value "DEFAULT_WORKER_RESOURCE"
                :type "int")
                nil [7545 7608])
            ("HA3_REQUEST_VERSION" variable (:type "int") nil [8086 8106])
            ("DEFAULT_AMON_AGENT_PORT" variable
               (:constant-flag t
                :default-value "10086"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8169 8216])
            ("INVALID_SEARCHER_CACHE_EXPIRE_TIME" variable
               (:constant-flag t
                :default-value "uint32_t(-1)"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8218 8283])
            ("REALTIME_UNLIMIT_QPS" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8285 8325])
            ("DEFAULT_WORKER_CAPABILITY" variable
               (:constant-flag t
                :default-value "16"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8326 8372])
            ("HA3_VERSION" variable (:type "int") nil [8437 8449])
            ("DEFAULT_TASK_QUEUE_NAME" variable
               (:constant-flag t
                :default-value "\"__ha3_runtime_default_task_queue\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8450 8529])
            ("HA3_EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8531 8571])
            ("ONLINE_CONFIG_KEEP_COUNT" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [8573 8612]))          
      :file "isearch.h"
      :pointmax 8690
      :fsize 8689
      :lastmodtime '(22507 10724 692105 873000)
      :unmatched-syntax '((thing 7665 . 7666) (thing 7661 . 7665) (thing 7659 . 7660) (thing 7654 . 7658) (thing 7652 . 7653) (thing 7650 . 7651) (thing 7648 . 7649) (thing 7623 . 7647) (thing 7615 . 7622) (thing 7609 . 7614) (thing 7252 . 7253) (thing 7248 . 7252) (thing 7246 . 7247) (thing 7241 . 7245) (thing 7239 . 7240) (thing 7235 . 7238) (thing 7233 . 7234) (thing 7212 . 7232) (thing 7204 . 7211) (thing 7198 . 7203) (thing 7040 . 7041) (thing 7036 . 7040) (thing 7034 . 7035) (thing 7029 . 7033) (thing 7027 . 7028) (thing 7025 . 7026) (thing 7023 . 7024) (thing 6999 . 7022) (thing 6991 . 6998) (thing 6985 . 6990) (thing 6867 . 6868) (thing 6863 . 6867) (thing 6861 . 6862) (thing 6856 . 6860) (thing 6854 . 6855) (thing 6852 . 6853) (thing 6850 . 6851) (thing 6830 . 6849) (thing 6822 . 6829) (thing 6816 . 6821) (thing 6808 . 6809) (thing 6804 . 6808) (thing 6802 . 6803) (thing 6797 . 6801) (thing 6795 . 6796) (thing 6793 . 6794) (thing 6791 . 6792) (thing 6759 . 6790) (thing 6751 . 6758) (thing 6745 . 6750) (thing 6737 . 6738) (thing 6733 . 6737) (thing 6731 . 6732) (thing 6726 . 6730) (thing 6724 . 6725) (thing 6722 . 6723) (thing 6720 . 6721) (thing 6688 . 6719) (thing 6680 . 6687) (thing 6674 . 6679) (thing 6666 . 6667) (thing 6662 . 6666) (thing 6660 . 6661) (thing 6655 . 6659) (thing 6653 . 6654) (thing 6651 . 6652) (thing 6649 . 6650) (thing 6626 . 6648) (thing 6618 . 6625) (thing 6612 . 6617) (thing 6603 . 6604) (thing 6599 . 6603) (thing 6597 . 6598) (thing 6592 . 6596) (thing 6590 . 6591) (thing 6587 . 6589) (thing 6585 . 6586) (thing 6561 . 6584) (thing 6553 . 6560) (thing 6547 . 6552) (thing 6539 . 6540) (thing 6535 . 6539) (thing 6533 . 6534) (thing 6528 . 6532) (thing 6526 . 6527) (thing 6524 . 6525) (thing 6522 . 6523) (thing 6492 . 6521) (thing 6484 . 6491) (thing 6478 . 6483) (thing 4470 . 4471) (thing 4466 . 4470) (thing 4464 . 4465) (thing 4459 . 4463) (thing 4457 . 4458) (thing 4455 . 4456) (thing 4453 . 4454) (thing 4426 . 4452) (thing 4417 . 4425) (thing 4411 . 4416) (thing 8374 . 8379) (thing 8380 . 8383) (thing 8383 . 8384) (thing 8384 . 8385) (thing 8385 . 8391) (thing 8392 . 8411) (thing 8412 . 8413) (thing 8414 . 8436) (thing 8613 . 8618) (thing 8619 . 8626) (thing 8627 . 8655) (thing 8656 . 8657) (thing 8658 . 8660) (thing 8661 . 8662) (thing 8663 . 8667) (thing 8668 . 8669) (thing 8670 . 8674) (thing 8674 . 8675))
      :lexical-table 
        '(("END_DOCID" . ((semantic-list "((docid_t)0x7FFFFFFF)" 563 . 584)))
          ("DEFAULT_DEBUG_QRS_CHAIN" . ((string "\"_@_build_in_DebugQueryMatchQrsChain\"" 5012 . 5049)))
          ("DEFAULT_CONFIG_DIR" . ((string "\"default_conf/\"" 5376 . 5391)))
          ("DEFAULT_DEBUG_PROCESSOR" . ((string "\"_@_build_in_MatchInfoProcessor\"" 5082 . 5114)))
          ("MAX_QUOTA" . ((semantic-list "((quota_t)-1)" 603 . 616)))
          ("NULL_CLUSTER" . ((string "\"\"" 4028 . 4030)))
          ("BUILD_IN_REFERENCE_PREFIX" . ((string "\"_@_build_in_\"" 5552 . 5566)))
          ("GET_FILE_CONTENT_CMD" . ((string "\"file\"" 5948 . 5954)))
          ("RESULT_FORMAT_XML" . ((string "\"xml\"" 5982 . 5987)))
          ("DOCID_PARTITION_MODE" . ((string "\"docid\"" 3999 . 4006)))
          ("DEFAULT_QRS_CHAIN" . ((string "\"DEFAULT\"" 4970 . 4979)))
          ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" . ((string "\"_\"" 5513 . 5516)))
          ("DEFAULT_DEBUG_RANK_PROFILE" . ((string "\"_@_build_in_DebugQueryMatchRankProfile\"" 5150 . 5190)))
          ("FETCHSUMMARY_GID_SEPERATOR" . ((string "\"|\"" 5463 . 5466)))
          ("LOCAL_USER_NAME_DEFAULT" . ((string "\"ha\"" 6063 . 6067)))
          ("RAW_DOCUMENT_FORMAT_ISEARCH" . ((string "\"isearch\"" 6324 . 6333)))
          ("ISEARCH_H_")
          ("DEFAULT_SUMMARY_PROFILE" . ((string "\"DefaultProfile\"" 5332 . 5348)))
          ("PROVIDER_VAR_NAME_PREFIX" . ((string "\"_@_user_data_\"" 5600 . 5615)))
          ("RESULT_FORMAT_PROTOBUF" . ((string "\"protobuf\"" 6019 . 6029)))
          ("LOCAL_SERVICE_NAME_DEFAULT" . ((string "\"local_service\"" 6103 . 6118)))
          ("HEART_BEAT_META_INFO_KEY" . ((string "\"WorkerInfo\"" 6153 . 6165)))
          ("HEART_BEAT_CLUSTER_NAME" . ((string "\"__ha3_admin_cluster_name_\"" 6198 . 6225)))
          ("PLUGIN_PATH_NAME" . ((string "\"plugins/\"" 4932 . 4942)))
          ("HTTP_SUPPORT_PREFIX" . ((string "\"httpsupport:\"" 5882 . 5896)))
          ("RAW_DOCUMENT_FORMAT_HA3" . ((string "\"ha3\"" 6282 . 6287)))
          ("FSUTIL_BINARY" . ((string "\"fs_util_bin\"" 6357 . 6370)))
          ("BUILD_IN_JOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_join_docid_\"" 5724 . 5740)))
          ("LIST_CMD" . ((string "\"ls\"" 5914 . 5918)))
          ("DEFAULT_RANK_PROFILE" . ((string "\"DefaultProfile\"" 5282 . 5298)))
          ("BUILD_IN_JOIN_DOCID_REF_PREIX" . ((string "\"_@_join_docid_\"" 5654 . 5670)))
          ("UNINITIALIZED_DOCID" . ((semantic-list "((docid_t)-2)" 645 . 658)))
          ("DEFAULT_DEBUG_SCORER" . ((string "\"_@_build_in_RecordInfoScorer\"" 5221 . 5251)))
          ("BUILD_IN_SUBJOIN_DOCID_VIRTUAL_ATTR_NAME_PREFIX" . ((string "\"_@_subjoin_docid_\"" 5797 . 5816)))
          ("STATUS_CHECK_PREFIX" . ((string "\"status\"" 5845 . 5853)))
          ("LOCAL_URI_PREFIX" . ((string "\"file://\"" 5417 . 5426)))
          )
)
    (semanticdb-table "version.h.in"
      :major-mode 'c++-mode
      :tags 
        '( ("HA_BUILD_SIGNATURE" variable (:constant-flag t) nil [9 27]))          
      :file "version.h.in"
      :pointmax 51
      :fsize 50
      :lastmodtime '(22507 7237 108666 448000)
      :unmatched-syntax nil
      :lexical-table 
        '(("HA_BUILD_SIGNATURE" . ((string "\"@HA_BUILD_SIGNATURE@\"" 28 . 50)))
          )
)
    (semanticdb-table "config.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_CONFIG_H_" variable (:constant-flag t) nil [36 53])
            ("HA3_VERSION" variable (:constant-flag t) nil [63 74])
            ("HA3_MAJOR_VERSION" variable (:constant-flag t) nil [99 116])
            ("HA3_MINOR_VERSION" variable (:constant-flag t) nil [127 144])
            ("HA3_MICRO_VERSION" variable (:constant-flag t) nil [155 172])
            ("HA3_REQUEST_VERSION" variable (:constant-flag t) nil [183 202]))          
      :file "config.h"
      :pointmax 219
      :fsize 218
      :lastmodtime '(22543 16619 260559 320000)
      :unmatched-syntax nil
      :lexical-table 
        '(("HA3_VERSION" . ((string "\"release-3.0.0\"" 75 . 90)))
          ("HA3_MAJOR_VERSION" . ((number "3" 117 . 118)))
          ("HA3_MICRO_VERSION" . ((number "0" 173 . 174)))
          ("ISEARCH_CONFIG_H_")
          ("HA3_REQUEST_VERSION" . ((number "2100001" 203 . 210)))
          ("HA3_MINOR_VERSION" . ((number "0" 145 . 146)))
          )
)
    (semanticdb-table "config.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ha3/config.h" include (:system-flag t) nil [2 25])
            ("ha3/common.h" include (:system-flag t) nil [26 49])
            ("string" include (:system-flag t) nil [50 67])
            ("ha3_version" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"ha3-release-3.0.0-rc_12\""
                :type ("std::string" type (:type "class") nil nil))
                nil [94 159])
            ("current_git_status" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"On branch feature/ha3_suez_dev\\nYour branch is up-to-date with \\'origin/feature/ha3_suez_dev\\'.\\nChanges not staged for commit:\\n  (use \\\"git add <file>...\\\" to update what will be committed)\\n  (use \\\"git checkout -- <file>...\\\" to discard changes in working directory)\\n\\n	modified:   ../../../ha3/isearch.h\\n	modified:   ../../../ha3/service/QrsSearcherProcessDelegation.cpp\\n	modified:   ../../../ha3/service/QrsSearcherProcessDelegation.h\\n\\nUntracked files:\\n  (use \\\"git add <file>...\\\" to include in what will be committed)\\n\\n	../../../heartbeat/\\n	../../../local_search_12000/\\n	../../../nohup.out\\n	../../../searcher_cfg/\\n	../../../searcher_cfg_12000/\\n	../../../test/\\n	../../../tools/share/\\n\\nno changes added to commit (use \\\"git add\\\" and/or \\\"git commit -a\\\")\\n\""
                :type ("std::string" type (:type "class") nil nil))
                nil [160 988])
            ("current_git_log" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"commit 3b72c7f24881b0bd82f9bf50e033013467e9e370\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Tue Sep 27 11:09:05 2016 +0800\\n\\n    update local searcher\\n\\ncommit 1644be94885ff5b81ab2f6c2ad402e14e3355abf\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Mon Sep 26 20:03:31 2016 +0800\\n\\n    remove debug info\\n\\ncommit 327015fc510649080163f4c6f91206b27e7d9c59\\nMerge: a5cff68 417ebd3\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Mon Sep 26 19:12:18 2016 +0800\\n\\n    Merge branch \\'feature/ha3_suez_dev\\' of gitlab.alibaba-inc.com:isearch/ha3 into feature/ha3_suez_dev\\n\\ncommit a5cff68f30170d60be345d04265123aec1fee193\\nAuthor: 栋宇 <dongdong.shan@alibaba-inc.com>\\nDate:   Mon Sep 26 19:11:54 2016 +0800\\n\\n    add local search\\n\\ncommit 417ebd338ff1839ce496d6d578fb1f147938a333\\nMerge: 31f3dd2 ef570af\\nAuthor: 朱斌 <doranbin.zhu@alibaba-inc.com>\\nDate:   Fri Sep 23 15:12:09 2016 +0800\\n\\n    Merge branch \\'feature/ha3_suez_dev\\' of gitlab.alibaba-inc.com:isearch/ha3 into feature/ha3_suez_dev\\n\""
                :type ("std::string" type (:type "class") nil nil))
                nil [989 2051]))          
      :file "config.cpp"
      :pointmax 2075
      :fsize 1811
      :lastmodtime '(22543 16619 291559 279000)
      :unmatched-syntax '((thing 2053 . 2074) (thing 69 . 92)))
    (semanticdb-table "common.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_COMMON_H_" variable (:constant-flag t) nil [35 52])
            ("ha3/config.h" include (:system-flag t) nil [54 77])
            ("autil/CommonMacros.h" include (:system-flag t) nil [78 109])
            ("BEGIN_HA3_NAMESPACE" variable (:constant-flag t) nil [119 138])
            ("END_HA3_NAMESPACE" variable (:constant-flag t) nil [184 201])
            ("USE_HA3_NAMESPACE" variable (:constant-flag t) nil [217 234])
            ("BEGIN_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [274 297])
            ("END_ISEARCH_NAMESPACE" variable (:constant-flag t) nil [326 347])
            ("ALIAS_NAMESAPCE" variable (:constant-flag t) nil [359 374])
            ("HA3_NS" variable (:constant-flag t) nil [467 473])
            ("tr1/memory" include (:system-flag t) nil [489 510])
            ("HA3_TYPEDEF_PTR" variable (:constant-flag t) nil [519 534]))          
      :file "common.h"
      :pointmax 608
      :fsize 607
      :lastmodtime '(22468 63444 616838 334000)
      :unmatched-syntax nil
      :lexical-table 
        '(("BEGIN_ISEARCH_NAMESPACE" . 
              ((NAMESPACE "namespace" 298 . 307) (symbol "isearch" 308 . 315) (open-paren "{" 316 . 317)))
          ("USE_HA3_NAMESPACE" (spp-arg-list ("x") 234 . 237) . 
              ((USING "using" 238 . 243) (NAMESPACE "namespace" 244 . 253) (symbol "isearch" 254 . 261) (punctuation ":" 261 . 262) (punctuation ":" 262 . 263) (symbol "x" 263 . 264)))
          ("END_ISEARCH_NAMESPACE" . ((close-paren "}" 348 . 349)))
          ("ISEARCH_COMMON_H_")
          ("BEGIN_HA3_NAMESPACE" (spp-arg-list ("x") 138 . 141) . 
              ((NAMESPACE "namespace" 142 . 151) (symbol "isearch" 152 . 159) (open-paren "{" 160 . 161) (NAMESPACE "namespace" 162 . 171) (symbol "x" 172 . 173) (open-paren "{" 174 . 175)))
          ("ALIAS_NAMESAPCE" (spp-arg-list ("x" "y") 374 . 380) . 
              ((NAMESPACE "namespace" 381 . 390) (symbol "isearch" 391 . 398) (semantic-list "{ namespace x = y; }" 399 . 419)))
          ("HA3_TYPEDEF_PTR" (spp-arg-list ("x") 534 . 537) . 
              ((TYPEDEF "typedef" 538 . 545) (symbol "std" 546 . 549) (punctuation ":" 549 . 550) (punctuation ":" 550 . 551) (symbol "tr1" 551 . 554) (punctuation ":" 554 . 555) (punctuation ":" 555 . 556) (symbol "shared_ptr" 556 . 566) (punctuation "<" 566 . 567) (symbol "x" 567 . 568) (punctuation ">" 568 . 569) (spp-symbol-merge ((symbol "x" 570 . 571) (symbol "Ptr" 573 . 576)) 570 . 576) (punctuation ";" 576 . 577)))
          ("END_HA3_NAMESPACE" (spp-arg-list ("x") 201 . 204) . ((close-paren "}" 205 . 206) (close-paren "}" 207 . 208)))
          ("HA3_NS" (spp-arg-list ("x") 473 . 476) . 
              ((symbol "isearch" 477 . 484) (punctuation ":" 484 . 485) (punctuation ":" 485 . 486) (symbol "x" 486 . 487)))
          )
))
  :file "!ssd!sdd!git!ha3_suez!online!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
