;; Object simple_master/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "simple_master/"
  :tables
  (list
    (semanticdb-table "AppPlan.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("master_framework/AppPlan.h" include nil nil [1 38])
            ("common/Log.h" include nil nil [39 62])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [64 86])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [87 107])
            ("autil::legacy" using (:type ("autil::legacy" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [108 138])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173 187]))                  
                :type "int")
                nil [140 188])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [217 231])
                    ("" variable (:type ("AppPlan" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [232 240]))                  
                :type "int")
                nil [190 241])
            ("AppPlan" function
               (:constructor-flag t
                :parent "AppPlan"
                :type ("AppPlan" type (:type "class") nil nil))
                nil [243 265])
            ("AppPlan" function
               (:destructor-flag t
                :parent "AppPlan"
                :type "void")
                nil [267 290])
            ("Jsonize" function
               (:parent "AppPlan"
                :arguments 
                  ( ("json" variable
                       (:reference 1
                        :type ("Jsonizable::JsonWrapper" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [314 344]))                  
                :type "void")
                nil [292 503])
            ("fromString" function
               (:parent "AppPlan"
                :arguments 
                  ( ("content" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [530 552]))                  
                :type "bool")
                nil [505 853])
            ("==" function
               (:operator-flag t
                :parent "AppPlan"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [882 905]))                  
                :type "bool")
                nil [855 972])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1005 1019]))                  
                :type "int")
                nil [974 1020]))          
      :file "AppPlan.cpp"
      :pointmax 1022
      :fsize 1021
      :lastmodtime '(23846 52221 754299 648000)
      :unmatched-syntax nil)
    (semanticdb-table "SimpleMasterScheduler.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("common/Log.h" include nil nil [1 24])
            ("master_framework/SimpleMasterScheduler.h" include nil nil [25 76])
            ("autil/StringUtil.h" include (:system-flag t) nil [77 106])
            ("fslib/fslib.h" include (:system-flag t) nil [107 131])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [133 153])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [154 176])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [177 199])
            ("USE_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [231 243]))                  
                :type "int")
                nil [200 244])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [278 292]))                  
                :type "int")
                nil [245 293])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [322 336])
                    ("" variable (:type ("SimpleMasterScheduler" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [337 359]))                  
                :type "int")
                nil [295 360])
            ("SimpleMasterScheduler" function
               (:constructor-flag t
                :parent "SimpleMasterScheduler"
                :type ("SimpleMasterScheduler" type (:type "class") nil nil))
                nil [362 576])
            ("SimpleMasterScheduler" function
               (:destructor-flag t
                :parent "SimpleMasterScheduler"
                :type "void")
                nil [578 641])
            ("init" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("hippoZkRoot" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [685 716])
                    ("" variable (:type ("WF_NS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [725 743])
                    ("leaderChecker" variable
                       (:pointer 1
                        :type ("LeaderChecker" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [745 774])
                    ("applicationId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [783 816]))                  
                :type "bool")
                nil [643 1062])
            ("start" function
               (:parent "SimpleMasterScheduler"
                :type "bool")
                nil [1064 1253])
            ("stop" function
               (:parent "SimpleMasterScheduler"
                :type "bool")
                nil [1255 1382])
            ("getRoleSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("roleName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1430 1453]))                  
                :type ("SlotInfos" type (:type "class") nil nil))
                nil [1384 1676])
            ("getAllRoleSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("roleSlots" variable
                       (:reference 1
                        :type ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("SlotInfos" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1731 1765]))                  
                :type "void")
                nil [1678 1827])
            ("setAppPlan" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("appPlan" variable
                       (:reference 1
                        :constant-flag t
                        :type ("AppPlan" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1868 1891]))                  
                :type "void")
                nil [1829 2545])
            ("updateScheduleUnits" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("rolePlans" variable
                       (:reference 1
                        :constant-flag t
                        :type ("RolePlanMap" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2604 2633]))                  
                :type "void")
                nil [2547 4205])
            ("releaseSlots" function
               (:parent "SimpleMasterScheduler"
                :arguments 
                  ( ("slots" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("hippo::SlotId" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4248 4283])
                    ("pref" variable
                       (:reference 1
                        :constant-flag t
                        :type ("hippo::ReleasePreference" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4292 4329]))                  
                :type "void")
                nil [4207 4389])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4422 4436]))                  
                :type "int")
                nil [4391 4437]))          
      :file "SimpleMasterScheduler.cpp"
      :pointmax 4439
      :fsize 4438
      :lastmodtime '(23846 52221 755299 611000)
      :unmatched-syntax '((thing 744 . 745) (thing 743 . 744) (thing 730 . 743)))
    (semanticdb-table "RoleManager.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("simple_master/RoleManager.h" include nil nil [1 39])
            ("common/Log.h" include nil nil [40 63])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [65 85])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [119 133]))                  
                :type "int")
                nil [86 134])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [163 177])
                    ("" variable (:type ("RoleManager" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178 190]))                  
                :type "int")
                nil [136 191])
            ("RoleManager" function
               (:constructor-flag t
                :parent "RoleManager"
                :type ("RoleManager" type (:type "class") nil nil))
                nil [193 223])
            ("RoleManager" function
               (:destructor-flag t
                :parent "RoleManager"
                :type "void")
                nil [225 256])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("simple_master" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [289 303]))                  
                :type "int")
                nil [258 304]))          
      :file "RoleManager.cpp"
      :pointmax 306
      :fsize 305
      :lastmodtime '(23846 52221 755299 611000)
      :unmatched-syntax nil)
    (semanticdb-table "RoleManager.h"
      :file "RoleManager.h"
      :fsize 1800
      :lastmodtime '(23846 52221 755299 611000)))
  :file "!swift_develop!swift_func_test!temp!source_code!master_framework!src!simple_master!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
