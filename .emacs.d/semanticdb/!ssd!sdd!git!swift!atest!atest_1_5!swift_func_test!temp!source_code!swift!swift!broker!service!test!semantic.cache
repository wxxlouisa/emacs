;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "BrokerPartitionTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("swift/common/Common.h" include nil nil [1 33])
            ("swift/common/Log.h" include nil nil [34 63])
            ("swift/test/unittest.h" include nil nil [64 96])
            ("swift/broker/service/BrokerPartition.h" include nil nil [97 146])
            ("swift/test/test.h" include nil nil [147 175])
            ("swift/protocol/test/MessageCreator.h" include nil nil [176 223])
            ("swift/broker/service/test/FakeClosure.h" include nil nil [224 274])
            ("swift/common/FieldGroupWriter.h" include nil nil [275 317])
            ("swift/protocol/MessageCompressor.h" include nil nil [318 363])
            ("swift/protocol/MessageUtil.h" include nil nil [364 403])
            ("autil/ZlibCompressor.h" include nil nil [404 437])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [439 459])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [460 482])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [503 510]))                  
                :type "int")
                nil [483 511])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [532 537]))                  
                :type "int")
                nil [512 538])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("protocol" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [559 568]))                  
                :type "int")
                nil [539 569])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("storage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [590 598]))                  
                :type "int")
                nil [570 599])
            ("SWIFT_USE_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [620 627]))                  
                :type "int")
                nil [600 628])
            ("SWIFT_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [651 659]))                  
                :type "int")
                nil [629 660])
            ("BrokerPartitionTest" type
               (:superclasses 
                  ( ("SWIFT_TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [714 721])
                    ("BrokerPartitionTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("BrokerPartitionTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [726 748])
                    ("BrokerPartitionTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [753 776])
                    ("public" label nil (reparse-symbol classsubparts) [777 784])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [789 802])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [807 823])
                    ("protected" label nil (reparse-symbol classsubparts) [824 834])
                    ("getMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [870 897])
                            ("startId" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [933 950])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [951 966]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [839 967])
                    ("sendMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1004 1031])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1032 1047]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [972 1048])
                    ("sendMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1085 1112])
                            ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1113 1128])
                            ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1165 1189])
                            ("compressMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1190 1214])
                            ("compressRequest" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1252 1280])
                            ("errorMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1282 1303])
                            ("mergeMsg" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1341 1362]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1053 1364])
                    ("getMaxMessageId" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1405 1432])
                            ("msgId" variable
                               (:reference 1
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1433 1448]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1369 1449])
                    ("getMinMessageIdByTime" function
                       (:prototype-flag t
                        :arguments 
                          ( ("partition" variable
                               (:reference 1
                                :type ("BrokerPartition" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1496 1523])
                            ("timestamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1536 1554])
                            ("msgId" variable
                               (:reference 1
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1555 1570]))                          
                        :type ("protocol::ErrorCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1454 1571])
                    ("protected" label nil (reparse-symbol classsubparts) [1572 1582])
                    ("_config" variable (:type ("config::BrokerConfig" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1587 1616])
                    ("protected" label nil (reparse-symbol classsubparts) [1617 1627])
                    ("SWIFT_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1632 1652]))                  
                :type "class")
                nil [662 1655])
            ("SWIFT_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1673 1681])
                    ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1682 1702]))                  
                :type "int")
                nil [1657 1703])
            ("BrokerPartitionTest" function
               (:constructor-flag t
                :parent "BrokerPartitionTest"
                :type ("BrokerPartitionTest" type (:type "class") nil nil))
                nil [1706 1752])
            ("BrokerPartitionTest" function
               (:destructor-flag t
                :parent "BrokerPartitionTest"
                :type "void")
                nil [1754 1801])
            ("setUp" function
               (:parent "BrokerPartitionTest"
                :type "void")
                nil [1803 1873])
            ("tearDown" function
               (:parent "BrokerPartitionTest"
                :type "void")
                nil [1875 1950])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1959 1979])
                    ("" variable (:type ("testSentAndGetMessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1980 2002]))                  
                :type "int")
                nil [1952 3380])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3389 3409])
                    ("" variable (:type ("testPreparePartitionConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3410 3437]))                  
                :type "int")
                nil [3382 7641])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7650 7670])
                    ("" variable (:type ("testInitWithSecurityMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7671 7696]))                  
                :type "int")
                nil [7643 8890])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8899 8919])
                    ("" variable (:type ("testGetMessageWithCompress" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8920 8947]))                  
                :type "int")
                nil [8892 10966])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10975 10995])
                    ("" variable (:type ("testCompressRequestLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10996 11021]))                  
                :type "int")
                nil [10968 12726])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12735 12755])
                    ("" variable (:type ("testCompressMessageLevel" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12756 12781]))                  
                :type "int")
                nil [12728 15366])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15375 15395])
                    ("" variable (:type ("testCompressMessageLevelFiledFilter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15396 15432]))                  
                :type "int")
                nil [15368 18714])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18723 18743])
                    ("" variable (:type ("testCompressMessageLevelWithErrorDecodeError" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18744 18789]))                  
                :type "int")
                nil [18716 21742])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21751 21771])
                    ("" variable (:type ("testSentAndGetMergeMessage_PB" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21772 21802]))                  
                :type "int")
                nil [21744 33437])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("BrokerPartitionTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33446 33466])
                    ("" variable (:type ("testSentAndGetMergeMessage_FB" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33467 33497]))                  
                :type "int")
                nil [33439 46778])
            ("getMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [46822 46849])
                    ("startId" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46887 46904])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46905 46920]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [46780 47104])
            ("sendMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47149 47176])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47177 47192]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [47106 47569])
            ("sendMessage" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47614 47641])
                    ("count" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47642 47657])
                    ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [47666 47685])
                    ("compressMsg" variable (:type "bool") (reparse-symbol arg-sub-list) [47686 47703])
                    ("compressRequest" variable (:type "bool") (reparse-symbol arg-sub-list) [47704 47725])
                    ("errorMsgCompress" variable (:type "bool") (reparse-symbol arg-sub-list) [47726 47748])
                    ("mergeMessage" variable (:type "bool") (reparse-symbol arg-sub-list) [47757 47775]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [47571 49218])
            ("getMaxMessageId" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49267 49294])
                    ("msgId" variable
                       (:reference 1
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49295 49310]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [49220 49527])
            ("getMinMessageIdByTime" function
               (:parent "BrokerPartitionTest"
                :arguments 
                  ( ("partition" variable
                       (:reference 1
                        :type ("BrokerPartition" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49582 49609])
                    ("timestamp" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49618 49636])
                    ("msgId" variable
                       (:reference 1
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [49637 49652]))                  
                :type ("ErrorCode" type (:type "class") nil nil))
                nil [49529 49913])
            ("SWIFT_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("service" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49936 49944]))                  
                :type "int")
                nil [49916 49945]))          
      :file "BrokerPartitionTest.cpp"
      :pointmax 49946
      :fsize 49945
      :lastmodtime '(22916 7616 250542 468000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!swift!atest!atest_1_5!swift_func_test!temp!source_code!swift!swift!broker!service!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
