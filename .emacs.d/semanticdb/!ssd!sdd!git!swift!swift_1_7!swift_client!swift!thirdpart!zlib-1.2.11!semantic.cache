;; Object zlib-1.2.11/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "zlib-1.2.11/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("CC" variable (:default-value ("gcc")) nil [621 628])
            ("CFLAGS" variable (:default-value ("-O3" "-fPIC" "-D_LARGEFILE64_SOURCE=1" "-DHAVE_HIDDEN")) nil [629 684])
            ("SFLAGS" variable (:default-value ("-O3" "-fPIC" "-fPIC" "-D_LARGEFILE64_SOURCE=1" "-DHAVE_HIDDEN")) nil [871 932])
            ("LDFLAGS" variable nil nil [932 941])
            ("TEST_LDFLAGS" variable (:default-value ("-L." "libz.a")) nil [941 965])
            ("LDSHARED" variable (:default-value ("gcc" "-shared" "-Wl,-soname,libz.so.1,--version-script,zlib.map")) nil [965 1034])
            ("CPP" variable (:default-value ("gcc" "-E")) nil [1034 1045])
            ("STATICLIB" variable (:default-value ("libz.a")) nil [1046 1063])
            ("SHAREDLIB" variable (:default-value ("libz.so")) nil [1063 1081])
            ("SHAREDLIBV" variable (:default-value ("libz.so.1.2.11")) nil [1081 1107])
            ("SHAREDLIBM" variable (:default-value ("libz.so.1")) nil [1107 1128])
            ("LIBS" variable (:default-value ("$(STATICLIB)" "$(SHAREDLIBV)")) nil [1128 1160])
            ("AR" variable (:default-value ("ar")) nil [1161 1167])
            ("ARFLAGS" variable (:default-value ("rc")) nil [1167 1178])
            ("RANLIB" variable (:default-value ("ranlib")) nil [1178 1192])
            ("LDCONFIG" variable (:default-value ("ldconfig")) nil [1192 1210])
            ("LDSHAREDLIBC" variable (:default-value ("-lc")) nil [1210 1227])
            ("TAR" variable (:default-value ("tar")) nil [1227 1235])
            ("SHELL" variable (:default-value ("/bin/sh")) nil [1235 1249])
            ("EXE" variable nil nil [1249 1254])
            ("prefix" variable (:default-value ("/usr/local")) nil [1255 1274])
            ("exec_prefix" variable (:default-value ("${prefix}")) nil [1274 1297])
            ("libdir" variable (:default-value ("${exec_prefix}/lib")) nil [1297 1324])
            ("sharedlibdir" variable (:default-value ("${libdir}")) nil [1324 1348])
            ("includedir" variable (:default-value ("${prefix}/include")) nil [1348 1378])
            ("mandir" variable (:default-value ("${prefix}/share/man")) nil [1378 1406])
            ("man3dir" variable (:default-value ("${mandir}/man3")) nil [1406 1431])
            ("pkgconfigdir" variable (:default-value ("${libdir}/pkgconfig")) nil [1431 1466])
            ("SRCDIR" variable nil nil [1466 1474])
            ("ZINC" variable nil nil [1474 1480])
            ("ZINCOUT" variable (:default-value ("-I.")) nil [1480 1492])
            ("OBJZ" variable (:default-value ("adler32.o" "crc32.o" "deflate.o" "infback.o" "inffast.o" "inflate.o" "inftrees.o" "trees.o" "zutil.o")) nil [1493 1585])
            ("OBJG" variable (:default-value ("compress.o" "uncompr.o" "gzclose.o" "gzlib.o" "gzread.o" "gzwrite.o")) nil [1585 1650])
            ("OBJC" variable (:default-value ("$(OBJZ)" "$(OBJG)")) nil [1650 1673])
            ("PIC_OBJZ" variable (:default-value ("adler32.lo" "crc32.lo" "deflate.lo" "infback.lo" "inffast.lo" "inflate.lo" "inftrees.lo" "trees.lo" "zutil.lo")) nil [1674 1779])
            ("PIC_OBJG" variable (:default-value ("compress.lo" "uncompr.lo" "gzclose.lo" "gzlib.lo" "gzread.lo" "gzwrite.lo")) nil [1779 1854])
            ("PIC_OBJC" variable (:default-value ("$(PIC_OBJZ)" "$(PIC_OBJG)")) nil [1854 1889])
            ("OBJA" variable nil nil [1950 1957])
            ("PIC_OBJA" variable nil nil [1957 1968])
            ("OBJS" variable (:default-value ("$(OBJC)" "$(OBJA)")) nil [1969 1992])
            ("PIC_OBJS" variable (:default-value ("$(PIC_OBJC)" "$(PIC_OBJA)")) nil [1993 2028])
            ("all" function (:arguments ("static" "shared" "all64")) nil [2029 2054])
            ("static" function (:arguments ("example$(EXE)" "minigzip$(EXE)")) nil [2055 2092])
            ("shared" function (:arguments ("examplesh$(EXE)" "minigzipsh$(EXE)")) nil [2093 2134])
            ("all64" function (:arguments ("example64$(EXE)" "minigzip64$(EXE)")) nil [2135 2175])
            ("check" function (:arguments ("test")) nil [2176 2188])
            ("test" function (:arguments ("all" "teststatic" "testshared" "test64")) nil [2189 2228])
            ("teststatic" function (:arguments ("static")) nil [2229 2461])
            ("testshared" function (:arguments ("shared")) nil [2462 2993])
            ("test64" function (:arguments ("all64")) nil [2994 3240])
            ("infcover.o" function (:arguments ("$(SRCDIR)test/infcover.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3241 3364])
            ("infcover" function (:arguments ("infcover.o" "libz.a")) nil [3365 3434])
            ("cover" function (:arguments ("infcover")) nil [3435 3490])
            ("libz.a" function (:arguments ("$(OBJS)")) nil [3491 3579])
            ("match.o" function (:arguments ("match.S")) nil [3580 3680])
            ("match.lo" function (:arguments ("match.S")) nil [3681 3789])
            ("example.o" function (:arguments ("$(SRCDIR)test/example.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3790 3910])
            ("minigzip.o" function (:arguments ("$(SRCDIR)test/minigzip.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [3911 4034])
            ("example64.o" function (:arguments ("$(SRCDIR)test/example.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [4035 4180])
            ("minigzip64.o" function (:arguments ("$(SRCDIR)test/minigzip.c" "$(SRCDIR)zlib.h" "zconf.h")) nil [4181 4329])
            ("adler32.o" function (:arguments ("$(SRCDIR)adler32.c")) nil [4331 4414])
            ("crc32.o" function (:arguments ("$(SRCDIR)crc32.c")) nil [4415 4492])
            ("deflate.o" function (:arguments ("$(SRCDIR)deflate.c")) nil [4493 4576])
            ("infback.o" function (:arguments ("$(SRCDIR)infback.c")) nil [4577 4660])
            ("inffast.o" function (:arguments ("$(SRCDIR)inffast.c")) nil [4661 4744])
            ("inflate.o" function (:arguments ("$(SRCDIR)inflate.c")) nil [4745 4828])
            ("inftrees.o" function (:arguments ("$(SRCDIR)inftrees.c")) nil [4829 4915])
            ("trees.o" function (:arguments ("$(SRCDIR)trees.c")) nil [4916 4993])
            ("zutil.o" function (:arguments ("$(SRCDIR)zutil.c")) nil [4994 5071])
            ("compress.o" function (:arguments ("$(SRCDIR)compress.c")) nil [5072 5158])
            ("uncompr.o" function (:arguments ("$(SRCDIR)uncompr.c")) nil [5159 5242])
            ("gzclose.o" function (:arguments ("$(SRCDIR)gzclose.c")) nil [5243 5326])
            ("gzlib.o" function (:arguments ("$(SRCDIR)gzlib.c")) nil [5327 5404])
            ("gzread.o" function (:arguments ("$(SRCDIR)gzread.c")) nil [5405 5485])
            ("gzwrite.o" function (:arguments ("$(SRCDIR)gzwrite.c")) nil [5486 5569])
            ("adler32.lo" function (:arguments ("$(SRCDIR)adler32.c")) nil [5571 5739])
            ("crc32.lo" function (:arguments ("$(SRCDIR)crc32.c")) nil [5740 5898])
            ("deflate.lo" function (:arguments ("$(SRCDIR)deflate.c")) nil [5899 6067])
            ("infback.lo" function (:arguments ("$(SRCDIR)infback.c")) nil [6068 6236])
            ("inffast.lo" function (:arguments ("$(SRCDIR)inffast.c")) nil [6237 6405])
            ("inflate.lo" function (:arguments ("$(SRCDIR)inflate.c")) nil [6406 6574])
            ("inftrees.lo" function (:arguments ("$(SRCDIR)inftrees.c")) nil [6575 6748])
            ("trees.lo" function (:arguments ("$(SRCDIR)trees.c")) nil [6749 6907])
            ("zutil.lo" function (:arguments ("$(SRCDIR)zutil.c")) nil [6908 7066])
            ("compress.lo" function (:arguments ("$(SRCDIR)compress.c")) nil [7067 7240])
            ("uncompr.lo" function (:arguments ("$(SRCDIR)uncompr.c")) nil [7241 7409])
            ("gzclose.lo" function (:arguments ("$(SRCDIR)gzclose.c")) nil [7410 7578])
            ("gzlib.lo" function (:arguments ("$(SRCDIR)gzlib.c")) nil [7579 7737])
            ("gzread.lo" function (:arguments ("$(SRCDIR)gzread.c")) nil [7738 7901])
            ("gzwrite.lo" function (:arguments ("$(SRCDIR)gzwrite.c")) nil [7902 8070])
            ("$(SHAREDLIBV)" function (:arguments ("$(PIC_OBJS)" "libz.a")) nil [8072 8277])
            ("placebo" function (:arguments ("$(PIC_OBJS)" "libz.a")) nil [8072 8277])
            ("example" function (:arguments ("example.o" "$(STATICLIB)")) nil [8278 8365])
            ("minigzip" function (:arguments ("minigzip.o" "$(STATICLIB)")) nil [8366 8456])
            ("examplesh" function (:arguments ("example.o" "$(SHAREDLIBV)")) nil [8457 8549])
            ("minigzipsh" function (:arguments ("minigzip.o" "$(SHAREDLIBV)")) nil [8550 8645])
            ("example64" function (:arguments ("example64.o" "$(STATICLIB)")) nil [8646 8739])
            ("minigzip64" function (:arguments ("minigzip64.o" "$(STATICLIB)")) nil [8740 8836])
            ("install-libs" function (:arguments ("$(LIBS)")) nil [8837 10288])
            ("install" function (:arguments ("install-libs")) nil [10383 10685])
            ("uninstall" function nil nil [10686 10993])
            ("docs" function (:arguments ("zlib.3.pdf")) nil [10994 11011])
            ("zlib.3.pdf" function (:arguments ("$(SRCDIR)zlib.3")) nil [11012 11096])
            ("zconf.h.cmakein" function (:arguments ("$(SRCDIR)zconf.h.in")) nil [11097 11369])
            ("zconf" function (:arguments ("$(SRCDIR)zconf.h.in")) nil [11370 11432])
            ("mostlyclean" function (:arguments ("clean")) nil [11433 11452])
            ("clean" function nil nil [11452 11798])
            ("maintainer-clean" function (:arguments ("distclean")) nil [11799 11827])
            ("distclean" function (:arguments ("clean" "zconf" "zconf.h.cmakein" "docs")) nil [11827 12280])
            ("tags" function nil nil [12281 12310])
            ("zutil.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12311 12371])
            ("adler32.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12311 12371])
            ("gzlib.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [12371 12451])
            ("gzclose.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [12371 12451])
            ("example.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [12451 12518])
            ("compress.o" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [12451 12518])
            ("crc32.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)crc32.h")) nil [12518 12585])
            ("deflate.o" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [12585 12656])
            ("inflate.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [12656 12796])
            ("infback.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [12656 12796])
            ("inffast.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h")) nil [12796 12906])
            ("inftrees.o" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h")) nil [12906 12979])
            ("trees.o" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)trees.h")) nil [12979 13065])
            ("zutil.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13066 13128])
            ("adler32.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13066 13128])
            ("gzlib.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [13128 13212])
            ("gzclose.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)gzguts.h")) nil [13128 13212])
            ("example.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [13212 13283])
            ("compress.lo" function (:arguments ("$(SRCDIR)zlib.h" "zconf.h")) nil [13212 13283])
            ("crc32.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)crc32.h")) nil [13283 13351])
            ("deflate.lo" function (:arguments ("$(SRCDIR)deflate.h" "$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h")) nil [13351 13423])
            ("inflate.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [13423 13565])
            ("infback.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h" "$(SRCDIR)inffixed.h")) nil [13423 13565])
            ("inffast.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h" "$(SRCDIR)inflate.h" "$(SRCDIR)inffast.h")) nil [13565 13676])
            ("inftrees.lo" function (:arguments ("$(SRCDIR)zutil.h" "$(SRCDIR)zlib.h" "zconf.h" "$(SRCDIR)inftrees.h")) nil [13676 13750]))          
      :file "Makefile"
      :pointmax 13837
      :fsize 13836
      :lastmodtime '(23017 36766 852429 174000)
      :unmatched-syntax '((thing 13750 . 13750) (thing 13750 . 13758) (thing 13758 . 13759) (thing 13760 . 13761) (thing 13761 . 13769) (thing 13769 . 13778) (thing 13779 . 13780) (thing 13780 . 13788) (thing 13788 . 13795) (thing 13796 . 13797) (thing 13797 . 13805) (thing 13805 . 13811) (thing 13812 . 13819) (thing 13820 . 13821) (thing 13821 . 13829) (thing 13829 . 13836)))
    (semanticdb-table "zlib.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ZLIB_H" variable (:constant-flag t) nil [1354 1360])
            ("zconf.h" include nil nil [1362 1380])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateResetKeep" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95679 95712])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateResetKeep" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95614 95647])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateCodesUsed" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95548 95582])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateValidate" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95479 95516])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateUndermine" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95409 95447])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("get_crc_table" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95349 95377])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateSyncPoint" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95279 95312])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("zError" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [95220 95247])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("crc32_combine" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94928 94970])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("adler32_combine" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94858 94902])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzoffset" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94810 94832])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gztell" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94762 94782])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzseek" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94700 94734])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzopen" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [94632 94672])
            ("gzgetc" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [92783 92789])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzgetc_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [92568 92594])
            ("gzFile_s" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("have" variable (:type "unsigned int") (reparse-symbol classsubparts) [92486 92500])
                    ("next" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol classsubparts) [92505 92525])
                    ("pos" variable (:type ("z_off64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [92530 92544]))                  )
                (reparse-symbol extern-c-contents) [92464 92547])
            ("inflateBackInit" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [91820 91835])
            ("inflateInit2" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [91668 91680])
            ("deflateInit2" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [91443 91455])
            ("inflateInit" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [91345 91356])
            ("deflateInit" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [91231 91242])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateBackInit_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [90174 90416])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateInit2_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [90025 90153])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateInit2_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [89748 90004])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateInit_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [89618 89727])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateInit_" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [89477 89597])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("crc32_z" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [88732 88824])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("crc32" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [88149 88201])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("adler32_z" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [87398 87494])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("adler32" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [86812 86866])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzclearerr" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [86313 86342])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzerror" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [85534 85573])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzclose_w" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [84997 85025])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzclose_r" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [84948 84976])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzclose" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [84303 84329])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzdirect" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [83309 83336])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzeof" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [82522 82546])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzrewind" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [81467 81494])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzflush" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [79879 79916])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzungetc" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [79251 79285])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzgetc" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [78848 78873])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzputc" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [78645 78677])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzgets" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [78013 78058])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzputs" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [77749 77789])
            ("Z_ARG" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzprintf" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [76834 76889])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzfwrite" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [76086 76195])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzwrite" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [75806 75890])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzfread" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [74242 74348])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzread" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [72525 72575])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzsetparams" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [72024 72079])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzbuffer" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [71298 71340])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("gzdopen" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [69990 70029])
            ("gzFile" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :pointer 1
                :typedef ("gzFile_s" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                (reparse-symbol extern-c-contents) [67763 67795])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uncompress2" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [67087 67211])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("uncompress" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [66065 66186])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("compressBound" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [65782 65818])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("compress2" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [64993 65157])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("compress" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [64275 64392])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("zlibCompileFlags" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [62218 62246])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateBackEnd" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [61988 62024])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateBack" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [57543 57713])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [57473 57521])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [57364 57448])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateGetHeader" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [53774 53870])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateMark" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [52209 52242])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflatePrime" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [51154 51283])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateReset2" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [50498 50587])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateReset" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [50069 50103])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateCopy" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [49398 49485])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateSync" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [48409 48442])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateGetDictionary" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [47649 47819])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateSetDictionary" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [46308 46483])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateSetHeader" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [41715 41811])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflatePrime" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [40856 40985])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflatePending" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [40125 40269])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateBound" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [39274 39364])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateTune" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [38399 38639])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateParams" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [36172 36308])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateReset" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [35711 35745])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateCopy" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [34865 34952])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateGetDictionary" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [33629 33799])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateSetDictionary" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [30962 31137])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflateEnd" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [26307 26339])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("inflate" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [18865 18905])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflateEnd" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [17121 17153])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("deflate" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [10679 10719])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("zlibVersion" type (:type "class") nil nil)
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [9260 9283])
            ("zlib_version" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [9109 9121])
            ("Z_NULL" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [9044 9050])
            ("Z_DEFLATED" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8942 8952])
            ("Z_UNKNOWN" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8861 8870])
            ("Z_ASCII" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8786 8793])
            ("Z_TEXT" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8765 8771])
            ("Z_BINARY" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8744 8752])
            ("Z_DEFAULT_STRATEGY" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8646 8664])
            ("Z_FIXED" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8614 8621])
            ("Z_RLE" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8582 8587])
            ("Z_HUFFMAN_ONLY" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8550 8564])
            ("Z_FILTERED" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8518 8528])
            ("Z_DEFAULT_COMPRESSION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8456 8477])
            ("Z_BEST_COMPRESSION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8421 8439])
            ("Z_BEST_SPEED" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8386 8398])
            ("Z_NO_COMPRESSION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8351 8367])
            ("Z_VERSION_ERROR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8169 8184])
            ("Z_BUF_ERROR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8141 8152])
            ("Z_MEM_ERROR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8113 8124])
            ("Z_DATA_ERROR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8085 8097])
            ("Z_STREAM_ERROR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8057 8071])
            ("Z_ERRNO" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8029 8036])
            ("Z_NEED_DICT" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [8003 8014])
            ("Z_STREAM_END" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7977 7989])
            ("Z_OK" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7951 7955])
            ("Z_TREES" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7850 7857])
            ("Z_BLOCK" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7824 7831])
            ("Z_FINISH" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7798 7806])
            ("Z_FULL_FLUSH" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7772 7784])
            ("Z_SYNC_FLUSH" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7746 7758])
            ("Z_PARTIAL_FLUSH" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7720 7735])
            ("Z_NO_FLUSH" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [7694 7704])
            ("gz_headerp" variable
               (:typemodifiers ("extern" "\"C\"")
                :type ((((0) "FAR")) type (:superclasses ("gz_header" type (:type "class") nil nil) :type "typedef") nil nil)
                :pointer 1)
                (reparse-symbol extern-c-contents) [5704 5738])
            ("gz_header" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("gz_header_s" type (:type "struct") nil nil))
                (reparse-symbol extern-c-contents) [4698 5702])
            ("gz_header_s" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("text" variable (:type "int") (reparse-symbol classsubparts) [4731 4744])
                    ("time" variable (:type ("uLong" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4805 4818])
                    ("xflags" variable (:type "int") (reparse-symbol classsubparts) [4853 4868])
                    ("os" variable (:type "int") (reparse-symbol classsubparts) [4931 4942])
                    ("extra" variable
                       (:pointer 1
                        :type ("Bytef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4978 4993])
                    ("extra_len" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5049 5067])
                    ("extra_max" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5125 5143])
                    ("name" variable
                       (:pointer 1
                        :type ("Bytef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5197 5211])
                    ("name_max" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5274 5291])
                    ("comment" variable
                       (:pointer 1
                        :type ("Bytef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5345 5362])
                    ("comm_max" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5420 5437])
                    ("hcrc" variable (:type "int") (reparse-symbol classsubparts) [5494 5507])
                    ("done" variable (:type "int") (reparse-symbol classsubparts) [5566 5579]))                  )
                (reparse-symbol extern-c-contents) [4698 5702])
            ("z_streamp" variable
               (:typemodifiers ("extern" "\"C\"")
                :type ((((0) "FAR")) type (:superclasses ("z_stream" type (:type "class") nil nil) :type "typedef") nil nil)
                :pointer 1)
                (reparse-symbol extern-c-contents) [4529 4561])
            ("z_stream" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("z_stream_s" type (:type "struct") nil nil))
                (reparse-symbol extern-c-contents) [3475 4527])
            ("z_stream_s" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("next_in" variable
                       (:pointer 1
                        :type ("Bytef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3515 3530])
                    ("avail_in" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3561 3579])
                    ("total_in" variable (:type ("uLong" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3628 3646])
                    ("next_out" variable
                       (:pointer 1
                        :type ("Bytef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3699 3718])
                    ("avail_out" variable (:type ("uInt" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3759 3778])
                    ("total_out" variable (:type ("uLong" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3822 3841])
                    ("msg" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol classsubparts) [3897 3907])
                    ("state" variable
                       (:pointer 1
                        :type ("FAR" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3978 3989])
                    ("zalloc" variable (:type ("alloc_func" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4029 4047])
                    ("zfree" variable (:type ("free_func" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4095 4112])
                    ("opaque" variable (:type ("voidpf" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4157 4175])
                    ("data_type" variable (:type "int") (reparse-symbol classsubparts) [4235 4253])
                    ("adler" variable (:type ("uLong" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4386 4400])
                    ("reserved" variable (:type ("uLong" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4466 4483]))                  )
                (reparse-symbol extern-c-contents) [3475 4527])
            ("internal_state" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :prototype t)
                (reparse-symbol extern-c-contents) [3451 3473])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3413 3449])
            ("OF" function
               (:typemodifiers ("extern" "\"C\"")
                :type "int"
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [3340 3383])
            ("ZLIB_VER_SUBREVISION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1566 1586])
            ("ZLIB_VER_REVISION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1537 1554])
            ("ZLIB_VER_MINOR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1512 1526])
            ("ZLIB_VER_MAJOR" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1487 1501])
            ("ZLIB_VERNUM" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1460 1471])
            ("ZLIB_VERSION" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [1430 1442]))          
      :file "zlib.h"
      :pointmax 96240
      :fsize 96239
      :lastmodtime '(22651 45444 0 0)
      :unmatched-syntax '((thing 3416 . 3447) (thing 3399 . 3411) (thing 3392 . 3396) (thing 3384 . 3391) (thing 3343 . 3381) (thing 3326 . 3339) (thing 3327 . 3328) (thing 3319 . 3325) (thing 3311 . 3318) (thing 3507 . 3514) (thing 3889 . 3896) (thing 3956 . 3962) (thing 3963 . 3977) (thing 9231 . 9238) (thing 9239 . 9244) (thing 9245 . 9249) (thing 9250 . 9251) (thing 9252 . 9259) (thing 9275 . 9281) (thing 10659 . 10666) (thing 10667 . 10670) (thing 10671 . 10678) (thing 10690 . 10717) (thing 17101 . 17108) (thing 17109 . 17112) (thing 17113 . 17120) (thing 17135 . 17151) (thing 18845 . 18852) (thing 18853 . 18856) (thing 18857 . 18864) (thing 18876 . 18903) (thing 26287 . 26294) (thing 26295 . 26298) (thing 26299 . 26306) (thing 26321 . 26337) (thing 30942 . 30949) (thing 30950 . 30953) (thing 30954 . 30961) (thing 30986 . 31135) (thing 33609 . 33616) (thing 33617 . 33620) (thing 33621 . 33628) (thing 33653 . 33797) (thing 34845 . 34852) (thing 34853 . 34856) (thing 34857 . 34864) (thing 34880 . 34950) (thing 35691 . 35698) (thing 35699 . 35702) (thing 35703 . 35710) (thing 35727 . 35743) (thing 36152 . 36159) (thing 36160 . 36163) (thing 36164 . 36171) (thing 36189 . 36306) (thing 38379 . 38386) (thing 38387 . 38390) (thing 38391 . 38398) (thing 38414 . 38637) (thing 39252 . 39259) (thing 39260 . 39265) (thing 39266 . 39273) (thing 39290 . 39362) (thing 40105 . 40112) (thing 40113 . 40116) (thing 40117 . 40124) (thing 40143 . 40267) (thing 40836 . 40843) (thing 40844 . 40847) (thing 40848 . 40855) (thing 40872 . 40983) (thing 41695 . 41702) (thing 41703 . 41706) (thing 41707 . 41714) (thing 41735 . 41809) (thing 46288 . 46295) (thing 46296 . 46299) (thing 46300 . 46307) (thing 46332 . 46481) (thing 47629 . 47636) (thing 47637 . 47640) (thing 47641 . 47648) (thing 47673 . 47817) (thing 48389 . 48396) (thing 48397 . 48400) (thing 48401 . 48408) (thing 48424 . 48440) (thing 49378 . 49385) (thing 49386 . 49389) (thing 49390 . 49397) (thing 49413 . 49483) (thing 50049 . 50056) (thing 50057 . 50060) (thing 50061 . 50068) (thing 50085 . 50101) (thing 50478 . 50485) (thing 50486 . 50489) (thing 50490 . 50497) (thing 50515 . 50585) (thing 51134 . 51141) (thing 51142 . 51145) (thing 51146 . 51153) (thing 51170 . 51281) (thing 52188 . 52195) (thing 52196 . 52200) (thing 52201 . 52208) (thing 52224 . 52240) (thing 53754 . 53761) (thing 53762 . 53765) (thing 53766 . 53773) (thing 53794 . 53868) (thing 57336 . 57343) (thing 57344 . 57352) (thing 57353 . 57363) (thing 57367 . 57446) (thing 57449 . 57456) (thing 57457 . 57460) (thing 57461 . 57472) (thing 57476 . 57519) (thing 57523 . 57530) (thing 57531 . 57534) (thing 57535 . 57542) (thing 57558 . 57711) (thing 61968 . 61975) (thing 61976 . 61979) (thing 61980 . 61987) (thing 62006 . 62022) (thing 62196 . 62203) (thing 62204 . 62209) (thing 62210 . 62217) (thing 62238 . 62244) (thing 64255 . 64262) (thing 64263 . 64266) (thing 64267 . 64274) (thing 64287 . 64390) (thing 64973 . 64980) (thing 64981 . 64984) (thing 64985 . 64992) (thing 65006 . 65155) (thing 65760 . 65767) (thing 65768 . 65773) (thing 65774 . 65781) (thing 65799 . 65816) (thing 66045 . 66052) (thing 66053 . 66056) (thing 66057 . 66064) (thing 66079 . 66184) (thing 67067 . 67074) (thing 67075 . 67078) (thing 67079 . 67086) (thing 67102 . 67209) (thing 69967 . 69974) (thing 69975 . 69981) (thing 69982 . 69989) (thing 70001 . 70027) (thing 71278 . 71285) (thing 71286 . 71289) (thing 71290 . 71297) (thing 71310 . 71338) (thing 72004 . 72011) (thing 72012 . 72015) (thing 72016 . 72023) (thing 72039 . 72077) (thing 72505 . 72512) (thing 72513 . 72516) (thing 72517 . 72524) (thing 72535 . 72573) (thing 74217 . 74224) (thing 74225 . 74233) (thing 74234 . 74241) (thing 74253 . 74346) (thing 75786 . 75793) (thing 75794 . 75797) (thing 75798 . 75805) (thing 75817 . 75888) (thing 76061 . 76068) (thing 76069 . 76077) (thing 76078 . 76085) (thing 76098 . 76193) (thing 76812 . 76819) (thing 76820 . 76823) (thing 76824 . 76833) (thing 76849 . 76887) (thing 77729 . 77736) (thing 77737 . 77740) (thing 77741 . 77748) (thing 77759 . 77787) (thing 77990 . 77997) (thing 77998 . 78002) (thing 78003 . 78004) (thing 78005 . 78012) (thing 78023 . 78056) (thing 78625 . 78632) (thing 78633 . 78636) (thing 78637 . 78644) (thing 78655 . 78675) (thing 78828 . 78835) (thing 78836 . 78839) (thing 78840 . 78847) (thing 78858 . 78871) (thing 79231 . 79238) (thing 79239 . 79242) (thing 79243 . 79250) (thing 79263 . 79283) (thing 79859 . 79866) (thing 79867 . 79870) (thing 79871 . 79878) (thing 79890 . 79914) (thing 81444 . 81451) (thing 81452 . 81455) (thing 81456 . 81463) (thing 81479 . 81492) (thing 82502 . 82509) (thing 82510 . 82513) (thing 82514 . 82521) (thing 82531 . 82544) (thing 83289 . 83296) (thing 83297 . 83300) (thing 83301 . 83308) (thing 83321 . 83334) (thing 84280 . 84287) (thing 84288 . 84291) (thing 84292 . 84299) (thing 84314 . 84327) (thing 84928 . 84935) (thing 84936 . 84939) (thing 84940 . 84947) (thing 84961 . 84974) (thing 84977 . 84984) (thing 84985 . 84988) (thing 84989 . 84996) (thing 85010 . 85023) (thing 85505 . 85512) (thing 85513 . 85518) (thing 85519 . 85523) (thing 85524 . 85525) (thing 85526 . 85533) (thing 85545 . 85571) (thing 86292 . 86299) (thing 86300 . 86304) (thing 86305 . 86312) (thing 86327 . 86340) (thing 86790 . 86797) (thing 86798 . 86803) (thing 86804 . 86811) (thing 86823 . 86864) (thing 87376 . 87383) (thing 87384 . 87389) (thing 87390 . 87397) (thing 87411 . 87492) (thing 88127 . 88134) (thing 88135 . 88140) (thing 88141 . 88148) (thing 88160 . 88199) (thing 88710 . 88717) (thing 88718 . 88723) (thing 88724 . 88731) (thing 88743 . 88822) (thing 89457 . 89464) (thing 89465 . 89468) (thing 89469 . 89476) (thing 89493 . 89595) (thing 89598 . 89605) (thing 89606 . 89609) (thing 89610 . 89617) (thing 89634 . 89725) (thing 89728 . 89735) (thing 89736 . 89739) (thing 89740 . 89747) (thing 89765 . 90002) (thing 90005 . 90012) (thing 90013 . 90016) (thing 90017 . 90024) (thing 90042 . 90151) (thing 90154 . 90161) (thing 90162 . 90165) (thing 90166 . 90173) (thing 90194 . 90414) (thing 92548 . 92555) (thing 92556 . 92559) (thing 92560 . 92567) (thing 92579 . 92592) (thing 94609 . 94616) (thing 94617 . 94623) (thing 94624 . 94631) (thing 94642 . 94670) (thing 94676 . 94683) (thing 94684 . 94691) (thing 94692 . 94699) (thing 94710 . 94732) (thing 94738 . 94745) (thing 94746 . 94753) (thing 94754 . 94761) (thing 94772 . 94780) (thing 94786 . 94793) (thing 94794 . 94801) (thing 94802 . 94809) (thing 94822 . 94830) (thing 94836 . 94843) (thing 94844 . 94849) (thing 94850 . 94857) (thing 94877 . 94900) (thing 94906 . 94913) (thing 94914 . 94919) (thing 94920 . 94927) (thing 94945 . 94968) (thing 95189 . 95196) (thing 95197 . 95202) (thing 95203 . 95207) (thing 95210 . 95211) (thing 95212 . 95219) (thing 95240 . 95245) (thing 95248 . 95255) (thing 95256 . 95259) (thing 95271 . 95278) (thing 95299 . 95310) (thing 95313 . 95320) (thing 95321 . 95326) (thing 95327 . 95334) (thing 95335 . 95338) (thing 95339 . 95340) (thing 95341 . 95348) (thing 95369 . 95375) (thing 95378 . 95385) (thing 95386 . 95389) (thing 95401 . 95408) (thing 95429 . 95445) (thing 95448 . 95455) (thing 95456 . 95459) (thing 95471 . 95478) (thing 95498 . 95514) (thing 95517 . 95524) (thing 95525 . 95533) (thing 95534 . 95538) (thing 95540 . 95547) (thing 95569 . 95580) (thing 95583 . 95590) (thing 95591 . 95594) (thing 95606 . 95613) (thing 95634 . 95645) (thing 95648 . 95655) (thing 95656 . 95659) (thing 95671 . 95678) (thing 95699 . 95710))
      :lexical-table 
        '(("ZLIB_VERNUM" . ((number "0x12b0" 1472 . 1478)))
          ("Z_NEED_DICT" . ((number "2" 8019 . 8020)))
          ("Z_VERSION_ERROR" . ((semantic-list "(-6)" 8185 . 8189)))
          ("Z_DEFLATED" . ((number "8" 8955 . 8956)))
          ("deflateInit2" (spp-arg-list ("strm" "level" "method" "windowBits" "memLevel" "strategy") 91455 . 91508) . ((symbol "deflateInit2_" 91521 . 91534) (semantic-list "((strm),(level),(method),(windowBits),(memLevel),\\
                        (strategy), ZLIB_VERSION, (int)sizeof(z_stream))" 91534 . 91657)))
          ("Z_NO_FLUSH" . ((number "0" 7710 . 7711)))
          ("Z_STREAM_END" . ((number "1" 7993 . 7994)))
          ("Z_BUF_ERROR" . ((semantic-list "(-5)" 8156 . 8160)))
          ("Z_DEFAULT_STRATEGY" . ((number "0" 8668 . 8669)))
          ("ZLIB_VER_MINOR" . ((number "2" 1527 . 1528)))
          ("Z_FULL_FLUSH" . ((number "3" 7788 . 7789)))
          ("Z_DATA_ERROR" . ((semantic-list "(-3)" 8100 . 8104)))
          ("Z_DEFAULT_COMPRESSION" . ((semantic-list "(-1)" 8479 . 8483)))
          ("zlib_version" . ((symbol "zlibVersion" 9122 . 9133) (semantic-list "()" 9133 . 9135)))
          ("Z_STREAM_ERROR" . ((semantic-list "(-2)" 8072 . 8076)))
          ("Z_TEXT" . ((number "1" 8776 . 8777)))
          ("inflateInit" (spp-arg-list ("strm") 91356 . 91362) . ((symbol "inflateInit_" 91375 . 91387) (semantic-list "((strm), ZLIB_VERSION, (int)sizeof(z_stream))" 91387 . 91432)))
          ("Z_NO_COMPRESSION" . ((number "0" 8376 . 8377)))
          ("ZLIB_VER_REVISION" . ((number "11" 1555 . 1557)))
          ("Z_BEST_COMPRESSION" . ((number "9" 8446 . 8447)))
          ("Z_BINARY" . ((number "0" 8755 . 8756)))
          ("deflateInit" (spp-arg-list ("strm" "level") 91242 . 91255) . ((symbol "deflateInit_" 91268 . 91280) (semantic-list "((strm), (level), ZLIB_VERSION, (int)sizeof(z_stream))" 91280 . 91334)))
          ("Z_PARTIAL_FLUSH" . ((number "1" 7736 . 7737)))
          ("Z_TREES" . ((number "6" 7866 . 7867)))
          ("Z_NULL" . ((number "0" 9052 . 9053)))
          ("ZLIB_VERSION" . ((string "\"1.2.11\"" 1443 . 1451)))
          ("ZLIB_VER_SUBREVISION" . ((number "0" 1587 . 1588)))
          ("Z_MEM_ERROR" . ((semantic-list "(-4)" 8128 . 8132)))
          ("Z_HUFFMAN_ONLY" . ((number "2" 8572 . 8573)))
          ("Z_FIXED" . ((number "4" 8636 . 8637)))
          ("inflateInit2" (spp-arg-list ("strm" "windowBits") 91680 . 91698) . ((symbol "inflateInit2_" 91711 . 91724) (semantic-list "((strm), (windowBits), ZLIB_VERSION, \\
                        (int)sizeof(z_stream))" 91724 . 91809)))
          ("ZLIB_H")
          ("Z_FINISH" . ((number "4" 7814 . 7815)))
          ("Z_SYNC_FLUSH" . ((number "2" 7762 . 7763)))
          ("Z_BLOCK" . ((number "5" 7840 . 7841)))
          ("Z_OK" . ((number "0" 7967 . 7968)))
          ("Z_BEST_SPEED" . ((number "1" 8411 . 8412)))
          ("Z_FILTERED" . ((number "1" 8540 . 8541)))
          ("Z_RLE" . ((number "3" 8604 . 8605)))
          ("gzgetc" (spp-arg-list ("g") 92789 . 92792) . ((semantic-list "((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : (gzgetc)(g))" 92805 . 92874)))
          ("ZLIB_VER_MAJOR" . ((number "1" 1502 . 1503)))
          ("Z_ERRNO" . ((semantic-list "(-1)" 8044 . 8048)))
          ("inflateBackInit" (spp-arg-list ("strm" "windowBits" "window") 91835 . 91861) . ((symbol "inflateBackInit_" 91874 . 91890) (semantic-list "((strm), (windowBits), (window), \\
                           ZLIB_VERSION, (int)sizeof(z_stream))" 91890 . 91988)))
          ("Z_UNKNOWN" . ((number "2" 8872 . 8873)))
          ("Z_ASCII" . ((symbol "Z_TEXT" 8797 . 8803)))
          )
))
  :file "!ssd!sdd!git!swift!swift_1_7!swift_client!swift!thirdpart!zlib-1.2.11!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
