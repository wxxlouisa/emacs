;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "SlotCheckerTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("MASTER_FRAMEWORK_SLOTCHECKERTEST_H" variable (:constant-flag t) nil [52 86])
            ("GTEST_USE_OWN_TR1_TUPLE" variable (:constant-flag t) nil [96 119])
            ("gtest/gtest.h" include (:system-flag t) nil [122 146])
            ("common/Log.h" include nil nil [148 171])
            ("master_framework/common.h" include nil nil [172 208])
            ("master_base/SlotChecker.h" include nil nil [209 245])
            ("master_base/test/MasterBaseTestHelper.h" include nil nil [246 296])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [298 318])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [319 341])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [342 364])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [398 410]))                  
                :type "int")
                nil [365 411])
            ("testing::Test" variable (:type "int") nil [446 841])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [870 882])
                    ("" variable (:type ("SlotCheckerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [883 899]))                  
                :type "int")
                nil [843 900])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SlotCheckerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [909 925])
                    ("" variable (:type ("testCheckRunningSlots" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [926 948]))                  
                :type "int")
                nil [902 2238])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2271 2283]))                  
                :type "int")
                nil [2240 2284]))          
      :file "SlotCheckerTest.cpp"
      :pointmax 2330
      :fsize 2329
      :lastmodtime '(23846 52221 754299 648000)
      :unmatched-syntax '((thing 445 . 446) (thing 444 . 445) (thing 437 . 443) (thing 435 . 436) (thing 419 . 434) (thing 413 . 418))
      :lexical-table 
        '(("GTEST_USE_OWN_TR1_TUPLE" . ((number "0" 120 . 121)))
          ("MASTER_FRAMEWORK_SLOTCHECKERTEST_H")
          )
)
    (semanticdb-table "MasterBaseTestHelper.h"
      :file "MasterBaseTestHelper.h"
      :fsize 1271
      :lastmodtime '(23846 52221 753299 686000))
    (semanticdb-table "SlotClassifierTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("MASTER_FRAMEWORK_SLOTCLASSIFIERTEST_H" variable (:constant-flag t) nil [55 92])
            ("unittest/unittest.h" include (:system-flag t) nil [94 124])
            ("common/Log.h" include nil nil [126 149])
            ("master_framework/common.h" include nil nil [150 186])
            ("master_base/SlotClassifier.h" include nil nil [187 226])
            ("master_base/test/MasterBaseTestHelper.h" include nil nil [227 277])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [279 299])
            ("hippo" using (:type ("hippo" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [300 322])
            ("BEGIN_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [357 369]))                  
                :type "int")
                nil [324 370])
            ("testing::Test" variable (:type "int") nil [408 631])
            ("MASTER_FRAMEWORK_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [660 672])
                    ("" variable (:type ("SlotClassifierTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [673 692]))                  
                :type "int")
                nil [633 693])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("SlotClassifierTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [702 721])
                    ("" variable (:type ("testClassifySlots" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [722 740]))                  
                :type "int")
                nil [695 2915])
            ("END_MASTER_FRAMEWORK_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("master_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2948 2960]))                  
                :type "int")
                nil [2917 2961]))          
      :file "SlotClassifierTest.cpp"
      :pointmax 3010
      :fsize 3009
      :lastmodtime '(23846 56992 29406 953000)
      :unmatched-syntax '((thing 407 . 408) (thing 406 . 407) (thing 399 . 405) (thing 397 . 398) (thing 378 . 396) (thing 372 . 377))
      :lexical-table 
        '(("MASTER_FRAMEWORK_SLOTCLASSIFIERTEST_H")
          )
))
  :file "!swift_develop!swift_func_test!temp!source_code!master_framework!src!master_base!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
