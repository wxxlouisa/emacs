;; Object autil/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "autil/"
  :tables
  (list
    (semanticdb-table "MultiValueType.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("autil/MultiValueType.h" include nil nil [1 34])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [36 56])
            ("AUTIL_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("autil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80 86]))                  
                :type "int")
                nil [58 87])
            ("stringMultiTypeStream" function
               (:arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [125 146])
                    ("value" variable (:type ("MultiChar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [147 163]))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [89 236])
            ("normalMultiTypeStream" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("std::ostream" type (:type "class") nil nil)
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [295 316])
                    ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [317 325]))                  )
                nil [238 507])
            ("intMultiTypeStream" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("std::ostream" type (:type "class") nil nil)
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [563 584])
                    ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [585 593]))                  )
                nil [509 780])
            ("STREAM_FUNC" variable (:constant-flag t) nil [790 801])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiUInt8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1011 1054])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiInt8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1056 1098])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiInt16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1100 1146])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiUInt16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1148 1195])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiInt32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1197 1243])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiUInt32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1245 1292])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiInt64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1294 1340])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiUInt64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1342 1389])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiUInt128" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1391 1439])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiFloat" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1441 1487])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiDouble" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1489 1536])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiChar" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1538 1583])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("stream" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) nil)
                    ("value" variable (:type ("MultiString" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [1585 1632])
            ("AUTIL_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("autil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1655 1661]))                  
                :type "int")
                nil [1635 1662]))          
      :file "MultiValueType.cpp"
      :pointmax 1663
      :fsize 1662
      :lastmodtime '(23220 43221 935786 703000)
      :unmatched-syntax '((thing 1389 . 1390) (thing 1340 . 1341) (thing 1292 . 1293) (thing 1243 . 1244) (thing 1195 . 1196) (thing 1146 . 1147) (thing 1098 . 1099) (thing 1054 . 1055) (thing 1439 . 1440) (thing 1487 . 1488) (thing 1536 . 1537) (thing 1583 . 1584) (thing 1632 . 1633))
      :lexical-table 
        '(("STREAM_FUNC" (spp-arg-list ("func" "type") 801 . 813) . 
              ((symbol "std" 860 . 863) (punctuation ":" 863 . 864) (punctuation ":" 864 . 865) (symbol "ostream" 865 . 872) (punctuation "&" 872 . 873) (OPERATOR "operator" 874 . 882) (punctuation "<" 883 . 884) (punctuation "<" 884 . 885) (semantic-list "(std::ostream& stream, type value)" 885 . 919) (semantic-list "{       \\
        return func(stream, value);                                     \\
    }" 920 . 1009)))
          )
)
    (semanticdb-table "MultiValueType.h"
      :major-mode 'c++-mode
      :tags 
        '( ("AUTIL_MULTIVALUETYPE_H" variable (:constant-flag t) nil [40 62])
            ("autil/CommonMacros.h" include nil nil [64 95])
            ("autil/DataBuffer.h" include nil nil [96 125])
            ("autil/StringTokenizer.h" include nil nil [126 160])
            ("autil/MultiValueFormatter.h" include nil nil [161 199])
            ("string" include (:system-flag t) nil [200 217])
            ("iostream" include (:system-flag t) nil [218 237])
            ("AUTIL_BEGIN_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("autil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [261 267]))                  
                :type "int")
                nil [239 268])
            ("MULTI_VALUE_DELIMITER" variable
               (:constant-flag t
                :default-value "'\\x1D'"
                :type "char")
                nil [270 312])
            ("MultiValueType" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [359 366])
                    ("type" type
                       (:typedef ("T" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [371 386])
                    ("public" label nil (reparse-symbol classsubparts) [387 394])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("buffer" variable
                               (:pointer 1
                                :constant-flag t
                                :default-value "NULL"
                                :type "void")
                                (reparse-symbol arg-sub-list) [414 439]))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [399 517])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [538 566]))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [523 612])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [649 680]))                          
                        :type ("MultiValueType" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [618 748])
                    ("MultiValueType" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [754 774])
                    ("public" label nil (reparse-symbol classsubparts) [776 783])
                    ("init" function
                       (:arguments 
                          ( ("buffer" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [798 817]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [788 977])
                    ("[]" function
                       (:operator-flag t
                        :arguments 
                          ( ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1009]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [983 1051])
                    ("getRef" function
                       (:constant-flag t
                        :arguments 
                          ( ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1073 1086]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1057 1128])
                    ("size" function (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1134 1376])
                    ("length" function (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1382 1648])
                    ("data" function
                       (:pointer 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1654 1949])
                    ("getBaseAddress" function
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol classsubparts) [1955 2116])
                    ("public" label nil (reparse-symbol classsubparts) [2118 2125])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2148 2179]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2130 2451])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2475 2506]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2457 2554])
                    (">" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2577 2608]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2560 3105])
                    ("<" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3128 3159]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3111 3668])
                    (">=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3692 3723]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3674 3770])
                    ("<=" function
                       (:operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3794 3825]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3776 3872])
                    ("DEFINE_UNSUPPORTED_OPERATOR" variable (:constant-flag t) (reparse-symbol classsubparts) [3882 3909])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4380 4429])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4446 4495])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4511 4560])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4577 4626])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4640 4689])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4704 4753])
                    ("MultiValueType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MultiValueType" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) nil))                          
                        :type ("MultiValueType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4773 4822])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("fieldOfInput" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4892 4924]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4874 5501])
                    ("!=" function
                       (:operator-flag t
                        :arguments 
                          ( ("fieldOfInput" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5525 5557]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [5507 5612])
                    ("serialize" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5640 5670]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5618 5876])
                    ("deserialize" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("dataBuffer" variable
                               (:reference 1
                                :type ("autil::DataBuffer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5906 5936])
                            ("pool" variable
                               (:pointer 1
                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5937 5965]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5882 6264])
                    ("private" label nil (reparse-symbol classsubparts) [6265 6273])
                    ("INVALID_OFFSET_INFO" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0"
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6278 6323])
                    ("private" label nil (reparse-symbol classsubparts) [6325 6333])
                    ("isOffsetValid" function (:type "bool") (reparse-symbol classsubparts) [6338 6423])
                    ("private" label nil (reparse-symbol classsubparts) [6425 6433])
                    ("_offsetInfo" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6438 6458]))                  )
                nil [314 6461])
            ("==" function
               (:type "bool"
                :arguments 
                  ( ("fieldOfInput" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6611 6643]))                  
                :typemodifiers ("inline")
                :parent "MultiValueType"
                :operator-flag t)
                nil [6553 6709])
            ("[]" function
               (:type ("MultiValueType" type
                     (:template-specifier 
                        ( ("char" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("idx" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6802 6815]))                  
                :typemodifiers ("inline")
                :parent "MultiValueType"
                :operator-flag t)
                nil [6711 7436])
            ("data" function
               (:type ("MultiValueType" type
                     (:template-specifier 
                        ( ("char" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :constant-flag t
                :typemodifiers ("inline")
                :parent "MultiValueType"
                :pointer 1)
                nil [7438 7557])
            ("length" function
               (:type ("uint32_t" type (:type "class") nil nil)
                :typemodifiers ("inline")
                :parent "MultiValueType")
                nil [7559 8501])
            ("MULTI_VALUE_TYPE_MACRO_HELPER" variable (:constant-flag t) nil [8511 8540])
            ("unnamed" type
               (:members 
                  ( ("" type
                       (:members 
                          ( ("Bool" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9415 9420])
                            ("Int8" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9425 9430])
                            ("Uint8" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9435 9441])
                            ("Int16" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9446 9452])
                            ("Uint16" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9457 9464])
                            ("Int32" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9469 9475])
                            ("UInt32" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9480 9487])
                            ("Int64" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9492 9498])
                            ("Uint64" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9503 9510])
                            ("Uint128" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9515 9523])
                            ("Float" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9528 9534])
                            ("Double" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9539 9546])
                            ("Char" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9551 9556])
                            ("String" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [9561 9568]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [9404 9571]))                  
                :type "namespace")
                nil [9392 9573])
            ("MULTI_VALUE_TYPE_MACRO_HELPER_2" variable (:constant-flag t) nil [9583 9614])
            ("MULTI_VALUE_TYPEDEF_1" variable (:constant-flag t) nil [10569 10590])
            ("MULTI_VALUE_TYPEDEF_2" variable (:constant-flag t) nil [10745 10766])
            ("MULTI_VALUE_OSTREAM" variable (:constant-flag t) nil [10924 10943])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("bool" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("int8_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("uint8_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("int16_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("uint16_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("int32_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("uint32_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("int64_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("uint64_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("autil::uint128_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("float" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("double" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("char" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("std" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("MultiValueType" type
                         (:template-specifier 
                            ( ("MultiValueType" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [11029 11079])
            ("SPECIALIZE_MULTIVALUETYPE_DATABUFFER_READ" variable (:constant-flag t) nil [11117 11158])
            ("IsMultiType" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("std::false_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [11517 11546]))                  )
                nil [11471 11549])
            ("IS_MULTI_TYPE" variable (:constant-flag t) nil [11559 11572])
            ("AUTIL_END_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("autil" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11846 11852]))                  
                :type "int")
                nil [11826 11853]))          
      :file "MultiValueType.h"
      :pointmax 11886
      :fsize 11885
      :lastmodtime '(23220 43221 935786 703000)
      :unmatched-syntax '((thing 4822 . 4823) (thing 4822 . 4823) (thing 4822 . 4823) (thing 4773 . 4822) (thing 4773 . 4822) (thing 4773 . 4822) (thing 4773 . 4822) (thing 4773 . 4822) (thing 4773 . 4822) (thing 4753 . 4754) (thing 4753 . 4754) (thing 4753 . 4754) (thing 4704 . 4753) (thing 4704 . 4753) (thing 4704 . 4753) (thing 4704 . 4753) (thing 4704 . 4753) (thing 4704 . 4753) (thing 4689 . 4690) (thing 4689 . 4690) (thing 4689 . 4690) (thing 4640 . 4689) (thing 4640 . 4689) (thing 4640 . 4689) (thing 4640 . 4689) (thing 4640 . 4689) (thing 4640 . 4689) (thing 4626 . 4627) (thing 4626 . 4627) (thing 4626 . 4627) (thing 4577 . 4626) (thing 4577 . 4626) (thing 4577 . 4626) (thing 4577 . 4626) (thing 4577 . 4626) (thing 4577 . 4626) (thing 4560 . 4561) (thing 4560 . 4561) (thing 4560 . 4561) (thing 4511 . 4560) (thing 4511 . 4560) (thing 4511 . 4560) (thing 4511 . 4560) (thing 4511 . 4560) (thing 4511 . 4560) (thing 4495 . 4496) (thing 4495 . 4496) (thing 4495 . 4496) (thing 4446 . 4495) (thing 4446 . 4495) (thing 4446 . 4495) (thing 4446 . 4495) (thing 4446 . 4495) (thing 4446 . 4495) (thing 4429 . 4430) (thing 4429 . 4430) (thing 4429 . 4430) (thing 4380 . 4429) (thing 4380 . 4429) (thing 4380 . 4429) (thing 4380 . 4429) (thing 4380 . 4429) (thing 4380 . 4429) (thing 4355 . 4356) (thing 4355 . 4356) (thing 4355 . 4356) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4318 . 4355) (thing 4292 . 4293) (thing 4292 . 4293) (thing 4292 . 4293) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 4255 . 4292) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10651 . 10705) (thing 10705 . 10706) (thing 10705 . 10706) (thing 10705 . 10706) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10830 . 10884) (thing 10884 . 10885) (thing 10884 . 10885) (thing 10884 . 10885) (thing 11079 . 11080) (thing 11079 . 11080) (thing 11079 . 11080) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11347 . 11419) (thing 11419 . 11420) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11758 . 11802) (thing 11802 . 11803))
      :lexical-table 
        '(("AUTIL_MULTIVALUETYPE_H")
          ("MULTI_VALUE_TYPE_MACRO_HELPER_2" (spp-arg-list ("MY_MACRO") 9614 . 9624) . 
              ((symbol "MY_MACRO" 9645 . 9653) (semantic-list "(MultiValueType<bool>, Bool)" 9653 . 9681) (punctuation ";" 9681 . 9682) (symbol "MY_MACRO" 9711 . 9719) (semantic-list "(MultiValueType<int8_t>, Int8)" 9719 . 9749) (punctuation ";" 9749 . 9750) (symbol "MY_MACRO" 9777 . 9785) (semantic-list "(MultiValueType<uint8_t>, UInt8)" 9785 . 9817) (punctuation ";" 9817 . 9818) (symbol "MY_MACRO" 9843 . 9851) (semantic-list "(MultiValueType<int16_t>, Int16)" 9851 . 9883) (punctuation ";" 9883 . 9884) (symbol "MY_MACRO" 9909 . 9917) (semantic-list "(MultiValueType<uint16_t>, UInt16)" 9917 . 9951) (punctuation ";" 9951 . 9952) (symbol "MY_MACRO" 9975 . 9983) (semantic-list "(MultiValueType<int32_t>, Int32)" 9983 . 10015) (punctuation ";" 10015 . 10016) (symbol "MY_MACRO" 10041 . 10049) (semantic-list "(MultiValueType<uint32_t>, UInt32)" 10049 . 10083) (punctuation ";" 10083 . 10084) (symbol "MY_MACRO" 10107 . 10115) (semantic-list "(MultiValueType<int64_t>, Int64)" 10115 . 10147) (punctuation ";" 10147 . 10148) (symbol "MY_MACRO" 10173 . 10181) (semantic-list "(MultiValueType<uint64_t>, UInt64)" 10181 . 10215) (punctuation ";" 10215 . 10216) (symbol "MY_MACRO" 10239 . 10247) (semantic-list "(MultiValueType<autil::uint128_t>, UInt128)" 10247 . 10290) (punctuation ";" 10290 . 10291) (symbol "MY_MACRO" 10305 . 10313) (semantic-list "(MultiValueType<float>, Float)" 10313 . 10343) (punctuation ";" 10343 . 10344) (symbol "MY_MACRO" 10371 . 10379) (semantic-list "(MultiValueType<double>, Double)" 10379 . 10411) (punctuation ";" 10411 . 10412) (symbol "MY_MACRO" 10437 . 10445) (semantic-list "(MultiValueType<char>, Char)" 10445 . 10473) (punctuation ";" 10473 . 10474) (symbol "MY_MACRO" 10503 . 10511) (semantic-list "(MultiValueType<MultiValueType<char> >, String)" 10511 . 10558) (punctuation ";" 10558 . 10559)))
          ("MULTI_VALUE_TYPE_MACRO_HELPER" (spp-arg-list ("MY_MACRO") 8540 . 8550) . 
              ((symbol "MY_MACRO" 8565 . 8573) (semantic-list "(MultiValueType<bool>)" 8573 . 8595) (punctuation ";" 8595 . 8596) (symbol "MY_MACRO" 8623 . 8631) (semantic-list "(MultiValueType<int8_t>)" 8631 . 8655) (punctuation ";" 8655 . 8656) (symbol "MY_MACRO" 8681 . 8689) (semantic-list "(MultiValueType<uint8_t>)" 8689 . 8714) (punctuation ";" 8714 . 8715) (symbol "MY_MACRO" 8739 . 8747) (semantic-list "(MultiValueType<int16_t>)" 8747 . 8772) (punctuation ";" 8772 . 8773) (symbol "MY_MACRO" 8797 . 8805) (semantic-list "(MultiValueType<uint16_t>)" 8805 . 8831) (punctuation ";" 8831 . 8832) (symbol "MY_MACRO" 8855 . 8863) (semantic-list "(MultiValueType<int32_t>)" 8863 . 8888) (punctuation ";" 8888 . 8889) (symbol "MY_MACRO" 8913 . 8921) (semantic-list "(MultiValueType<uint32_t>)" 8921 . 8947) (punctuation ";" 8947 . 8948) (symbol "MY_MACRO" 8971 . 8979) (semantic-list "(MultiValueType<int64_t>)" 8979 . 9004) (punctuation ";" 9004 . 9005) (symbol "MY_MACRO" 9029 . 9037) (semantic-list "(MultiValueType<uint64_t>)" 9037 . 9063) (punctuation ";" 9063 . 9064) (symbol "MY_MACRO" 9087 . 9095) (semantic-list "(MultiValueType<autil::uint128_t>)" 9095 . 9129) (punctuation ";" 9129 . 9130) (symbol "MY_MACRO" 9146 . 9154) (semantic-list "(MultiValueType<float>)" 9154 . 9177) (punctuation ";" 9177 . 9178) (symbol "MY_MACRO" 9204 . 9212) (semantic-list "(MultiValueType<double>)" 9212 . 9236) (punctuation ";" 9236 . 9237) (symbol "MY_MACRO" 9262 . 9270) (semantic-list "(MultiValueType<char>)" 9270 . 9292) (punctuation ";" 9292 . 9293) (symbol "MY_MACRO" 9320 . 9328) (semantic-list "(MultiValueType<MultiValueType<char> >)" 9328 . 9367) (punctuation ";" 9367 . 9368)))
          )
)
    (semanticdb-table "CommonMacros.h"
      :file "CommonMacros.h"
      :fsize 2002
      :lastmodtime '(23220 43221 925786 688000))
    (semanticdb-table "DataBuffer.h"
      :file "DataBuffer.h"
      :fsize 20767
      :lastmodtime '(23220 43221 926786 689000))
    (semanticdb-table "StringTokenizer.h"
      :file "StringTokenizer.h"
      :fsize 5323
      :lastmodtime '(23220 43221 936786 705000))
    (semanticdb-table "MultiValueFormatter.h"
      :file "MultiValueFormatter.h"
      :fsize 6024
      :lastmodtime '(23220 43221 935786 703000)))
  :file "!ssd!sdd!git!ha3!turing_test!search_test!temp!source_code!autil!autil!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
