;; Object test/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "test/"
  :tables
  (list
    (semanticdb-table "QueryTokenizerTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 30])
            ("ha3/common.h" include (:system-flag t) nil [31 54])
            ("ha3/isearch.h" include (:system-flag t) nil [55 79])
            ("ha3/util/Log.h" include (:system-flag t) nil [80 105])
            ("ha3/qrs/QueryTokenizer.h" include (:system-flag t) nil [106 141])
            ("suez/turing/expression/util/IndexInfos.h" include (:system-flag t) nil [142 193])
            ("ha3/test/test.h" include (:system-flag t) nil [194 220])
            ("build_service/analyzer/AnalyzerInfos.h" include (:system-flag t) nil [221 270])
            ("build_service/analyzer/AnalyzerFactory.h" include (:system-flag t) nil [271 322])
            ("build_service/analyzer/TokenizerManager.h" include (:system-flag t) nil [323 375])
            ("build_service/config/ResourceReader.h" include (:system-flag t) nil [376 424])
            ("ha3/common/TermQuery.h" include (:system-flag t) nil [425 458])
            ("ha3/common/PhraseQuery.h" include (:system-flag t) nil [459 494])
            ("ha3/common/AndQuery.h" include (:system-flag t) nil [495 527])
            ("ha3/common/OrQuery.h" include (:system-flag t) nil [528 559])
            ("ha3/common/RankQuery.h" include (:system-flag t) nil [560 593])
            ("ha3/common/MultiTermQuery.h" include (:system-flag t) nil [594 632])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [634 654])
            ("build_service::config" using (:type ("build_service::config" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [655 693])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [694 723])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [743 750]))                  
                :type "int")
                nil [725 751])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [770 777]))                  
                :type "int")
                nil [752 778])
            ("build_service::analyzer" using (:type ("build_service::analyzer" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [779 819])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [841 845]))                  
                :type "int")
                nil [821 846])
            ("QueryTokenizerTest" type
               (:superclasses 
                  ( ("TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [893 900])
                    ("QueryTokenizerTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("QueryTokenizerTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [905 926])
                    ("QueryTokenizerTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [931 953])
                    ("public" label nil (reparse-symbol classsubparts) [954 961])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [966 979])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [984 1000])
                    ("protected" label nil (reparse-symbol classsubparts) [1001 1011])
                    ("initInstances" function
                       (:prototype-flag t
                        :arguments 
                          ( ("caseSensitive" variable
                               (:default-value "false"
                                :type "bool")
                                (reparse-symbol arg-sub-list) [1035 1061]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1016 1063])
                    ("protected" label nil (reparse-symbol classsubparts) [1064 1074])
                    ("ALIWS_CONFIG_PATH" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1079 1122])
                    ("testTokenizeBinaryQuery" function
                       (:template 
                          ( ("QueryType" type (:type "class") nil nil))                          
                        :type "void"
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [1128 1192])
                    ("createBinaryQuery" function
                       (:template 
                          ( ("QueryType" type (:type "class") nil nil))                          
                        :type ("QueryType" type (:type "class") nil nil)
                        :arguments 
                          ( ("word1" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [1261 1279])
                            ("word2" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [1313 1331])
                            ("word3" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [1365 1383]))                          
                        :pointer 1
                        :prototype-flag t)
                        (reparse-symbol classsubparts) [1198 1384])
                    ("protected" label nil (reparse-symbol classsubparts) [1385 1395])
                    ("_infos" variable
                       (:pointer 1
                        :type ("IndexInfos" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1400 1419])
                    ("_analyzerFactory" variable
                       (:pointer 1
                        :type ("build_service::analyzer::AnalyzerFactory" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1424 1483])
                    ("_queryTokenizer" variable
                       (:pointer 1
                        :type ("QueryTokenizer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1488 1520])
                    ("_configClause" variable (:type ("common::ConfigClause" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1525 1560])
                    ("protected" label nil (reparse-symbol classsubparts) [1561 1571])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1576 1594]))                  
                :type "class")
                nil [848 1597])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1613 1617])
                    ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1618 1637]))                  
                :type "int")
                nil [1599 1638])
            ("QueryTokenizerTest::ALIWS_CONFIG_PATH" variable
               (:constant-flag t
                :default-value "string(ALIWSLIB_DATA_PATH) + \"/conf/\""
                :type ("string" type (:type "class") nil nil))
                nil [1641 1736])
            ("QueryTokenizerTest" function
               (:constructor-flag t
                :parent "QueryTokenizerTest"
                :type ("QueryTokenizerTest" type (:type "class") nil nil))
                nil [1738 1782])
            ("QueryTokenizerTest" function
               (:destructor-flag t
                :parent "QueryTokenizerTest"
                :type "void")
                nil [1784 1829])
            ("setUp" function
               (:parent "QueryTokenizerTest"
                :type "void")
                nil [1831 1918])
            ("tearDown" function
               (:parent "QueryTokenizerTest"
                :type "void")
                nil [1920 2111])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2120 2139])
                    ("" variable (:type ("testTokenizePhraseQueryWithTwoToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2140 2176]))                  
                :type "int")
                nil [2113 3049])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3058 3077])
                    ("" variable (:type ("testTokenizePhraseQueryWithNoTokenizeIndexes" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3078 3123]))                  
                :type "int")
                nil [3051 3936])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3945 3964])
                    ("" variable (:type ("testTokenizePhraseQueryWithOneToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3965 4001]))                  
                :type "int")
                nil [3938 4636])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4645 4664])
                    ("" variable (:type ("testTokenizeTermQueryWithOneToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4665 4699]))                  
                :type "int")
                nil [4638 5286])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5296 5315])
                    ("" variable (:type ("testTokenizeTermQueryWithTwoToken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5316 5350]))                  
                :type "int")
                nil [5289 6186])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6195 6214])
                    ("" variable (:type ("testTokenizeAndQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6215 6236]))                  
                :type "int")
                nil [6188 6316])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6326 6345])
                    ("" variable (:type ("testTokenizeOrQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6346 6366]))                  
                :type "int")
                nil [6319 6445])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6454 6473])
                    ("" variable (:type ("testTokenizeRankQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6474 6496]))                  
                :type "int")
                nil [6447 6577])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6586 6605])
                    ("" variable (:type ("testTokenizeAndNotQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6606 6630]))                  
                :type "int")
                nil [6579 6713])
            ("testTokenizeBinaryQuery" function
               (:template 
                  ( ("QueryType" type (:type "class") nil nil))                  
                :type "void"
                :parent "QueryTokenizerTest")
                nil [6715 7881])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7890 7909])
                    ("" variable (:type ("testTokenizeNumberQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7910 7934]))                  
                :type "int")
                nil [7883 8575])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8585 8604])
                    ("" variable (:type ("testTokenizeComplicatedQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8605 8634]))                  
                :type "int")
                nil [8578 9576])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9585 9604])
                    ("" variable (:type ("testTokenizeQueryWithDefaultQueryOperator_AND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9605 9651]))                  
                :type "int")
                nil [9578 10393])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10402 10421])
                    ("" variable (:type ("testTokenizeStopWordQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10422 10448]))                  
                :type "int")
                nil [10395 11483])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11492 11511])
                    ("" variable (:type ("testTokenizeExtendRetrieveQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11512 11544]))                  
                :type "int")
                nil [11485 12278])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12287 12306])
                    ("" variable (:type ("testTokenizeQueryWithDefaultQueryOperator_OR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12307 12352]))                  
                :type "int")
                nil [12280 13090])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13099 13118])
                    ("" variable (:type ("testCaseSensitiveFalse" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13119 13142]))                  
                :type "int")
                nil [13092 13936])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13945 13964])
                    ("" variable (:type ("testCaseSensitiveTrue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13965 13987]))                  
                :type "int")
                nil [13938 15866])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15875 15894])
                    ("" variable (:type ("testTokenizeWithAllStopWords" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15895 15924]))                  
                :type "int")
                nil [15868 16238])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16247 16266])
                    ("" variable (:type ("testTokenizeWithOneWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16267 16291]))                  
                :type "int")
                nil [16240 16607])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16616 16635])
                    ("" variable (:type ("testTokenizeWithSpecifiedAnalyzer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16636 16670]))                  
                :type "int")
                nil [16609 18253])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18263 18282])
                    ("" variable (:type ("testTokenizeWithMutilWords" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18283 18310]))                  
                :type "int")
                nil [18256 18633])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18642 18661])
                    ("" variable (:type ("testVisitPhraseQueryWithAllStopWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18662 18698]))                  
                :type "int")
                nil [18635 19064])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19073 19092])
                    ("" variable (:type ("testVisitPhraseQueryWithOneWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19093 19125]))                  
                :type "int")
                nil [19066 19616])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19625 19644])
                    ("" variable (:type ("testVisitPhraseQueryWithMultiWords" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19645 19680]))                  
                :type "int")
                nil [19618 20631])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20640 20659])
                    ("" variable (:type ("testTokenizeWithAnalyzerClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20660 20691]))                  
                :type "int")
                nil [20633 26071])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26080 26099])
                    ("" variable (:type ("testTokenMultiTermQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26100 26124]))                  
                :type "int")
                nil [26073 26948])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26957 26976])
                    ("" variable (:type ("testTokenMultiTermQueryWithOneTerm" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26977 27012]))                  
                :type "int")
                nil [26950 27922])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27931 27950])
                    ("" variable (:type ("testTokenMultiTermQueryWithDefaultOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27951 27988]))                  
                :type "int")
                nil [27924 29074])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29083 29102])
                    ("" variable (:type ("testTokenMultiTermQueryBoostTruncate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29103 29140]))                  
                :type "int")
                nil [29076 30195])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30204 30223])
                    ("" variable (:type ("testTokenMultiTermQueryWithDiffOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30224 30258]))                  
                :type "int")
                nil [30197 31784])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31793 31812])
                    ("" variable (:type ("testTokenMultiTermQueryWithDiffOpAlltoken" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31813 31855]))                  
                :type "int")
                nil [31786 33183])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33192 33211])
                    ("" variable (:type ("testTokenMultiTermQueryDiffOpBoostTruncate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33212 33255]))                  
                :type "int")
                nil [33185 34844])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34853 34872])
                    ("" variable (:type ("testTokenMultiTermQueryOneTokenDiffOp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34873 34911]))                  
                :type "int")
                nil [34846 35621])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35630 35649])
                    ("" variable (:type ("testNoNeedTokenizeMultiTermQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35650 35683]))                  
                :type "int")
                nil [35623 36944])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36953 36972])
                    ("" variable (:type ("testNoTokenizerMultiTermQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36973 37003]))                  
                :type "int")
                nil [36946 38055])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("QueryTokenizerTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38064 38083])
                    ("" variable (:type ("testWeakAndNotTokenizerMultiTermQuery" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38084 38122]))                  
                :type "int")
                nil [38057 39082])
            ("createBinaryQuery" function
               (:template 
                  ( ("QueryType" type (:type "class") nil nil))                  
                :type ("QueryType" type (:type "class") nil nil)
                :arguments 
                  ( ("word1" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [39163 39181])
                    ("word2" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [39190 39208])
                    ("word3" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [39217 39235]))                  
                :parent "QueryTokenizerTest"
                :pointer 1)
                nil [39084 39776])
            ("initInstances" function
               (:parent "QueryTokenizerTest"
                :arguments 
                  ( ("caseSensitive" variable (:type "bool") (reparse-symbol arg-sub-list) [39817 39836]))                  
                :type "void")
                nil [39778 41969])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41989 41993]))                  
                :type "int")
                nil [41971 41994]))          
      :file "QueryTokenizerTest.cpp"
      :pointmax 41995
      :fsize 42138
      :lastmodtime '(23516 9073 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "RequestValidateProcessorTest.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("unittest/unittest.h" include (:system-flag t) nil [1 30])
            ("ha3/common.h" include (:system-flag t) nil [31 54])
            ("ha3/isearch.h" include (:system-flag t) nil [55 79])
            ("ha3/util/Log.h" include (:system-flag t) nil [80 105])
            ("suez/turing/expression/util/TableInfo.h" include (:system-flag t) nil [106 156])
            ("ha3/common/Request.h" include (:system-flag t) nil [157 188])
            ("ha3/common/Result.h" include (:system-flag t) nil [189 219])
            ("ha3/qrs/RequestValidator.h" include (:system-flag t) nil [220 257])
            ("ha3/qrs/QueryTokenizer.h" include (:system-flag t) nil [258 293])
            ("ha3/qrs/RequestValidateProcessor.h" include (:system-flag t) nil [294 339])
            ("build_service/analyzer/AnalyzerFactory.h" include (:system-flag t) nil [340 391])
            ("ha3/config/ClusterConfigInfo.h" include (:system-flag t) nil [392 433])
            ("ha3_sdk/testlib/qrs/RequestCreator.h" include (:system-flag t) nil [434 481])
            ("autil/StringUtil.h" include (:system-flag t) nil [482 511])
            ("ha3/common/ErrorDefine.h" include (:system-flag t) nil [512 547])
            ("ha3/qrs/RequestValidateProcessor.h" include (:system-flag t) nil [548 593])
            ("ha3/qrs/RequestValidator.h" include (:system-flag t) nil [594 631])
            ("ha3/qrs/test/ExceptionQrsProcessor.h" include (:system-flag t) nil [632 679])
            ("ha3/monitor/SessionMetricsCollector.h" include (:system-flag t) nil [680 728])
            ("build_service/analyzer/AnalyzerFactory.h" include (:system-flag t) nil [729 780])
            ("build_service/analyzer/AnalyzerInfos.h" include (:system-flag t) nil [781 830])
            ("ha3/test/test.h" include (:system-flag t) nil [831 857])
            ("ha3/common/TermQuery.h" include (:system-flag t) nil [858 891])
            ("ha3/queryparser/RequestParser.h" include (:system-flag t) nil [892 934])
            ("build_service/analyzer/TokenizerManager.h" include (:system-flag t) nil [935 987])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [988 1008])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1009 1031])
            ("suez::turing" using (:type ("suez::turing" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1032 1061])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("config" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1081 1088]))                  
                :type "int")
                nil [1063 1089])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("monitor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1108 1116]))                  
                :type "int")
                nil [1090 1117])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("common" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1136 1143]))                  
                :type "int")
                nil [1118 1144])
            ("build_service::analyzer" using (:type ("build_service::analyzer" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1145 1185])
            ("USE_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("util" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1204 1209]))                  
                :type "int")
                nil [1186 1210])
            ("BEGIN_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1232 1236]))                  
                :type "int")
                nil [1212 1237])
            ("RequestValidateProcessorTest" type
               (:superclasses 
                  ( ("TESTBASE" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1294 1301])
                    ("RequestValidateProcessorTest" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("RequestValidateProcessorTest" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1306 1337])
                    ("RequestValidateProcessorTest" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1342 1374])
                    ("public" label nil (reparse-symbol classsubparts) [1375 1382])
                    ("initFactory" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :type ("build_service::analyzer::AnalyzerFactoryPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1387 1452])
                    ("public" label nil (reparse-symbol classsubparts) [1453 1460])
                    ("setUp" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1465 1478])
                    ("tearDown" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [1483 1499])
                    ("protected" label nil (reparse-symbol classsubparts) [1500 1510])
                    ("prepareCorrectRequest" function
                       (:prototype-flag t
                        :type ("common::RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1515 1558])
                    ("prepareErrorRequest" function
                       (:prototype-flag t
                        :type ("common::RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1563 1604])
                    ("prepareRequest" function
                       (:prototype-flag t
                        :arguments 
                          ( ("word1" variable
                               (:reference 1
                                :constant-flag t
                                :default-value "\"stopword1\""
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1643 1681])
                            ("word2" variable
                               (:reference 1
                                :constant-flag t
                                :default-value "\"stopword2\""
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1695 1733]))                          
                        :type ("common::RequestPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1609 1735])
                    ("createFakeTableInfo" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("tableName" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1772 1801]))                          
                        :type ("TableInfo" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1741 1802])
                    ("createIndexInfos" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("indexNames" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1849 1892])
                            ("analyzerNames" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1905 1951]))                          
                        :type ("IndexInfos" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1807 1952])
                    ("createAttributeInfos" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("attrNames" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2007 2049])
                            ("mutiFlags" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2062 2097])
                            ("fieldTypes" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("FieldType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2110 2151]))                          
                        :type ("AttributeInfos" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1957 2152])
                    ("validateFetchSummaryCluster" function
                       (:prototype-flag t
                        :arguments 
                          ( ("configClause" variable
                               (:pointer 1
                                :type ("common::ConfigClause" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2195 2230])
                            ("clusterTableInfoMapPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2243 2296]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2162 2297])
                    ("validateMultiCluster" function
                       (:prototype-flag t
                        :arguments 
                          ( ("configClause" variable
                               (:pointer 1
                                :type ("common::ConfigClause" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2328 2363])
                            ("levelClause" variable
                               (:pointer 1
                                :type ("common::LevelClause" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2395 2428])
                            ("clusterTableInfoMapPtr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2460 2513]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2302 2514])
                    ("createConfigClause" function
                       (:prototype-flag t
                        :arguments 
                          ( ("oriString" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2564 2593]))                          
                        :type ("common::ConfigClause" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2524 2594])
                    ("createClusterTableInfoMapPtr" function
                       (:prototype-flag t
                        :arguments 
                          ( ("indexStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2664 2692])
                            ("clusterStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2693 2723]))                          
                        :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2599 2724])
                    ("protected" label nil (reparse-symbol classsubparts) [2725 2735])
                    ("_requestValidatorPtr" variable (:type ("RequestValidatorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2740 2781])
                    ("_validateProcessorPtr" variable (:type ("RequestValidateProcessorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2786 2836])
                    ("_tableInfoMap" variable (:type ("std::map" type
                         (:template-specifier 
                            ( ("std::string" type nil nil nil)
                              ("TableInfoPtr" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [2841 2891])
                    ("_clusterConfigMapPtr" variable (:type ("config::ClusterConfigMapPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2896 2945])
                    ("_result" variable (:type ("common::ResultPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2950 2976])
                    ("protected" label nil (reparse-symbol classsubparts) [2977 2987])
                    ("_analyzerFactoryPtr" variable
                       (:typemodifiers ("static")
                        :type ("build_service::analyzer::AnalyzerFactoryPtr" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2992 3063])
                    ("protected" label nil (reparse-symbol classsubparts) [3064 3074])
                    ("HA3_LOG_DECLARE" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [3079 3097]))                  
                :type "class")
                nil [1239 3100])
            ("HA3_LOG_SETUP" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3116 3120])
                    ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3121 3150]))                  
                :type "int")
                nil [3102 3151])
            ("RVP_INNER_CHECK_AND_RESET_ERROR" variable (:constant-flag t) nil [3162 3193])
            ("RVP_CHECK_AND_RESET_ERROR" variable (:constant-flag t) nil [3649 3674])
            ("RVP_CHECK_AND_RESET_ERROR_WITH_MESSAGE" variable (:constant-flag t) nil [3830 3868])
            ("RVP_CHECK_NO_ERROR" variable (:constant-flag t) nil [4122 4140])
            ("CREATE_CONFIG_CLAUSE" variable (:constant-flag t) nil [4211 4231])
            ("RVP_CHECK_FETCHSUMMARY_ERROR" variable (:constant-flag t) nil [4647 4675])
            ("RVP_CHECK_FETCHSUMMARY_INFO" variable (:constant-flag t) nil [5170 5197])
            ("RequestValidateProcessorTest::_analyzerFactoryPtr" variable
               (:default-value "RequestValidateProcessorTest::initFactory()"
                :type ("build_service::analyzer::AnalyzerFactoryPtr" type (:type "class") nil nil))
                nil [5870 6015])
            ("RequestValidateProcessorTest" function
               (:constructor-flag t
                :parent "RequestValidateProcessorTest"
                :type ("RequestValidateProcessorTest" type (:type "class") nil nil))
                nil [6018 6082])
            ("RequestValidateProcessorTest" function
               (:destructor-flag t
                :parent "RequestValidateProcessorTest"
                :type "void")
                nil [6084 6149])
            ("setUp" function
               (:parent "RequestValidateProcessorTest"
                :type "void")
                nil [6151 7493])
            ("tearDown" function
               (:parent "RequestValidateProcessorTest"
                :type "void")
                nil [7495 7612])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7621 7650])
                    ("" variable (:type ("testSimpleProcess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7651 7669]))                  
                :type "int")
                nil [7614 7846])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7855 7884])
                    ("" variable (:type ("testErrorRequest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7885 7902]))                  
                :type "int")
                nil [7848 8106])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8115 8144])
                    ("" variable (:type ("testTokenizeWithDefaultOperator_AND" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8145 8181]))                  
                :type "int")
                nil [8108 8850])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8859 8888])
                    ("" variable (:type ("testTokenizeWithDefaultOperator_AND2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8889 8926]))                  
                :type "int")
                nil [8852 9724])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9733 9762])
                    ("" variable (:type ("testTokenizeWithDefaultOperator_OR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9763 9798]))                  
                :type "int")
                nil [9726 10473])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10482 10511])
                    ("" variable (:type ("testTokenizeWithDefaultOperator_OR2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10512 10548]))                  
                :type "int")
                nil [10475 11344])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11353 11382])
                    ("" variable (:type ("testValidateStringIndex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11383 11407]))                  
                :type "int")
                nil [11346 12262])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12271 12300])
                    ("" variable (:type ("testValidateMultiClusterWithOnlyOneCluster" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12301 12344]))                  
                :type "int")
                nil [12264 12648])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12657 12686])
                    ("" variable (:type ("testValidateMultiClusterCompatible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12687 12722]))                  
                :type "int")
                nil [12650 14532])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14541 14570])
                    ("" variable (:type ("testValidateMultiClusterIndexIncompatible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14571 14613]))                  
                :type "int")
                nil [14534 16471])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16480 16509])
                    ("" variable (:type ("testValidateMultiClusterAttributeIncompatible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16510 16556]))                  
                :type "int")
                nil [16473 18417])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18426 18455])
                    ("" variable (:type ("testValidateMultiClusterWithLevelClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18456 18496]))                  
                :type "int")
                nil [18419 20522])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20532 20561])
                    ("" variable (:type ("testValidateFetchSummaryClusterNotByRawpkDiffCluster" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20562 20615]))                  
                :type "int")
                nil [20525 21368])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21377 21406])
                    ("" variable (:type ("testValidateFetchSummaryClusterFillPhaseOneInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21407 21455]))                  
                :type "int")
                nil [21370 24746])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24755 24784])
                    ("" variable (:type ("testProcessWithStopWord1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24785 24810]))                  
                :type "int")
                nil [24748 25783])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25792 25821])
                    ("" variable (:type ("testNoneStopWordProcess" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25822 25846]))                  
                :type "int")
                nil [25785 26586])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26595 26624])
                    ("" variable (:type ("testProcessRequestWithStopWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26625 26656]))                  
                :type "int")
                nil [26588 29395])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29404 29433])
                    ("" variable (:type ("testProcessWithAllStopWord" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29434 29461]))                  
                :type "int")
                nil [29397 29680])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29689 29718])
                    ("" variable (:type ("testProcessWithSpecifiedAnayzer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29719 29751]))                  
                :type "int")
                nil [29682 30574])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30584 30613])
                    ("" variable (:type ("testProcessWithStopWord2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30614 30639]))                  
                :type "int")
                nil [30577 31888])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31897 31926])
                    ("" variable (:type ("testProcessWithTraceInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31927 31952]))                  
                :type "int")
                nil [31890 33186])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33196 33225])
                    ("" variable (:type ("testQuerClauseWithMultiQuerys" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33226 33256]))                  
                :type "int")
                nil [33189 35013])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35022 35051])
                    ("" variable (:type ("testWithExceptionProcessor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35052 35079]))                  
                :type "int")
                nil [35015 35479])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35488 35517])
                    ("" variable (:type ("testRankSortClauseConflictWithSortClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35518 35559]))                  
                :type "int")
                nil [35481 36287])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36296 36325])
                    ("" variable (:type ("testAnalyzerWithConfigClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36326 36355]))                  
                :type "int")
                nil [36289 38991])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39000 39029])
                    ("" variable (:type ("testAnalyzerClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39030 39049]))                  
                :type "int")
                nil [38993 45034])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45043 45072])
                    ("" variable (:type ("testAnalyzerClauseCompatibleWithConfigClause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45073 45118]))                  
                :type "int")
                nil [45036 49476])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49485 49514])
                    ("" variable (:type ("testAnalyzerClauseWithInvalidAnalyzer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49515 49553]))                  
                :type "int")
                nil [49478 50751])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50760 50789])
                    ("" variable (:type ("testQuerClauseWithRequireMatchDocs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50790 50825]))                  
                :type "int")
                nil [50753 52826])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52835 52864])
                    ("" variable (:type ("testIndexInfoCompatible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [52865 52889]))                  
                :type "int")
                nil [52828 53858])
            ("TEST_F" function
               (:arguments 
                  ( ("" variable (:type ("RequestValidateProcessorTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53867 53896])
                    ("" variable (:type ("testAttributeInfoCompatible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53897 53925]))                  
                :type "int")
                nil [53860 55054])
            ("prepareCorrectRequest" function
               (:parent "RequestValidateProcessorTest"
                :type ("RequestPtr" type (:type "class") nil nil))
                nil [55056 55536])
            ("prepareErrorRequest" function
               (:parent "RequestValidateProcessorTest"
                :type ("RequestPtr" type (:type "class") nil nil))
                nil [55538 55740])
            ("createFakeTableInfo" function
               (:pointer 1
                :parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("tableName" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [55803 55827]))                  
                :type ("TableInfo" type (:type "class") nil nil))
                nil [55742 56831])
            ("initFactory" function
               (:parent "RequestValidateProcessorTest"
                :type ("AnalyzerFactoryPtr" type (:type "class") nil nil))
                nil [56833 58587])
            ("createIndexInfos" function
               (:pointer 1
                :parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("indexNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [58657 58690])
                    ("analyzerNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [58691 58727]))                  
                :type ("IndexInfos" type (:type "class") nil nil))
                nil [58589 59597])
            ("createAttributeInfos" function
               (:pointer 1
                :parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("attrNames" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [59675 59707])
                    ("multiFlags" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [59708 59739])
                    ("fieldTypes" variable
                       (:reference 1
                        :constant-flag t
                        :type ("vector" type
                             (:template-specifier 
                                ( ("FieldType" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [59748 59784]))                  
                :type ("AttributeInfos" type (:type "class") nil nil))
                nil [59599 60340])
            ("validateFetchSummaryCluster" function
               (:parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("configClause" variable
                       (:pointer 1
                        :type ("ConfigClause" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60405 60432])
                    ("clusterTableInfoMapPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60441 60494]))                  
                :type "bool")
                nil [60342 60739])
            ("validateMultiCluster" function
               (:parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("configClause" variable
                       (:pointer 1
                        :type ("ConfigClause" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60797 60824])
                    ("levelClause" variable
                       (:pointer 1
                        :type ("LevelClause" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60833 60858])
                    ("clusterTableInfoMapPtr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [60859 60912]))                  
                :type "bool")
                nil [60741 61162])
            ("createClusterTableInfoMapPtr" function
               (:parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("indexStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61255 61278])
                    ("clusterStr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [61279 61304]))                  
                :type ("ClusterTableInfoMapPtr" type (:type "class") nil nil))
                nil [61164 62053])
            ("prepareRequest" function
               (:parent "RequestValidateProcessorTest"
                :arguments 
                  ( ("word1" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62120 62140])
                    ("word2" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [62141 62161]))                  
                :type ("RequestPtr" type (:type "class") nil nil))
                nil [62055 62785])
            ("END_HA3_NAMESPACE" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("qrs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62805 62809]))                  
                :type "int")
                nil [62787 62810]))          
      :file "RequestValidateProcessorTest.cpp"
      :pointmax 62811
      :fsize 62996
      :lastmodtime '(23634 48863 278328 942000)
      :unmatched-syntax nil
      :lexical-table 
        '(("RVP_CHECK_FETCHSUMMARY_INFO" (spp-arg-list ("tableStr" "clusterStr" "configStr" "flags") 5197 . 5237) . 
              ((DO "do" 5244 . 5246) (semantic-list "{                                                                \\
        ClusterTableInfoMapPtr clusterTableInfoMapPtr = createClusterTableInfoMapPtr(tableStr, clusterStr); \\
        CREATE_CONFIG_CLAUSE(configStr);                                \\
        ASSERT_TRUE(validateFetchSummaryCluster(configClause, clusterTableInfoMapPtr)); \\
        RVP_CHECK_NO_ERROR();                                           \\
        ASSERT_EQ((uint32_t)(flags),                         \\
                             (uint32_t)configClause->getPhaseOneBasicInfoMask()); \\
    }" 5247 . 5814) (WHILE "while" 5815 . 5820) (semantic-list "(0)" 5821 . 5824)))
          ("RVP_INNER_CHECK_AND_RESET_ERROR" (spp-arg-list ("errorCode") 3193 . 3204) . 
              ((symbol "common" 3232 . 3238) (punctuation ":" 3238 . 3239) (punctuation ":" 3239 . 3240) (symbol "MultiErrorResultPtr" 3240 . 3259) (symbol "errorResult" 3260 . 3271) (punctuation "=" 3272 . 3273) (symbol "_result" 3274 . 3281) (punctuation "-" 3281 . 3282) (punctuation ">" 3282 . 3283) (symbol "getMultiErrorResult" 3283 . 3302) (semantic-list "()" 3302 . 3304) (punctuation ";" 3304 . 3305) (symbol "size_t" 3312 . 3318) (symbol "errorCount" 3319 . 3329) (punctuation "=" 3330 . 3331) (symbol "errorResult" 3332 . 3343) (punctuation "-" 3343 . 3344) (punctuation ">" 3344 . 3345) (symbol "getErrorCount" 3345 . 3358) (semantic-list "()" 3358 . 3360) (punctuation ";" 3360 . 3361) (symbol "ASSERT_EQ" 3386 . 3395) (semantic-list "((size_t)1, errorCount)" 3395 . 3418) (punctuation ";" 3418 . 3419) (symbol "ErrorResult" 3449 . 3460) (symbol "error" 3461 . 3466) (punctuation "=" 3467 . 3468) (symbol "errorResult" 3469 . 3480) (punctuation "-" 3480 . 3481) (punctuation ">" 3481 . 3482) (symbol "getErrorResults" 3482 . 3497) (semantic-list "()" 3497 . 3499) (punctuation "." 3499 . 3500) (symbol "back" 3500 . 3504) (semantic-list "()" 3504 . 3506) (punctuation ";" 3506 . 3507) (symbol "errorResult" 3523 . 3534) (punctuation "-" 3534 . 3535) (punctuation ">" 3535 . 3536) (symbol "resetErrors" 3536 . 3547) (semantic-list "()" 3547 . 3549) (punctuation ";" 3549 . 3550) (symbol "ASSERT_EQ" 3597 . 3606) (semantic-list "(errorCode, error.getErrorCode())" 3606 . 3639)))
          ("RVP_CHECK_AND_RESET_ERROR" (spp-arg-list ("errorCode") 3674 . 3685) . ((semantic-list "{                                                   \\
        RVP_INNER_CHECK_AND_RESET_ERROR(errorCode);     \\
    }" 3703 . 3820)))
          ("RVP_CHECK_FETCHSUMMARY_ERROR" (spp-arg-list ("tableStr" "clusterStr" "configStr" "errorCode") 4675 . 4719) . 
              ((DO "do" 4726 . 4728) (semantic-list "{                                                                \\
        ClusterTableInfoMapPtr clusterTableInfoMapPtr = createClusterTableInfoMapPtr(tableStr, clusterStr); \\
        CREATE_CONFIG_CLAUSE(configStr);                                \\
        ASSERT_TRUE(!validateFetchSummaryCluster(configClause, clusterTableInfoMapPtr)); \\
        RVP_CHECK_AND_RESET_ERROR(errorCode);                           \\
    }" 4729 . 5150) (WHILE "while" 5151 . 5156) (semantic-list "(0)" 5157 . 5160)))
          ("RVP_CHECK_AND_RESET_ERROR_WITH_MESSAGE" (spp-arg-list ("errorCode" "errorMsg") 3868 . 3889) . ((semantic-list "{                                                                   \\
        RVP_INNER_CHECK_AND_RESET_ERROR(errorCode);                     \\
        ASSERT_EQ(errorMsg, error.getErrorMsg());            \\
    }" 3900 . 4112)))
          ("RVP_CHECK_NO_ERROR" (spp-arg-list nil 4140 . 4142) . ((symbol "ASSERT_TRUE" 4168 . 4179) (semantic-list "(!_result->hasError())" 4179 . 4201)))
          ("CREATE_CONFIG_CLAUSE" (spp-arg-list ("oriString") 4231 . 4242) . 
              ((symbol "queryparser" 4281 . 4292) (punctuation ":" 4292 . 4293) (punctuation ":" 4293 . 4294) (symbol "RequestParser" 4294 . 4307) (symbol "parser" 4308 . 4314) (punctuation ";" 4314 . 4315) (symbol "common" 4355 . 4361) (punctuation ":" 4361 . 4362) (punctuation ":" 4362 . 4363) (symbol "RequestPtr" 4363 . 4373) (symbol "request" 4374 . 4381) (semantic-list "(new Request)" 4381 . 4394) (punctuation ";" 4394 . 4395) (symbol "request" 4429 . 4436) (punctuation "-" 4436 . 4437) (punctuation ">" 4437 . 4438) (symbol "setOriginalString" 4438 . 4455) (semantic-list "(oriString)" 4455 . 4466) (punctuation ";" 4466 . 4467) (symbol "ASSERT_TRUE" 4503 . 4514) (semantic-list "(parser.parseConfigClause(request))" 4514 . 4549) (punctuation ";" 4549 . 4550) (symbol "common" 4574 . 4580) (punctuation ":" 4580 . 4581) (punctuation ":" 4581 . 4582) (symbol "ConfigClause" 4582 . 4594) (punctuation "*" 4594 . 4595) (symbol "configClause" 4596 . 4608) (punctuation "=" 4609 . 4610) (symbol "request" 4611 . 4618) (punctuation "-" 4618 . 4619) (punctuation ">" 4619 . 4620) (symbol "getConfigClause" 4620 . 4635) (semantic-list "()" 4635 . 4637)))
          )
))
  :file "!ha3_develop!search_test!temp!source_code!ha3!build!debug64!ha3!qrs!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
