;; Object swift_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "swift_tools/"
  :tables
  (list
    (semanticdb-table "app_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [25 34])
            ("base_cmd" include nil nil [35 63])
            ("tools_config" include nil nil [64 100])
            ("process" include nil nil [101 128])
            ("swift_common_define" include nil nil [129 155])
            ("swift_admin_delegate" include nil nil [156 183])
            ("AppBaseCmd" type
               (:superclasses ("BaseCmd")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [244 278]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [229 233]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [216 279])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [299 303]))                          )
                        (reparse-symbol indented_block_body) [284 351])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [371 375])
                            ("options" variable nil (reparse-symbol function_parameters) [377 384]))                          )
                        (reparse-symbol indented_block_body) [356 439])
                    ("parseConfigInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [464 468])
                            ("configDir" variable nil (reparse-symbol function_parameters) [470 479]))                          )
                        (reparse-symbol indented_block_body) [444 1310])
                    ("getAppInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1330 1334]))                          )
                        (reparse-symbol indented_block_body) [1315 1529])
                    ("parseWorkerCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1555 1559])
                            ("response" variable nil (reparse-symbol function_parameters) [1561 1569]))                          )
                        (reparse-symbol indented_block_body) [1534 2635])
                    ("hippoAdapter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2657 2661])
                            ("action" variable nil (reparse-symbol function_parameters) [2663 2669])
                            ("configVersionPath" variable nil (reparse-symbol function_parameters) [2671 2688]))                          )
                        (reparse-symbol indented_block_body) [2640 3250]))                  
                :type "class")
                nil [185 3250])
            ("SwiftStartCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {st|start} -z zfs://zfsaddr

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address

examples:
    swift start -z zfs://zfsaddr
    '''" code nil (reparse-symbol indented_block_body) [3288 3486])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3519 3556]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3504 3508]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3491 3557])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3577 3581]))                          )
                        (reparse-symbol indented_block_body) [3562 3734])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3754 3758])
                            ("options" variable nil (reparse-symbol function_parameters) [3760 3767]))                          )
                        (reparse-symbol indented_block_body) [3739 3884])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3897 3901]))                          )
                        (reparse-symbol indented_block_body) [3889 4025]))                  
                :type "class")
                nil [3251 4025])
            ("SwiftStopCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {sp|stop} -z zfs://zfsaddr

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address

examples:
    swift stop -z zfs://10.250.12.23:1234/root
    '''" code nil (reparse-symbol indented_block_body) [4062 4273])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [4306 4342]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4291 4295]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4278 4343])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4356 4360]))                          )
                        (reparse-symbol indented_block_body) [4348 4459]))                  
                :type "class")
                nil [4026 4459])
            ("SwiftUpdateAdminConfCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {uac|updateAdminConf} -z zfs://zfsaddr

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
      -v config_version_path, --configVersionPath=config_version_path : optional, config version path

examples:
    swift uac -z zfs://zfsaddr
    '''" code nil (reparse-symbol indented_block_body) [4507 4816])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [4849 4896]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4834 4838]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4821 4897])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4917 4921]))                          )
                        (reparse-symbol indented_block_body) [4902 5084])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5104 5108])
                            ("options" variable nil (reparse-symbol function_parameters) [5110 5117]))                          )
                        (reparse-symbol indented_block_body) [5089 5244])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5257 5261]))                          )
                        (reparse-symbol indented_block_body) [5249 5395]))                  
                :type "class")
                nil [4460 5395])
            ("SwiftAppStatusCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {gas|getappstatus}
        {-z zookeeper_address  | --zookeeper=zookeeper_address}
        {-i app_info          | --info=app_info}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
       -i app_info,    --info=app_info      : option[summary, all], print app info, default summary

examples:
    swift gas -z zfs://10.250.12.23:1234/root
    swift gas -z zfs://10.250.12.23:1234/root -i all
    '''" code nil (reparse-symbol indented_block_body) [5437 5910])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [5943 5984]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5928 5932]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5915 5985])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6005 6009]))                          )
                        (reparse-symbol indented_block_body) [5990 6145])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6175 6179])
                            ("options" variable nil (reparse-symbol function_parameters) [6181 6188]))                          )
                        (reparse-symbol indented_block_body) [6150 6475])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6495 6499])
                            ("options" variable nil (reparse-symbol function_parameters) [6501 6508]))                          )
                        (reparse-symbol indented_block_body) [6480 6682])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6695 6699]))                          )
                        (reparse-symbol indented_block_body) [6687 7704]))                  
                :type "class")
                nil [5396 7704])
            ("SwiftDeleteCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {del|delete}
       {-z zookeeper_address  | --zookeeper=zookeeper_address}

    options:
       -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address

Example:
    swift del -z zfs://10.250.12.23:1234/root
    '''" code nil (reparse-symbol indented_block_body) [7744 8007])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [8040 8078]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8025 8029]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [8012 8079])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8092 8096]))                          )
                        (reparse-symbol indented_block_body) [8084 8916])
                    ("deleteSwiftDirs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8941 8945])
                            ("zkRoot" variable nil (reparse-symbol function_parameters) [8947 8953]))                          )
                        (reparse-symbol indented_block_body) [8921 9559]))                  
                :type "class")
                nil [7706 9559])
            ("SwiftKillBrokerCmd" type
               (:superclasses ("AppBaseCmd")
                :members 
                  ( ("'''
    swift {kb|killbroker} -z zfs://zfsaddr -b default##broker_0_1

options:
      -z zookeeper_address, --zookeeper=zookeeper_address   : required, zookeeper root address
      -b broker_name, --broker=broker_name   : required, kill broker name
      -s signal, --signal=signal   : optional, default is 9
examples:
    swift start -z zfs://zfsaddr -b default##broker_0_1,default##broker_0_2
    swift start -z zfs://zfsaddr -b all
    swift start -z zfs://zfsaddr -f brokerNameFile.txt
    '''" code nil (reparse-symbol indented_block_body) [9602 10099])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [10132 10174]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10117 10121]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [10104 10175])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10195 10199]))                          )
                        (reparse-symbol indented_block_body) [10180 10613])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10643 10647])
                            ("options" variable nil (reparse-symbol function_parameters) [10649 10656]))                          )
                        (reparse-symbol indented_block_body) [10618 10947])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10967 10971])
                            ("options" variable nil (reparse-symbol function_parameters) [10973 10980]))                          )
                        (reparse-symbol indented_block_body) [10952 11554])
                    ("parseAppInfoToBrokerMap" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11587 11591])
                            ("appInfo" variable nil (reparse-symbol function_parameters) [11593 11600]))                          )
                        (reparse-symbol indented_block_body) [11559 12211])
                    ("killByPid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12230 12234])
                            ("ip" variable nil (reparse-symbol function_parameters) [12236 12238])
                            ("pid" variable nil (reparse-symbol function_parameters) [12240 12243])
                            ("signal" variable nil (reparse-symbol function_parameters) [12245 12251]))                          )
                        (reparse-symbol indented_block_body) [12216 12364])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12385 12389]))                          )
                        (reparse-symbol indented_block_body) [12377 13643]))                  
                :type "class")
                nil [9560 13643]))          
      :file "app_cmd.py"
      :pointmax 13644
      :fsize 13643
      :lastmodtime '(23939 6884 261437 237000)
      :unmatched-syntax nil)
    (semanticdb-table "base_cmd.py"
      :file "base_cmd.py"
      :fsize 5692
      :lastmodtime '(23939 6884 261437 237000))
    (semanticdb-table "tools_config.py"
      :file "tools_config.py"
      :fsize 2848
      :lastmodtime '(23939 6884 265437 88000))
    (semanticdb-table "process.py"
      :file "process.py"
      :fsize 412
      :lastmodtime '(23939 6884 261437 237000))
    (semanticdb-table "swift_common_define.py"
      :file "swift_common_define.py"
      :fsize 2773
      :lastmodtime '(23939 6884 262437 200000))
    (semanticdb-table "swift_admin_delegate.py"
      :file "swift_admin_delegate.py"
      :fsize 12421
      :lastmodtime '(23939 6884 262437 200000))
    (semanticdb-table "topic_cmd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("base_cmd" include nil nil [12 27])
            ("swift_common_define" include nil nil [28 54])
            ("swift_admin_delegate" include nil nil [55 82])
            ("status_analyzer" include nil nil [83 105])
            ("swift_util" include nil nil [106 123])
            ("swift.protocol.Common_pb2" include nil nil [124 163])
            ("swift.protocol.AdminRequestResponse_pb2" include nil nil [164 217])
            ("transport_cmd_base" include nil nil [218 243])
            ("time" include nil nil [244 255])
            ("swift_broker_delegate" include nil nil [256 284])
            ("local_file_util" include nil nil [285 307])
            ("zlib" include nil nil [308 319])
            ("json" include nil nil [320 331])
            ("TopicAddCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {at|addtopic}
       {-z zookeeper_address           | --zookeeper=zookeeper_address }
       {-t topic_name                  | --topic=topic_name }
       {-c partition_count             | --partcount=partition_count }
       {-R range_count                 | --rangecount=range_count }
       {-s partition_buf_size          | --partbuf=partition_buf_size }
       {-b partition_file_buf_size     | --partfilebuf=partition_file_buf_size }
       {-y partition_max_buf_size      | --partmaxbuf=partition_max_buf_size }
       {-x partition_min_buf_size      | --partminbuf=partition_min_buf_size }
       {-r partition_resource          | --partresource=partition_resource }
       {-l partition_limit             | --partlimit=partition_limit }
       {-m topic_mode                  | --topicmode=topic_mode }
       {-f                             | --fieldfilter }
       {-i obsolete_file_interval      | --obsoletefileinterval=obsolete_file_interval }
       {-n reserved_file_count         | --reservedfilecount=reserved_file_count }
       {-d                             | --deletetopicdata }
       {-o security_commit_time        | --committime=security_commit_time }
       {-p security_commit_data        | --commitdata=security_commit_data }
       {-q                             | --compress=compress_single_msg }
       {-u                             | --compressthres=compress_single_msg_threshold }
       {-a                             | --dfsroot=dfs_root }
       {-e                             | --extenddfsroot=extend_dfs_root }
       {-g                             | --topicgroup=topic_group }
       {-j                             | --expired=expired }
    options:
       -z zookeeper_address,      --zookeeper=zookeeper_address         : required, zookeeper root address
       -t topic_name,             --topic=topic_name                    : required, topic name, eg: news
       -c partition_count,        --partcount=partition_count           : required, partition count of the topic
       -R range_count,            --rangecount=range_count              : optional, range count in one partion, default is 4,
       -s partition_buf_size      --partbuf=partition_buf_size          : [deprecated], partition buffer size of the topic, M
       -b partition_file_buf_size --partfilebuf=partition_file_buf_size : [deprecated], partition read file buffer size of the topic, M
       -x partition_min_buf_size  --partmaxbuf=partition_max_buf_size   : [optional], partition max buffer size of the topic, M
       -y partition_max_buf_size  --partminbuf=partition_min_buf_size   : [optional], partition min buffer size of the topic, M
       -r partition_resource      --partresource=partition_resource     : optional, partition resource[1,1000], default is 100
       -l partition_limit         --partlimit=partition_limit           : optional, partition limit of this topic in one broker, default is no limit
       -m topic_mode              --topicmode=topic_mode                : optional, normal_mode | security_mode | memory_only_mode | memory_prefer_mode, default is normal_mode
       -f                         --fieldfilter                         : optional, filter fields in msg if specialized
       -i obsolete_file_interval  --obsoletefileinterval=obsolete_file_interval : optional, obsolete file time interval, unit is hour.
       -n reserved_file_count     --reservedfilecount=reserved_file_count       : optional, reserved file count.
       -d                         --deletetopicdata                     : optional, delete old topic data if specialized
       -o security_commit_time    --committime=security_commit_time     : optional, max wait time for commit message in security_mode
       -p security_commit_data    --commitdata=security_commit_data     : optional, max data size for commit message in security_mode
       -q                         --compress=compress_single_msg        : optional, compress msg in this topic
       -u                         --compressthres=compress_single_msg_threshold        : optional, compress msg great than threshold [default:2048]
       -a                         --dfsroot=dfs_root                    : optional, dfs_root
       -e                         --extenddfsroot=extend_dfs_root       : optional, extend dfs_root add old data when dfs root changed
       -g                         --topicgroup=topic_group              : optional, topic_group
       -j                         --expired=expired                     : optional, topic expired time, auto delete topic after expired, second
Example:
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -y 100 -b 128
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -x 10 -y 100 -r 30
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -m security_mode -f
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -i 1 -n 5
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -r 30 -l 2 -q
    swift at -z zfs://10.250.12.23:1234/root -t news -c 1 -j 1000
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -a hdfs://xxx/1 -e hdfs://xxx/2,hdfs://xxx/3
    swift at -z zfs://10.250.12.23:1234/root -t news -c 20 -s 10 [deprecated]
    '''" code nil (reparse-symbol indented_block_body) [374 5775])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5799 5803]))                          )
                        (reparse-symbol indented_block_body) [5784 9268])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9306 9310])
                            ("options" variable nil (reparse-symbol function_parameters) [9312 9319]))                          )
                        (reparse-symbol indented_block_body) [9281 13313])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13333 13337])
                            ("options" variable nil (reparse-symbol function_parameters) [13339 13346]))                          )
                        (reparse-symbol indented_block_body) [13318 14842])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14865 14869]))                          )
                        (reparse-symbol indented_block_body) [14847 15024])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15037 15041]))                          )
                        (reparse-symbol indented_block_body) [15029 16365])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16390 16394])
                            ("timeout" variable nil (reparse-symbol function_parameters) [16396 16403]))                          )
                        (reparse-symbol indented_block_body) [16370 16689])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16712 16716])
                            ("topicName" variable nil (reparse-symbol function_parameters) [16718 16727]))                          )
                        (reparse-symbol indented_block_body) [16694 17548]))                  
                :type "class")
                nil [333 17548])
            ("TopicModifyCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {mt|modifytopic}
       {-z zookeeper_address           | --zookeeper=zookeeper_address }
       {-t topic_name                  | --topic=topic_name }
       {-r partition_resource          | --partresource=partition_resource }
       {-l partition_limit             | --partlimit=partition_limit }
       {-g topic_group                 | --group=topic_group }
       {-j expired_time                | --expired_time=expired_time }
       {-m topic_mode                  | --topicmode=topic_mode }
       {-c partition_count             | --partcount=partition_count }
       {-y partition_max_buf_size      | --partmaxbuf=partition_max_buf_size }
       {-x partition_min_buf_size      | --partminbuf=partition_min_buf_size }
       {-i obsolete_file_interval      | --obsoletefileinterval=obsolete_file_interval }
       {-n reserved_file_count         | --reservedfilecount=reserved_file_count }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address     : required, zookeeper root address
       -t topic_names,        --topic=topic_names               : required, topic name, eg: news,news1
       -f topic_file,         --topic_file=topic_file           : optional, topic file, will append in topic_names, one topic per line
       -r partition_resource  --partresource=partition_resource : optional, partition resource
       -l partition_limit     --partlimit=partition_limit       : optional, partition limit of this topic in one broker
       -g topic_group         --group=topic_group               : optional, change topic group name
       -j expired_time        --expired_time=expired_time       : optional, change expired time for topic, -1 no expired,  second
       -m topic_mode              --topicmode=topic_mode                : optional, normal_mode | security_mode | memory_only_mode | memory_prefer_mode, default is normal_mode
       -c partition_count,        --partcount=partition_count           : optional, partition count of the topic
       -x partition_min_buf_size  --partmaxbuf=partition_max_buf_size   : [optional], partition max buffer size of the topic, M
       -y partition_max_buf_size  --partminbuf=partition_min_buf_size   : [optional], partition min buffer size of the topic, M
       -i obsolete_file_interval  --obsoletefileinterval=obsolete_file_interval : optional, obsolete file time interval, unit is hour.
       -n reserved_file_count     --reservedfilecount=reserved_file_count       : optional, reserved file count.

    

Example:
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 10
    swift mt -z zfs://10.250.12.23:1234/root -t news -l 2
    swift mt -z zfs://10.250.12.23:1234/root -t news -r 20 -l 3
    swift mt -z zfs://10.250.12.23:1234/root -t news -g group_name
    swift mt -z zfs://10.250.12.23:1234/root -t news -j -1       
    swift mt -z zfs://10.250.12.23:1234/root -t news -m memory_only_mode
    '''" code nil (reparse-symbol indented_block_body) [17593 20507])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20527 20531]))                          )
                        (reparse-symbol indented_block_body) [20512 22179])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22226 22230])
                            ("options" variable nil (reparse-symbol function_parameters) [22232 22239]))                          )
                        (reparse-symbol indented_block_body) [22201 25124])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25144 25148])
                            ("options" variable nil (reparse-symbol function_parameters) [25150 25157]))                          )
                        (reparse-symbol indented_block_body) [25129 26419])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26442 26446]))                          )
                        (reparse-symbol indented_block_body) [26424 26601])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26614 26618]))                          )
                        (reparse-symbol indented_block_body) [26606 27579]))                  
                :type "class")
                nil [17549 27579])
            ("TopicDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dt|deletetopic}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t topic_name          | --topic=topic_name }
       {-f file_name           | --file=file_name }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : optional, topic name, eg: news
       -f file_name,          --file=file_name                : optional,
 file name

Example:
    swift dt -z zfs://10.250.12.23:1234/root -t news 
    swift dt -z zfs://10.250.12.23:1234/root -f file_name
    '''" code nil (reparse-symbol indented_block_body) [27624 28246])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28266 28270]))                          )
                        (reparse-symbol indented_block_body) [28251 28484])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28514 28518])
                            ("options" variable nil (reparse-symbol function_parameters) [28520 28527]))                          )
                        (reparse-symbol indented_block_body) [28489 28934])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28954 28958])
                            ("options" variable nil (reparse-symbol function_parameters) [28960 28967]))                          )
                        (reparse-symbol indented_block_body) [28939 29231])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29254 29258]))                          )
                        (reparse-symbol indented_block_body) [29236 29413])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29427 29431]))                          )
                        (reparse-symbol indented_block_body) [29419 30593])
                    ("writeFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30617 30621])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [30623 30636]))                          )
                        (reparse-symbol indented_block_body) [30598 30817]))                  
                :type "class")
                nil [27580 30817])
            ("TopicNamesCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gtn|gettopicnames}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f file_name           | --file=file_name }
    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f file_name           --file=file_name 
Example:
    swift gtn -z zfs://10.250.12.23:1234/root 
    swift gtn -z zfs://10.250.12.23:1234/root -f file.txt
       
    '''" code nil (reparse-symbol indented_block_body) [30861 31299])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31322 31326]))                          )
                        (reparse-symbol indented_block_body) [31304 31484])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31504 31508]))                          )
                        (reparse-symbol indented_block_body) [31489 31639])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31659 31663])
                            ("options" variable nil (reparse-symbol function_parameters) [31665 31672]))                          )
                        (reparse-symbol indented_block_body) [31644 31832])
                    ("writeTopicName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31856 31860])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [31862 31872]))                          )
                        (reparse-symbol indented_block_body) [31837 32073])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32086 32090]))                          )
                        (reparse-symbol indented_block_body) [32078 32706]))                  
                :type "class")
                nil [30818 32706])
            ("TopicInfosCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {gti|gettopicinfo}
       {-z zookeeper_address   | --zookeeper=zookeeper_address}
       {-t topic_name          | --topic=topic_name}
       [-c cmd_type            | --cmdtype=cmd_type]

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -t topic_name,         --topic=topic_name              : required, topic name, eg: news
       -c cmd_type,           --cmdtype=cmd_type              : optional, command type, default: summary
          summary:            topic summary infos
          message:            protocol message
          verbose:            topic verbose infos
       -s sortType            --sort=sortType                 : optional, partid(default)|brokeraddress| partstatus
       -g group_name          --group=group_name              : optional, group name when get all topic info
       

Example:
    swift gti -z zfs://10.250.12.23:1234/root
    swift gti -z zfs://10.250.12.23:1234/root -t news 
    swift gti -z zfs://10.250.12.23:1234/root -t news -c message
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose
    swift gti -z zfs://10.250.12.23:1234/root -t news -c verbose -s brokeraddress
    '''" code nil (reparse-symbol indented_block_body) [32750 33974])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33994 33998]))                          )
                        (reparse-symbol indented_block_body) [33979 35148])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35186 35190])
                            ("options" variable nil (reparse-symbol function_parameters) [35192 35199]))                          )
                        (reparse-symbol indented_block_body) [35161 35540])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35560 35564])
                            ("options" variable nil (reparse-symbol function_parameters) [35566 35573]))                          )
                        (reparse-symbol indented_block_body) [35545 35799])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35822 35826]))                          )
                        (reparse-symbol indented_block_body) [35804 35984])
                    ("printTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36008 36012]))                          )
                        (reparse-symbol indented_block_body) [35989 39851])
                    ("printAllTopicInfo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39878 39882]))                          )
                        (reparse-symbol indented_block_body) [39856 40967])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40980 40984]))                          )
                        (reparse-symbol indented_block_body) [40972 41121]))                  
                :type "class")
                nil [32707 41121])
            ("TopicDeleteByTimeCmd" type
               (:superclasses ("transport_cmd_base.TransportCmdBase")
                :members 
                  ( ("'''
    swift {dtt|deletetopicsbytime}
       {-z zookeeper_address     | --zookeeper=zookeeper_address }
       {-i interval              | --interval=interval }
       {-e exclude_topics,       | --exclude=exclude_topics }
       {-f exclude_topics_file,  | --exclude_file=exclude_topics_file }
       {-p prefix_name           | --prefix_name=prefix_name }
       {-t topic_names           | --topic_names=topic_names }

    options:
       -z zookeeper_address,    --zookeeper=zookeeper_address       : required, zookeeper root address
       -i time_interval,        --interval=time_interval            : required, delete topics if the last message arrived interval hours before, (unit:hours)
       -e exclude_topics,       --exclude=exclude_topics            : option, don't delete exclude topics 
       -f exclude_topics_file,  --exclude_file=exclude_topics_file  : option, don't delete exclude topics in file,one topic per line
       -p prefix_name           --prefix_name=prefix_name           : option, delete topic prefix with specified
       -t topic_names           --topic_names=topic_names           : option, delete topic with specified topic names
Example:
    swift dtt -z zfs://10.250.12.23:1234/root -i 48
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -e topic_a,topic_b
    swift dtt -z zfs://10.250.12.23:1234/root -i 48 -f a.txt
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -p model_
    swift dtt -z zfs://10.250.12.23:1234/root -i 1 -t topic_name_file
       
    '''" code nil (reparse-symbol indented_block_body) [41191 42699])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42719 42723]))                          )
                        (reparse-symbol indented_block_body) [42704 43234])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43272 43276])
                            ("options" variable nil (reparse-symbol function_parameters) [43278 43285]))                          )
                        (reparse-symbol indented_block_body) [43247 43540])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43560 43564])
                            ("options" variable nil (reparse-symbol function_parameters) [43566 43573]))                          )
                        (reparse-symbol indented_block_body) [43545 44453])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44476 44480]))                          )
                        (reparse-symbol indented_block_body) [44458 44712])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44726 44730]))                          )
                        (reparse-symbol indented_block_body) [44718 44913])
                    ("delTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44931 44935])
                            ("topicName" variable nil (reparse-symbol function_parameters) [44937 44946]))                          )
                        (reparse-symbol indented_block_body) [44918 45337])
                    ("deleteTopics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45359 45363]))                          )
                        (reparse-symbol indented_block_body) [45342 46097])
                    ("needDelete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46117 46121])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [46123 46132]))                          )
                        (reparse-symbol indented_block_body) [46102 47760])
                    ("getTopicCreateTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47788 47792])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [47794 47803]))                          )
                        (reparse-symbol indented_block_body) [47765 48381]))                  
                :type "class")
                nil [41122 48381])
            ("TopicDataDeleteCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {dtd|deletetopicdata}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-d dfs_root            | --dfs=dfs_root }
       {-i interval            | --interval=interval }
       {-e exclude             | --exclude=exclude_topics }
       {-t topic_name          | --topic_name=topic_name }
       {-f exclude_file        | --exclude_file=exclude_file }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -d dfs_root,           --dfs=dfs_root                  : required, dfs root address
       -i time_interval,      --interval=time_interval        : required, delete topic data if the topic is not running and the last message is arrived interval time ago. (unit:hours)
       -e exclude_topics,     --exclude=exclude_topics        : option, don't delete the specified topic data
       -t topic_name,         --topic=topic_name              : option, only delete the specified topic data
       -f exclude_file,       --exclude_file=exclude_file     : option, don't delete the specified topic data in file

Example:
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -f abc.txt
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -d hdfs://xxxx/path -e topic_a,topic_b
    swift dtd -z zfs://10.250.12.23:1234/root -i 72 -t topic_a  -d hdfs://xxxx/path
       
    '''" code nil (reparse-symbol indented_block_body) [48459 49925])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49945 49949]))                          )
                        (reparse-symbol indented_block_body) [49930 50444])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50482 50486])
                            ("options" variable nil (reparse-symbol function_parameters) [50488 50495]))                          )
                        (reparse-symbol indented_block_body) [50457 50853])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50873 50877])
                            ("options" variable nil (reparse-symbol function_parameters) [50879 50886]))                          )
                        (reparse-symbol indented_block_body) [50858 51505])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51536 51540]))                          )
                        (reparse-symbol indented_block_body) [51518 51698])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51712 51716]))                          )
                        (reparse-symbol indented_block_body) [51704 52568])
                    ("getAllRunningTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52601 52605]))                          )
                        (reparse-symbol indented_block_body) [52573 52964])
                    ("getCandidataTopicNames" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52996 53000]))                          )
                        (reparse-symbol indented_block_body) [52969 53656])
                    ("getTopicLastModifyTime" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53688 53692])
                            ("fileUtil" variable nil (reparse-symbol function_parameters) [53694 53702])
                            ("topicDataPath" variable nil (reparse-symbol function_parameters) [53704 53717]))                          )
                        (reparse-symbol indented_block_body) [53661 54624])
                    ("delTopicData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54646 54650])
                            ("topicNames" variable nil (reparse-symbol function_parameters) [54652 54662]))                          )
                        (reparse-symbol indented_block_body) [54629 54905]))                  
                :type "class")
                nil [48411 54905])
            ("ExportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {et|exporttopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f export_file_name    | --file=export_file_name }
       {-g group_name          | --group=group_name }
       {-p prefix              | --prefix=prefix_name }
       {-t topic_names         | --topic=topic_names }

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f export_file_name,   --file=export_file_name         : required, export file name
       -g group_name,         --group=group_name              : optional, export group name, default export all topic
       -m migrateDfs,         --migrate=migrate_dfs           : optional, migrate dfs, add new hdfs, add current dfs into extendDfs root      
       -p prefix,             --prefix = prefix               : optional, export topic info with prefix      
       -i topicName,          --topic = topic_names           : optional, export topic info with topic_name file
Example:
    swift et -z zfs://10.250.12.23:1234/root -f a.json
    swift et -z zfs://10.250.12.23:1234/root -f a.json -g swift    
    swift et -z zfs://10.250.12.23:1234/root -f a.json -p prefix
    swift et -z zfs://10.250.12.23:1234/root -f a.json -i topicNameFile
    '''" code nil (reparse-symbol indented_block_body) [54952 56235])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56256 56260]))                          )
                        (reparse-symbol indented_block_body) [56241 56723])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56761 56765])
                            ("options" variable nil (reparse-symbol function_parameters) [56767 56774]))                          )
                        (reparse-symbol indented_block_body) [56736 57015])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57035 57039])
                            ("options" variable nil (reparse-symbol function_parameters) [57041 57048]))                          )
                        (reparse-symbol indented_block_body) [57020 57587])
                    ("getDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57607 57611]))                          )
                        (reparse-symbol indented_block_body) [57592 58297])
                    ("hasDfsRoot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58317 58321])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [58323 58330]))                          )
                        (reparse-symbol indented_block_body) [58302 58657])
                    ("hasTopicGroup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58680 58684])
                            ("metaStr" variable nil (reparse-symbol function_parameters) [58686 58693]))                          )
                        (reparse-symbol indented_block_body) [58662 59028])
                    ("generateMap" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59054 59058])
                            ("topicMetas" variable nil (reparse-symbol function_parameters) [59060 59070]))                          )
                        (reparse-symbol indented_block_body) [59038 60959])
                    ("updateMigrateDfs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60989 60993])
                            ("topicInfo" variable nil (reparse-symbol function_parameters) [60995 61004]))                          )
                        (reparse-symbol indented_block_body) [60968 61568])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61581 61585]))                          )
                        (reparse-symbol indented_block_body) [61573 62303]))                  
                :type "class")
                nil [54907 62303])
            ("ImportTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {it|importtopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}
       {-d delete_exist        | --delete_exist=delete_exist}
       {-c continue            | --continue=continue}
       {-g group               | --group=group}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic
       -d delete_exist        --delete_exist=delete_exist     : optional, delete exist topic ,default is false
       -c continue_exist      --continue=continue             : optional, continue if add topic has error ,default is false
       -g group               --group=group                   : optional, add in specified group name
Example:
    swift it -z zfs://10.250.12.23:1234/root -f a.json -w 30
    swift it -z zfs://10.250.12.23:1234/root -f a.json -d -c
    swift it -z zfs://10.250.12.23:1234/root -f a.json -g igraph
    '''" code nil (reparse-symbol indented_block_body) [62349 63558])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [63579 63583]))                          )
                        (reparse-symbol indented_block_body) [63564 64201])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64231 64235])
                            ("options" variable nil (reparse-symbol function_parameters) [64237 64244]))                          )
                        (reparse-symbol indented_block_body) [64206 64485])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64505 64509])
                            ("options" variable nil (reparse-symbol function_parameters) [64511 64518]))                          )
                        (reparse-symbol indented_block_body) [64490 64923])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64946 64950]))                          )
                        (reparse-symbol indented_block_body) [64928 65105])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65118 65122]))                          )
                        (reparse-symbol indented_block_body) [65110 71825])
                    ("addFailTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71847 71851])
                            ("failTopicList" variable nil (reparse-symbol function_parameters) [71853 71866]))                          )
                        (reparse-symbol indented_block_body) [71830 72004])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72029 72033])
                            ("timeout" variable nil (reparse-symbol function_parameters) [72035 72042])
                            ("topicName" variable nil (reparse-symbol function_parameters) [72044 72053]))                          )
                        (reparse-symbol indented_block_body) [72009 72329])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72352 72356])
                            ("topicName" variable nil (reparse-symbol function_parameters) [72358 72367]))                          )
                        (reparse-symbol indented_block_body) [72334 73188]))                  
                :type "class")
                nil [62304 73188])
            ("UpdateTopicsCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {ut|updatetopics}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-f local_file_name     | --file=local_file_name }
       {-w time_out            | --timeout=time_out}

    options:
       -z zookeeper_address,  --zookeeper=zookeeper_address   : required, zookeeper root address
       -f local_file_name,    --file=local_file_name          : required, local file name
       -w time_out,           --timeout=time_out              : optional, timeout for one topic

Example:
    swift ut -z zfs://10.250.12.23:1234/root -f a.json -w 30
    '''" code nil (reparse-symbol indented_block_body) [73234 73817])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [73838 73842]))                          )
                        (reparse-symbol indented_block_body) [73823 74100])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74130 74134])
                            ("options" variable nil (reparse-symbol function_parameters) [74136 74143]))                          )
                        (reparse-symbol indented_block_body) [74105 74384])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74404 74408])
                            ("options" variable nil (reparse-symbol function_parameters) [74410 74417]))                          )
                        (reparse-symbol indented_block_body) [74389 74676])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74699 74703]))                          )
                        (reparse-symbol indented_block_body) [74681 74858])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74871 74875]))                          )
                        (reparse-symbol indented_block_body) [74863 75734])
                    ("addOneTopic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75755 75759])
                            ("topicDescription" variable nil (reparse-symbol function_parameters) [75761 75777]))                          )
                        (reparse-symbol indented_block_body) [75739 80242])
                    ("_waitTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [80267 80271])
                            ("timeout" variable nil (reparse-symbol function_parameters) [80273 80280])
                            ("topicName" variable nil (reparse-symbol function_parameters) [80282 80291]))                          )
                        (reparse-symbol indented_block_body) [80247 80567])
                    ("_isTopicReady" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [80590 80594])
                            ("topicName" variable nil (reparse-symbol function_parameters) [80596 80605]))                          )
                        (reparse-symbol indented_block_body) [80572 81426]))                  
                :type "class")
                nil [73189 81426])
            ("TransferPartitionCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {tp|transferpartition}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-t transfer_info       | --transfer=transfer_info }
    options:
       -z zookeeper_address,     --zookeeper=zookeeper_address     : required, zookeeper root address
       -t transfer_info,         --transfer=transfer_info          : required, topic name, eg: role_name1:0.3,role_name2:0.1
       -g group_name,            --group_name=group_name           : opitional, group name, eg: swift_mainse

Example:
    swift tp -z zfs://10.250.12.23:1234/root -t group1##broker_1_0:0.3;group2##broker_1_0:0.2
    swift tp -z zfs://10.250.12.23:1234/root -t all
    swift tp -z zfs://10.250.12.23:1234/root -t all -g swift_mainse
    '''" code nil (reparse-symbol indented_block_body) [81477 82219])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82239 82243]))                          )
                        (reparse-symbol indented_block_body) [82224 82476])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82515 82519])
                            ("options" variable nil (reparse-symbol function_parameters) [82521 82528]))                          )
                        (reparse-symbol indented_block_body) [82490 82782])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82802 82806])
                            ("options" variable nil (reparse-symbol function_parameters) [82808 82815]))                          )
                        (reparse-symbol indented_block_body) [82787 82972])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82995 82999]))                          )
                        (reparse-symbol indented_block_body) [82977 83154])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [83167 83171]))                          )
                        (reparse-symbol indented_block_body) [83159 83471]))                  
                :type "class")
                nil [81427 83471])
            ("ChangeSlotCmd" type
               (:superclasses ("base_cmd.BaseCmd")
                :members 
                  ( ("'''
    swift {cs|changeSlot}
       {-z zookeeper_address   | --zookeeper=zookeeper_address }
       {-r role_names       | --rolenames=role_names }
    options:
       -z zookeeper_address,     --zookeeper=zookeeper_address     : required, zookeeper root address
       -r role_names,         --rolenames=role_names          : required, role name, eg: default##broker_4_0,tisplus##broker_0_0

Example:
    swift cs -z zfs://10.250.12.23:1234/root -r group1##broker_1_0,group2##broker_2_0
    '''" code nil (reparse-symbol indented_block_body) [83516 84013])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84033 84037]))                          )
                        (reparse-symbol indented_block_body) [84018 84174])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84212 84216])
                            ("options" variable nil (reparse-symbol function_parameters) [84218 84225]))                          )
                        (reparse-symbol indented_block_body) [84187 84465])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84485 84489])
                            ("options" variable nil (reparse-symbol function_parameters) [84491 84498]))                          )
                        (reparse-symbol indented_block_body) [84470 84599])
                    ("buildDelegate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84622 84626]))                          )
                        (reparse-symbol indented_block_body) [84604 84781])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84794 84798]))                          )
                        (reparse-symbol indented_block_body) [84786 85058]))                  
                :type "class")
                nil [83473 85058]))          
      :file "topic_cmd.py"
      :pointmax 85063
      :fsize 85062
      :lastmodtime '(23939 17956 837615 699000)
      :unmatched-syntax nil)
    (semanticdb-table "status_analyzer.py"
      :file "status_analyzer.py"
      :fsize 3496
      :lastmodtime '(23939 6884 262437 200000))
    (semanticdb-table "swift_util.py"
      :file "swift_util.py"
      :fsize 3833
      :lastmodtime '(23939 6884 263437 162000))
    (semanticdb-table "transport_cmd_base.py"
      :file "transport_cmd_base.py"
      :fsize 3995
      :lastmodtime '(23939 6884 265437 88000))
    (semanticdb-table "swift_broker_delegate.py"
      :file "swift_broker_delegate.py"
      :fsize 8814
      :lastmodtime '(23939 6884 262437 200000))
    (semanticdb-table "local_file_util.py"
      :file "local_file_util.py"
      :fsize 1943
      :lastmodtime '(23939 6884 261437 237000))
    (semanticdb-table "json.py"
      :file "json.py"
      :fsize 11481
      :lastmodtime '(23939 6884 261437 237000)))
  :file "!swift_develop!swift_func_test!temp!source_code!swift!tools!swift_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
