;; Object ha3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha3/"
  :tables
  (list
    (semanticdb-table "isearch.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_H_" variable (:constant-flag t) nil [28 38])
            ("stdint.h" include (:system-flag t) nil [40 59])
            ("map" include (:system-flag t) nil [60 74])
            ("string" include (:system-flag t) nil [75 92])
            ("indexlib/indexlib.h" include (:system-flag t) nil [93 123])
            ("tr1/memory" include (:system-flag t) nil [124 145])
            ("autil/LongHashValue.h" include (:system-flag t) nil [146 178])
            ("ha3/config.h" include (:system-flag t) nil [179 202])
            ("matchdoc/ValueType.h" include (:system-flag t) nil [203 234])
            ("suez/turing/expression/common.h" include (:system-flag t) nil [235 277])
            ("primarykey_t" type
               (:typedef ("autil::uint128_t" type (:type "class") nil nil)
                :type "typedef")
                nil [279 317])
            ("fieldboost_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [319 348])
            ("fieldbitmap_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [350 381])
            ("INVALID_FIELDBITMAP" variable
               (:constant-flag t
                :default-value "(fieldbitmap_t)0xFFFFFFFF"
                :type ("fieldbitmap_t" type (:type "class") nil nil))
                nil [382 450])
            ("score_t" type
               (:typedef ("double")
                :type "typedef")
                nil [452 475])
            ("operation_id_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [477 508])
            ("FullIndexVersion" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [509 543])
            ("quota_t" type
               (:typedef ("uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [544 569])
            ("INVALID_OPERATION_ID" variable
               (:constant-flag t
                :default-value "-1"
                :type ("operation_id_t" type (:type "class") nil nil))
                nil [571 618])
            ("END_DOCID" variable (:constant-flag t) nil [628 637])
            ("MAX_QUOTA" variable (:constant-flag t) nil [668 677])
            ("UNINITIALIZED_DOCID" variable (:constant-flag t) nil [700 719])
            ("SL_QRS" variable
               (:constant-flag t
                :default-value "SL_PROXY"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [735 767])
            ("VariableType" type
               (:typedef ("matchdoc::BuiltinType" type (:type "class") nil nil)
                :type "typedef")
                nil [769 812])
            ("VRGroupKey" type
               (:members 
                  ( ("FOR_DISTINCT" variable
                       (:constant-flag t
                        :default-value (851 852)
                        :type "int")
                        (reparse-symbol enumsubparts) [836 852])
                    ("FOR_ATTRIBUTE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [901 915])
                    ("FOR_USER_DATA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [964 978]))                  
                :type "enum")
                nil [814 1025])
            ("QueryTermType" type
               (:members 
                  ( ("AND_TERM" variable
                       (:constant-flag t
                        :default-value (1063 1064)
                        :type "int")
                        (reparse-symbol enumsubparts) [1052 1064])
                    ("OR_TERM" variable
                       (:constant-flag t
                        :default-value (1080 1081)
                        :type "int")
                        (reparse-symbol enumsubparts) [1070 1081])
                    ("ANDNOT_TERM" variable
                       (:constant-flag t
                        :default-value (1101 1102)
                        :type "int")
                        (reparse-symbol enumsubparts) [1087 1102])
                    ("RANK_TERM" variable
                       (:constant-flag t
                        :default-value (1120 1121)
                        :type "int")
                        (reparse-symbol enumsubparts) [1108 1121]))                  
                :type "enum")
                nil [1027 1125])
            ("JoinType" type
               (:members 
                  ( ("DEFAULT_JOIN" variable
                       (:constant-flag t
                        :default-value (1162 1163)
                        :type "int")
                        (reparse-symbol enumsubparts) [1147 1163])
                    ("WEAK_JOIN" variable
                       (:constant-flag t
                        :default-value (1181 1182)
                        :type "int")
                        (reparse-symbol enumsubparts) [1169 1182])
                    ("STRONG_JOIN" variable
                       (:constant-flag t
                        :default-value (1202 1203)
                        :type "int")
                        (reparse-symbol enumsubparts) [1188 1203]))                  
                :type "enum")
                nil [1127 1206])
            ("SubDocDisplayType" type
               (:members 
                  ( ("SUB_DOC_DISPLAY_NO" variable
                       (:constant-flag t
                        :default-value (1258 1259)
                        :type "int")
                        (reparse-symbol enumsubparts) [1237 1259])
                    ("SUB_DOC_DISPLAY_FLAT" variable
                       (:constant-flag t
                        :default-value (1288 1289)
                        :type "int")
                        (reparse-symbol enumsubparts) [1265 1289])
                    ("SUB_DOC_DISPLAY_GROUP" variable
                       (:constant-flag t
                        :default-value (1319 1320)
                        :type "int")
                        (reparse-symbol enumsubparts) [1295 1320]))                  
                :type "enum")
                nil [1208 1323])
            ("TermType" type
               (:members 
                  ( ("TT_STRING" variable
                       (:constant-flag t
                        :default-value (1357 1358)
                        :type "int")
                        (reparse-symbol enumsubparts) [1345 1358])
                    ("TT_NUMBER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1364 1375]))                  
                :type "enum")
                nil [1325 1376])
            ("QueryType" type
               (:members 
                  ( ("TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (1412 1413)
                        :type "int")
                        (reparse-symbol enumsubparts) [1399 1413])
                    ("NUMBER_QUERY" variable
                       (:constant-flag t
                        :default-value (1434 1435)
                        :type "int")
                        (reparse-symbol enumsubparts) [1419 1435])
                    ("PHRASE_QUERY" variable
                       (:constant-flag t
                        :default-value (1456 1457)
                        :type "int")
                        (reparse-symbol enumsubparts) [1441 1457])
                    ("AND_QUERY" variable
                       (:constant-flag t
                        :default-value (1475 1476)
                        :type "int")
                        (reparse-symbol enumsubparts) [1463 1476])
                    ("OR_QUERY" variable
                       (:constant-flag t
                        :default-value (1493 1494)
                        :type "int")
                        (reparse-symbol enumsubparts) [1482 1494])
                    ("RANK_QUERY" variable
                       (:constant-flag t
                        :default-value (1513 1514)
                        :type "int")
                        (reparse-symbol enumsubparts) [1500 1514])
                    ("ANDNOT_QUERY" variable
                       (:constant-flag t
                        :default-value (1535 1536)
                        :type "int")
                        (reparse-symbol enumsubparts) [1520 1536])
                    ("MULTI_TERM_QUERY" variable
                       (:constant-flag t
                        :default-value (1561 1562)
                        :type "int")
                        (reparse-symbol enumsubparts) [1542 1562]))                  
                :type "enum")
                nil [1378 1566])
            ("MatchDataLevel" type
               (:members 
                  ( ("MDL_NONE" variable
                       (:constant-flag t
                        :default-value (1605 1606)
                        :type "int")
                        (reparse-symbol enumsubparts) [1594 1606])
                    ("MDL_TERM" variable
                       (:constant-flag t
                        :default-value (1623 1624)
                        :type "int")
                        (reparse-symbol enumsubparts) [1612 1624])
                    ("MDL_SUB_QUERY" variable
                       (:constant-flag t
                        :default-value (1646 1647)
                        :type "int")
                        (reparse-symbol enumsubparts) [1630 1647]))                  
                :type "enum")
                nil [1568 1651])
            ("AttributeExprScope" type
               (:members 
                  ( ("AE_DEFAULT" variable
                       (:constant-flag t
                        :default-value (1696 1697)
                        :type "int")
                        (reparse-symbol enumsubparts) [1683 1697])
                    ("AE_FILTER" variable
                       (:constant-flag t
                        :default-value (1715 1716)
                        :type "int")
                        (reparse-symbol enumsubparts) [1703 1716])
                    ("AE_SCORER" variable
                       (:constant-flag t
                        :default-value (1734 1735)
                        :type "int")
                        (reparse-symbol enumsubparts) [1722 1735])
                    ("AE_SORTER" variable
                       (:constant-flag t
                        :default-value (1753 1754)
                        :type "int")
                        (reparse-symbol enumsubparts) [1741 1754]))                  
                :type "enum")
                nil [1653 1758])
            ("HaCompressType" type
               (:members 
                  ( ("INVALID_COMPRESS_TYPE" variable
                       (:constant-flag t
                        :default-value (1810 1811)
                        :type "int")
                        (reparse-symbol enumsubparts) [1786 1811])
                    ("NO_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1817 1829])
                    ("Z_SPEED_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1834 1851])
                    ("Z_DEFAULT_COMPRESS" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1856 1875])
                    ("SNAPPY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1880 1887])
                    ("LZ4" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1892 1896]))                  
                :type "enum")
                nil [1760 1899])
            ("QueryOperator" type
               (:members 
                  ( ("OP_UNKNOWN" variable
                       (:constant-flag t
                        :default-value (1939 1940)
                        :type "int")
                        (reparse-symbol enumsubparts) [1926 1940])
                    ("OP_AND" variable
                       (:constant-flag t
                        :default-value (1955 1956)
                        :type "int")
                        (reparse-symbol enumsubparts) [1946 1956])
                    ("OP_OR" variable
                       (:constant-flag t
                        :default-value (1970 1971)
                        :type "int")
                        (reparse-symbol enumsubparts) [1962 1971])
                    ("OP_WEAKAND" variable
                       (:constant-flag t
                        :default-value (1990 1991)
                        :type "int")
                        (reparse-symbol enumsubparts) [1977 1991]))                  
                :type "enum")
                nil [1901 1995])
            ("ResultFormatType" type
               (:members 
                  ( ("RF_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2025 2036])
                    ("RF_XML" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2041 2048])
                    ("RF_PROTOBUF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2053 2066]))                  
                :type "enum")
                nil [1997 2067])
            ("FetchSummaryType" type
               (:members 
                  ( ("BY_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2097 2108])
                    ("BY_DOCID" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2113 2122])
                    ("BY_PK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2127 2133])
                    ("BY_RAWPK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2138 2148]))                  
                :type "enum")
                nil [2069 2149])
            ("QuotaMode" type
               (:members 
                  ( ("QM_PER_DOC" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2172 2183])
                    ("QM_PER_LAYER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2188 2201])
                    ("QM_UNKNOWN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2206 2217]))                  
                :type "enum")
                nil [2151 2220])
            ("QuotaType" type
               (:members 
                  ( ("QT_PROPOTION" variable
                       (:constant-flag t
                        :default-value (2258 2259)
                        :type "int")
                        (reparse-symbol enumsubparts) [2243 2259])
                    ("QT_AVERAGE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2312 2323])
                    ("QT_QUOTA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2339 2348])
                    ("QT_UNKNOW" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2353 2364]))                  
                :type "enum")
                nil [2222 2365])
            ("DispatchType" type
               (:members 
                  ( ("DISPATCH_BY_PARTITION" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2391 2413])
                    ("DISPATCH_BY_REPLICA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2418 2439]))                  
                :type "enum")
                nil [2367 2440])
            ("MergeInStep" type
               (:members 
                  ( ("MERGE_IN_STEP_FULL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2464 2483])
                    ("MERGE_IN_STEP_BEGIN" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2488 2508])
                    ("MERGE_IN_STEP_DOING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2513 2533])
                    ("MERGE_IN_STEP_END" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2538 2557]))                  
                :type "enum")
                nil [2442 2558])
            ("SummarySearchType" type
               (:members 
                  ( ("SUMMARY_SEARCH_NORMAL" variable
                       (:constant-flag t
                        :default-value (2612 2613)
                        :type "int")
                        (reparse-symbol enumsubparts) [2588 2613])
                    ("SUMMARY_SEARCH_EXTRA" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2619 2640])
                    ("SUMMARY_SEARCH_COUNT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2645 2667]))                  
                :type "enum")
                nil [2560 2668])
            ("SEARCH_PHASE_ONE" variable
               (:constant-flag t
                :default-value "1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2670 2706])
            ("SEARCH_PHASE_TWO" variable
               (:constant-flag t
                :default-value "2"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [2707 2743])
            ("KeyValueMap" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [2745 2800])
            ("KeyValueMapPtr" type
               (:typedef ("std::shared_ptr" type
                     (:template-specifier 
                        ( ("KeyValueMap" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [2801 2853])
            ("getValueFromKeyValueMap" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("keyValueMap" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::map" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil)
                                  ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2907 2961])
                    ("key" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2970 2993])
                    ("defaultValue" variable
                       (:reference 1
                        :constant-flag t
                        :default-value "\"\""
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3002 3038]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [2855 3202])
            ("MAX_AGGREGATE_GROUP_COUNT" variable
               (:constant-flag t
                :default-value "1000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3204 3252])
            ("DOCID_PARTITION_MODE" variable (:constant-flag t) nil [3262 3282])
            ("NULL_CLUSTER" variable (:constant-flag t) nil [3299 3311])
            ("BuildMode" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [3331 3361])
            ("BuildPhase" type
               (:typedef ("std::string" type (:type "class") nil nil)
                :type "typedef")
                nil [3362 3393])
            ("hashid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3455 3481])
            ("clusterid_t" type
               (:typedef ("uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3482 3511])
            ("INVALID_CLUSTERID" variable
               (:constant-flag t
                :default-value "(clusterid_t)-1"
                :type ("clusterid_t" type (:type "class") nil nil))
                nil [3512 3566])
            ("DEFAULT_BOOST_VALUE" variable
               (:constant-flag t
                :default-value "100"
                :type ("int32_t" type (:type "class") nil nil))
                nil [3568 3608])
            ("MAX_RERANK_SIZE" variable
               (:constant-flag t
                :default-value "1000000"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3609 3650])
            ("MIN_INDEX_SWITCH_LIMIT" variable
               (:constant-flag t
                :default-value "150"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [3651 3695])
            ("NULL_STRING" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3758 3800])
            ("DYNAMIC_CUT_SEPARATOR" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"\\x1B\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3801 3857])
            ("LAYERKEY_DOCID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%docid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3858 3909])
            ("LAYERKEY_OTHER" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%other\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3910 3961])
            ("LAYERKEY_SEGMENTID" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%segmentid\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3962 4021])
            ("LAYERKEY_PERCENT" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%percent\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4022 4077])
            ("LAYERKEY_UNSORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%unsorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4078 4135])
            ("LAYERKEY_SORTED" variable
               (:typemodifiers ("static")
                :constant-flag t
                :default-value "\"%sorted\""
                :type ("std::string" type (:type "class") nil nil))
                nil [4136 4189])
            ("PLUGIN_PATH_NAME" variable (:constant-flag t) nil [4200 4216])
            ("DEFAULT_QRS_CHAIN" variable (:constant-flag t) nil [4237 4254])
            ("DEFAULT_DEBUG_QRS_CHAIN" variable (:constant-flag t) nil [4273 4296])
            ("DEFAULT_DEBUG_PROCESSOR" variable (:constant-flag t) nil [4343 4366])
            ("DEFAULT_DEBUG_RANK_PROFILE" variable (:constant-flag t) nil [4408 4434])
            ("DEFAULT_DEBUG_SCORER" variable (:constant-flag t) nil [4484 4504])
            ("DEFAULT_RANK_PROFILE" variable (:constant-flag t) nil [4546 4566])
            ("DEFAULT_SUMMARY_PROFILE" variable (:constant-flag t) nil [4593 4616])
            ("DEFAULT_CONFIG_DIR" variable (:constant-flag t) nil [4642 4660])
            ("LOCAL_URI_PREFIX" variable (:constant-flag t) nil [4685 4701])
            ("FETCHSUMMARY_GID_SEPERATOR" variable (:constant-flag t) nil [4721 4747])
            ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" variable (:constant-flag t) nil [4760 4797])
            ("STATUS_CHECK_PREFIX" variable (:constant-flag t) nil [5068 5087])
            ("HTTP_SUPPORT_PREFIX" variable (:constant-flag t) nil [5105 5124])
            ("LIST_CMD" variable (:constant-flag t) nil [5148 5156])
            ("GET_FILE_CONTENT_CMD" variable (:constant-flag t) nil [5170 5190])
            ("RESULT_FORMAT_XML" variable (:constant-flag t) nil [5207 5224])
            ("RESULT_FORMAT_PROTOBUF" variable (:constant-flag t) nil [5239 5261])
            ("LOCAL_USER_NAME_DEFAULT" variable (:constant-flag t) nil [5282 5305])
            ("LOCAL_SERVICE_NAME_DEFAULT" variable (:constant-flag t) nil [5319 5345])
            ("HEART_BEAT_META_INFO_KEY" variable (:constant-flag t) nil [5371 5395])
            ("HEART_BEAT_CLUSTER_NAME" variable (:constant-flag t) nil [5417 5440])
            ("RAW_DOCUMENT_FORMAT_HA3" variable (:constant-flag t) nil [5501 5524])
            ("RAW_DOCUMENT_FORMAT_ISEARCH" variable (:constant-flag t) nil [5539 5566])
            ("FSUTIL_BINARY" variable (:constant-flag t) nil [5586 5599])
            ("MAX_PARTITION_RANGE" variable
               (:constant-flag t
                :default-value "65535"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5615 5658])
            ("MAX_PARTITION_COUNT" variable
               (:constant-flag t
                :default-value "MAX_PARTITION_RANGE + 1"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5659 5720])
            ("KEEP_INCREMENTAL_VERSION_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6118 6168])
            ("APP_ITERATOR_INTERVAL" variable
               (:constant-flag t
                :default-value "100 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6169 6218])
            ("BUILDER_MONITOR_INTERVAL" variable
               (:constant-flag t
                :default-value "500 * 1000"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6291 6343])
            ("LOCAL_BUILDER_METRICS_STDOUT_COUNT" variable
               (:constant-flag t
                :default-value "10"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6352 6406])
            ("SERVER_TIMEOUT" variable
               (:constant-flag t
                :default-value "5 * 1000"
                :type ("int32_t" type (:type "class") nil nil))
                nil [6505 6545])
            ("FETCHSUMMARY_GID_FIELD_SIZE" variable
               (:constant-flag t
                :default-value "5"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6553 6600])
            ("STATUS_CHECK_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "6"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6601 6644])
            ("HTTP_SUPPORT_PREFIX_LEN" variable
               (:constant-flag t
                :default-value "12"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [6645 6689])
            ("GET_FILE_SIZE_LIMIT" variable
               (:constant-flag t
                :default-value "100 * 1024"
                :type ("int64_t" type (:type "class") nil nil))
                nil [6690 6737])
            ("DEFAULT_WORKER_RESOURCE" variable
               (:constant-flag t
                :default-value "100"
                :type "int")
                nil [6747 6787])
            ("DEFAULT_PARTITION_RESOURCE" variable
               (:constant-flag t
                :default-value "DEFAULT_WORKER_RESOURCE"
                :type "int")
                nil [6788 6851])
            ("HA3_REQUEST_VERSION" variable (:type "int") nil [7329 7349])
            ("DEFAULT_AMON_AGENT_PORT" variable
               (:constant-flag t
                :default-value "10086"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7412 7459])
            ("INVALID_SEARCHER_CACHE_EXPIRE_TIME" variable
               (:constant-flag t
                :default-value "uint32_t(-1)"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7461 7526])
            ("REALTIME_UNLIMIT_QPS" variable
               (:constant-flag t
                :default-value "0"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7528 7568])
            ("DEFAULT_WORKER_CAPABILITY" variable
               (:constant-flag t
                :default-value "16"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7569 7615])
            ("HA3_VERSION" variable (:type "int") nil [7680 7692])
            ("DEFAULT_TASK_QUEUE_NAME" variable
               (:constant-flag t
                :default-value "\"__ha3_runtime_default_task_queue\""
                :type ("std::string" type (:type "class") nil nil))
                nil [7693 7772])
            ("HA3_EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [7774 7814])
            ("ONLINE_CONFIG_KEEP_COUNT" variable
               (:constant-flag t
                :default-value "5"
                :type "int")
                nil [7816 7855]))          
      :file "isearch.h"
      :pointmax 7933
      :fsize 7932
      :lastmodtime '(23492 3710 488715 909000)
      :unmatched-syntax '((thing 3696 . 3701) (thing 3696 . 3701) (thing 3702 . 3710) (thing 3702 . 3710) (thing 3711 . 3737) (thing 3711 . 3737) (thing 3738 . 3739) (thing 3738 . 3739) (thing 3740 . 3741) (thing 3740 . 3741) (thing 3742 . 3743) (thing 3742 . 3743) (thing 3744 . 3748) (thing 3744 . 3748) (thing 3749 . 3750) (thing 3749 . 3750) (thing 3751 . 3755) (thing 3751 . 3755) (thing 3755 . 3756) (thing 3755 . 3756) (thing 5721 . 5726) (thing 5721 . 5726) (thing 5727 . 5734) (thing 5727 . 5734) (thing 5735 . 5764) (thing 5735 . 5764) (thing 5765 . 5766) (thing 5765 . 5766) (thing 5767 . 5768) (thing 5767 . 5768) (thing 5769 . 5770) (thing 5769 . 5770) (thing 5771 . 5775) (thing 5771 . 5775) (thing 5776 . 5777) (thing 5776 . 5777) (thing 5778 . 5782) (thing 5778 . 5782) (thing 5782 . 5783) (thing 5782 . 5783) (thing 5790 . 5795) (thing 5790 . 5795) (thing 5796 . 5803) (thing 5796 . 5803) (thing 5804 . 5827) (thing 5804 . 5827) (thing 5828 . 5829) (thing 5828 . 5829) (thing 5830 . 5832) (thing 5830 . 5832) (thing 5833 . 5834) (thing 5833 . 5834) (thing 5835 . 5839) (thing 5835 . 5839) (thing 5840 . 5841) (thing 5840 . 5841) (thing 5842 . 5846) (thing 5842 . 5846) (thing 5846 . 5847) (thing 5846 . 5847) (thing 5855 . 5860) (thing 5855 . 5860) (thing 5861 . 5868) (thing 5861 . 5868) (thing 5869 . 5891) (thing 5869 . 5891) (thing 5892 . 5893) (thing 5892 . 5893) (thing 5894 . 5895) (thing 5894 . 5895) (thing 5896 . 5897) (thing 5896 . 5897) (thing 5898 . 5902) (thing 5898 . 5902) (thing 5903 . 5904) (thing 5903 . 5904) (thing 5905 . 5909) (thing 5905 . 5909) (thing 5909 . 5910) (thing 5909 . 5910) (thing 5917 . 5922) (thing 5917 . 5922) (thing 5923 . 5930) (thing 5923 . 5930) (thing 5931 . 5962) (thing 5931 . 5962) (thing 5963 . 5964) (thing 5963 . 5964) (thing 5965 . 5966) (thing 5965 . 5966) (thing 5967 . 5968) (thing 5967 . 5968) (thing 5969 . 5973) (thing 5969 . 5973) (thing 5974 . 5975) (thing 5974 . 5975) (thing 5976 . 5980) (thing 5976 . 5980) (thing 5980 . 5981) (thing 5980 . 5981) (thing 5988 . 5993) (thing 5988 . 5993) (thing 5994 . 6001) (thing 5994 . 6001) (thing 6002 . 6033) (thing 6002 . 6033) (thing 6034 . 6035) (thing 6034 . 6035) (thing 6036 . 6037) (thing 6036 . 6037) (thing 6038 . 6039) (thing 6038 . 6039) (thing 6040 . 6044) (thing 6040 . 6044) (thing 6045 . 6046) (thing 6045 . 6046) (thing 6047 . 6051) (thing 6047 . 6051) (thing 6051 . 6052) (thing 6051 . 6052) (thing 6059 . 6064) (thing 6059 . 6064) (thing 6065 . 6072) (thing 6065 . 6072) (thing 6073 . 6092) (thing 6073 . 6092) (thing 6093 . 6094) (thing 6093 . 6094) (thing 6095 . 6096) (thing 6095 . 6096) (thing 6097 . 6098) (thing 6097 . 6098) (thing 6099 . 6103) (thing 6099 . 6103) (thing 6104 . 6105) (thing 6104 . 6105) (thing 6106 . 6110) (thing 6106 . 6110) (thing 6110 . 6111) (thing 6110 . 6111) (thing 6228 . 6233) (thing 6228 . 6233) (thing 6234 . 6241) (thing 6234 . 6241) (thing 6242 . 6265) (thing 6242 . 6265) (thing 6266 . 6267) (thing 6266 . 6267) (thing 6268 . 6269) (thing 6268 . 6269) (thing 6270 . 6271) (thing 6270 . 6271) (thing 6272 . 6276) (thing 6272 . 6276) (thing 6277 . 6278) (thing 6277 . 6278) (thing 6279 . 6283) (thing 6279 . 6283) (thing 6283 . 6284) (thing 6283 . 6284) (thing 6441 . 6446) (thing 6441 . 6446) (thing 6447 . 6454) (thing 6447 . 6454) (thing 6455 . 6475) (thing 6455 . 6475) (thing 6476 . 6477) (thing 6476 . 6477) (thing 6478 . 6481) (thing 6478 . 6481) (thing 6482 . 6483) (thing 6482 . 6483) (thing 6484 . 6488) (thing 6484 . 6488) (thing 6489 . 6490) (thing 6489 . 6490) (thing 6491 . 6495) (thing 6491 . 6495) (thing 6495 . 6496) (thing 6495 . 6496) (thing 6852 . 6857) (thing 6852 . 6857) (thing 6858 . 6865) (thing 6858 . 6865) (thing 6866 . 6890) (thing 6866 . 6890) (thing 6891 . 6892) (thing 6891 . 6892) (thing 6893 . 6894) (thing 6893 . 6894) (thing 6895 . 6896) (thing 6895 . 6896) (thing 6897 . 6901) (thing 6897 . 6901) (thing 6902 . 6903) (thing 6902 . 6903) (thing 6904 . 6908) (thing 6904 . 6908) (thing 6908 . 6909) (thing 6908 . 6909) (thing 6917 . 6922) (thing 6917 . 6922) (thing 6923 . 6930) (thing 6923 . 6930) (thing 6931 . 6957) (thing 6931 . 6957) (thing 6958 . 6959) (thing 6958 . 6959) (thing 6960 . 6977) (thing 6960 . 6977) (thing 6978 . 6979) (thing 6978 . 6979) (thing 6980 . 6987) (thing 6980 . 6987) (thing 7031 . 7032) (thing 7031 . 7032) (thing 7033 . 7050) (thing 7033 . 7050) (thing 7051 . 7052) (thing 7051 . 7052) (thing 7053 . 7058) (thing 7053 . 7058) (thing 7102 . 7103) (thing 7102 . 7103) (thing 7104 . 7121) (thing 7104 . 7121) (thing 7122 . 7123) (thing 7122 . 7123) (thing 7124 . 7127) (thing 7124 . 7127) (thing 7171 . 7172) (thing 7171 . 7172) (thing 7173 . 7174) (thing 7173 . 7174) (thing 7174 . 7175) (thing 7174 . 7175) (thing 7232 . 7237) (thing 7238 . 7245) (thing 7246 . 7268) (thing 7269 . 7270) (thing 7271 . 7297) (thing 7298 . 7299) (thing 7300 . 7326) (thing 7327 . 7328) (thing 7617 . 7622) (thing 7623 . 7626) (thing 7626 . 7627) (thing 7627 . 7628) (thing 7628 . 7634) (thing 7635 . 7654) (thing 7655 . 7656) (thing 7657 . 7679) (thing 7856 . 7861) (thing 7862 . 7869) (thing 7870 . 7898) (thing 7899 . 7900) (thing 7901 . 7903) (thing 7904 . 7905) (thing 7906 . 7910) (thing 7911 . 7912) (thing 7913 . 7917) (thing 7917 . 7918))
      :lexical-table 
        '(("END_DOCID" . ((semantic-list "((docid_t)0x7FFFFFFF)" 638 . 659)))
          ("DEFAULT_DEBUG_QRS_CHAIN" . ((string "\"_@_build_in_DebugQueryMatchQrsChain\"" 4297 . 4334)))
          ("DEFAULT_CONFIG_DIR" . ((string "\"default_conf/\"" 4661 . 4676)))
          ("DEFAULT_DEBUG_PROCESSOR" . ((string "\"_@_build_in_MatchInfoProcessor\"" 4367 . 4399)))
          ("MAX_QUOTA" . ((semantic-list "((quota_t)-1)" 678 . 691)))
          ("NULL_CLUSTER" . ((string "\"\"" 3312 . 3314)))
          ("GET_FILE_CONTENT_CMD" . ((string "\"file\"" 5191 . 5197)))
          ("RESULT_FORMAT_XML" . ((string "\"xml\"" 5225 . 5230)))
          ("DOCID_PARTITION_MODE" . ((string "\"docid\"" 3283 . 3290)))
          ("DEFAULT_QRS_CHAIN" . ((string "\"DEFAULT\"" 4255 . 4264)))
          ("FETCHSUMMARY_GID_SEPERATOR_DEPRECATED" . ((string "\"_\"" 4798 . 4801)))
          ("DEFAULT_DEBUG_RANK_PROFILE" . ((string "\"_@_build_in_DebugQueryMatchRankProfile\"" 4435 . 4475)))
          ("FETCHSUMMARY_GID_SEPERATOR" . ((string "\"|\"" 4748 . 4751)))
          ("LOCAL_USER_NAME_DEFAULT" . ((string "\"ha\"" 5306 . 5310)))
          ("RAW_DOCUMENT_FORMAT_ISEARCH" . ((string "\"isearch\"" 5567 . 5576)))
          ("ISEARCH_H_")
          ("DEFAULT_SUMMARY_PROFILE" . ((string "\"DefaultProfile\"" 4617 . 4633)))
          ("RESULT_FORMAT_PROTOBUF" . ((string "\"protobuf\"" 5262 . 5272)))
          ("LOCAL_SERVICE_NAME_DEFAULT" . ((string "\"local_service\"" 5346 . 5361)))
          ("HEART_BEAT_META_INFO_KEY" . ((string "\"WorkerInfo\"" 5396 . 5408)))
          ("HEART_BEAT_CLUSTER_NAME" . ((string "\"__ha3_admin_cluster_name_\"" 5441 . 5468)))
          ("PLUGIN_PATH_NAME" . ((string "\"plugins/\"" 4217 . 4227)))
          ("HTTP_SUPPORT_PREFIX" . ((string "\"httpsupport:\"" 5125 . 5139)))
          ("RAW_DOCUMENT_FORMAT_HA3" . ((string "\"ha3\"" 5525 . 5530)))
          ("FSUTIL_BINARY" . ((string "\"fs_util_bin\"" 5600 . 5613)))
          ("LIST_CMD" . ((string "\"ls\"" 5157 . 5161)))
          ("DEFAULT_RANK_PROFILE" . ((string "\"DefaultProfile\"" 4567 . 4583)))
          ("UNINITIALIZED_DOCID" . ((semantic-list "((docid_t)-2)" 720 . 733)))
          ("DEFAULT_DEBUG_SCORER" . ((string "\"_@_build_in_RecordInfoScorer\"" 4506 . 4536)))
          ("STATUS_CHECK_PREFIX" . ((string "\"status\"" 5088 . 5096)))
          ("LOCAL_URI_PREFIX" . ((string "\"file://\"" 4702 . 4711)))
          )
))
  :file "!home!dongdong.shan!ha3!release!3.4.0!turing_ha3_compile!source_code!ha3!ha3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
