;; Object util/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "util/"
  :tables
  (list
    (semanticdb-table "SharedPtrUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MULTI_CALL_SHAREDPTRUTIL_H" variable (:constant-flag t) nil [52 86])
            ("multi_call/common/common.h" include nil nil [89 126])
            ("unistd.h" include (:system-flag t) nil [127 146])
            ("multi_call" type
               (:members 
                  ( ("SharedPtrUtil" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [194 201])
                            ("waitUseCount" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::tr1::shared_ptr" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [254 289])
                                    ("expectUseCount" variable
                                       (:default-value "1"
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [319 346])
                                    ("timeout" variable
                                       (:default-value "-1"
                                        :type ("int64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [377 397]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [206 745])
                            ("private" label nil (reparse-symbol classsubparts) [746 754]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [172 757]))                  
                :type "namespace")
                nil [148 759]))          
      :file "SharedPtrUtil.h"
      :pointmax 794
      :fsize 793
      :lastmodtime '(22496 46290 719129 560000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_MULTI_CALL_SHAREDPTRUTIL_H")
          )
)
    (semanticdb-table "ConsistentHash.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_MULTI_CALL_CONSISTENTHASH_H" variable (:constant-flag t) nil [53 88])
            ("multi_call/common/common.h" include nil nil [90 127])
            ("multi_call" type
               (:members 
                  ( ("HashNode" type
                       (:members 
                          ( ("HashNode" function
                               (:constructor-flag t
                                :type ("HashNode" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [174 247])
                            ("key" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [252 265])
                            ("offset" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [270 286])
                            ("label" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [291 305])
                            ("<" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("rha" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("HashNode" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [327 347]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [310 349]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [152 352])
                    ("ConsistentHash" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [377 384])
                            ("Iterator" type
                               (:typedef ("std::vector::const_iterator" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [389 453])
                            ("public" label nil (reparse-symbol classsubparts) [455 462])
                            ("ConsistentHash" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("virtualNodeCount" variable
                                       (:default-value "PROVIDER_VIRTUAL_NODE_COUNT"
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [482 537]))                                  
                                :type ("ConsistentHash" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [467 539])
                            ("ConsistentHash" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [544 562])
                            ("private" label nil (reparse-symbol classsubparts) [563 571])
                            ("ConsistentHash" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ConsistentHash" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [591 614]))                                  
                                :type ("ConsistentHash" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [576 615])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ConsistentHash" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [646 669]))                                  
                                :type ("ConsistentHash" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [620 670])
                            ("public" label nil (reparse-symbol classsubparts) [671 678])
                            ("add" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("node" variable (:type ("HashNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [692 706])
                                    ("capacity" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [707 725]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [683 726])
                            ("get" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [749 762]))                                  
                                :type ("Iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [736 763])
                            ("construct" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [818 835])
                            ("begin" function
                               (:prototype-flag t
                                :type ("Iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [845 862])
                            ("end" function
                               (:prototype-flag t
                                :type ("Iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [867 882])
                            ("private" label nil (reparse-symbol classsubparts) [883 891])
                            ("_virtualNodeCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [896 923])
                            ("_hashCircle" variable (:type ("std::vector" type
                                 (:template-specifier 
                                    ( ("HashNode" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [928 962])
                            ("private" label nil (reparse-symbol classsubparts) [963 971])
                            ("AUTIL_LOG_DECLARE" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [976 996]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [354 999]))                  
                :type "namespace")
                nil [129 1002]))          
      :file "ConsistentHash.h"
      :pointmax 1049
      :fsize 1048
      :lastmodtime '(22496 46284 148138 532000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ISEARCH_MULTI_CALL_CONSISTENTHASH_H")
          )
)
    (semanticdb-table "MetricUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("MULTI_CALL_METRICUTIL_H" variable (:constant-flag t) nil [41 64])
            ("amonitor/client/MetricSampler.h" include (:system-flag t) nil [66 108])
            ("amonitor/client/MetricProvider.h" include (:system-flag t) nil [109 152])
            ("multi_call/common/common.h" include nil nil [153 190])
            ("amonitor::client::INPUT_METRIC" using (:type ("amonitor::client::INPUT_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [192 229])
            ("amonitor::client::QPS_METRIC" using (:type ("amonitor::client::QPS_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [230 265])
            ("amonitor::client::STATUS_METRIC" using (:type ("amonitor::client::STATUS_METRIC" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [266 304])
            ("DECLARE_METRIC" variable (:constant-flag t) nil [315 329])
            ("DECLARE_METRIC_IN_GROUP" variable (:constant-flag t) nil [1086 1109])
            ("REPORT_METRIC" variable (:constant-flag t) nil [2011 2024])
            ("INCREASE_QPS" variable (:constant-flag t) nil [2278 2290])
            ("INCREASE_VALUE" variable (:constant-flag t) nil [2544 2558]))          
      :file "MetricUtil.h"
      :pointmax 2836
      :fsize 2835
      :lastmodtime '(22468 63452 214822 505000)
      :unmatched-syntax nil
      :lexical-table 
        '(("INCREASE_QPS" (spp-arg-list ("metric") 2290 . 2298) . 
              ((DO "do" 2324 . 2326) (semantic-list "{                                        \\
        if ((metric)) {                         \\
            (metric)->increaseQps();            \\
        }                                       \\
    }" 2327 . 2525) (WHILE "while" 2526 . 2531) (semantic-list "(0)" 2531 . 2534)))
          ("INCREASE_VALUE" (spp-arg-list ("metric" "value") 2558 . 2573) . 
              ((DO "do" 2590 . 2592) (semantic-list "{                                        \\
        if ((metric)) {                         \\
            (metric)->increaseQps(value);       \\
        }                                       \\
    }" 2593 . 2791) (WHILE "while" 2792 . 2797) (semantic-list "(0)" 2797 . 2800)))
          ("DECLARE_METRIC" (spp-arg-list ("metricProvider" "metricName" "metricType" "unit") 329 . 375) . ((semantic-list "({                                                                  \\
        amonitor::client::MetricSampler *metric = NULL;                 \\
        if ((metricProvider)) {                                         \\
            metric = (metricProvider)->declareMetric(#metricName, metricType, unit); \\
            if (!metric) {                                              \\
                AUTIL_LOG(ERROR, \"register metric[%s] failed\", #metricName); \\
            }                                                           \\
        }                                                               \\
        metric;                                                         \\
    })" 385 . 1071)))
          ("REPORT_METRIC" (spp-arg-list ("metric" "count") 2024 . 2039) . 
              ((DO "do" 2057 . 2059) (semantic-list "{                                        \\
        if ((metric)) {                         \\
            (metric)->reportMetric((count));    \\
        }                                       \\
    }" 2060 . 2258) (WHILE "while" 2259 . 2264) (semantic-list "(0)" 2265 . 2268)))
          ("MULTI_CALL_METRICUTIL_H")
          ("DECLARE_METRIC_IN_GROUP" (spp-arg-list ("metricProvider" "groupName" "metricName" "metricType" "unit") 1109 . 1166) . ((semantic-list "({                                                                  \\
        amonitor::client::MetricSampler *metric = NULL;                 \\
        if ((metricProvider)) {                                         \\
            std::string name = groupName;                               \\
            name += #metricName;                                        \\
            metric = (metricProvider)->declareMetric(name, metricType, unit); \\
            if (!metric) {                                              \\
                AUTIL_LOG(ERROR, \"register metric[%s] failed\", #metricName); \\
            }                                                           \\
        }                                                               \\
        metric;                                                         \\
    })" 1174 . 2001)))
          )
)
    (semanticdb-table "ConsistentHash.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("multi_call/util/ConsistentHash.h" include nil nil [1 44])
            ("algorithm" include (:system-flag t) nil [45 65])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [67 87])
            ("multi_call" type
               (:members 
                  ( ("AUTIL_LOG_SETUP" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("multi_call" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [128 139])
                            ("" variable (:type ("ConsistentHash" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140 155]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [112 156])
                    ("<" function
                       (:operator-flag t
                        :parent "HashNode"
                        :arguments 
                          ( ("rha" variable
                               (:reference 1
                                :constant-flag t
                                :type ("HashNode" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [185 205]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [158 487])
                    ("ConsistentHash" function
                       (:constructor-flag t
                        :parent "ConsistentHash"
                        :arguments 
                          ( ("virtualNodeCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [520 546]))                          
                        :type ("ConsistentHash" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [489 592])
                    ("ConsistentHash" function
                       (:destructor-flag t
                        :parent "ConsistentHash"
                        :type "void")
                        (reparse-symbol namespacesubparts) [594 631])
                    ("add" function
                       (:parent "ConsistentHash"
                        :arguments 
                          ( ("node" variable (:type ("HashNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [658 672])
                            ("capacity" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [673 691]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [633 1175])
                    ("get" function
                       (:parent "ConsistentHash"
                        :arguments 
                          ( ("key" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1222 1235]))                          
                        :type ("ConsistentHash::Iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1177 1528])
                    ("construct" function
                       (:parent "ConsistentHash"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1530 1616])
                    ("begin" function
                       (:parent "ConsistentHash"
                        :type ("ConsistentHash::Iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1622 1706])
                    ("end" function
                       (:parent "ConsistentHash"
                        :type ("ConsistentHash::Iterator" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1707 1787]))                  
                :type "namespace")
                nil [89 1790]))          
      :file "ConsistentHash.cpp"
      :pointmax 1791
      :fsize 1790
      :lastmodtime '(22468 63452 214822 505000)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!online!multi_call!multi_call!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
