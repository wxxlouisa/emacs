;; Object ops/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ops/"
  :tables
  (list
    (semanticdb-table "MatchDocsVariant.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("suez/turing/ops/MatchDocsVariant.h" include nil nil [1 46])
            ("tensorflow/core/framework/variant_op_registry.h" include nil nil [47 105])
            ("autil/DataBuffer.h" include (:system-flag t) nil [106 135])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [137 157])
            ("matchdoc" using (:type ("matchdoc" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [158 183])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [184 211])
            ("autil" using (:type ("autil" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [212 234])
            ("autil::mem_pool" using (:type ("autil::mem_pool" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [235 267])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("AUTIL_LOG_SETUP" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("tf_search" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [321 331])
                                    ("" variable (:type ("MatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [332 349]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [305 350])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [387 415]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [352 615])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [652 693])
                                    ("pool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [729 757]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [617 898])
                            ("MatchDocsVariant" function
                               (:constructor-flag t
                                :parent "MatchDocsVariant"
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [935 965]))                                  
                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [900 1148])
                            ("MatchDocsVariant" function
                               (:destructor-flag t
                                :parent "MatchDocsVariant"
                                :type "void")
                                (reparse-symbol namespacesubparts) [1150 1426])
                            ("Encode" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1458 1482]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1428 1769])
                            ("Decode" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantTensorData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1801 1831]))                                  
                                :type "bool")
                                (reparse-symbol namespacesubparts) [1771 2365])
                            ("getPool" function
                               (:pointer 1
                                :parent "MatchDocsVariant"
                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2367 2493])
                            ("addSortMeta" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2530 2549])
                                    ("ref" variable
                                       (:pointer 1
                                        :type ("ReferenceBase" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2550 2569])
                                    ("isAsc" variable (:type "bool") (reparse-symbol arg-sub-list) [2570 2581]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2495 2647])
                            ("addSortMetas" function
                               (:parent "MatchDocsVariant"
                                :arguments 
                                  ( ("sortExprMetas" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("SortExprMeta" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2685 2732]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2649 2829])
                            ("REGISTER_UNARY_VARIANT_DECODE_FUNCTION" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("MatchDocsVariant" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2870 2887]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2831 2901]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [286 2904]))                  
                :type "namespace")
                nil [269 2906]))          
      :file "MatchDocsVariant.cpp"
      :pointmax 2907
      :fsize 2906
      :lastmodtime '(23188 63237 640152 489000)
      :unmatched-syntax '((thing 2296 . 2307) (thing 2888 . 2899)))
    (semanticdb-table "MatchDocsVariant.h"
      :major-mode 'c++-mode
      :tags 
        '( ("SUEZ_TURING_MATCHDOCSVARIANT_H" variable (:constant-flag t) nil [48 78])
            ("autil/Log.h" include (:system-flag t) nil [80 102])
            ("tensorflow/core/framework/variant.h" include nil nil [103 149])
            ("tensorflow/core/framework/tensor.h" include nil nil [150 195])
            ("tensorflow/core/framework/variant_encode_decode.h" include nil nil [196 256])
            ("matchdoc/MatchDocAllocator.h" include nil nil [257 296])
            ("suez/turing/common/SortExprMeta.h" include nil nil [297 341])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("MatchDocsVariant" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [405 412])
                                    ("MatchDocsVariant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("pool" variable
                                               (:pointer 1
                                                :default-value "nullptr"
                                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [434 470]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [417 472])
                                    ("MatchDocsVariant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [494 535])
                                            ("pool" variable
                                               (:pointer 1
                                                :default-value "nullptr"
                                                :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [536 572]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [477 574])
                                    ("MatchDocsVariant" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("MatchDocsVariant" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [596 626]))                                          
                                        :type ("MatchDocsVariant" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [579 627])
                                    ("MatchDocsVariant" function
                                       (:prototype-flag t
                                        :destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [632 652])
                                    ("public" label nil (reparse-symbol classsubparts) [653 660])
                                    ("Encode" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [677 713]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [665 720])
                                    ("Decode" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("tensorflow::VariantTensorData" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [737 779]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [725 780])
                                    ("TypeName" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [785 849])
                                    ("public" label nil (reparse-symbol classsubparts) [850 857])
                                    ("getAllocator" function (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [862 948])
                                    ("stealMatchDocs" function
                                       (:arguments 
                                          ( ("docs" variable
                                               (:reference 1
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("matchdoc::MatchDoc" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [973 1011]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [953 1050])
                                    ("getMatchDocs" function
                                       (:constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("matchdoc::MatchDoc" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [1055 1149])
                                    ("allocate" function
                                       (:arguments 
                                          ( ("id" variable (:type ("int32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1182 1193]))                                          
                                        :type ("matchdoc::MatchDoc" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1154 1315])
                                    ("getSortMetas" function (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("SortExprMeta" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [1320 1405])
                                    ("addSortMeta" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("name" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::string" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1432 1456])
                                            ("ref" variable
                                               (:pointer 1
                                                :type ("matchdoc::ReferenceBase" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1457 1486])
                                            ("isAsc" variable (:type "bool") (reparse-symbol arg-sub-list) [1487 1498]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1415 1499])
                                    ("addSortMetas" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("sortExprMetas" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("SortExprMeta" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1522 1569]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1504 1570])
                                    ("private" label nil (reparse-symbol classsubparts) [1572 1580])
                                    ("getPool" function
                                       (:prototype-flag t
                                        :pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1585 1624])
                                    ("private" label nil (reparse-symbol classsubparts) [1625 1633])
                                    ("_externalPool" variable
                                       (:pointer 1
                                        :type ("autil::mem_pool::Pool" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1638 1675])
                                    ("_pool" variable (:type ("std::shared_ptr" type
                                         (:template-specifier 
                                            ( ("autil::mem_pool::Pool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [1680 1725])
                                    ("_allocator" variable (:type ("matchdoc::MatchDocAllocatorPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1730 1772])
                                    ("_matchDocs" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("matchdoc::MatchDoc" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [1777 1820])
                                    ("_sortExprMetas" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("SortExprMeta" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [1825 1866])
                                    ("private" label nil (reparse-symbol classsubparts) [1867 1875])
                                    ("AUTIL_LOG_DECLARE" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1880 1900]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [380 1903]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [360 1906]))                  
                :type "namespace")
                nil [343 1908]))          
      :file "MatchDocsVariant.h"
      :pointmax 1949
      :fsize 1948
      :lastmodtime '(23187 47532 71064 75000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SUEZ_TURING_MATCHDOCSVARIANT_H")
          )
)
    (semanticdb-table "OpUtil.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("suez/turing/ops/OpUtil.h" include nil nil [1 36])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [38 58])
            ("tensorflow" using (:type ("tensorflow" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [59 86])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("MatchDocShapeInference" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [155 192]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [125 256])
                            ("ModelInputShapeInference" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [290 327]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [258 620])
                            ("QueryInputOpV3KeyExistShapeInfer" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [662 699]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [622 778])
                            ("EmbeddingShapeInference" function
                               (:arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [811 848]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [780 1338])
                            ("checkSparseTensor" function
                               (:arguments 
                                  ( ("values" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1365 1386])
                                    ("indices" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1412 1434])
                                    ("denseShape" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1460 1485]))                                  
                                :type ("Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1340 2429])
                            ("extractModelAttribute" function
                               (:arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2458 2478])
                                    ("tableName" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2506 2524])
                                    ("fieldName" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2552 2570]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [2431 2790]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [105 2793]))                  
                :type "namespace")
                nil [88 2795]))          
      :file "OpUtil.cpp"
      :pointmax 2796
      :fsize 2795
      :lastmodtime '(23161 28207 951742 236000)
      :unmatched-syntax nil)
    (semanticdb-table "OpUtil.h"
      :major-mode 'c++-mode
      :tags 
        '( ("ISEARCH_TURING_OPUTIL_H" variable (:constant-flag t) nil [41 64])
            ("autil/Log.h" include (:system-flag t) nil [66 88])
            ("autil/MultiValueType.h" include (:system-flag t) nil [89 122])
            ("autil/StringUtil.h" include (:system-flag t) nil [123 152])
            ("tensorflow/core/framework/shape_inference.h" include nil nil [153 207])
            ("tensorflow/core/common_runtime/local_device.h" include nil nil [208 264])
            ("suez" type
               (:members 
                  ( ("turing" type
                       (:members 
                          ( ("extractModelAttribute" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("input" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [330 355])
                                    ("tableName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [383 406])
                                    ("fieldName" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [434 457]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [303 458])
                            ("MatchDocShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [506 555]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [462 556])
                            ("ModelInputShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [606 655]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [560 656])
                            ("EmbeddingShapeInference" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [705 754]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [660 755])
                            ("QueryInputOpV3KeyExistShapeInfer" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:pointer 1
                                        :type ("tensorflow::shape_inference::InferenceContext" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [813 862]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [759 863])
                            ("checkSparseTensor" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("values" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [912 939])
                                    ("indices" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [987 1015])
                                    ("denseShape" variable
                                       (:reference 1
                                        :type ("tensorflow::Tensor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1063 1094]))                                  
                                :type ("tensorflow::Status" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [867 1095])
                            ("GET_SESSION_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1105 1125])
                            ("GET_QUERY_RESOURCE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1873 1891]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [283 2408])
                    ("CHECK_TIMEOUT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2418 2431]))                  
                :type "namespace")
                nil [266 2894])
            ("TfType2ExprType" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("T" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [2975 2990]))                  )
                nil [2896 2993])
            ("TfType2ExprType" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("int64_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3095 3116]))                  
                :template-specifier 
                  ( ("tensorflow::int64" type nil nil nil)
                    ("StringToMultiChar" type nil nil nil))                  )
                nil [2995 3119])
            ("TfType2ExprType" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("uint64_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3222 3244]))                  
                :template-specifier 
                  ( ("tensorflow::uint64" type nil nil nil)
                    ("StringToMultiChar" type nil nil nil))                  )
                nil [3121 3247])
            ("TfType2ExprType" type
               (:type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("autil::MultiChar" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [3308 3338]))                  
                :template-specifier 
                  ( ("std::string" type nil nil nil)
                    ("true" type nil nil nil))                  )
                nil [3249 3341])
            ("ExprValue2TfValue" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type ("T" type (:type "class") nil nil)
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3391 3406]))                  
                :typemodifiers ("inline"))
                nil [3343 3428])
            ("ExprValue2TfValue" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3467 3497]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [3430 3553])
            ("convertValue" function
               (:template 
                  ( ("From" type (:type "class") nil nil)
                    ("To" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("From" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3617 3634])
                    ("to" variable
                       (:reference 1
                        :type ("To" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3635 3642]))                  
                :typemodifiers ("inline"))
                nil [3555 3661])
            ("convertValue" function
               (:template 
                  ( ("From" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("From" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3712 3729])
                    ("to" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3730 3746]))                  
                :typemodifiers ("inline"))
                nil [3663 3794])
            ("convertValue" function
               (:template 
                  ( ("To" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3843 3872])
                    ("to" variable
                       (:reference 1
                        :type ("To" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3873 3880]))                  
                :typemodifiers ("inline"))
                nil [3796 3967])
            ("convertValue" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("from" variable
                       (:reference 1
                        :constant-flag t
                        :type ("autil::MultiChar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3994 4023])
                    ("to" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4024 4040]))                  
                :type "void")
                nil [3969 4092]))          
      :file "OpUtil.h"
      :pointmax 4128
      :fsize 4127
      :lastmodtime '(23190 26511 484877 422000)
      :unmatched-syntax '((thing 1062 . 1063) (thing 1062 . 1063) (thing 1062 . 1063) (thing 1061 . 1062) (thing 1061 . 1062) (thing 1061 . 1062) (thing 1055 . 1060) (thing 1055 . 1060) (thing 1055 . 1060) (thing 986 . 987) (thing 986 . 987) (thing 986 . 987) (thing 985 . 986) (thing 985 . 986) (thing 985 . 986) (thing 979 . 984) (thing 979 . 984) (thing 979 . 984) (thing 911 . 912) (thing 911 . 912) (thing 911 . 912) (thing 910 . 911) (thing 910 . 911) (thing 910 . 911) (thing 904 . 909) (thing 904 . 909) (thing 904 . 909) (thing 866 . 867) (thing 866 . 867) (thing 866 . 867) (thing 865 . 866) (thing 865 . 866) (thing 865 . 866) (thing 812 . 813) (thing 812 . 813) (thing 812 . 813) (thing 811 . 812) (thing 811 . 812) (thing 811 . 812) (thing 758 . 759) (thing 758 . 759) (thing 758 . 759) (thing 757 . 758) (thing 757 . 758) (thing 757 . 758) (thing 704 . 705) (thing 704 . 705) (thing 704 . 705) (thing 703 . 704) (thing 703 . 704) (thing 703 . 704) (thing 659 . 660) (thing 659 . 660) (thing 659 . 660) (thing 658 . 659) (thing 658 . 659) (thing 658 . 659) (thing 605 . 606) (thing 605 . 606) (thing 605 . 606) (thing 604 . 605) (thing 604 . 605) (thing 604 . 605) (thing 559 . 560) (thing 559 . 560) (thing 559 . 560) (thing 558 . 559) (thing 558 . 559) (thing 558 . 559) (thing 505 . 506) (thing 505 . 506) (thing 505 . 506) (thing 504 . 505) (thing 504 . 505) (thing 504 . 505) (thing 461 . 462) (thing 461 . 462) (thing 461 . 462) (thing 460 . 461) (thing 460 . 461) (thing 460 . 461))
      :lexical-table 
        '(("ISEARCH_TURING_OPUTIL_H")
          ("GET_SESSION_RESOURCE" (spp-arg-list nil 1125 . 1127) . ((semantic-list "({                                                                  \\
        auto device = dynamic_cast<tensorflow::LocalDevice*>(ctx->device()); \\
        OP_REQUIRES(ctx, device, ::tensorflow::Status(tensorflow::error::UNAVAILABLE, \\
                        \"not a local device\"));                         \\
        auto sessionResource = device->GetSessionResource();            \\
        OP_REQUIRES(ctx, sessionResource,                               \\
                    ::tensorflow::Status(tensorflow::error::UNAVAILABLE, \\
                            \"SessionResource is null\"));                \\
        sessionResource;                                                \\
    })" 1175 . 1863)))
          ("GET_QUERY_RESOURCE" (spp-arg-list ("sessionResource") 1891 . 1908) . ((semantic-list "({                                                                  \\
        int64_t runId = ctx->step_id();                                 \\
        auto queryResource = sessionResource->getQueryResource(runId);  \\
        OP_REQUIRES(ctx, queryResource, errors::Unavailable(\"invalid query resource: \", runId)); \\
        queryResource;                                                  \\
    })" 1943 . 2340)))
          ("CHECK_TIMEOUT" (spp-arg-list ("queryResource") 2431 . 2446) . ((semantic-list "({                                                                  \\
        if (queryResource->timeoutTerminator) {                        \\
            OP_REQUIRES(ctx, !queryResource->timeoutTerminator->checkTimeout(), errors::Unavailable(\"query timeout.\")); \\
        }                                                               \\
    })" 2481 . 2826)))
          )
))
  :file "!ssd!sdd!git!ha3!turing!suez!suez!turing!ops!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
