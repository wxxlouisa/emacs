;; Object ha_tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ha_tools/"
  :tables
  (list
    (semanticdb-table "search.py"
      :major-mode 'python-mode
      :tags 
        '( ("re" include nil nil [20 29])
            ("sys" include nil nil [30 40])
            ("os" include nil nil [41 50])
            ("optparse" include nil nil [51 84])
            ("tempfile" include nil nil [85 100])
            ("if" code nil nil [101 193])
            ("urllib" include nil nil [193 206])
            ("zlib" include nil nil [207 218])
            ("protoLibPath" variable nil nil [220 298])
            ("sys" code nil nil [299 328])
            ("process" include nil nil [330 344])
            ("ha3.proto.BasicDefs_pb2" include nil nil [345 382])
            ("ha3.proto.QrsService_pb2" include nil nil [383 421])
            ("ha3.proto.PBResult_pb2" include nil nil [422 458])
            ("arpc.python.rpc_impl_async" include nil nil [459 510])
            ("SearchCmd" type
               (:members 
                  ( ("'''
     search.py
        {-q query_string         | --query=query_string}
        [-a qrs_address          | --qrsaddress=qrs_address]
        [-p protocol_type        | --protocol=protocol_type]

options:
    -q query_string, --query=query_string          : required, query string
    -a qrs_address, --qrsaddress=qrs_address       : required, qrs http/tcp address,
    -p protocol_type, --protocol=protocol_type     : optional, http(default) or aprc.

examples:
    ./search.py -q \"config=cluster:daogou&&query=phrase:mp3\" -a \"http://10.250.12.31:6788\"
    ./search.py -q \"config=cluster:daogou&&query=phrase:mp3\" -a \"tcp:10.250.12.31:6780\" -p arpc
    '''" code nil (reparse-symbol indented_block_body) [533 1193])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1227 1273]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1212 1216]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1199 1274])
                    ("addOptions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1294 1298]))                          )
                        (reparse-symbol indented_block_body) [1279 1748])
                    ("parseParams" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1769 1773])
                            ("optionList" variable nil (reparse-symbol function_parameters) [1775 1785]))                          )
                        (reparse-symbol indented_block_body) [1753 2148])
                    ("checkOptionsValidity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2179 2183])
                            ("options" variable nil (reparse-symbol function_parameters) [2185 2192]))                          )
                        (reparse-symbol indented_block_body) [2154 2348])
                    ("initMember" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2368 2372])
                            ("options" variable nil (reparse-symbol function_parameters) [2374 2381]))                          )
                        (reparse-symbol indented_block_body) [2353 2556])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2569 2573]))                          )
                        (reparse-symbol indented_block_body) [2561 2855])
                    ("_runHttpSearch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2879 2883]))                          )
                        (reparse-symbol indented_block_body) [2860 3599])
                    ("_runArpcSearch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3623 3627]))                          )
                        (reparse-symbol indented_block_body) [3604 4636])
                    ("getResultFromResponse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4667 4671])
                            ("response" variable nil (reparse-symbol function_parameters) [4673 4681]))                          )
                        (reparse-symbol indented_block_body) [4641 4928])
                    ("_parseProtobufResult" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4958 4962])
                            ("result" variable nil (reparse-symbol function_parameters) [4964 4970]))                          )
                        (reparse-symbol indented_block_body) [4933 5243])
                    ("getProtocolType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5268 5272]))                          )
                        (reparse-symbol indented_block_body) [5248 5332])
                    ("usage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5347 5351]))                          )
                        (reparse-symbol indented_block_body) [5337 5406]))                  
                :type "class")
                nil [512 5406])
            ("if" code nil nil [5408 5714]))          
      :file "search.py"
      :pointmax 5714
      :fsize 5713
      :lastmodtime '(22467 37102 0 0)
      :unmatched-syntax nil))
  :file "!ssd!sdd!git!ha3_suez!install_root!usr!local!lib!python!site-packages!ha_tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
